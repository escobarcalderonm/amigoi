function isAndroidStockBrowser() {
    var t = navigator.userAgent,
        i = t.indexOf("Android") > -1 && t.indexOf("Mozilla/5.0") > -1 && t.indexOf("AppleWebKit") > -1,
        s = new RegExp(/AppleWebKit\/([\d.]+)/), o = null === s.exec(t) ? null : parseFloat(s.exec(t)[1]);
    return i && null !== o && o < 537
}

function isSupportedBrowser() {
    return !isAndroidStockBrowser() && function testWebGl(t) {
        try {
            return !(!window.WebGLRenderingContext || !t.getContext("webgl") && !t.getContext("experimental-webgl"))
        } catch (t) {
            return !1
        }
    }(document.createElement("canvas"))
}

function UTObject() {
    this.className = this.constructor.name || "", Object.defineProperty(this, "className", {writable: !1}), this.superclass = null
}

function UTHashTable(t) {
    this._collection = {}, Object.defineProperty(this, "_collection", {
        writable: !0,
        enumerable: !1
    }), this.length = 0, Object.defineProperty(this, "length", {
        get: function get() {
            return Object.keys(this._collection).length
        }
    });
    var i;
    for (i in t) t.hasOwnProperty(i) && (this._collection[i] = t[i])
}

function UTIterator(t) {
    UTObject.call(this), this._collection = t, Object.defineProperty(this, "_collection", {
        writable: !0,
        enumerable: !1
    }), this._index = 0, Object.defineProperty(this, "_index", {
        writable: !0,
        enumerable: !1
    }), this.length = 0, Object.defineProperty(this, "length", {
        get: this.getLength,
        enumerable: !0
    }), this.startOfList = !0, Object.defineProperty(this, "startOfList", {
        get: this._atFirstIndex,
        enumerable: !0
    }), this.endOfList = !1, Object.defineProperty(this, "endOfList", {get: this._atLastIndex, enumerable: !0})
}

function UTObservable() {
    UTObject.call(this), this._observers = []
}

function UTStorageAlternative() {
    UTObject.call(this), this._localStorage = {}, this.length = 0, Object.defineProperty(this, "length", {
        get: function () {
            return Object.keys(this._localStorage).length
        }
    })
}

function UTNotificationDispatcher() {
    UTObject.call(this), this._observers = new UTHashTable({})
}

function UTResponder() {
    UTObject.call(this), this._eventDelegates = [], Object.defineProperty(this, "_eventDelegates", {
        writable: !0,
        enumerable: !1
    }), this._eventElement = null, Object.defineProperty(this, "_eventElement", {
        writable: !0,
        enumerable: !1
    }), this._eventElementClientRect = null, Object.defineProperty(this, "_eventElementClientRect", {
        writable: !0,
        enumerable: !1
    }), this._eventListeners = [], Object.defineProperty(this, "_eventListeners", {
        writable: !0,
        enumerable: !1
    }), this._touchID = -1, Object.defineProperty(this, "_touchID", {
        writable: !0,
        enumerable: !1
    }), this._touchOriginX = 0, Object.defineProperty(this, "_touchOriginX", {
        writable: !0,
        enumerable: !1
    }), this._touchOriginY = 0, Object.defineProperty(this, "_touchOriginY", {
        writable: !0,
        enumerable: !1
    }), this._scrollPositions = [], Object.defineProperty(this, "_scrollPositions", {
        writable: !0,
        enumerable: !1
    }), this._hasMoved = !1, Object.defineProperty(this, "_hasMoved", {
        writable: !0,
        enumerable: !1
    }), this.moveDistanceThreshold = 8, this.allowLegacyPropagation = !1
}

function UTHttpRequest() {
    UTObservable.call(this), this._url = "", Object.defineProperty(this, "_url", {
        writable: !0,
        enumerable: !1
    }), this._contentType = enums.HTTPContentType.JSON, Object.defineProperty(this, "_contentType", {
        writable: !0,
        enumerable: !1
    }), this._requestType = enums.HTTPRequestMethod.GET, Object.defineProperty(this, "_requestType", {
        writable: !0,
        enumerable: !1
    }), this._mimeOverride = "", Object.defineProperty(this, "_mimeOverride", {
        writable: !0,
        enumerable: !1
    }), this._urlVariables = "", Object.defineProperty(this, "_urlVariables", {
        writable: !0,
        enumerable: !1
    }), this._requestHeaders = [], Object.defineProperty(this, "_requestHeaders", {
        writable: !0,
        enumerable: !1
    }), this._requestBody = null, this._timeout = gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_REQUEST_TIMEOUT), Object.defineProperty(this, "_requestHeaders", {
        writable: !0,
        enumerable: !1
    }), this._cache = !0, this._isLocal = !1, this._http = new XMLHttpRequest, Object.defineProperty(this, "_http", {
        writable: !1,
        enumerable: !1
    })
}

function UTUtasHttpRequest(t) {
    UTHttpRequest.call(this), this._delegate = t, Object.defineProperty(this, "_delegate", {
        writable: !1,
        enumerable: !1
    }), this._doReauth = !0, Object.defineProperty(this, "_doReauth", {writable: !0, enumerable: !1})
}

function UTItemRarityColorMapDTO(values, t) {
    UTObject.call(this),
        this.attributeValues = values[2] || {r: 0, g: 0, b: 0}, this.background = values[6] || {
        r: 0,
        g: 0,
        b: 0
    }, this.dividers = values[7] || {r: 0, g: 0, b: 0}, this.footer = values[3] || {
        r: 0,
        g: 0,
        b: 0
    }, this.header = values[0] || {r: 0, g: 0, b: 0}, this.name = values[1] || {
        r: 0,
        g: 0,
        b: 0
    }, this.playStyleIcon = values[4] || {r: 0, g: 0, b: 0}, this.playStyleText = values[5] || {
        r: 0,
        g: 0,
        b: 0
    }, this.useLightCrest = t || !1
}

function UTItemRarityDTO(data) {
    UTObject.call(this);
    var t = data ? data.colorsPerLevel : 0,
        i = data && Array.isArray(data.colorArray) ? data.colorArray.map(function (t) {
            return t.toString(16)
        }) : ["ffffff", "ff00d4", "f439"],
        s = data && Array.isArray(data.expColorIndices) ? data.expColorIndices : [1, 1, 1, 1, 1, 1, 2, 3, 1],
        o = data && Array.isArray(data.smallColorIndices) ? data.smallColorIndices : [1, 1, 1, 1, 1, 1, 2, 3, 1];
    this.id = data && utils.JS.isNumber(data.id) ? data.id : 999, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.name = data && utils.JS.isString(data.name) ? data.name : "DEFAULT", Object.defineProperty(this, "name", {
        writable: !1,
        enumerable: !0
    }), this.levels = !(!data || !utils.JS.isBoolean(data.levels)) && data.levels, Object.defineProperty(this, "levels", {
        writable: !1,
        enumerable: !0
    }), this.shell = data && utils.JS.isNumber(data.shell) ? data.shell : 0, Object.defineProperty(this, "shell", {
        writable: !1,
        enumerable: !0
    }), this.bigHead = !(!data || !utils.JS.isBoolean(data.bigHead)) && data.bigHead, Object.defineProperty(this, "bigHead", {
        writable: !1,
        enumerable: !0
    }), this.version = data && utils.JS.isNumber(data.version) ? data.version : 0, Object.defineProperty(this, "version", {
        writable: !1,
        enumerable: !0
    }), this._largeColorMaps = new UTHashTable(this._generateColorMappingObject(i, s, t)), Object.defineProperty(this, "_largeColorMaps", {
        writable: !1,
        enumerable: !1
    }), this._smallColorMaps = new UTHashTable(this._generateColorMappingObject(i, o, t)), Object.defineProperty(this, "_smallColorMaps", {
        writable: !1,
        enumerable: !1
    })
}

function UTValueBandVO(min, max) {
    UTObject.call(this), this.minimum = min || 0, Object.defineProperty(this, "minPrice", {
        writable: !1,
        enumerable: !0
    }), this.maximum = max || 0, Object.defineProperty(this, "maxPrice", {writable: !1, enumerable: !0})
}

function UTUserRepository() {
    UTHashTable.call(this, {})
}

function UTLeaderboardOptionDTO(data) {
    UTObject.call(this), this.id = data.id, Object.defineProperty(this, "id", {writable: !1}), this.groupId = "", this.display = data.display, Object.defineProperty(this, "display", {writable: !1})
}

function UTLeaderboardEntryDTO(data) {
    UTObject.call(this), this.badge = data.badge, Object.defineProperty(this, "badge", {writable: !1}), this.category = data.category || "", this.clubName = data.clubName, Object.defineProperty(this, "clubName", {writable: !1}), this.est = data.est, Object.defineProperty(this, "est", {writable: !1}), this.persona = data.persona, Object.defineProperty(this, "persona", {writable: !1}), this.rank = data.rank, Object.defineProperty(this, "rank", {writable: !1}), this.score = data.score.value, Object.defineProperty(this, "score", {writable: !1}), this.teamId = data.teamId, Object.defineProperty(this, "teamId", {writable: !1})
}

function UTLeaderboardPermutationDTO() {
    UTObject.call(this), this.category = "competitor", this.period = "alltime", this.view = "top100"
}

function UTLeaderboardEntryRepository() {
    UTHashTable.call(this, {}), this._expiryTimestamps = new UTHashTable({})
}

function UTLocaleFactory() {
    UTObject.call(this)
}

function UTLocalizationRepository() {
    UTHashTable.call(this, {})
}

function FUIView() {
    UTResponder.call(this), this._interactionState = !1, Object.defineProperty(this, "_interactionState", {
        writable: !0,
        enumerable: !1
    }), this._subviews = [], Object.defineProperty(this, "_subviews", {
        writable: !0,
        enumerable: !1
    }), this._superview = null, Object.defineProperty(this, "_superview", {
        writable: !0,
        enumerable: !1
    }), this._defaultDisplay = "", Object.defineProperty(this, "_defaultDisplay", {
        writable: !0,
        enumerable: !1
    }), this._isAnimating = !1, this._generate()
}

function UTCareerEntryDTO(data) {
    UTObject.call(this), this.startYear = data.s, Object.defineProperty(this, "startYear", {writable: !1}), this.endYear = data.e, Object.defineProperty(this, "endYear", {writable: !1}), this.teamId = data.t, Object.defineProperty(this, "teamId", {writable: !1}), this.matches = data.m,
        Object.defineProperty(this, "matches", {writable: !1}), this.goals = data.g, Object.defineProperty(this, "goals", {writable: !1})
}

function UTLegendsBioDTO(data) {
    function extractCareer(t) {
        var entries = [];
        return t.forEach(function (t) {
            var i = new UTCareerEntryDTO(t);
            entries.push(i)
        }), entries
    }

    UTObject.call(this), this.clubCareer = utils.JS.isValid(data) ? extractCareer(data.c) : [], Object.defineProperty(this, "clubCareer", {writable: !1}), this.nationalCareer = utils.JS.isValid(data) ? extractCareer(data.n) : [], Object.defineProperty(this, "nationalCareer", {writable: !1})
}

function UTPlayerMetaDataDTO(id, data) {
    UTObject.call(this), this.id = id, Object.defineProperty(this, "id", {
        enumerable: !0,
        writable: !1
    }), this.birthday = data.b, Object.defineProperty(this, "birthday", {
        enumerable: !0,
        writable: !1
    }), this.isLeftFoot = 1 !== parseInt(data.f, 10), Object.defineProperty(this, "isLeftFoot", {
        enumerable: !0,
        writable: !1
    }), this.height = data.h, Object.defineProperty(this, "height", {
        enumerable: !0,
        writable: !1
    }), this.legendBio = new UTLegendsBioDTO(data.l), Object.defineProperty(this, "legendBio", {
        enumerable: !0,
        writable: !1
    }), this.weakFoot = data.w, Object.defineProperty(this, "weakFoot", {
        enumerable: !0,
        writable: !1
    }), this.skillMoves = data.s, Object.defineProperty(this, "skillMoves", {
        enumerable: !0,
        writable: !1
    }), this.offensiveWorkRate = Array.isArray(data.wr) ? data.wr[0] : 0, Object.defineProperty(this, "offensiveWorkRate", {
        enumerable: !0,
        writable: !1
    }), this.defensiveWorkRate = Array.isArray(data.wr) ? data.wr[1] : 0, Object.defineProperty(this, "defensiveWorkRate", {
        enumerable: !0,
        writable: !1
    }), this.saveTechnique = data.st, Object.defineProperty(this, "saveTechnique", {enumerable: !0, writable: !1})
}

function UTPlayerIconDataDTO(data) {
    UTObject.call(this), this.playerId = data.playerId, Object.defineProperty(this, "playerId", {writable: !1}), this.iconId = data.iconId, Object.defineProperty(this, "iconId", {writable: !1})
}

function FUITargetActionView() {
    FUIView.call(this), this._targets = new UTHashTable({})
}

function FUIControl() {
    FUITargetActionView.call(this)
}

function FUIButton() {
    FUIControl.call(this)
}

function UTModalContainerView() {
    FUITargetActionView.call(this), this._generate()
}

function UTPresentationController() {
    UTObject.call(this), this._presentingViewController = null, Object.defineProperty(this, "_presentingViewController", {
        writable: !0,
        enumerable: !1
    }), this._presentedViewController = null, Object.defineProperty(this, "_presentedViewController", {
        writable: !0,
        enumerable: !1
    }), this._presentedView = null, this._isPresenting = !1
}

function FUIViewController() {
    UTResponder.call(this), this._view = null, Object.defineProperty(this, "_view", {
        writable: !0,
        enumerable: !1
    }), this._parentViewController = null, Object.defineProperty(this, "_parentViewController", {
        writable: !0,
        enumerable: !1
    }), this._childViewControllers = [], Object.defineProperty(this, "_childViewControllers", {
        writable: !0,
        enumerable: !1
    }), this._presentationController = null, Object.defineProperty(this, "_presentationController", {
        writable: !0,
        enumerable: !1
    }), this.tabBarItem = null, this.isLoading = !1, this.hasLoaded = !1, this.initialized = !1, this.modalDisplayStyle = enums.UIModalDisplayStyles.FILL
}

function UTPopupDTO(title, message, t) {
    this.title = title, this.message = message, this.buttonLabels = t
}

function UTKeyboardEventController() {
    UTObject.call(this), this._eventDelegates = new UTHashTable({}), this._keyupHandler = this._eHandleKeyUpEvent.bind(this)
}

function ClientUpdate() {
    utils.EventDispatcher.call(this)
}

function WebClientUpdate() {
    ClientUpdate.call(this), this._platform = "futweb"
}

function UTAuctionEntityFactory() {
}

function UTItemRepository() {
    UTHashTable.call(this, {}), this._expiryTimestamp = 0, Object.defineProperty(this, "endOfList", {
        writable: !0,
        enumerable: !1
    }), this.endOfList = !1, this.count = -1
}

function ClubRepository() {
    this._players = new UTItemRepository, this._staff = new UTItemRepository, this._consumables = new UTItemRepository, this._badges = new UTItemRepository, this._balls = new UTItemRepository, this._kits = new UTItemRepository, this._stadiums = new UTItemRepository, this._activeItems = new UTHashTable({})
}

function UTPackOddsDTO(data) {
    UTObject.call(this), this.packId = data.packId,
        Object.defineProperty(this, "packId", {writable: !1}), this.odds = data.oddsFormatted, Object.defineProperty(this, "odds", {writable: !1}), this.count = data.count, Object.defineProperty(this, "count", {writable: !1}), this.startTime = 1e3 * data.startTimeSec, Object.defineProperty(this, "startTime", {writable: !1}), this.description = data.packOddsCategory.description, Object.defineProperty(this, "description", {writable: !1}), this.order = data.packOddsCategory.order, Object.defineProperty(this, "order", {writable: !1});
    var t = 21 === data.packOddsCategory.rarityAssetId ? enums.Purchase.PackTier.SPECIAL : data.packOddsCategory.qualityId;
    t || (utils.Debug.Assert(!1, "UTPackOddsDTO :: No way to determine what the icon for the specific PackOdd should be. Default to GOLD."), t = enums.Purchase.PackTier.GOLD), this.qualityId = t, Object.defineProperty(this, "qualityId", {writable: !1})
}

function LeagueRepository(t) {
    this._leagues = new UTHashTable({}), Object.defineProperty(this, "_leagues", {
        writable: !1,
        enumerable: !1
    }), utils.JS.isValid(t) && this.add(t)
}

function NationRepository(t) {
    this._nations = new UTHashTable({}), Object.defineProperty(this, "_nations", {
        writable: !1,
        enumerable: !1
    }), utils.JS.isValid(t) && this.add(t)
}

function TeamRepository(t) {
    this._teams = new UTHashTable({}), Object.defineProperty(this, "_teams", {
        writable: !1,
        enumerable: !1
    }), utils.JS.isValid(t) && this.add(t)
}

function UTRootPresentationController() {
    UTPresentationController.call(this)
}

function UTTabBarItemNotificationView() {
    FUIView.call(this), this._generate()
}

function UTTabBarItemView() {
    FUIButton.call(this), this._generate(), this._tag = -1, Object.defineProperty(this, "_tag", {
        writable: !0,
        enumerable: !1
    }), this._notifBubble = null, Object.defineProperty(this, "_notifBubble", {writable: !0, enumerable: !1})
}

function UTTabBarView() {
    FUITargetActionView.call(this), this._tabItems = [], Object.defineProperty(this, "_tabItems", {
        writable: !0,
        enumerable: !1
    }), this._generate()
}

function UTTabBarController() {
    FUIViewController.call(this), this._currentController = null, this._currentView = null
}

function UTGameTabBarController() {
    UTTabBarController.call(this)
}

function UTPersonaSelectorViewController() {
    FUIViewController.call(this)
}

function UTCaptchaViewController() {
    FUIViewController.call(this), this._timeoutId = 0, this._cooldownTimer = new utils.UTTimer, this._cooldownSeconds = 0, this._captchaAttempt = !1, this._personaController = null
}

function UTFunCaptchaView() {
    FUIView.call(this), this._generate()
}

function UTFunCaptchaViewController() {
    FUIViewController.call(this), this._personaController = null, Object.defineProperty(this, "_personaController", {
        writable: !0,
        enumerable: !1
    }), this._captchaLoaded = !1, Object.defineProperty(this, "_captchaLoaded", {writable: !0, enumerable: !1})
}

function UTGettingStartedViewController() {
    FUIViewController.call(this), this._type = enums.GettingStartedTypes.FIFA, Object.defineProperty(this, "_type", {
        writable: !0,
        enumerable: !1
    }), this._personaController = null, Object.defineProperty(this, "_personaController", {
        writable: !0,
        enumerable: !1
    })
}

function UTLanguageSelectViewController() {
    FUIViewController.call(this), this._callback = null, Object.defineProperty(this, "_callback", {
        writable: !0,
        enumerable: !1
    }), this._locales = [], Object.defineProperty(this, "_locales", {writable: !0, enumerable: !1})
}

function UTLicenseViewController() {
    FUIViewController.call(this), this._completedFlags = 0, this._hasLowMemory = !1, this._setTimerFlagTimeout = 0
}

function EADPIdentityManager() {
    UTObject.call(this), this.connectHost = "https://accounts.ea.com", this.portalHost = "https://signin.ea.com", this.proxyHost = "https://gateway.ea.com", this.redirect_uri = "", this.mobile_client_scope = "basic.identity+offline+signin", this.locale = "", this.device_id = "", this.mobile_client_id = "", this.mobile_client_secret = "", this.release_type = "", this.error = {
        REFRESH_TOKEN: "NEED_LOGIN_AGAIN",
        LOCAL_STORAGE: "BROWSER_DOES_NOT_SUPPORT",
        SERVER: "SERVER_ERROR"
    }, this.exchangeAccessTokenSuccessCallback = null, this.exchangeAccessTokenFailCallback = null
}

function eadpAuthSuccess(code) {
    eadp && eadp.identity && eadp.identity.exchangeAccessToken(code, eadp.identity.exchangeAccessTokenSuccessCallback, eadp.identity.exchangeAccessTokenFailCallback)
}

function EADPIdentityManager_Web() {
    EADPIdentityManager.call(this)
}

function UTLoginViewController() {
    FUIViewController.call(this), this._inAppBrowser = null, this._successCallbackDelegate = null, this._errorCallbackDelegate = null, this._linkCallbackDelegate = null, this._browserDismissedCallbackDelegate = null, this._recreateOnResume = !1
}

function UTLoggedOnConsoleViewController() {
    FUIViewController.call(this), this._personaController = null
}

function UTDropDownControl() {
    FUIControl.call(this), this.__picker = null, this.__list = null, Object.defineProperty(this, "enabled", {
        get: this.getEnabled,
        set: this.setEnabled,
        enumerable: !0
    }), this.enabled = !0, this._options = [], Object.defineProperty(this, "_options", {
        writable: !0,
        enumerable: !1
    }), this._shieldShowing = !1, Object.defineProperty(this, "_shieldShowing", {
        writable: !0,
        enumerable: !1
    }), this._defaultIndex = 0, Object.defineProperty(this, "_defaultIndex", {
        writable: !0,
        enumerable: !1
    }), this.label = "", Object.defineProperty(this, "label", {
        get: this.getLabel,
        enumerable: !0
    }), this.id = 0, Object.defineProperty(this, "id", {
        get: this.getId,
        enumerable: !0
    }), this.value = "", Object.defineProperty(this, "value", {
        get: this.getValue,
        enumerable: !0
    }), this.length = 0, Object.defineProperty(this, "length", {
        get: function () {
            return this._options.length
        }, enumerable: !0
    }), this._windowListener = null, this._isOpen = !1, this._searchString = "", Object.defineProperty(this, "_searchString", {
        writable: !0,
        enumerable: !1
    }), this._searchTimeout = 0, Object.defineProperty(this, "_searchTimeout", {writable: !0, enumerable: !1})
}

function UTSearchFilterControl() {
    UTDropDownControl.call(this), this.setId = "", this.image = "", Object.defineProperty(this, "image", {
        get: this.getImage,
        set: this.setImage,
        enumerable: !0
    }), this._defaultLabel = "", this._hasDefault = !1, this._iconTable = null
}

function UTItemInfoStateViewModel(t) {
    UTObject.call(this), this._configDelegate = t || null, Object.defineProperty(this, "_configDelegate", {
        writable: !1,
        enumerable: !1
    }), this._state = this._configDelegate ? parseInt(this._configDelegate.getItem("UTItemInfoState", enums.UIItemInfoState.MAIN), 10) : enums.UIItemInfoState.MAIN, Object.defineProperty(this, "_state", {
        writable: !0,
        enumerable: !1
    })
}

function UTItemCanvasDTO(t, i, width, height, s, o) {
    UTObject.call(this), this.element = t || null, this.dynamic = i || !1, this.width = width || 0, this.height = height || 0, this.xPos = s || 0, this.yPos = o || 0
}

function UTItemStatChevronsView() {
    FUIView.call(this), this._generate()
}

function UTItemCanvasView() {
    FUIView.call(this), this.canvas = null, this.context = null, this.assets = {}, this.size = enums.ItemViewType.LARGE, this.item = null, this.rarity = null, this._itemInfoStateViewModel = new UTItemInfoStateViewModel(gUserSettingsModel), this._rendered = !1, this._generate()
}

function UTItemPlayerCanvasView() {
    UTItemCanvasView.call(this)
}

function UTItemPlayerLargeView() {
    components.ItemPlayerBase.call(this), this._generate()
}

function UTItemPlayerSmallView() {
    components.ItemPlayerBase.call(this), this._generate()
}

function UTItemPlayerGen1LargeView() {
    components.ItemGenLarge.call(this)
}

function UTItemPlayerGen1SmallView() {
    components.ItemPlayerBase.call(this)
}

function UTItemManagerCanvasView() {
    UTItemCanvasView.call(this)
}

function UTListDataFitnessView() {
    FUIView.call(this), this._comparisonData = null
}

function UTToggleControl() {
    FUIControl.call(this), this._toggled = !1, Object.defineProperty(this, "_toggled", {writable: !0, enumerable: !1})
}

function UTToggleCellView() {
    FUITargetActionView.call(this)
}

function UTMyClubSearchFiltersViewController() {
    FUIViewController.call(this), this._searchViewmodel = new viewmodels.ItemSearch, this._clubViewmodel = null, this._searchCriteria = null, this._consumable = null
}

function FUISplitViewController() {
    FUIViewController.call(this), this._leftController = null, this._rightController = null
}

function FUINavigationController(t, toolbar) {
    FUIViewController.call(this), this._navigationBar = t || new views.NavigationBar, this._toolbar = toolbar || new views.Toolbar,
        this._backButton = new views.buttons.NavigationButton, this._rootController = null, this._currentController = null, this._currentView = null, this.isNavVisible = !1, this.isToolbarVisible = !1, this._isTransitioning = !1
}

function UTTableView() {
    FUIView.call(this), this._rowGroups = []
}

function UTPlayerBioView() {
    FUIView.call(this), this._tables = [], this._headers = [], this._pinnedRow = null
}

function UTPlayerBioViewController() {
    FUIViewController.call(this), this._pinnedItem = null, this._viewModel = new viewmodels.ItemList([]), this._pinnedItemController = new controllers.views.PinnedListItem
}

function UTPlayerPickRewardsController(item) {
    controllers.views.popups.InGameRewards.call(this), this._rewards = [new transferobjects.Reward({count: 1}, item)], Object.defineProperty(this, "_rewards", {writable: !1})
}

function UTPlayerPickOptionView() {
    FUITargetActionView.call(this), this._itemView = null, this._generate()
}

function UTPlayerPicksView() {
    FUITargetActionView.call(this), this._playerPickViews = [], this._phoneLargeItem = null, this._generate()
}

function UTPlayerPicksViewController() {
    FUIViewController.call(this), this._index = 0, this._picks = [], this._ownership = [], this._isPendingSelection = !1, this._itemInfoStateViewModel = new UTItemInfoStateViewModel(gUserSettingsModel)
}

function UTSendToSquadView() {
    FUIView.call(this), this._pinnedRow = null, Object.defineProperty(this, "_pinnedRow", {
        writable: !0,
        enumerable: !1
    }), this.onSlotSelected = new UTObservable, Object.defineProperty(this, "onSlotSelected", {
        writable: !1,
        enumerable: !0
    }), this._generate()
}

function UTSquadSectionListViewModel(t) {
    viewmodels.ItemSectionList.call(this, t), this.setSection(UTSquadSectionListViewModel.SECTION.STARTING_ELEVEN, function (item) {
        return item.getIndex() >= 0 && item.getIndex() < entities.Squad.FIELD_PLAYERS
    }, UTSquadSectionListViewModel.SECTION.STARTING_ELEVEN), this.setSection(UTSquadSectionListViewModel.SECTION.SUBS, function (item) {
        return item.getIndex() >= entities.Squad.FIELD_PLAYERS && item.getIndex() < entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS
    }, UTSquadSectionListViewModel.SECTION.SUBS), this.setSection(UTSquadSectionListViewModel.SECTION.RESERVES, function (item) {
        return item.getIndex() >= entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS && item.getIndex() < entities.Squad.MANAGER_SLOT_INDEX
    }, UTSquadSectionListViewModel.SECTION.RESERVES), this._organizeItems()
}

function UTSendToSquadViewController() {
    FUIViewController.call(this), this._viewmodel = null, this._pinnedItem = null, this._squad = null, this._selectedSlotIndex = -1, this._defaultedToActiveSquad = !1
}

function UTSquadMarketSearchViewModel() {
    UTObject.call(this), this._squad = null, Object.defineProperty(this, "_squad", {
        writable: !0,
        enumerable: !1
    }), this._slotIndex = 0, Object.defineProperty(this, "_slotIndex", {writable: !0, enumerable: !1})
}

function UTMarketSearchResultsViewController() {
    FUIViewController.call(this), this._itemListViewDelegate = null, Object.defineProperty(this, "_itemListViewDelegate", {
        writable: !0,
        enumerable: !1
    }), this._viewmodel = null, Object.defineProperty(this, "_viewmodel", {
        writable: !0,
        enumerable: !1
    }), this._searchCriteria = null, Object.defineProperty(this, "_searchCriteria", {
        writable: !0,
        enumerable: !1
    }), this._squadContext = null, Object.defineProperty(this, "_squadContext", {
        writable: !0,
        enumerable: !1
    }), this._compareItem = null, Object.defineProperty(this, "_compareItem", {
        writable: !0,
        enumerable: !1
    }), this._selectedItem = null, Object.defineProperty(this, "_selectedItem", {
        writable: !0,
        enumerable: !1
    }), this._pinnedListItem = null, Object.defineProperty(this, "_pinnedListItem", {
        writable: !0,
        enumerable: !1
    }), this._arbitraryInterval = 0, Object.defineProperty(this, "_arbitraryInterval", {
        writable: !0,
        enumerable: !1
    }), this.onDataChange = new UTObservable, Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    })
}

function UTMarketSearchResultsSplitViewController() {
    FUISplitViewController.call(this), this._listController = new UTMarketSearchResultsViewController, this._itemDetailController = new controllers.navigation.ItemDetails
}

function UTMarketSearchFiltersView() {
    FUITargetActionView.call(this), this._pinnedListRowItem = null,
        Object.defineProperty(this, "_pinnedListRowItem", {writable: !0, enumerable: !1}), this._generate()
}

function UTMarketSearchFiltersViewController() {
    FUIViewController.call(this), this._viewmodel = null, this._squadContext = null
}

function UTTileDimOverlayView() {
    FUIView.call(this), this._generate()
}

function UTTileView() {
    FUITargetActionView.call(this), this._title = "", Object.defineProperty(this, "_title", {
        writable: !0,
        enumerable: !1
    }), this._highlightTimeout = 0, Object.defineProperty(this, "_highlightTimeout", {
        writable: !0,
        enumerable: !1
    }), this._contentView = null, Object.defineProperty(this, "_contentView", {
        writable: !0,
        enumerable: !1
    }), this._dimOverlay = null, Object.defineProperty(this, "_dimOverlay", {
        writable: !0,
        enumerable: !1
    }), this.contentLoaded = !1
}

function UTConsumablesHubView() {
    FUIView.call(this), this._textFields = []
}

function UTConsumablesHubViewController() {
    FUIViewController.call(this), this._viewmodel = null
}

function UTClubHubView() {
    FUIView.call(this), this._generate()
}

function UTClubHubViewController() {
    FUIViewController.call(this), this._viewmodel = new viewmodels.Club([])
}

function UTGoToLinkController() {
    UTObject.call(this), this._nc = null
}

function UTUnassignedItemsViewModel(t) {
    viewmodels.ItemSectionList.call(this, t), this._requests = [], Object.defineProperty(this, "_permutation", {
        writable: !0,
        enumerable: !1
    }), this.setSection(UTUnassignedItemsViewModel.SECTION.ITEMS, function (item) {
        return item.isMovable() || item.isMiscItem()
    }, UTUnassignedItemsViewModel.SECTION.ITEMS), this.setSection(UTUnassignedItemsViewModel.SECTION.DUPLICATES, function (item) {
        return !item.isMovable() && !item.isMiscItem()
    }, UTUnassignedItemsViewModel.SECTION.DUPLICATES), this._organizeItems()
}

function UTUnassignedItemsViewController() {
    FUIViewController.call(this), this._itemListViewDelegate = null, Object.defineProperty(this, "_itemListViewDelegate", {
        writable: !0,
        enumerable: !1
    }), this._viewmodel = null, Object.defineProperty(this, "_viewmodel", {
        writable: !0,
        enumerable: !1
    }), this.onDataChange = new UTObservable, Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    })
}

function UTUnassignedItemsSplitViewController() {
    FUISplitViewController.call(this), this._listViewController = new UTUnassignedItemsViewController, this._itemDetailsController = null
}

function UTLeaderboardsEntryView() {
    FUIView.call(this)
}

function UTLeaderboardsHubView() {
    FUIView.call(this), this._pinnedEntryView = null, Object.defineProperty(this, "_pinnedEntryView", {
        writable: !0,
        enumerable: !1
    }), this._entryViews = [], Object.defineProperty(this, "_entryViews", {writable: !0, enumerable: !1})
}

function UTLeaderboardsViewModel() {
    UTObject.call(this), this._permutation = new UTLeaderboardPermutationDTO, Object.defineProperty(this, "_permutation", {
        writable: !1,
        enumerable: !1
    }), this._requests = [], Object.defineProperty(this, "_permutation", {writable: !0, enumerable: !1})
}

function UTLeaderboardsHubViewController() {
    FUIViewController.call(this), this._viewmodel = null
}

function UTObjectiveRewardsViewController(t, i) {
    controllers.views.popups.InGameRewards.call(this), this._objective = t || null, Object.defineProperty(this, "_objective", {writable: !1}), this._rewards = i || [], Object.defineProperty(this, "_rewards", {writable: !1})
}

function UTObjectivesHubViewController() {
    FUIViewController.call(this), this._viewmodel = null, this._currentType = gSettingsModel.isDailyObjectivesEnabled() ? enums.Objectives.Type.DAILY : enums.Objectives.Type.WEEKLY, this._expiryTimestamp = 0, this._intervalId = 0, this._goToLinkController = new UTGoToLinkController
}

function UTSquadActionsViewController() {
    FUIViewController.call(this), this._squad = null, Object.defineProperty(this, "_squad", {
        writable: !0,
        enumerable: !1
    }), this._formations = factories.DataProvider.getFormationDP(), Object.defineProperty(this, "_formations", {
        writable: !1,
        enumerable: !1
    }), this._inSquadContext = !1, Object.defineProperty(this, "_inSquadContext", {
        writable: !0,
        enumerable: !1
    }), this.onDataChange = new UTObservable, Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    })
}

function UTSquadPitchView() {
    FUITargetActionView.call(this), this._slots = [], Object.defineProperty(this, "_slots", {
        enumerable: !1
    }), this._currentTheme = enums.SquadPitchThemes.NONE, Object.defineProperty(this, "_currentTheme", {enumerable: !1}), this._currentType = enums.SquadPitchTypes.REGULAR, Object.defineProperty(this, "_currentType", {enumerable: !1}), this._currentMode = enums.SquadPitchModes.REGULAR, Object.defineProperty(this, "_currentMode", {enumerable: !1}), this._currentFormation = "", Object.defineProperty(this, "_currentFormation", {enumerable: !1}), this._cachedLinks = [], this._windowResizeCallback = this._eWindowResize.bind(this), this._isAnimating = !1, this._delayedDrawTimeout = 0, this.renderChemistry = !0
}

function UTSquadChemistryBarView() {
    FUIView.call(this), this._value = 0
}

function UTStarRatingView() {
    FUIView.call(this)
}

function UTSquadStarRatingView() {
    FUIView.call(this), this._value = 0
}

function UTSBCRequirementsPopupView() {
    FUIView.call(this), this.onConfirm = new UTObservable, Object.defineProperty(this, "onConfirm", {
        enumerable: !0,
        writable: !1
    }), this.onCancel = new UTObservable, Object.defineProperty(this, "onCancel", {enumerable: !0, writable: !1})
}

function UTTransferListViewController() {
    FUIViewController.call(this), this._viewmodel = new viewmodels.TransferSectionList([]), this.onDataChange = new UTObservable, Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    }), this.onItemSelected = new UTObservable, Object.defineProperty(this, "onItemSelected", {
        writable: !1,
        enumerable: !0
    })
}

function UTTransferListSplitViewController() {
    FUISplitViewController.call(this), this._listController = new UTTransferListViewController, this._itemDetailController = new controllers.navigation.ItemDetails
}

function UTReward(data) {
    FUIView.call(this), this.data = data, Object.defineProperty(this, "data", {writable: !1}), this._generate()
}

function UTRewardSelection(t) {
    FUITargetActionView.call(this), this.id = t.id, this.rewards = t.awards.map(function (t) {
        return new UTReward(t)
    }), this.primaryReward = this.rewards.shift().data, this._generate()
}

function UTRewardSelectionChoiceView(t) {
    FUITargetActionView.call(this), this.categoryAwardViews = new UTHashTable({}), t.forEach(function (t) {
        this.categoryAwardViews.set(t.id, new UTRewardSelection(t))
    }, this), this._selectedId = -1, this._generate()
}

function UTRewardSelectionChoiceViewController(t) {
    controllers.views.popups.BasePopup.call(this), this.rewardSets = t || [], this.selectedRewardIndex = -1
}

function UTSquadTileContentView() {
    FUIView.call(this)
}

function UTSquadTileView() {
    UTTileView.call(this)
}

function UTGraphicalInfoTileContentView() {
    FUIView.call(this)
}

function UTGraphicalInfoTileView() {
    UTTileView.call(this)
}

function UTObjectivesHubTileView() {
    UTGraphicalInfoTileView.call(this), this.__unclaimedRewardsBubble = null, Object.defineProperty(this, "_unclaimedCountBubble", {
        writable: !0,
        enumerable: !1
    })
}

function UTTransfersTileContentView() {
    FUIView.call(this)
}

function UTTransfersTileView() {
    UTTileView.call(this)
}

function UTHubMessagesTileView() {
    UTTileView.call(this), this._data = [], this._loadedImages = 0, this._countdownTimer = null, this._generate()
}

function UTPlayerPicksTileView() {
    UTTileView.call(this), this._generate()
}

function UTLeaderboardsTileView() {
    UTTileView.call(this), this.clubBadge = null, this._generate()
}

function UTHomeHubViewController() {
    FUIViewController.call(this), this._goToLinkController = new UTGoToLinkController, this._playerPicks = []
}

function UTAboutView() {
    FUIView.call(this), this._generate()
}

function UTAboutViewController() {
    FUIViewController.call(this)
}

function UTDebugKillswitchesView() {
    FUIView.call(this), this._generate()
}

function UTDebugKillswitchesViewController() {
    FUIViewController.call(this)
}

function UTDebugMetricsView() {
    FUIView.call(this), this._generate()
}

function UTDebugMetricsViewController() {
    FUIViewController.call(this)
}

function UTUtasAdminHttpRequest(t) {
    UTUtasHttpRequest.call(this, t)
}

function UTDebugHubView() {
    FUITargetActionView.call(this), this._generate()
}

function UTDebugHubViewController() {
    FUIViewController.call(this), this._registeredCTS = !1, this._pnToken = ""
}

function UTAppSettingsViewController() {
    FUIViewController.call(this), this._personaController = null, this._canOpenExternalLinks = !1,
        this._canOpenExternalLinks = !0
}

function UTBootFlowNavigationController(t, toolbar) {
    FUINavigationController.call(this, t, toolbar), this._settingsNavButton = new views.buttons.NavigationButton, this._settingsToolbarButton = new views.buttons.ToolbarButton
}

if (!isSupportedBrowser()) throw new Error("Browser not supported");
!function () {
    function _name() {
        var match, name;
        return this === Function || this === Function.prototype.constructor ? name = "Function" : this !== Function.prototype && (name = (match = ("" + this).match(t)) && match[1]), name || ""
    }

    var t = /^\s*function\s+([^\(\s]*)\s*/, i = !("name" in Function.prototype && "name" in function x() {
    }), s = "function" == typeof Object.defineProperty && function () {
        var result;
        try {
            Object.defineProperty(Function.prototype, "_xyz", {
                get: function () {
                    return "blah"
                }, configurable: !0
            }), result = "blah" === Function.prototype._xyz, delete Function.prototype._xyz
        } catch (t) {
            result = !1
        }
        return result
    }(), o = "function" == typeof Object.prototype.__defineGetter__ && function () {
        var result;
        try {
            Function.prototype.__defineGetter__("_abc", function () {
                return "foo"
            }), result = "foo" === Function.prototype._abc, delete Function.prototype._abc
        } catch (t) {
            result = !1
        }
        return result
    }();
    Function.prototype._name = _name, i && (s ? Object.defineProperty(Function.prototype, "name", {
        get: function () {
            var name = _name.call(this);
            return this !== Function.prototype && Object.defineProperty(this, "name", {
                value: name,
                configurable: !0
            }), name
        }, configurable: !0
    }) : o && Function.prototype.__defineGetter__("name", function () {
        var name = _name.call(this);
        return this !== Function.prototype && this.__defineGetter__("name", function () {
            return name
        }), name
    }))
}(), function () {
    function DOMKit() {
    }

    DOMKit.prototype.addClass = function addClass(t, i) {
        "" !== i && i.trim().split(" ").forEach(function _addClass(className) {
            if (t instanceof HTMLCollection) for (var i = t.length; i-- > 0;) t.item(i).classList.add(className); else t.classList.add(className)
        }, this)
    }, DOMKit.prototype.removeClass = function removeClass(t, i) {
        "" !== i && i.trim().split(" ").forEach(function _removeClass(className) {
            if (t instanceof HTMLCollection) for (var i = t.length; i-- > 0;) t.item(i).classList.remove(className); else t.classList.remove(className)
        }, this)
    }, DOMKit.prototype.toggleClass = function toggleClass(t, i, s) {
        utils.JS.isBoolean(s) || (s = !this.hasClass(t, i)), s ? this.addClass(t, i) : this.removeClass(t, i)
    }, DOMKit.prototype.hasClass = function hasClass(t, i) {
        return "" !== i && t.classList.contains(i)
    }, DOMKit.prototype.remove = function remove(t) {
        function _remove(t) {
            t.parentNode && t.parentNode.removeChild(t)
        }

        if (t instanceof HTMLCollection) for (var i = t.length; i-- > 0;) _remove(t.item(i)); else _remove(t)
    }, DOMKit.prototype.empty = function empty(t) {
        for (; t.hasChildNodes();) t.removeChild(t.lastChild)
    }, DOMKit.prototype.insertBefore = function insertBefore(t, i) {
        i.parentNode && i.parentNode.insertBefore(t, i)
    }, DOMKit.prototype.insertAfter = function insertAfter(t, i) {
        i.parentNode && i.parentNode.insertBefore(t, i.nextSibling)
    }, DOMKit.prototype.toggleDisplayStyle = function toggleDisplayStyle(t, i) {
        t.style.display = i ? "" : "none"
    }, DOMKit.prototype.findElements = function findElements(t, selector) {
        return this.HTMLCollectionToArray(t.querySelectorAll(selector))
    }, DOMKit.prototype.HTMLCollectionToArray = function HTMLCollectionToArray(t) {
        return Array.prototype.slice.call(t)
    }, window.DOMKit || (window.DOMKit = new DOMKit)
}(), function (window, undefined) {
    function isArraylike(t) {
        var length = t.length, type = I.type(t);
        return !I.isWindow(t) && (!(1 !== t.nodeType || !length) || ("array" === type || "function" !== type && (0 === length || "number" == typeof length && length > 0 && length - 1 in t)))
    }

    function createOptions(options) {
        var object = q[options] = {};
        return I.each(options.match(A) || [], function (t, i) {
            object[i] = !0
        }), object
    }

    function internalData(t, name, data, i) {
        if (I.acceptData(t)) {
            var s, o, l = I.expando, u = t.nodeType, h = u ? I.cache : t, id = u ? t[l] : t[l] && l;
            if (id && h[id] && (i || h[id].data) || data !== undefined || "string" != typeof name) return id || (id = u ? t[l] = p.pop() || I.guid++ : l), h[id] || (h[id] = u ? {} : {toJSON: I.noop}), "object" != typeof name && "function" != typeof name || (i ? h[id] = I.extend(h[id], name) : h[id].data = I.extend(h[id].data, name)), o = h[id],
            i || (o.data || (o.data = {}), o = o.data), data !== undefined && (o[I.camelCase(name)] = data), "string" == typeof name ? null == (s = o[name]) && (s = o[I.camelCase(name)]) : s = o, s
        }
    }

    function internalRemoveData(t, name, i) {
        if (I.acceptData(t)) {
            var s, o, l = t.nodeType, u = l ? I.cache : t, id = l ? t[I.expando] : I.expando;
            if (u[id]) {
                if (name && (s = i ? u[id] : u[id].data)) {
                    o = (name = I.isArray(name) ? name.concat(I.map(name, I.camelCase)) : name in s ? [name] : (name = I.camelCase(name)) in s ? [name] : name.split(" ")).length;
                    for (; o--;) delete s[name[o]];
                    if (i ? !isEmptyDataObject(s) : !I.isEmptyObject(s)) return
                }
                (i || (delete u[id].data, isEmptyDataObject(u[id]))) && (l ? I.cleanData([t], !0) : I.support.deleteExpando || u != u.window ? delete u[id] : u[id] = null)
            }
        }
    }

    function dataAttr(t, key, data) {
        if (data === undefined && 1 === t.nodeType) {
            var name = "data-" + key.replace(H, "-$1").toLowerCase();
            if ("string" == typeof(data = t.getAttribute(name))) {
                try {
                    data = "true" === data || "false" !== data && ("null" === data ? null : +data + "" === data ? +data : G.test(data) ? I.parseJSON(data) : data)
                } catch (t) {
                }
                I.data(t, key, data)
            } else data = undefined
        }
        return data
    }

    function isEmptyDataObject(t) {
        var name;
        for (name in t) if (("data" !== name || !I.isEmptyObject(t[name])) && "toJSON" !== name) return !1;
        return !0
    }

    function returnTrue() {
        return !0
    }

    function returnFalse() {
        return !1
    }

    function safeActiveElement() {
        try {
            return document.activeElement
        } catch (t) {
        }
    }

    function sibling(t, dir) {
        do {
            t = t[dir]
        } while (t && 1 !== t.nodeType);
        return t
    }

    function winnow(elements, qualifier, t) {
        if (I.isFunction(qualifier)) return I.grep(elements, function (i, s) {
            return !!qualifier.call(i, s, i) !== t
        });
        if (qualifier.nodeType) return I.grep(elements, function (i) {
            return i === qualifier !== t
        });
        if ("string" == typeof qualifier) {
            if (ae.test(qualifier)) return I.filter(qualifier, elements, t);
            qualifier = I.filter(qualifier, elements)
        }
        return I.grep(elements, function (i) {
            return I.inArray(i, qualifier) >= 0 !== t
        })
    }

    function createSafeFragment(document) {
        var list = ue.split("|"), t = document.createDocumentFragment();
        if (t.createElement) for (; list.length;) t.createElement(list.pop());
        return t
    }

    function manipulationTarget(t, content) {
        return I.nodeName(t, "table") && I.nodeName(1 === content.nodeType ? content : content.firstChild, "tr") ? t.getElementsByTagName("tbody")[0] || t.appendChild(t.ownerDocument.createElement("tbody")) : t
    }

    function disableScript(t) {
        return t.type = (null !== I.find.attr(t, "type")) + "/" + t.type, t
    }

    function restoreScript(t) {
        var match = Ce.exec(t.type);
        return match ? t.type = match[1] : t.removeAttribute("type"), t
    }

    function setGlobalEval(t, i) {
        for (var s, o = 0; null != (s = t[o]); o++) I._data(s, "globalEval", !i || I._data(i[o], "globalEval"))
    }

    function cloneCopyEvent(src, t) {
        if (1 === t.nodeType && I.hasData(src)) {
            var type, i, s, o = I._data(src), l = I._data(t, o), u = o.events;
            if (u) {
                delete l.handle, l.events = {};
                for (type in u) for (i = 0, s = u[type].length; i < s; i++) I.event.add(t, type, u[type][i])
            }
            l.data && (l.data = I.extend({}, l.data))
        }
    }

    function fixCloneNodeIssues(src, t) {
        var nodeName, e, data;
        if (1 === t.nodeType) {
            if (nodeName = t.nodeName.toLowerCase(), !I.support.noCloneEvent && t[I.expando]) {
                data = I._data(t);
                for (e in data.events) I.removeEvent(t, e, data.handle);
                t.removeAttribute(I.expando)
            }
            "script" === nodeName && t.text !== src.text ? (disableScript(t).text = src.text, restoreScript(t)) : "object" === nodeName ? (t.parentNode && (t.outerHTML = src.outerHTML), I.support.html5Clone && src.innerHTML && !I.trim(t.innerHTML) && (t.innerHTML = src.innerHTML)) : "input" === nodeName && Te.test(src.type) ? (t.defaultChecked = t.checked = src.checked, t.value !== src.value && (t.value = src.value)) : "option" === nodeName ? t.defaultSelected = t.selected = src.defaultSelected : "input" !== nodeName && "textarea" !== nodeName || (t.defaultValue = src.defaultValue)
        }
    }

    function getAll(context, tag) {
        var t, i, o = 0,
            l = typeof context.getElementsByTagName !== s ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== s ? context.querySelectorAll(tag || "*") : undefined;
        if (!l) for (l = [], t = context.childNodes || context; null != (i = t[o]); o++) !tag || I.nodeName(i, tag) ? l.push(i) : I.merge(l, getAll(i, tag));
        return tag === undefined || tag && I.nodeName(context, tag) ? I.merge([context], l) : l
    }

    function fixDefaultChecked(t) {
        Te.test(t.type) && (t.defaultChecked = t.checked)
    }

    function vendorPropName(style, name) {
        if (name in style) return name;
        for (var t = name.charAt(0).toUpperCase() + name.slice(1), i = name, s = Ge.length; s--;) if ((name = Ge[s] + t) in style) return name;
        return i
    }

    function isHidden(t, i) {
        return t = i || t, "none" === I.css(t, "display") || !I.contains(t.ownerDocument, t)
    }

    function showHide(elements, show) {
        for (var display, t, hidden, values = [], index = 0, length = elements.length; index < length; index++) (t = elements[index]).style && (values[index] = I._data(t, "olddisplay"), display = t.style.display, show ? (values[index] || "none" !== display || (t.style.display = ""), "" === t.style.display && isHidden(t) && (values[index] = I._data(t, "olddisplay", css_defaultDisplay(t.nodeName)))) : values[index] || (hidden = isHidden(t), (display && "none" !== display || !hidden) && I._data(t, "olddisplay", hidden ? display : I.css(t, "display"))));
        for (index = 0; index < length; index++) (t = elements[index]).style && (show && "none" !== t.style.display && "" !== t.style.display || (t.style.display = show ? values[index] || "" : "none"));
        return elements
    }

    function setPositiveNumber(t, value, i) {
        var matches = Oe.exec(value);
        return matches ? Math.max(0, matches[1] - (i || 0)) + (matches[2] || "px") : value
    }

    function augmentWidthOrHeight(t, name, i, s, o) {
        for (var l = i === (s ? "border" : "content") ? 4 : "width" === name ? 1 : 0, u = 0; l < 4; l += 2) "margin" === i && (u += I.css(t, i + qe[l], !0, o)), s ? ("content" === i && (u -= I.css(t, "padding" + qe[l], !0, o)), "margin" !== i && (u -= I.css(t, "border" + qe[l] + "Width", !0, o))) : (u += I.css(t, "padding" + qe[l], !0, o), "padding" !== i && (u += I.css(t, "border" + qe[l] + "Width", !0, o)));
        return u
    }

    function getWidthOrHeight(t, name, i) {
        var s = !0, o = "width" === name ? t.offsetWidth : t.offsetHeight, l = Le(t),
            u = I.support.boxSizing && "border-box" === I.css(t, "boxSizing", !1, l);
        if (o <= 0 || null == o) {
            if (((o = Ae(t, name, l)) < 0 || null == o) && (o = t.style[name]), Be.test(o)) return o;
            s = u && (I.support.boxSizingReliable || o === t.style[name]), o = parseFloat(o) || 0
        }
        return o + augmentWidthOrHeight(t, name, i || (u ? "border" : "content"), s, l) + "px"
    }

    function css_defaultDisplay(nodeName) {
        var t = document, display = Me[nodeName];
        return display || ("none" !== (display = actualDisplay(nodeName, t)) && display || ((t = ((we = (we || I("<iframe frameborder='0' width='0' height='0'/>").css("cssText", "display:block !important")).appendTo(t.documentElement))[0].contentWindow || we[0].contentDocument).document).write("<!doctype html><html><body>"), t.close(), display = actualDisplay(nodeName, t), we.detach()), Me[nodeName] = display), display
    }

    function actualDisplay(name, t) {
        var i = I(t.createElement(name)).appendTo(t.body), display = I.css(i[0], "display");
        return i.remove(), display
    }

    function buildParams(prefix, t, i, add) {
        var name;
        if (I.isArray(t)) I.each(t, function (t, s) {
            i || He.test(prefix) ? add(prefix, s) : buildParams(prefix + "[" + ("object" == typeof s ? t : "") + "]", s, i, add)
        }); else if (i || "object" !== I.type(t)) add(prefix, t); else for (name in t) buildParams(prefix + "[" + name + "]", t[name], i, add)
    }

    function addToPrefiltersOrTransports(t) {
        return function (i, s) {
            "string" != typeof i && (s = i, i = "*");
            var o, l = 0, u = i.toLowerCase().match(A) || [];
            if (I.isFunction(s)) for (; o = u[l++];) "+" === o[0] ? (o = o.slice(1) || "*", (t[o] = t[o] || []).unshift(s)) : (t[o] = t[o] || []).push(s)
        }
    }

    function inspectPrefiltersOrTransports(t, options, i, s) {
        function inspect(u) {
            var selected;
            return o[u] = !0, I.each(t[u] || [], function (t, u) {
                var h = u(options, i, s);
                return "string" != typeof h || l || o[h] ? l ? !(selected = h) : void 0 : (options.dataTypes.unshift(h), inspect(h), !1)
            }), selected
        }

        var o = {}, l = t === at;
        return inspect(options.dataTypes[0]) || !o["*"] && inspect("*")
    }

    function ajaxExtend(target, src) {
        var t, key, i = I.ajaxSettings.flatOptions || {};
        for (key in src) src[key] !== undefined && ((i[key] ? target : t || (t = {}))[key] = src[key]);
        return t && I.extend(!0, target, t), target
    }

    function ajaxHandleResponses(t, i, s) {
        for (var o, l, u, type, h = t.contents, p = t.dataTypes; "*" === p[0];) p.shift(), l === undefined && (l = t.mimeType || i.getResponseHeader("Content-Type"));
        if (l) for (type in h) if (h[type] && h[type].test(l)) {
            p.unshift(type);
            break
        }
        if (p[0] in s) u = p[0]; else {
            for (type in s) {
                if (!p[0] || t.converters[type + " " + p[0]]) {
                    u = type;
                    break
                }
                o || (o = type)
            }
            u = u || o
        }
        if (u) return u !== p[0] && p.unshift(u), s[u]
    }

    function ajaxConvert(t, response, i, s) {
        var o, l, u, h, p, m = {}, _ = t.dataTypes.slice();
        if (_[1]) for (u in t.converters) m[u.toLowerCase()] = t.converters[u];
        for (l = _.shift(); l;) if (t.responseFields[l] && (i[t.responseFields[l]] = response), !p && s && t.dataFilter && (response = t.dataFilter(response, t.dataType)), p = l, l = _.shift()) if ("*" === l) l = p; else if ("*" !== p && p !== l) {
            if (!(u = m[p + " " + l] || m["* " + l])) for (o in m) if ((h = o.split(" "))[1] === l && (u = m[p + " " + h[0]] || m["* " + h[0]])) {
                !0 === u ? u = m[o] : !0 !== m[o] && (l = h[0], _.unshift(h[1]));
                break
            }
            if (!0 !== u) if (u && t.throws) response = u(response); else try {
                response = u(response)
            } catch (t) {
                return {state: "parsererror", error: u ? t : "No conversion from " + p + " to " + l}
            }
        }
        return {state: "success", data: response}
    }

    function createStandardXHR() {
        try {
            return new window.XMLHttpRequest
        } catch (t) {
        }
    }

    function createActiveXHR() {
        try {
            return new window.ActiveXObject("Microsoft.XMLHTTP")
        } catch (t) {
        }
    }

    function createFxNow() {
        return setTimeout(function () {
            _t = undefined
        }, 0), _t = I.now()
    }

    function createTween(value, t, animation) {
        for (var i, s = (vt[t] || []).concat(vt["*"]), index = 0, length = s.length; index < length; index++) if (i = s[index].call(animation, t, value)) return i
    }

    function Animation(t, properties, options) {
        var result, i, index = 0, length = yt.length, s = I.Deferred().always(function () {
            delete o.elem
        }), o = function () {
            if (i) return !1;
            for (var currentTime = _t || createFxNow(), o = Math.max(0, animation.startTime + animation.duration - currentTime), l = 1 - (o / animation.duration || 0), index = 0, length = animation.tweens.length; index < length; index++) animation.tweens[index].run(l);
            return s.notifyWith(t, [animation, l, o]), l < 1 && length ? o : (s.resolveWith(t, [animation]), !1)
        }, animation = s.promise({
            elem: t,
            props: I.extend({}, properties),
            opts: I.extend(!0, {specialEasing: {}}, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: _t || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function (i, end) {
                var s = I.Tween(t, animation.opts, i, end, animation.opts.specialEasing[i] || animation.opts.easing);
                return animation.tweens.push(s), s
            },
            stop: function (o) {
                var index = 0, length = o ? animation.tweens.length : 0;
                if (i) return this;
                for (i = !0; index < length; index++) animation.tweens[index].run(1);
                return o ? s.resolveWith(t, [animation, o]) : s.rejectWith(t, [animation, o]), this
            }
        }), l = animation.props;
        for (propFilter(l, animation.opts.specialEasing); index < length; index++) if (result = yt[index].call(animation, t, l, animation.opts)) return result;
        return I.map(l, createTween, animation), I.isFunction(animation.opts.start) && animation.opts.start.call(t, animation), I.fx.timer(I.extend(o, {
            elem: t,
            anim: animation,
            queue: animation.opts.queue
        })), animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always)
    }

    function propFilter(t, i) {
        var index, name, s, value, o;
        for (index in t) if (name = I.camelCase(index), s = i[name], value = t[index], I.isArray(value) && (s = value[1], value = t[index] = value[0]), index !== name && (t[name] = value, delete t[index]), (o = I.cssHooks[name]) && "expand" in o) {
            value = o.expand(value), delete t[name];
            for (index in value) index in t || (t[index] = value[index], i[index] = s)
        } else i[name] = s
    }

    function Tween(t, options, i, end, s) {
        return new Tween.prototype.init(t, options, i, end, s)
    }

    function genFx(type, t) {
        var which, i = {height: type}, s = 0;
        for (t = t ? 1 : 0; s < 4; s += 2 - t) i["margin" + (which = qe[s])] = i["padding" + which] = type;
        return t && (i.opacity = i.width = type), i
    }

    function getWindow(t) {
        return I.isWindow(t) ? t : 9 === t.nodeType && (t.defaultView || t.parentWindow)
    }

    var t, i, s = typeof undefined, location = window.location, document = window.document,
        o = document.documentElement, l = window.jQuery, u = window.$, h = {}, p = [], m = p.concat, _ = p.push,
        g = p.slice, S = p.indexOf, T = h.toString, v = h.hasOwnProperty, C = "1.10.1".trim,
        I = function (selector, context) {
            return new I.fn.init(selector, context, i)
        }, L = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, A = /\S+/g, R = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        D = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, P = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, U = /^[\],:{}\s]*$/,
        N = /(?:^|:|,)(?:\s*\[)+/g, O = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
        B = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g, V = /^-ms-/, M = /-([\da-z])/gi,
        F = function (all, t) {
            return t.toUpperCase()
        }, k = function (event) {
            (document.addEventListener || "load" === event.type || "complete" === document.readyState) && (detach(), I.ready())
        }, detach = function () {
            document.addEventListener ? (document.removeEventListener("DOMContentLoaded", k, !1), window.removeEventListener("load", k, !1)) : (document.detachEvent("onreadystatechange", k), window.detachEvent("onload", k))
        };
    I.fn = I.prototype = {
        jquery: "1.10.1", constructor: I, init: function (selector, context, t) {
            var match, i;
            if (!selector) return this;
            if ("string" == typeof selector) {
                if (!(match = "<" === selector.charAt(0) && ">" === selector.charAt(selector.length - 1) && selector.length >= 3 ? [null, selector, null] : D.exec(selector)) || !match[1] && context) return !context || context.jquery ? (context || t).find(selector) : this.constructor(context).find(selector);
                if (match[1]) {
                    if (context = context instanceof I ? context[0] : context, I.merge(this, I.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)), P.test(match[1]) && I.isPlainObject(context)) for (match in context) I.isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
                    return this
                }
                if ((i = document.getElementById(match[2])) && i.parentNode) {
                    if (i.id !== match[2]) return t.find(selector);
                    this.length = 1, this[0] = i
                }
                return this.context = document, this.selector = selector, this
            }
            return selector.nodeType ? (this.context = this[0] = selector, this.length = 1, this) : I.isFunction(selector) ? t.ready(selector) : (selector.selector !== undefined && (this.selector = selector.selector, this.context = selector.context), I.makeArray(selector, this))
        }, selector: "", length: 0, toArray: function () {
            return g.call(this)
        }, get: function (t) {
            return null == t ? this.toArray() : t < 0 ? this[this.length + t] : this[t]
        }, pushStack: function (t) {
            var i = I.merge(this.constructor(), t);
            return i.prevObject = this, i.context = this.context, i
        }, each: function (t, i) {
            return I.each(this, t, i)
        }, ready: function (t) {
            return I.ready.promise().done(t), this
        }, slice: function () {
            return this.pushStack(g.apply(this, arguments))
        }, first: function () {
            return this.eq(0)
        }, last: function () {
            return this.eq(-1)
        }, eq: function (t) {
            var i = this.length, s = +t + (t < 0 ? i : 0);
            return this.pushStack(s >= 0 && s < i ? [this[s]] : [])
        }, map: function (t) {
            return this.pushStack(I.map(this, function (i, s) {
                return t.call(i, s, i)
            }))
        }, end: function () {
            return this.prevObject || this.constructor(null)
        }, push: _, sort: [].sort, splice: [].splice
    }, I.fn.init.prototype = I.fn, I.extend = I.fn.extend = function () {
        var src, t, i, name, options, clone, target = arguments[0] || {}, s = 1, length = arguments.length, o = !1;
        for ("boolean" == typeof target && (o = target, target = arguments[1] || {}, s = 2), "object" == typeof target || I.isFunction(target) || (target = {}), length === s && (target = this, --s); s < length; s++) if (null != (options = arguments[s])) for (name in options) src = target[name], target !== (i = options[name]) && (o && i && (I.isPlainObject(i) || (t = I.isArray(i))) ? (t ? (t = !1, clone = src && I.isArray(src) ? src : []) : clone = src && I.isPlainObject(src) ? src : {}, target[name] = I.extend(o, clone, i)) : i !== undefined && (target[name] = i));
        return target
    }, I.extend({
        expando: "jQuery" + ("1.10.1" + Math.random()).replace(/\D/g, ""), noConflict: function (t) {
            return window.$ === I && (window.$ = u), t && window.jQuery === I && (window.jQuery = l), I
        }, isReady: !1, readyWait: 1, holdReady: function (t) {
            t ? I.readyWait++ : I.ready(!0)
        }, ready: function (i) {
            if (!0 === i ? !--I.readyWait : !I.isReady) {
                if (!document.body) return setTimeout(I.ready);
                I.isReady = !0, !0 !== i && --I.readyWait > 0 || (t.resolveWith(document, [I]), I.fn.trigger && I(document).trigger("ready").off("ready"))
            }
        }, isFunction: function (t) {
            return "function" === I.type(t)
        }, isArray: Array.isArray || function (t) {
            return "array" === I.type(t)
        }, isWindow: function (t) {
            return null != t && t == t.window
        }, isNumeric: function (t) {
            return !isNaN(parseFloat(t)) && isFinite(t)
        }, type: function (t) {
            return null == t ? String(t) : "object" == typeof t || "function" == typeof t ? h[T.call(t)] || "object" : typeof t
        }, isPlainObject: function (t) {
            var key;
            if (!t || "object" !== I.type(t) || t.nodeType || I.isWindow(t)) return !1;
            try {
                if (t.constructor && !v.call(t, "constructor") && !v.call(t.constructor.prototype, "isPrototypeOf")) return !1
            } catch (t) {
                return !1
            }
            if (I.support.ownLast) for (key in t) return v.call(t, key);
            for (key in t) ;
            return key === undefined || v.call(t, key)
        }, isEmptyObject: function (t) {
            var name;
            for (name in t) return !1;
            return !0
        }, error: function (t) {
            throw new Error(t)
        }, parseHTML: function (data, context, t) {
            if (!data || "string" != typeof data) return null;
            "boolean" == typeof context && (t = context, context = !1), context = context || document;
            var i = P.exec(data), scripts = !t && [];
            return i ? [context.createElement(i[1])] : (i = I.buildFragment([data], context, scripts), scripts && I(scripts).remove(), I.merge([], i.childNodes))
        }, parseJSON: function (data) {
            return window.JSON && window.JSON.parse ? window.JSON.parse(data) : null === data ? data : "string" == typeof data && (data = I.trim(data)) && U.test(data.replace(O, "@").replace(B, "]").replace(N, "")) ? new Function("return " + data)() : void I.error("Invalid JSON: " + data)
        }, parseXML: function (data) {
            var t, i;
            if (!data || "string" != typeof data) return null;
            try {
                window.DOMParser ? (i = new DOMParser, t = i.parseFromString(data, "text/xml")) : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false", t.loadXML(data))
            } catch (i) {
                t = undefined
            }
            return t && t.documentElement && !t.getElementsByTagName("parsererror").length || I.error("Invalid XML: " + data), t
        }, noop: function () {
        }, globalEval: function (data) {
            data && I.trim(data) && (window.execScript || function (data) {
                window.eval.call(window, data)
            })(data)
        }, camelCase: function (t) {
            return t.replace(V, "ms-").replace(M, F)
        }, nodeName: function (t, name) {
            return t.nodeName && t.nodeName.toLowerCase() === name.toLowerCase()
        }, each: function (t, i, s) {
            var o = 0, length = t.length, isArray = isArraylike(t);
            if (s) {
                if (isArray) for (; o < length && !1 !== i.apply(t[o], s); o++) ; else for (o in t) if (!1 === i.apply(t[o], s)) break
            } else if (isArray) for (; o < length && !1 !== i.call(t[o], o, t[o]); o++) ; else for (o in t) if (!1 === i.call(t[o], o, t[o])) break;
            return t
        }, trim: C && !C.call("\ufeffÂ ") ? function (text) {
            return null == text ? "" : C.call(text)
        } : function (text) {
            return null == text ? "" : (text + "").replace(R, "")
        }, makeArray: function (t, i) {
            var s = i || [];
            return null != t && (isArraylike(Object(t)) ? I.merge(s, "string" == typeof t ? [t] : t) : _.call(s, t)), s
        }, inArray: function (t, i, s) {
            var o;
            if (i) {
                if (S) return S.call(i, t, s);
                for (o = i.length, s = s ? s < 0 ? Math.max(0, o + s) : s : 0; s < o; s++) if (s in i && i[s] === t) return s
            }
            return -1
        }, merge: function (t, i) {
            var s = i.length, o = t.length, l = 0;
            if ("number" == typeof s) for (; l < s; l++) t[o++] = i[l]; else for (; i[l] !== undefined;) t[o++] = i[l++];
            return t.length = o, t
        }, grep: function (t, i, s) {
            var o = [], l = 0, length = t.length;
            for (s = !!s; l < length; l++) s !== !!i(t[l], l) && o.push(t[l]);
            return o
        }, map: function (t, i, s) {
            var value, o = 0, length = t.length, l = [];
            if (isArraylike(t)) for (; o < length; o++) null != (value = i(t[o], o, s)) && (l[l.length] = value); else for (o in t) null != (value = i(t[o], o, s)) && (l[l.length] = value);
            return m.apply([], l)
        }, guid: 1, proxy: function (t, context) {
            var i, s, o;
            return "string" == typeof context && (o = t[context], context = t, t = o), I.isFunction(t) ? (i = g.call(arguments, 2), s = function () {
                return t.apply(context || this, i.concat(g.call(arguments)))
            }, s.guid = t.guid = t.guid || I.guid++, s) : undefined
        }, access: function (t, i, key, value, s, o, raw) {
            var l = 0, length = t.length, u = null == key;
            if ("object" === I.type(key)) {
                s = !0;
                for (l in key) I.access(t, i, l, key[l], !0, o, raw)
            } else if (value !== undefined && (s = !0, I.isFunction(value) || (raw = !0), u && (raw ? (i.call(t, value), i = null) : (u = i, i = function (t, key, value) {
                    return u.call(I(t), value)
                })), i)) for (; l < length; l++) i(t[l], key, raw ? value : value.call(t[l], l, i(t[l], key)));
            return s ? t : u ? i.call(t) : length ? i(t[0], key) : o
        }, now: function () {
            return (new Date).getTime()
        }, swap: function (t, options, i, s) {
            var o, name, l = {};
            for (name in options) l[name] = t.style[name], t.style[name] = options[name];
            o = i.apply(t, s || []);
            for (name in options) t.style[name] = l[name];
            return o
        }
    }), I.ready.promise = function (i) {
        if (!t) if (t = I.Deferred(),
            "complete" === document.readyState) setTimeout(I.ready); else if (document.addEventListener) document.addEventListener("DOMContentLoaded", k, !1), window.addEventListener("load", k, !1); else {
            document.attachEvent("onreadystatechange", k), window.attachEvent("onload", k);
            var top = !1;
            try {
                top = null == window.frameElement && document.documentElement
            } catch (t) {
            }
            top && top.doScroll && function doScrollCheck() {
                if (!I.isReady) {
                    try {
                        top.doScroll("left")
                    } catch (t) {
                        return setTimeout(doScrollCheck, 50)
                    }
                    detach(), I.ready()
                }
            }()
        }
        return t.promise(i)
    }, I.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (t, name) {
        h["[object " + name + "]"] = name.toLowerCase()
    }), i = I(document), function (window, undefined) {
        function Sizzle(selector, context, t, seed) {
            var match, s, o, nodeType, l, u, h, p, _, T;
            if ((context ? context.ownerDocument || context : v) !== document && m(context), context = context || document, t = t || [], !selector || "string" != typeof selector) return t;
            if (1 !== (nodeType = context.nodeType) && 9 !== nodeType) return [];
            if (g && !seed) {
                if (match = X.exec(selector)) if (o = match[1]) {
                    if (9 === nodeType) {
                        if (!(s = context.getElementById(o)) || !s.parentNode) return t;
                        if (s.id === o) return t.push(s), t
                    } else if (context.ownerDocument && (s = context.ownerDocument.getElementById(o)) && contains(context, s) && s.id === o) return t.push(s), t
                } else {
                    if (match[2]) return push.apply(t, context.getElementsByTagName(selector)), t;
                    if ((o = match[3]) && i.getElementsByClassName && context.getElementsByClassName) return push.apply(t, context.getElementsByClassName(o)), t
                }
                if (i.qsa && (!S || !S.test(selector))) {
                    if (p = h = expando, _ = context, T = 9 === nodeType && selector, 1 === nodeType && "object" !== context.nodeName.toLowerCase()) {
                        for (u = tokenize(selector), (h = context.getAttribute("id")) ? p = h.replace(te, "\\$&") : context.setAttribute("id", p), p = "[id='" + p + "'] ", l = u.length; l--;) u[l] = p + toSelector(u[l]);
                        _ = j.test(selector) && context.parentNode || context, T = u.join(",")
                    }
                    if (T) try {
                        return push.apply(t, _.querySelectorAll(T)), t
                    } catch (t) {
                    } finally {
                        h || context.removeAttribute("id")
                    }
                }
            }
            return select(selector.replace(q, "$1"), context, t, seed)
        }

        function isNative(t) {
            return $.test(t + "")
        }

        function createCache() {
            function cache(key, value) {
                return keys.push(key += " ") > o.cacheLength && delete cache[keys.shift()], cache[key] = value
            }

            var keys = [];
            return cache
        }

        function markFunction(t) {
            return t[expando] = !0, t
        }

        function assert(t) {
            var i = document.createElement("div");
            try {
                return !!t(i)
            } catch (t) {
                return !1
            } finally {
                i.parentNode && i.parentNode.removeChild(i), i = null
            }
        }

        function addHandle(t, i, test) {
            for (var s, l = (t = t.split("|")).length, u = test ? null : i; l--;) (s = o.attrHandle[t[l]]) && s !== i || (o.attrHandle[t[l]] = u)
        }

        function boolHandler(t, name) {
            var i = t.getAttributeNode(name);
            return i && i.specified ? i.value : !0 === t[name] ? name.toLowerCase() : null
        }

        function interpolationHandler(t, name) {
            return t.getAttribute(name, "type" === name.toLowerCase() ? 1 : 2)
        }

        function valueHandler(t) {
            if ("input" === t.nodeName.toLowerCase()) return t.defaultValue
        }

        function siblingCheck(a, b) {
            var t = b && a,
                i = t && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || U) - (~a.sourceIndex || U);
            if (i) return i;
            if (t) for (; t = t.nextSibling;) if (t === b) return -1;
            return a ? 1 : -1
        }

        function createPositionalPseudo(t) {
            return markFunction(function (i) {
                return i = +i, markFunction(function (seed, matches) {
                    for (var s, o = t([], seed.length, i), l = o.length; l--;) seed[s = o[l]] && (seed[s] = !(matches[s] = seed[s]))
                })
            })
        }

        function tokenize(selector, t) {
            var i, match, s, type, l, u, h, p = A[selector + " "];
            if (p) return t ? 0 : p.slice(0);
            for (l = selector, u = [], h = o.preFilter; l;) {
                i && !(match = G.exec(l)) || (match && (l = l.slice(match[0].length) || l), u.push(s = [])), i = !1, (match = H.exec(l)) && (i = match.shift(), s.push({
                    value: i,
                    type: match[0].replace(q, " ")
                }), l = l.slice(i.length));
                for (type in o.filter) !(match = W[type].exec(l)) || h[type] && !(match = h[type](match)) || (i = match.shift(), s.push({
                    value: i,
                    type: type,
                    matches: match
                }), l = l.slice(i.length));
                if (!i) break
            }
            return t ? l.length : l ? Sizzle.error(selector) : A(selector, u).slice(0)
        }

        function toSelector(t) {
            for (var i = 0, s = t.length, selector = ""; i < s; i++) selector += t[i].value;
            return selector
        }

        function addCombinator(t, i, o) {
            var dir = i.dir, l = o && "parentNode" === dir, u = done++
            ;
            return i.first ? function (i, context, s) {
                for (; i = i[dir];) if (1 === i.nodeType || l) return t(i, context, s)
            } : function (i, context, o) {
                var data, h, p, m = C + " " + u;
                if (o) {
                    for (; i = i[dir];) if ((1 === i.nodeType || l) && t(i, context, o)) return !0
                } else for (; i = i[dir];) if (1 === i.nodeType || l) if (p = i[expando] || (i[expando] = {}), (h = p[dir]) && h[0] === m) {
                    if (!0 === (data = h[1]) || data === s) return !0 === data
                } else if (h = p[dir] = [m], h[1] = t(i, context, o) || s, !0 === h[1]) return !0
            }
        }

        function elementMatcher(t) {
            return t.length > 1 ? function (i, context, s) {
                for (var o = t.length; o--;) if (!t[o](i, context, s)) return !1;
                return !0
            } : t[0]
        }

        function condense(t, map, filter, context, i) {
            for (var s, o = [], l = 0, u = t.length, h = null != map; l < u; l++) (s = t[l]) && (filter && !filter(s, context, i) || (o.push(s), h && map.push(l)));
            return o
        }

        function setMatcher(t, selector, i, s, o, l) {
            return s && !s[expando] && (s = setMatcher(s)), o && !o[expando] && (o = setMatcher(o, l)), markFunction(function (seed, l, context, u) {
                var h, p, m, _ = [], g = [], S = l.length,
                    T = seed || multipleContexts(selector || "*", context.nodeType ? [context] : context, []),
                    v = !t || !seed && selector ? T : condense(T, _, t, context, u),
                    C = i ? o || (seed ? t : S || s) ? [] : l : v;
                if (i && i(v, C, context, u), s) for (h = condense(C, g), s(h, [], context, u), p = h.length; p--;) (m = h[p]) && (C[g[p]] = !(v[g[p]] = m));
                if (seed) {
                    if (o || t) {
                        if (o) {
                            for (h = [], p = C.length; p--;) (m = C[p]) && h.push(v[p] = m);
                            o(null, C = [], h, u)
                        }
                        for (p = C.length; p--;) (m = C[p]) && (h = o ? indexOf.call(seed, m) : _[p]) > -1 && (seed[h] = !(l[h] = m))
                    }
                } else C = condense(C === l ? C.splice(S, C.length) : C), o ? o(null, l, C, u) : push.apply(l, C)
            })
        }

        function matcherFromTokens(t) {
            for (var i, s, l, u = t.length, p = o.relative[t[0].type], m = p || o.relative[" "], _ = p ? 1 : 0, g = addCombinator(function (t) {
                return t === i
            }, m, !0), S = addCombinator(function (t) {
                return indexOf.call(i, t) > -1
            }, m, !0), T = [function (t, context, s) {
                return !p && (s || context !== h) || ((i = context).nodeType ? g(t, context, s) : S(t, context, s))
            }]; _ < u; _++) if (s = o.relative[t[_].type]) T = [addCombinator(elementMatcher(T), s)]; else {
                if ((s = o.filter[t[_].type].apply(null, t[_].matches))[expando]) {
                    for (l = ++_; l < u && !o.relative[t[l].type]; l++) ;
                    return setMatcher(_ > 1 && elementMatcher(T), _ > 1 && toSelector(t.slice(0, _ - 1).concat({value: " " === t[_ - 2].type ? "*" : ""})).replace(q, "$1"), s, _ < l && matcherFromTokens(t.slice(_, l)), l < u && matcherFromTokens(t = t.slice(l)), l < u && toSelector(t))
                }
                T.push(s)
            }
            return elementMatcher(T)
        }

        function matcherFromGroupMatchers(t, i) {
            var l = 0, u = i.length > 0, p = t.length > 0, m = function (seed, context, m, _, g) {
                var S, T, v, I = [], L = 0, A = "0", R = seed && [], D = null != g, P = h,
                    U = seed || p && o.find.TAG("*", g && context.parentNode || context),
                    N = C += null == P ? 1 : Math.random() || .1;
                for (D && (h = context !== document && context, s = l); null != (S = U[A]); A++) {
                    if (p && S) {
                        for (T = 0; v = t[T++];) if (v(S, context, m)) {
                            _.push(S);
                            break
                        }
                        D && (C = N, s = ++l)
                    }
                    u && ((S = !v && S) && L--, seed && R.push(S))
                }
                if (L += A, u && A !== L) {
                    for (T = 0; v = i[T++];) v(R, I, context, m);
                    if (seed) {
                        if (L > 0) for (; A--;) R[A] || I[A] || (I[A] = pop.call(_));
                        I = condense(I)
                    }
                    push.apply(_, I), D && !seed && I.length > 0 && L + i.length > 1 && Sizzle.uniqueSort(_)
                }
                return D && (C = N, h = P), R
            };
            return u ? markFunction(m) : m
        }

        function multipleContexts(selector, t, i) {
            for (var s = 0, o = t.length; s < o; s++) Sizzle(selector, t[s], i);
            return i
        }

        function select(selector, context, t, seed) {
            var s, l, u, type, find, match = tokenize(selector);
            if (!seed && 1 === match.length) {
                if ((l = match[0] = match[0].slice(0)).length > 2 && "ID" === (u = l[0]).type && i.getById && 9 === context.nodeType && g && o.relative[l[1].type]) {
                    if (!(context = (o.find.ID(u.matches[0].replace(ie, se), context) || [])[0])) return t;
                    selector = selector.slice(l.shift().value.length)
                }
                for (s = W.needsContext.test(selector) ? 0 : l.length; s-- && (u = l[s], !o.relative[type = u.type]);) if ((find = o.find[type]) && (seed = find(u.matches[0].replace(ie, se), j.test(l[0].type) && context.parentNode || context))) {
                    if (l.splice(s, 1), !(selector = seed.length && toSelector(l))) return push.apply(t, seed), t;
                    break
                }
            }
            return compile(selector, match)(seed, context, !g, t, j.test(selector)), t
        }

        function setFilters() {
        }

        var t, i, s, o, l, u, compile, h, p, m, document, _, g, S, T, matches, contains, expando = "sizzle" + -new Date,
            v = window.document, C = 0, done = 0, L = createCache(), A = createCache(), R = createCache(), D = !1,
            P = function () {
                return 0
            }, U = 1 << 31, N = {}.hasOwnProperty, O = [], pop = O.pop, B = O.push, push = O.push, slice = O.slice,
            indexOf = O.indexOf || function (t) {
                for (var i = 0, s = this.length; i < s; i++) if (this[i] === t) return i;
                return -1
            },
            V = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            M = "[\\x20\\t\\r\\n\\f]", F = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", identifier = F.replace("w", "w#"),
            attributes = "\\[" + M + "*(" + F + ")" + M + "*(?:([*^$|!~]?=)" + M + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + M + "*\\]",
            k = ":(" + F + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace(3, 8) + ")*)|.*)\\)|)",
            q = new RegExp("^" + M + "+|((?:^|[^\\\\])(?:\\\\.)*)" + M + "+$", "g"),
            G = new RegExp("^" + M + "*," + M + "*"), H = new RegExp("^" + M + "*([>+~]|" + M + ")" + M + "*"),
            j = new RegExp(M + "*[+~]"), Y = new RegExp("=" + M + "*([^\\]'\"]*)" + M + "*\\]", "g"), K = new RegExp(k),
            J = new RegExp("^" + identifier + "$"), W = {
                ID: new RegExp("^#(" + F + ")"),
                CLASS: new RegExp("^\\.(" + F + ")"),
                TAG: new RegExp("^(" + F.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + attributes),
                PSEUDO: new RegExp("^" + k),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + M + "*(even|odd|(([+-]|)(\\d*)n|)" + M + "*(?:([+-]|)" + M + "*(\\d+)|))" + M + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + V + ")$", "i"),
                needsContext: new RegExp("^" + M + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + M + "*((?:-\\d)?\\d*)" + M + "*\\)|)(?=[^-]|$)", "i")
            }, $ = /^[^{]+\{\s*\[native \w/, X = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
            Z = /^(?:input|select|textarea|button)$/i, ee = /^h\d$/i, te = /'|\\/g,
            ie = new RegExp("\\\\([\\da-f]{1,6}" + M + "?|(" + M + ")|.)", "ig"), se = function (t, i, s) {
                var high = "0x" + i - 65536;
                return high !== high || s ? i : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, 1023 & high | 56320)
            };
        try {
            push.apply(O = slice.call(v.childNodes), v.childNodes);
            O[v.childNodes.length].nodeType
        } catch (t) {
            push = {
                apply: O.length ? function (target, t) {
                    B.apply(target, slice.call(t))
                } : function (target, t) {
                    for (var i = target.length, s = 0; target[i++] = t[s++];) ;
                    target.length = i - 1
                }
            }
        }
        u = Sizzle.isXML = function (t) {
            var documentElement = t && (t.ownerDocument || t).documentElement;
            return !!documentElement && "HTML" !== documentElement.nodeName
        }, i = Sizzle.support = {}, m = Sizzle.setDocument = function (t) {
            var s = t ? t.ownerDocument || t : v, parent = s.parentWindow;
            return s !== document && 9 === s.nodeType && s.documentElement ? (document = s, _ = s.documentElement, g = !u(s), parent && parent.frameElement && parent.attachEvent("onbeforeunload", function () {
                m()
            }), i.attributes = assert(function (t) {
                return t.innerHTML = "<a href='#'></a>", addHandle("type|href|height|width", interpolationHandler, "#" === t.firstChild.getAttribute("href")), addHandle(V, boolHandler, null == t.getAttribute("disabled")), t.className = "i", !t.getAttribute("className")
            }), i.input = assert(function (t) {
                return t.innerHTML = "<input>", t.firstChild.setAttribute("value", ""), "" === t.firstChild.getAttribute("value")
            }), addHandle("value", valueHandler, i.attributes && i.input), i.getElementsByTagName = assert(function (t) {
                return t.appendChild(s.createComment("")), !t.getElementsByTagName("*").length
            }), i.getElementsByClassName = assert(function (t) {
                return t.innerHTML = "<div class='a'></div><div class='a i'></div>", t.firstChild.className = "i", 2 === t.getElementsByClassName("i").length
            }), i.getById = assert(function (t) {
                return _.appendChild(t).id = expando, !s.getElementsByName || !s.getElementsByName(expando).length
            }), i.getById ? (o.find.ID = function (id, context) {
                if (void 0 !== context.getElementById && g) {
                    var t = context.getElementById(id);
                    return t && t.parentNode ? [t] : []
                }
            }, o.filter.ID = function (id) {
                var t = id.replace(ie, se);
                return function (i) {
                    return i.getAttribute("id") === t
                }
            }) : (delete o.find.ID, o.filter.ID = function (id) {
                var t = id.replace(ie, se);
                return function (i) {
                    var s = void 0 !== i.getAttributeNode && i.getAttributeNode("id");
                    return s && s.value === t
                }
            }), o.find.TAG = i.getElementsByTagName ? function (tag, context) {
                if (void 0 !== context.getElementsByTagName) return context.getElementsByTagName(tag)
            } : function (tag, context) {
                var t, i = [], s = 0, o = context.getElementsByTagName(tag);
                if ("*" === tag) {
                    for (; t = o[s++];) 1 === t.nodeType && i.push(t);
                    return i
                }
                return o
            },
                o.find.CLASS = i.getElementsByClassName && function (className, context) {
                    if (void 0 !== context.getElementsByClassName && g) return context.getElementsByClassName(className)
                }, T = [], S = [], (i.qsa = isNative(s.querySelectorAll)) && (assert(function (t) {
                t.innerHTML = "<select><option selected=''></option></select>", t.querySelectorAll("[selected]").length || S.push("\\[" + M + "*(?:value|" + V + ")"), t.querySelectorAll(":checked").length || S.push(":checked")
            }), assert(function (t) {
                var input = s.createElement("input");
                input.setAttribute("type", "hidden"), t.appendChild(input).setAttribute("t", ""), t.querySelectorAll("[t^='']").length && S.push("[*^$]=" + M + "*(?:''|\"\")"), t.querySelectorAll(":enabled").length || S.push(":enabled", ":disabled"), t.querySelectorAll("*,:x"), S.push(",.*:")
            })), (i.matchesSelector = isNative(matches = _.webkitMatchesSelector || _.mozMatchesSelector || _.oMatchesSelector || _.msMatchesSelector)) && assert(function (t) {
                i.disconnectedMatch = matches.call(t, "div"), matches.call(t, "[s!='']:x"), T.push("!=", k)
            }), S = S.length && new RegExp(S.join("|")), T = T.length && new RegExp(T.join("|")), contains = isNative(_.contains) || _.compareDocumentPosition ? function (a, b) {
                var t = 9 === a.nodeType ? a.documentElement : a, i = b && b.parentNode;
                return a === i || !(!i || 1 !== i.nodeType || !(t.contains ? t.contains(i) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(i)))
            } : function (a, b) {
                if (b) for (; b = b.parentNode;) if (b === a) return !0;
                return !1
            }, i.sortDetached = assert(function (t) {
                return 1 & t.compareDocumentPosition(s.createElement("div"))
            }), P = _.compareDocumentPosition ? function (a, b) {
                if (a === b) return D = !0, 0;
                var t = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition(b);
                return t ? 1 & t || !i.sortDetached && b.compareDocumentPosition(a) === t ? a === s || contains(v, a) ? -1 : b === s || contains(v, b) ? 1 : p ? indexOf.call(p, a) - indexOf.call(p, b) : 0 : 4 & t ? -1 : 1 : a.compareDocumentPosition ? -1 : 1
            } : function (a, b) {
                var t, i = 0, o = a.parentNode, l = b.parentNode, u = [a], h = [b];
                if (a === b) return D = !0, 0;
                if (!o || !l) return a === s ? -1 : b === s ? 1 : o ? -1 : l ? 1 : p ? indexOf.call(p, a) - indexOf.call(p, b) : 0;
                if (o === l) return siblingCheck(a, b);
                for (t = a; t = t.parentNode;) u.unshift(t);
                for (t = b; t = t.parentNode;) h.unshift(t);
                for (; u[i] === h[i];) i++;
                return i ? siblingCheck(u[i], h[i]) : u[i] === v ? -1 : h[i] === v ? 1 : 0
            }, s) : document
        }, Sizzle.matches = function (t, elements) {
            return Sizzle(t, null, null, elements)
        }, Sizzle.matchesSelector = function (t, s) {
            if ((t.ownerDocument || t) !== document && m(t), s = s.replace(Y, "='$1']"), i.matchesSelector && g && (!T || !T.test(s)) && (!S || !S.test(s))) try {
                var o = matches.call(t, s);
                if (o || i.disconnectedMatch || t.document && 11 !== t.document.nodeType) return o
            } catch (t) {
            }
            return Sizzle(s, document, null, [t]).length > 0
        }, Sizzle.contains = function (context, t) {
            return (context.ownerDocument || context) !== document && m(context), contains(context, t)
        }, Sizzle.attr = function (t, name) {
            (t.ownerDocument || t) !== document && m(t);
            var s = o.attrHandle[name.toLowerCase()],
                l = s && N.call(o.attrHandle, name.toLowerCase()) ? s(t, name, !g) : void 0;
            return void 0 === l ? i.attributes || !g ? t.getAttribute(name) : (l = t.getAttributeNode(name)) && l.specified ? l.value : null : l
        }, Sizzle.error = function (t) {
            throw new Error("Syntax error, unrecognized expression: " + t)
        }, Sizzle.uniqueSort = function (t) {
            var s, o = [], l = 0, u = 0;
            if (D = !i.detectDuplicates, p = !i.sortStable && t.slice(0), t.sort(P), D) {
                for (; s = t[u++];) s === t[u] && (l = o.push(u));
                for (; l--;) t.splice(o[l], 1)
            }
            return t
        }, l = Sizzle.getText = function (t) {
            var i, s = "", o = 0, nodeType = t.nodeType;
            if (nodeType) {
                if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
                    if ("string" == typeof t.textContent) return t.textContent;
                    for (t = t.firstChild; t; t = t.nextSibling) s += l(t)
                } else if (3 === nodeType || 4 === nodeType) return t.nodeValue
            } else for (; i = t[o]; o++) s += l(i);
            return s
        }, o = Sizzle.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: W,
            attrHandle: {},
            find: {},
            relative: {
                ">": {dir: "parentNode", first: !0},
                " ": {dir: "parentNode"},
                "+": {dir: "previousSibling", first: !0},
                "~": {dir: "previousSibling"}
            },
            preFilter: {
                ATTR: function (match) {
                    return match[1] = match[1].replace(ie, se), match[3] = (match[4] || match[5] || "").replace(ie, se), "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4)
                },
                CHILD: function (match) {
                    return match[1] = match[1].toLowerCase(), "nth" === match[1].slice(0, 3) ? (match[3] || Sizzle.error(match[0]), match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3])), match[5] = +(match[7] + match[8] || "odd" === match[3])) : match[3] && Sizzle.error(match[0]), match
                }, PSEUDO: function (match) {
                    var t, i = !match[5] && match[2];
                    return W.CHILD.test(match[0]) ? null : (match[3] && void 0 !== match[4] ? match[2] = match[4] : i && K.test(i) && (t = tokenize(i, !0)) && (t = i.indexOf(")", i.length - t) - i.length) && (match[0] = match[0].slice(0, t), match[2] = i.slice(0, t)), match.slice(0, 3))
                }
            },
            filter: {
                TAG: function (t) {
                    var nodeName = t.replace(ie, se).toLowerCase();
                    return "*" === t ? function () {
                        return !0
                    } : function (t) {
                        return t.nodeName && t.nodeName.toLowerCase() === nodeName
                    }
                }, CLASS: function (className) {
                    var pattern = L[className + " "];
                    return pattern || (pattern = new RegExp("(^|" + M + ")" + className + "(" + M + "|$)")) && L(className, function (t) {
                        return pattern.test("string" == typeof t.className && t.className || void 0 !== t.getAttribute && t.getAttribute("class") || "")
                    })
                }, ATTR: function (name, operator, t) {
                    return function (i) {
                        var result = Sizzle.attr(i, name);
                        return null == result ? "!=" === operator : !operator || (result += "", "=" === operator ? result === t : "!=" === operator ? result !== t : "^=" === operator ? t && 0 === result.indexOf(t) : "*=" === operator ? t && result.indexOf(t) > -1 : "$=" === operator ? t && result.slice(-t.length) === t : "~=" === operator ? (" " + result + " ").indexOf(t) > -1 : "|=" === operator && (result === t || result.slice(0, t.length + 1) === t + "-"))
                    }
                }, CHILD: function (type, t, i, s, o) {
                    var l = "nth" !== type.slice(0, 3), forward = "last" !== type.slice(-4), u = "of-type" === t;
                    return 1 === s && 0 === o ? function (t) {
                        return !!t.parentNode
                    } : function (t, context, i) {
                        var h, p, m, _, g, start, dir = l !== forward ? "nextSibling" : "previousSibling",
                            parent = t.parentNode, name = u && t.nodeName.toLowerCase(), S = !i && !u;
                        if (parent) {
                            if (l) {
                                for (; dir;) {
                                    for (m = t; m = m[dir];) if (u ? m.nodeName.toLowerCase() === name : 1 === m.nodeType) return !1;
                                    start = dir = "only" === type && !start && "nextSibling"
                                }
                                return !0
                            }
                            if (start = [forward ? parent.firstChild : parent.lastChild], forward && S) {
                                for (g = (h = (p = parent[expando] || (parent[expando] = {}))[type] || [])[0] === C && h[1], _ = h[0] === C && h[2], m = g && parent.childNodes[g]; m = ++g && m && m[dir] || (_ = g = 0) || start.pop();) if (1 === m.nodeType && ++_ && m === t) {
                                    p[type] = [C, g, _];
                                    break
                                }
                            } else if (S && (h = (t[expando] || (t[expando] = {}))[type]) && h[0] === C) _ = h[1]; else for (; (m = ++g && m && m[dir] || (_ = g = 0) || start.pop()) && ((u ? m.nodeName.toLowerCase() !== name : 1 !== m.nodeType) || !++_ || (S && ((m[expando] || (m[expando] = {}))[type] = [C, _]), m !== t));) ;
                            return (_ -= o) === s || _ % s == 0 && _ / s >= 0
                        }
                    }
                }, PSEUDO: function (t, i) {
                    var s,
                        l = o.pseudos[t] || o.setFilters[t.toLowerCase()] || Sizzle.error("unsupported pseudo: " + t);
                    return l[expando] ? l(i) : l.length > 1 ? (s = [t, t, "", i], o.setFilters.hasOwnProperty(t.toLowerCase()) ? markFunction(function (seed, matches) {
                        for (var t, s = l(seed, i), o = s.length; o--;) seed[t = indexOf.call(seed, s[o])] = !(matches[t] = s[o])
                    }) : function (t) {
                        return l(t, 0, s)
                    }) : l
                }
            },
            pseudos: {
                not: markFunction(function (selector) {
                    var input = [], t = [], i = compile(selector.replace(q, "$1"));
                    return i[expando] ? markFunction(function (seed, matches, context, t) {
                        for (var s, o = i(seed, null, t, []), l = seed.length; l--;) (s = o[l]) && (seed[l] = !(matches[l] = s))
                    }) : function (s, context, o) {
                        return input[0] = s, i(input, null, o, t), !t.pop()
                    }
                }), has: markFunction(function (selector) {
                    return function (t) {
                        return Sizzle(selector, t).length > 0
                    }
                }), contains: markFunction(function (text) {
                    return function (t) {
                        return (t.textContent || t.innerText || l(t)).indexOf(text) > -1
                    }
                }), lang: markFunction(function (lang) {
                    return J.test(lang || "") || Sizzle.error("unsupported lang: " + lang), lang = lang.replace(ie, se).toLowerCase(), function (t) {
                        var i;
                        do {
                            if (i = g ? t.lang : t.getAttribute("xml:lang") || t.getAttribute("lang")) return (i = i.toLowerCase()) === lang || 0 === i.indexOf(lang + "-")
                        } while ((t = t.parentNode) && 1 === t.nodeType);
                        return !1
                    }
                }), target: function (t) {
                    var hash = window.location && window.location.hash;
                    return hash && hash.slice(1) === t.id
                }, root: function (t) {
                    return t === _
                }, focus: function (t) {
                    return t === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(t.type || t.href || ~t.tabIndex)
                }, enabled: function (t) {
                    return !1 === t.disabled
                }, disabled: function (t) {
                    return !0 === t.disabled
                }, checked: function (t) {
                    var nodeName = t.nodeName.toLowerCase();
                    return "input" === nodeName && !!t.checked || "option" === nodeName && !!t.selected
                }, selected: function (t) {
                    if (t.parentNode) t.parentNode.selectedIndex;
                    return !0 === t.selected
                }, empty: function (t) {
                    for (t = t.firstChild; t; t = t.nextSibling) if (t.nodeName > "@" || 3 === t.nodeType || 4 === t.nodeType) return !1;
                    return !0
                }, parent: function (t) {
                    return !o.pseudos.empty(t)
                }, header: function (t) {
                    return ee.test(t.nodeName)
                }, input: function (t) {
                    return Z.test(t.nodeName)
                }, button: function (t) {
                    var name = t.nodeName.toLowerCase();
                    return "input" === name && "button" === t.type || "button" === name
                }, text: function (t) {
                    var i;
                    return "input" === t.nodeName.toLowerCase() && "text" === t.type && (null == (i = t.getAttribute("type")) || i.toLowerCase() === t.type)
                }, first: createPositionalPseudo(function () {
                    return [0]
                }), last: createPositionalPseudo(function (t, length) {
                    return [length - 1]
                }), eq: createPositionalPseudo(function (t, length, i) {
                    return [i < 0 ? i + length : i]
                }), even: createPositionalPseudo(function (t, length) {
                    for (var i = 0; i < length; i += 2) t.push(i);
                    return t
                }), odd: createPositionalPseudo(function (t, length) {
                    for (var i = 1; i < length; i += 2) t.push(i);
                    return t
                }), lt: createPositionalPseudo(function (t, length, i) {
                    for (var s = i < 0 ? i + length : i; --s >= 0;) t.push(s);
                    return t
                }), gt: createPositionalPseudo(function (t, length, i) {
                    for (var s = i < 0 ? i + length : i; ++s < length;) t.push(s);
                    return t
                })
            }
        };
        for (t in{
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) o.pseudos[t] = function createInputPseudo(type) {
            return function (t) {
                return "input" === t.nodeName.toLowerCase() && t.type === type
            }
        }(t);
        for (t in{submit: !0, reset: !0}) o.pseudos[t] = function createButtonPseudo(type) {
            return function (t) {
                var name = t.nodeName.toLowerCase();
                return ("input" === name || "button" === name) && t.type === type
            }
        }(t);
        compile = Sizzle.compile = function (selector, group) {
            var t, i = [], s = [], o = R[selector + " "];
            if (!o) {
                for (group || (group = tokenize(selector)), t = group.length; t--;) (o = matcherFromTokens(group[t]))[expando] ? i.push(o) : s.push(o);
                o = R(selector, matcherFromGroupMatchers(s, i))
            }
            return o
        }, o.pseudos.nth = o.pseudos.eq, setFilters.prototype = o.filters = o.pseudos, o.setFilters = new setFilters, i.sortStable = expando.split("").sort(P).join("") === expando, m(), [0, 0].sort(P), i.detectDuplicates = D, I.find = Sizzle, I.expr = Sizzle.selectors, I.expr[":"] = I.expr.pseudos, I.unique = Sizzle.uniqueSort, I.text = Sizzle.getText, I.isXMLDoc = Sizzle.isXML, I.contains = Sizzle.contains
    }(window);
    var q = {};
    I.Callbacks = function (options) {
        var t, memory, i, s, o, l, list = [],
            stack = !(options = "string" == typeof options ? q[options] || createOptions(options) : I.extend({}, options)).once && [],
            u = function (data) {
                for (memory = options.memory && data, i = !0, o = l || 0, l = 0, s = list.length, t = !0; list && o < s; o++) if (!1 === list[o].apply(data[0], data[1]) && options.stopOnFalse) {
                    memory = !1;
                    break
                }
                t = !1, list && (stack ? stack.length && u(stack.shift()) : memory ? list = [] : self.disable())
            }, self = {
                add: function () {
                    if (list) {
                        var start = list.length;
                        !function add(t) {
                            I.each(t, function (t, i) {
                                var type = I.type(i);
                                "function" === type ? options.unique && self.has(i) || list.push(i) : i && i.length && "string" !== type && add(i)
                            })
                        }(arguments), t ? s = list.length : memory && (l = start, u(memory))
                    }
                    return this
                }, remove: function () {
                    return list && I.each(arguments, function (i, l) {
                        for (var index; (index = I.inArray(l, list, index)) > -1;) list.splice(index, 1), t && (index <= s && s--, index <= o && o--)
                    }), this
                }, has: function (t) {
                    return t ? I.inArray(t, list) > -1 : !(!list || !list.length)
                }, empty: function () {
                    return list = [], s = 0, this
                }, disable: function () {
                    return list = stack = memory = undefined, this
                }, disabled: function () {
                    return !list
                }, lock: function () {
                    return stack = undefined, memory || self.disable(), this
                }, locked: function () {
                    return !stack
                }, fireWith: function (context, s) {
                    return s = s || [], s = [context, s.slice ? s.slice() : s], !list || i && !stack || (t ? stack.push(s) : u(s)), this
                }, fire: function () {
                    return self.fireWith(this, arguments), this
                }, fired: function () {
                    return !!i
                }
            };
        return self
    }, I.extend({
        Deferred: function (t) {
            var i = [["resolve", "done", I.Callbacks("once memory"), "resolved"], ["reject", "fail", I.Callbacks("once memory"), "rejected"], ["notify", "progress", I.Callbacks("memory")]],
                state = "pending", s = {
                    state: function () {
                        return state
                    }, always: function () {
                        return o.done(arguments).fail(arguments), this
                    }, then: function () {
                        var t = arguments;
                        return I.Deferred(function (l) {
                            I.each(i, function (i, u) {
                                var action = u[0], h = I.isFunction(t[i]) && t[i];
                                o[u[1]](function () {
                                    var t = h && h.apply(this, arguments);
                                    t && I.isFunction(t.promise) ? t.promise().done(l.resolve).fail(l.reject).progress(l.notify) : l[action + "With"](this === s ? l.promise() : this, h ? [t] : arguments)
                                })
                            }), t = null
                        }).promise()
                    }, promise: function (t) {
                        return null != t ? I.extend(t, s) : s
                    }
                }, o = {};
            return s.pipe = s.then, I.each(i, function (t, l) {
                var list = l[2], u = l[3];
                s[l[1]] = list.add, u && list.add(function () {
                    state = u
                }, i[1 ^ t][2].disable, i[2][2].lock), o[l[0]] = function () {
                    return o[l[0] + "With"](this === o ? s : this, arguments), this
                }, o[l[0] + "With"] = list.fireWith
            }), s.promise(o), t && t.call(o, o), o
        }, when: function (t) {
            var i, s, o, l = 0, u = g.call(arguments), length = u.length,
                h = 1 !== length || t && I.isFunction(t.promise) ? length : 0, p = 1 === h ? t : I.Deferred(),
                m = function (t, s, values) {
                    return function (value) {
                        s[t] = this, values[t] = arguments.length > 1 ? g.call(arguments) : value, values === i ? p.notifyWith(s, values) : --h || p.resolveWith(s, values)
                    }
                };
            if (length > 1) for (i = new Array(length), s = new Array(length), o = new Array(length); l < length; l++) u[l] && I.isFunction(u[l].promise) ? u[l].promise().done(m(l, o, u)).fail(p.reject).progress(m(l, s, i)) : --h;
            return h || p.resolveWith(o, u), p.promise()
        }
    }), I.support = function (t) {
        var all, a, input, select, i, o, l, isSupported, u, h = document.createElement("div");
        if (h.setAttribute("className", "t"), h.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", all = h.getElementsByTagName("*") || [], !(a = h.getElementsByTagName("a")[0]) || !a.style || !all.length) return t;
        o = (select = document.createElement("select")).appendChild(document.createElement("option")), input = h.getElementsByTagName("input")[0], a.style.cssText = "top:1px;float:left;opacity:.5", t.getSetAttribute = "t" !== h.className, t.leadingWhitespace = 3 === h.firstChild.nodeType, t.tbody = !h.getElementsByTagName("tbody").length, t.htmlSerialize = !!h.getElementsByTagName("link").length, t.style = /top/.test(a.getAttribute("style")), t.hrefNormalized = "/a" === a.getAttribute("href"), t.opacity = /^0.5/.test(a.style.opacity), t.cssFloat = !!a.style.cssFloat, t.checkOn = !!input.value, t.optSelected = o.selected, t.enctype = !!document.createElement("form").enctype, t.html5Clone = "<:nav></:nav>" !== document.createElement("nav").cloneNode(!0).outerHTML, t.inlineBlockNeedsLayout = !1, t.shrinkWrapBlocks = !1, t.pixelPosition = !1, t.deleteExpando = !0, t.noCloneEvent = !0, t.reliableMarginRight = !0, t.boxSizingReliable = !0, input.checked = !0, t.noCloneChecked = input.cloneNode(!0).checked, select.disabled = !0, t.optDisabled = !o.disabled;
        try {
            delete h.test
        } catch (i) {
            t.deleteExpando = !1
        }
        (input = document.createElement("input")).setAttribute("value", ""), t.input = "" === input.getAttribute("value"), input.value = "t", input.setAttribute("type", "radio"), t.radioValue = "t" === input.value, input.setAttribute("checked", "t"), input.setAttribute("name", "t"), (i = document.createDocumentFragment()).appendChild(input), t.appendChecked = input.checked, t.checkClone = i.cloneNode(!0).cloneNode(!0).lastChild.checked, h.attachEvent && (h.attachEvent("onclick", function () {
            t.noCloneEvent = !1
        }), h.cloneNode(!0).click());
        for (u in{
            submit: !0,
            change: !0,
            focusin: !0
        }) h.setAttribute(l = "on" + u, "t"), t[u + "Bubbles"] = l in window || !1 === h.attributes[l].expando;
        h.style.backgroundClip = "content-box", h.cloneNode(!0).style.backgroundClip = "", t.clearCloneStyle = "content-box" === h.style.backgroundClip;
        for (u in I(t)) break;
        return t.ownLast = "0" !== u, I(function () {
            var i, o, l,
                u = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;",
                body = document.getElementsByTagName("body")[0];
            body && ((i = document.createElement("div")).style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",
                body.appendChild(i).appendChild(h), h.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", (l = h.getElementsByTagName("td"))[0].style.cssText = "padding:0;margin:0;border:0;display:none", isSupported = 0 === l[0].offsetHeight, l[0].style.display = "", l[1].style.display = "none", t.reliableHiddenOffsets = isSupported && 0 === l[0].offsetHeight, h.innerHTML = "", h.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;", I.swap(body, null != body.style.zoom ? {zoom: 1} : {}, function () {
                t.boxSizing = 4 === h.offsetWidth
            }), window.getComputedStyle && (t.pixelPosition = "1%" !== (window.getComputedStyle(h, null) || {}).top, t.boxSizingReliable = "4px" === (window.getComputedStyle(h, null) || {width: "4px"}).width, (o = h.appendChild(document.createElement("div"))).style.cssText = h.style.cssText = u, o.style.marginRight = o.style.width = "0", h.style.width = "1px", t.reliableMarginRight = !parseFloat((window.getComputedStyle(o, null) || {}).marginRight)), typeof h.style.zoom !== s && (h.innerHTML = "", h.style.cssText = u + "width:1px;padding:1px;display:inline;zoom:1", t.inlineBlockNeedsLayout = 3 === h.offsetWidth, h.style.display = "block", h.innerHTML = "<div></div>", h.firstChild.style.width = "5px", t.shrinkWrapBlocks = 3 !== h.offsetWidth, t.inlineBlockNeedsLayout && (body.style.zoom = 1)), body.removeChild(i), i = h = l = o = null)
        }), all = select = i = o = a = input = null, t
    }({});
    var G = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, H = /([A-Z])/g;
    I.extend({
        cache: {},
        noData: {applet: !0, embed: !0, object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},
        hasData: function (t) {
            return !!(t = t.nodeType ? I.cache[t[I.expando]] : t[I.expando]) && !isEmptyDataObject(t)
        },
        data: function (t, name, data) {
            return internalData(t, name, data)
        },
        removeData: function (t, name) {
            return internalRemoveData(t, name)
        },
        _data: function (t, name, data) {
            return internalData(t, name, data, !0)
        },
        _removeData: function (t, name) {
            return internalRemoveData(t, name, !0)
        },
        acceptData: function (t) {
            if (t.nodeType && 1 !== t.nodeType && 9 !== t.nodeType) return !1;
            var i = t.nodeName && I.noData[t.nodeName.toLowerCase()];
            return !i || !0 !== i && t.getAttribute("classid") === i
        }
    }), I.fn.extend({
        data: function (key, value) {
            var t, name, data = null, i = 0, s = this[0];
            if (key === undefined) {
                if (this.length && (data = I.data(s), 1 === s.nodeType && !I._data(s, "parsedAttrs"))) {
                    for (t = s.attributes; i < t.length; i++) 0 === (name = t[i].name).indexOf("data-") && dataAttr(s, name = I.camelCase(name.slice(5)), data[name]);
                    I._data(s, "parsedAttrs", !0)
                }
                return data
            }
            return "object" == typeof key ? this.each(function () {
                I.data(this, key)
            }) : arguments.length > 1 ? this.each(function () {
                I.data(this, key, value)
            }) : s ? dataAttr(s, key, I.data(s, key)) : null
        }, removeData: function (key) {
            return this.each(function () {
                I.removeData(this, key)
            })
        }
    }), I.extend({
        queue: function (t, type, data) {
            var i;
            if (t) return type = (type || "fx") + "queue", i = I._data(t, type), data && (!i || I.isArray(data) ? i = I._data(t, type, I.makeArray(data)) : i.push(data)), i || []
        }, dequeue: function (t, type) {
            type = type || "fx";
            var i = I.queue(t, type), s = i.length, o = i.shift(), l = I._queueHooks(t, type);
            "inprogress" === o && (o = i.shift(), s--), o && ("fx" === type && i.unshift("inprogress"), delete l.stop, o.call(t, function () {
                I.dequeue(t, type)
            }, l)), !s && l && l.empty.fire()
        }, _queueHooks: function (t, type) {
            var key = type + "queueHooks";
            return I._data(t, key) || I._data(t, key, {
                empty: I.Callbacks("once memory").add(function () {
                    I._removeData(t, type + "queue"), I._removeData(t, key)
                })
            })
        }
    }), I.fn.extend({
        queue: function (type, data) {
            var t = 2;
            return "string" != typeof type && (data = type, type = "fx", t--), arguments.length < t ? I.queue(this[0], type) : data === undefined ? this : this.each(function () {
                var t = I.queue(this, type, data);
                I._queueHooks(this, type), "fx" === type && "inprogress" !== t[0] && I.dequeue(this, type)
            })
        }, dequeue: function (type) {
            return this.each(function () {
                I.dequeue(this, type)
            })
        }, delay: function (time, type) {
            return time = I.fx ? I.fx.speeds[time] || time : time, type = type || "fx", this.queue(type, function (next, t) {
                var timeout = setTimeout(next, time);
                t.stop = function () {
                    clearTimeout(timeout)
                }
            })
        }, clearQueue: function (type) {
            return this.queue(type || "fx", [])
        }, promise: function (type, t) {
            var i, count = 1, defer = I.Deferred(), elements = this, s = this.length, resolve = function () {
                --count || defer.resolveWith(elements, [elements])
            };
            for ("string" != typeof type && (t = type, type = undefined), type = type || "fx"; s--;) (i = I._data(elements[s], type + "queueHooks")) && i.empty && (count++, i.empty.add(resolve));
            return resolve(), defer.promise(t)
        }
    });
    var j, Y, K = /[\t\r\n\f]/g, J = /\r/g, W = /^(?:input|select|textarea|button|object)$/i, $ = /^(?:a|area)$/i,
        X = /^(?:checked|selected)$/i, Z = I.support.getSetAttribute, ee = I.support.input;
    I.fn.extend({
        attr: function (name, value) {
            return I.access(this, I.attr, name, value, arguments.length > 1)
        }, removeAttr: function (name) {
            return this.each(function () {
                I.removeAttr(this, name)
            })
        }, prop: function (name, value) {
            return I.access(this, I.prop, name, value, arguments.length > 1)
        }, removeProp: function (name) {
            return name = I.propFix[name] || name, this.each(function () {
                try {
                    this[name] = undefined, delete this[name]
                } catch (t) {
                }
            })
        }, addClass: function (value) {
            var t, i, s, o, l, u = 0, h = this.length, p = "string" == typeof value && value;
            if (I.isFunction(value)) return this.each(function (t) {
                I(this).addClass(value.call(this, t, this.className))
            });
            if (p) for (t = (value || "").match(A) || []; u < h; u++) if (i = this[u], s = 1 === i.nodeType && (i.className ? (" " + i.className + " ").replace(K, " ") : " ")) {
                for (l = 0; o = t[l++];) s.indexOf(" " + o + " ") < 0 && (s += o + " ");
                i.className = I.trim(s)
            }
            return this
        }, removeClass: function (value) {
            var t, i, s, o, l, u = 0, h = this.length, p = 0 === arguments.length || "string" == typeof value && value;
            if (I.isFunction(value)) return this.each(function (t) {
                I(this).removeClass(value.call(this, t, this.className))
            });
            if (p) for (t = (value || "").match(A) || []; u < h; u++) if (i = this[u], s = 1 === i.nodeType && (i.className ? (" " + i.className + " ").replace(K, " ") : "")) {
                for (l = 0; o = t[l++];) for (; s.indexOf(" " + o + " ") >= 0;) s = s.replace(" " + o + " ", " ");
                i.className = value ? I.trim(s) : ""
            }
            return this
        }, toggleClass: function (value, t) {
            var type = typeof value, i = "boolean" == typeof t;
            return I.isFunction(value) ? this.each(function (i) {
                I(this).toggleClass(value.call(this, i, this.className, t), t)
            }) : this.each(function () {
                if ("string" === type) for (var className, o = 0, self = I(this), state = t, l = value.match(A) || []; className = l[o++];) self[(state = i ? state : !self.hasClass(className)) ? "addClass" : "removeClass"](className); else type !== s && "boolean" !== type || (this.className && I._data(this, "__className__", this.className), this.className = this.className || !1 === value ? "" : I._data(this, "__className__") || "")
            })
        }, hasClass: function (selector) {
            for (var className = " " + selector + " ", t = 0, i = this.length; t < i; t++) if (1 === this[t].nodeType && (" " + this[t].className + " ").replace(K, " ").indexOf(className) >= 0) return !0;
            return !1
        }, val: function (value) {
            var t, i, s, o = this[0];
            {
                if (arguments.length) return s = I.isFunction(value), this.each(function (t) {
                    var o;
                    1 === this.nodeType && (null == (o = s ? value.call(this, t, I(this).val()) : value) ? o = "" : "number" == typeof o ? o += "" : I.isArray(o) && (o = I.map(o, function (value) {
                        return null == value ? "" : value + ""
                    })), (i = I.valHooks[this.type] || I.valHooks[this.nodeName.toLowerCase()]) && "set" in i && i.set(this, o, "value") !== undefined || (this.value = o))
                });
                if (o) return (i = I.valHooks[o.type] || I.valHooks[o.nodeName.toLowerCase()]) && "get" in i && (t = i.get(o, "value")) !== undefined ? t : "string" == typeof(t = o.value) ? t.replace(J, "") : null == t ? "" : t
            }
        }
    }), I.extend({
        valHooks: {
            option: {
                get: function (t) {
                    var i = I.find.attr(t, "value");
                    return null != i ? i : t.text
                }
            }, select: {
                get: function (t) {
                    for (var value, i, options = t.options, index = t.selectedIndex, s = "select-one" === t.type || index < 0, values = s ? null : [], max = s ? index + 1 : options.length, o = index < 0 ? max : s ? index : 0; o < max; o++) if (((i = options[o]).selected || o === index) && (I.support.optDisabled ? !i.disabled : null === i.getAttribute("disabled")) && (!i.parentNode.disabled || !I.nodeName(i.parentNode, "optgroup"))) {
                        if (value = I(i).val(), s) return value;
                        values.push(value)
                    }
                    return values
                }, set: function (t, value) {
                    for (var i, s, options = t.options, values = I.makeArray(value), o = options.length; o--;) ((s = options[o]).selected = I.inArray(I(s).val(), values) >= 0) && (i = !0);
                    return i || (t.selectedIndex = -1), values
                }
            }
        }, attr: function (t, name, value) {
            var i, o, l = t.nodeType
            ;
            if (t && 3 !== l && 8 !== l && 2 !== l) return typeof t.getAttribute === s ? I.prop(t, name, value) : (1 === l && I.isXMLDoc(t) || (name = name.toLowerCase(), i = I.attrHooks[name] || (I.expr.match.bool.test(name) ? Y : j)), value === undefined ? i && "get" in i && null !== (o = i.get(t, name)) ? o : null == (o = I.find.attr(t, name)) ? undefined : o : null !== value ? i && "set" in i && (o = i.set(t, value, name)) !== undefined ? o : (t.setAttribute(name, value + ""), value) : void I.removeAttr(t, name))
        }, removeAttr: function (t, value) {
            var name, i, s = 0, o = value && value.match(A);
            if (o && 1 === t.nodeType) for (; name = o[s++];) i = I.propFix[name] || name, I.expr.match.bool.test(name) ? ee && Z || !X.test(name) ? t[i] = !1 : t[I.camelCase("default-" + name)] = t[i] = !1 : I.attr(t, name, ""), t.removeAttribute(Z ? name : i)
        }, attrHooks: {
            type: {
                set: function (t, value) {
                    if (!I.support.radioValue && "radio" === value && I.nodeName(t, "input")) {
                        var i = t.value;
                        return t.setAttribute("type", value), i && (t.value = i), value
                    }
                }
            }
        }, propFix: {for: "htmlFor", class: "className"}, prop: function (t, name, value) {
            var i, s, o = t.nodeType;
            if (t && 3 !== o && 8 !== o && 2 !== o) return (1 !== o || !I.isXMLDoc(t)) && (name = I.propFix[name] || name, s = I.propHooks[name]), value !== undefined ? s && "set" in s && (i = s.set(t, value, name)) !== undefined ? i : t[name] = value : s && "get" in s && null !== (i = s.get(t, name)) ? i : t[name]
        }, propHooks: {
            tabIndex: {
                get: function (t) {
                    var i = I.find.attr(t, "tabindex");
                    return i ? parseInt(i, 10) : W.test(t.nodeName) || $.test(t.nodeName) && t.href ? 0 : -1
                }
            }
        }
    }), Y = {
        set: function (t, value, name) {
            return !1 === value ? I.removeAttr(t, name) : ee && Z || !X.test(name) ? t.setAttribute(!Z && I.propFix[name] || name, name) : t[I.camelCase("default-" + name)] = t[name] = !0, name
        }
    }, I.each(I.expr.match.bool.source.match(/\w+/g), function (t, name) {
        var i = I.expr.attrHandle[name] || I.find.attr;
        I.expr.attrHandle[name] = ee && Z || !X.test(name) ? function (t, name, s) {
            var o = I.expr.attrHandle[name],
                l = s ? undefined : (I.expr.attrHandle[name] = undefined) != i(t, name, s) ? name.toLowerCase() : null;
            return I.expr.attrHandle[name] = o, l
        } : function (t, name, i) {
            return i ? undefined : t[I.camelCase("default-" + name)] ? name.toLowerCase() : null
        }
    }), ee && Z || (I.attrHooks.value = {
        set: function (t, value, name) {
            if (!I.nodeName(t, "input")) return j && j.set(t, value, name);
            t.defaultValue = value
        }
    }), Z || (j = {
        set: function (t, value, name) {
            var i = t.getAttributeNode(name);
            return i || t.setAttributeNode(i = t.ownerDocument.createAttribute(name)), i.value = value += "", "value" === name || value === t.getAttribute(name) ? value : undefined
        }
    }, I.expr.attrHandle.id = I.expr.attrHandle.name = I.expr.attrHandle.coords = function (t, name, i) {
        var s;
        return i ? undefined : (s = t.getAttributeNode(name)) && "" !== s.value ? s.value : null
    }, I.valHooks.button = {
        get: function (t, name) {
            var i = t.getAttributeNode(name);
            return i && i.specified ? i.value : undefined
        }, set: j.set
    }, I.attrHooks.contenteditable = {
        set: function (t, value, name) {
            j.set(t, "" !== value && value, name)
        }
    }, I.each(["width", "height"], function (t, name) {
        I.attrHooks[name] = {
            set: function (t, value) {
                if ("" === value) return t.setAttribute(name, "auto"), value
            }
        }
    })), I.support.hrefNormalized || I.each(["href", "src"], function (t, name) {
        I.propHooks[name] = {
            get: function (t) {
                return t.getAttribute(name, 4)
            }
        }
    }), I.support.style || (I.attrHooks.style = {
        get: function (t) {
            return t.style.cssText || undefined
        }, set: function (t, value) {
            return t.style.cssText = value + ""
        }
    }), I.support.optSelected || (I.propHooks.selected = {
        get: function (t) {
            var parent = t.parentNode;
            if (parent) {
                parent.selectedIndex;
                parent.parentNode && parent.parentNode.selectedIndex
            }
            return null
        }
    }), I.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
        I.propFix[this.toLowerCase()] = this
    }), I.support.enctype || (I.propFix.enctype = "encoding"), I.each(["radio", "checkbox"], function () {
        I.valHooks[this] = {
            set: function (t, value) {
                if (I.isArray(value)) return t.checked = I.inArray(I(t).val(), value) >= 0
            }
        }, I.support.checkOn || (I.valHooks[this].get = function (t) {
            return null === t.getAttribute("value") ? "on" : t.value
        })
    });
    var te = /^(?:input|select|textarea)$/i, ie = /^key/, se = /^(?:mouse|contextmenu)|click/,
        ne = /^(?:focusinfocus|focusoutblur)$/, oe = /^([^.]*)(?:\.(.+)|)$/;
    I.event = {
        global: {},
        add: function (t, types, i, data, selector) {
            var o, l, u, h, p, m, _, g, type, namespaces, S, T = I._data(t);
            if (T) {
                for (i.handler && (i = (h = i).handler, selector = h.selector), i.guid || (i.guid = I.guid++), (l = T.events) || (l = T.events = {}), (m = T.handle) || ((m = T.handle = function (e) {
                    return typeof I === s || e && I.event.triggered === e.type ? undefined : I.event.dispatch.apply(m.elem, arguments)
                }).elem = t), u = (types = (types || "").match(A) || [""]).length; u--;) type = S = (o = oe.exec(types[u]) || [])[1], namespaces = (o[2] || "").split(".").sort(), type && (p = I.event.special[type] || {}, type = (selector ? p.delegateType : p.bindType) || type, p = I.event.special[type] || {}, _ = I.extend({
                    type: type,
                    origType: S,
                    data: data,
                    handler: i,
                    guid: i.guid,
                    selector: selector,
                    needsContext: selector && I.expr.match.needsContext.test(selector),
                    namespace: namespaces.join(".")
                }, h), (g = l[type]) || ((g = l[type] = []).delegateCount = 0, p.setup && !1 !== p.setup.call(t, data, namespaces, m) || (t.addEventListener ? t.addEventListener(type, m, !1) : t.attachEvent && t.attachEvent("on" + type, m))), p.add && (p.add.call(t, _), _.handler.guid || (_.handler.guid = i.guid)), selector ? g.splice(g.delegateCount++, 0, _) : g.push(_), I.event.global[type] = !0);
                t = null
            }
        },
        remove: function (t, types, i, selector, s) {
            var o, l, u, h, p, m, _, g, type, namespaces, S, T = I.hasData(t) && I._data(t);
            if (T && (m = T.events)) {
                for (p = (types = (types || "").match(A) || [""]).length; p--;) if (u = oe.exec(types[p]) || [], type = S = u[1], namespaces = (u[2] || "").split(".").sort(), type) {
                    for (_ = I.event.special[type] || {}, g = m[type = (selector ? _.delegateType : _.bindType) || type] || [], u = u[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"), h = o = g.length; o--;) l = g[o], !s && S !== l.origType || i && i.guid !== l.guid || u && !u.test(l.namespace) || selector && selector !== l.selector && ("**" !== selector || !l.selector) || (g.splice(o, 1), l.selector && g.delegateCount--, _.remove && _.remove.call(t, l));
                    h && !g.length && (_.teardown && !1 !== _.teardown.call(t, namespaces, T.handle) || I.removeEvent(t, type, T.handle), delete m[type])
                } else for (type in m) I.event.remove(t, type + types[p], i, selector, !0);
                I.isEmptyObject(m) && (delete T.handle, I._removeData(t, "events"))
            }
        },
        trigger: function (event, data, t, i) {
            var s, o, l, u, h, p, m, _ = [t || document], type = v.call(event, "type") ? event.type : event,
                namespaces = v.call(event, "namespace") ? event.namespace.split(".") : [];
            if (l = p = t = t || document, 3 !== t.nodeType && 8 !== t.nodeType && !ne.test(type + I.event.triggered) && (type.indexOf(".") >= 0 && (type = (namespaces = type.split(".")).shift(), namespaces.sort()), o = type.indexOf(":") < 0 && "on" + type, event = event[I.expando] ? event : new I.Event(type, "object" == typeof event && event), event.isTrigger = i ? 2 : 3, event.namespace = namespaces.join("."), event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, event.result = undefined, event.target || (event.target = t), data = null == data ? [event] : I.makeArray(data, [event]), h = I.event.special[type] || {}, i || !h.trigger || !1 !== h.trigger.apply(t, data))) {
                if (!i && !h.noBubble && !I.isWindow(t)) {
                    for (u = h.delegateType || type, ne.test(u + type) || (l = l.parentNode); l; l = l.parentNode) _.push(l), p = l;
                    p === (t.ownerDocument || document) && _.push(p.defaultView || p.parentWindow || window)
                }
                for (m = 0; (l = _[m++]) && !event.isPropagationStopped();) event.type = m > 1 ? u : h.bindType || type, (s = (I._data(l, "events") || {})[event.type] && I._data(l, "handle")) && s.apply(l, data), (s = o && l[o]) && I.acceptData(l) && s.apply && !1 === s.apply(l, data) && event.preventDefault();
                if (event.type = type, !i && !event.isDefaultPrevented() && (!h._default || !1 === h._default.apply(_.pop(), data)) && I.acceptData(t) && o && t[type] && !I.isWindow(t)) {
                    (p = t[o]) && (t[o] = null), I.event.triggered = type;
                    try {
                        t[type]()
                    } catch (t) {
                    }
                    I.event.triggered = undefined, p && (t[o] = p)
                }
                return event.result
            }
        },
        dispatch: function (event) {
            event = I.event.fix(event);
            var t, i, s, o, l, u = [], h = g.call(arguments), p = (I._data(this, "events") || {})[event.type] || [],
                m = I.event.special[event.type] || {};
            if (h[0] = event, event.delegateTarget = this, !m.preDispatch || !1 !== m.preDispatch.call(this, event)) {
                for (u = I.event.handlers.call(this, event, p), t = 0; (o = u[t++]) && !event.isPropagationStopped();) for (event.currentTarget = o.elem,
                                                                                                                                l = 0; (s = o.handlers[l++]) && !event.isImmediatePropagationStopped();) event.namespace_re && !event.namespace_re.test(s.namespace) || (event.handleObj = s, event.data = s.data, (i = ((I.event.special[s.origType] || {}).handle || s.handler).apply(o.elem, h)) !== undefined && !1 === (event.result = i) && (event.preventDefault(), event.stopPropagation()));
                return m.postDispatch && m.postDispatch.call(this, event), event.result
            }
        },
        handlers: function (event, t) {
            var i, s, matches, o, l = [], u = t.delegateCount, h = event.target;
            if (u && h.nodeType && (!event.button || "click" !== event.type)) for (; h != this; h = h.parentNode || this) if (1 === h.nodeType && (!0 !== h.disabled || "click" !== event.type)) {
                for (matches = [], o = 0; o < u; o++) matches[i = (s = t[o]).selector + " "] === undefined && (matches[i] = s.needsContext ? I(i, this).index(h) >= 0 : I.find(i, this, null, [h]).length), matches[i] && matches.push(s);
                matches.length && l.push({elem: h, handlers: matches})
            }
            return u < t.length && l.push({elem: this, handlers: t.slice(u)}), l
        },
        fix: function (event) {
            if (event[I.expando]) return event;
            var t, i, s, type = event.type, o = event, l = this.fixHooks[type];
            for (l || (this.fixHooks[type] = l = se.test(type) ? this.mouseHooks : ie.test(type) ? this.keyHooks : {}), s = l.props ? this.props.concat(l.props) : this.props, event = new I.Event(o), t = s.length; t--;) event[i = s[t]] = o[i];
            return event.target || (event.target = o.srcElement || document), 3 === event.target.nodeType && (event.target = event.target.parentNode), event.metaKey = !!event.metaKey, l.filter ? l.filter(event, o) : event
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "), filter: function (event, t) {
                return null == event.which && (event.which = null != t.charCode ? t.charCode : t.keyCode), event
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function (event, t) {
                var body, i, s, button = t.button, fromElement = t.fromElement;
                return null == event.pageX && null != t.clientX && (s = (i = event.target.ownerDocument || document).documentElement, body = i.body, event.pageX = t.clientX + (s && s.scrollLeft || body && body.scrollLeft || 0) - (s && s.clientLeft || body && body.clientLeft || 0), event.pageY = t.clientY + (s && s.scrollTop || body && body.scrollTop || 0) - (s && s.clientTop || body && body.clientTop || 0)), !event.relatedTarget && fromElement && (event.relatedTarget = fromElement === event.target ? t.toElement : fromElement), event.which || button === undefined || (event.which = 1 & button ? 1 : 2 & button ? 3 : 4 & button ? 2 : 0), event
            }
        },
        special: {
            load: {noBubble: !0}, focus: {
                trigger: function () {
                    if (this !== safeActiveElement() && this.focus) try {
                        return this.focus(), !1
                    } catch (t) {
                    }
                }, delegateType: "focusin"
            }, blur: {
                trigger: function () {
                    if (this === safeActiveElement() && this.blur) return this.blur(), !1
                }, delegateType: "focusout"
            }, click: {
                trigger: function () {
                    if (I.nodeName(this, "input") && "checkbox" === this.type && this.click) return this.click(), !1
                }, _default: function (event) {
                    return I.nodeName(event.target, "a")
                }
            }, beforeunload: {
                postDispatch: function (event) {
                    event.result !== undefined && (event.originalEvent.returnValue = event.result)
                }
            }
        },
        simulate: function (type, t, event, i) {
            var e = I.extend(new I.Event, event, {type: type, isSimulated: !0, originalEvent: {}});
            i ? I.event.trigger(e, null, t) : I.event.dispatch.call(t, e), e.isDefaultPrevented() && event.preventDefault()
        }
    }, I.removeEvent = document.removeEventListener ? function (t, type, i) {
        t.removeEventListener && t.removeEventListener(type, i, !1)
    } : function (t, type, i) {
        var name = "on" + type;
        t.detachEvent && (typeof t[name] === s && (t[name] = null), t.detachEvent(name, i))
    }, I.Event = function (src, t) {
        if (!(this instanceof I.Event)) return new I.Event(src, t);
        src && src.type ? (this.originalEvent = src, this.type = src.type, this.isDefaultPrevented = src.defaultPrevented || !1 === src.returnValue || src.getPreventDefault && src.getPreventDefault() ? returnTrue : returnFalse) : this.type = src, t && I.extend(this, t), this.timeStamp = src && src.timeStamp || I.now(), this[I.expando] = !0
    }, I.Event.prototype = {
        isDefaultPrevented: returnFalse, isPropagationStopped: returnFalse, isImmediatePropagationStopped: returnFalse,
        preventDefault: function () {
            var e = this.originalEvent;
            this.isDefaultPrevented = returnTrue, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1)
        }, stopPropagation: function () {
            var e = this.originalEvent;
            this.isPropagationStopped = returnTrue, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0)
        }, stopImmediatePropagation: function () {
            this.isImmediatePropagationStopped = returnTrue, this.stopPropagation()
        }
    }, I.each({mouseenter: "mouseover", mouseleave: "mouseout"}, function (t, i) {
        I.event.special[t] = {
            delegateType: i, bindType: i, handle: function (event) {
                var t, target = this, s = event.relatedTarget, o = event.handleObj;
                return s && (s === target || I.contains(target, s)) || (event.type = o.origType, t = o.handler.apply(this, arguments), event.type = i), t
            }
        }
    }), I.support.submitBubbles || (I.event.special.submit = {
        setup: function () {
            if (I.nodeName(this, "form")) return !1;
            I.event.add(this, "click._submit keypress._submit", function (e) {
                var t = e.target, form = I.nodeName(t, "input") || I.nodeName(t, "button") ? t.form : undefined;
                form && !I._data(form, "submitBubbles") && (I.event.add(form, "submit._submit", function (event) {
                    event._submit_bubble = !0
                }), I._data(form, "submitBubbles", !0))
            })
        }, postDispatch: function (event) {
            event._submit_bubble && (delete event._submit_bubble, this.parentNode && !event.isTrigger && I.event.simulate("submit", this.parentNode, event, !0))
        }, teardown: function () {
            if (I.nodeName(this, "form")) return !1;
            I.event.remove(this, "._submit")
        }
    }), I.support.changeBubbles || (I.event.special.change = {
        setup: function () {
            if (te.test(this.nodeName)) return "checkbox" !== this.type && "radio" !== this.type || (I.event.add(this, "propertychange._change", function (event) {
                "checked" === event.originalEvent.propertyName && (this._just_changed = !0)
            }), I.event.add(this, "click._change", function (event) {
                this._just_changed && !event.isTrigger && (this._just_changed = !1), I.event.simulate("change", this, event, !0)
            })), !1;
            I.event.add(this, "beforeactivate._change", function (e) {
                var t = e.target;
                te.test(t.nodeName) && !I._data(t, "changeBubbles") && (I.event.add(t, "change._change", function (event) {
                    !this.parentNode || event.isSimulated || event.isTrigger || I.event.simulate("change", this.parentNode, event, !0)
                }), I._data(t, "changeBubbles", !0))
            })
        }, handle: function (event) {
            var t = event.target;
            if (this !== t || event.isSimulated || event.isTrigger || "radio" !== t.type && "checkbox" !== t.type) return event.handleObj.handler.apply(this, arguments)
        }, teardown: function () {
            return I.event.remove(this, "._change"), !te.test(this.nodeName)
        }
    }), I.support.focusinBubbles || I.each({focus: "focusin", blur: "focusout"}, function (t, i) {
        var s = 0, o = function (event) {
            I.event.simulate(i, event.target, I.event.fix(event), !0)
        };
        I.event.special[i] = {
            setup: function () {
                0 == s++ && document.addEventListener(t, o, !0)
            }, teardown: function () {
                0 == --s && document.removeEventListener(t, o, !0)
            }
        }
    }), I.fn.extend({
        on: function (types, selector, data, t, i) {
            var type, s;
            if ("object" == typeof types) {
                "string" != typeof selector && (data = data || selector, selector = undefined);
                for (type in types) this.on(type, selector, data, types[type], i);
                return this
            }
            if (null == data && null == t ? (t = selector, data = selector = undefined) : null == t && ("string" == typeof selector ? (t = data, data = undefined) : (t = data, data = selector, selector = undefined)), !1 === t) t = returnFalse; else if (!t) return this;
            return 1 === i && (s = t, (t = function (event) {
                return I().off(event), s.apply(this, arguments)
            }).guid = s.guid || (s.guid = I.guid++)), this.each(function () {
                I.event.add(this, types, t, data, selector)
            })
        }, one: function (types, selector, data, t) {
            return this.on(types, selector, data, t, 1)
        }, off: function (types, selector, t) {
            var i, type;
            if (types && types.preventDefault && types.handleObj) return i = types.handleObj, I(types.delegateTarget).off(i.namespace ? i.origType + "." + i.namespace : i.origType, i.selector, i.handler), this;
            if ("object" == typeof types) {
                for (type in types) this.off(type, selector, types[type]);
                return this
            }
            return !1 !== selector && "function" != typeof selector || (t = selector, selector = undefined), !1 === t && (t = returnFalse), this.each(function () {
                I.event.remove(this, types, t, selector)
            })
        }, trigger: function (type, data) {
            return this.each(function () {
                I.event.trigger(type, data, this)
            })
        },
        triggerHandler: function (type, data) {
            var t = this[0];
            if (t) return I.event.trigger(type, data, t, !0)
        }
    });
    var ae = /^.[^:#\[\.,]*$/, re = /^(?:parents|prev(?:Until|All))/, le = I.expr.match.needsContext,
        ce = {children: !0, contents: !0, next: !0, prev: !0};
    I.fn.extend({
        find: function (selector) {
            var t, i = [], self = this, s = self.length;
            if ("string" != typeof selector) return this.pushStack(I(selector).filter(function () {
                for (t = 0; t < s; t++) if (I.contains(self[t], this)) return !0
            }));
            for (t = 0; t < s; t++) I.find(selector, self[t], i);
            return i = this.pushStack(s > 1 ? I.unique(i) : i), i.selector = this.selector ? this.selector + " " + selector : selector, i
        }, has: function (target) {
            var t, i = I(target, this), s = i.length;
            return this.filter(function () {
                for (t = 0; t < s; t++) if (I.contains(this, i[t])) return !0
            })
        }, not: function (selector) {
            return this.pushStack(winnow(this, selector || [], !0))
        }, filter: function (selector) {
            return this.pushStack(winnow(this, selector || [], !1))
        }, is: function (selector) {
            return !!winnow(this, "string" == typeof selector && le.test(selector) ? I(selector) : selector || [], !1).length
        }, closest: function (t, context) {
            for (var i, s = 0, o = this.length, l = [], u = le.test(t) || "string" != typeof t ? I(t, context || this.context) : 0; s < o; s++) for (i = this[s]; i && i !== context; i = i.parentNode) if (i.nodeType < 11 && (u ? u.index(i) > -1 : 1 === i.nodeType && I.find.matchesSelector(i, t))) {
                i = l.push(i);
                break
            }
            return this.pushStack(l.length > 1 ? I.unique(l) : l)
        }, index: function (t) {
            return t ? "string" == typeof t ? I.inArray(this[0], I(t)) : I.inArray(t.jquery ? t[0] : t, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        }, add: function (selector, context) {
            var set = "string" == typeof selector ? I(selector, context) : I.makeArray(selector && selector.nodeType ? [selector] : selector),
                all = I.merge(this.get(), set);
            return this.pushStack(I.unique(all))
        }, addBack: function (selector) {
            return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector))
        }
    }), I.each({
        parent: function (t) {
            var parent = t.parentNode;
            return parent && 11 !== parent.nodeType ? parent : null
        }, parents: function (t) {
            return I.dir(t, "parentNode")
        }, parentsUntil: function (t, i, s) {
            return I.dir(t, "parentNode", s)
        }, next: function (t) {
            return sibling(t, "nextSibling")
        }, prev: function (t) {
            return sibling(t, "previousSibling")
        }, nextAll: function (t) {
            return I.dir(t, "nextSibling")
        }, prevAll: function (t) {
            return I.dir(t, "previousSibling")
        }, nextUntil: function (t, i, s) {
            return I.dir(t, "nextSibling", s)
        }, prevUntil: function (t, i, s) {
            return I.dir(t, "previousSibling", s)
        }, siblings: function (t) {
            return I.sibling((t.parentNode || {}).firstChild, t)
        }, children: function (t) {
            return I.sibling(t.firstChild)
        }, contents: function (t) {
            return I.nodeName(t, "iframe") ? t.contentDocument || t.contentWindow.document : I.merge([], t.childNodes)
        }
    }, function (name, t) {
        I.fn[name] = function (i, selector) {
            var s = I.map(this, t, i);
            return "Until" !== name.slice(-5) && (selector = i), selector && "string" == typeof selector && (s = I.filter(selector, s)), this.length > 1 && (ce[name] || (s = I.unique(s)), re.test(name) && (s = s.reverse())), this.pushStack(s)
        }
    }), I.extend({
        filter: function (t, i, s) {
            var o = i[0];
            return s && (t = ":not(" + t + ")"), 1 === i.length && 1 === o.nodeType ? I.find.matchesSelector(o, t) ? [o] : [] : I.find.matches(t, I.grep(i, function (t) {
                return 1 === t.nodeType
            }))
        }, dir: function (t, dir, i) {
            for (var s = [], o = t[dir]; o && 9 !== o.nodeType && (i === undefined || 1 !== o.nodeType || !I(o).is(i));) 1 === o.nodeType && s.push(o), o = o[dir];
            return s
        }, sibling: function (n, t) {
            for (var r = []; n; n = n.nextSibling) 1 === n.nodeType && n !== t && r.push(n);
            return r
        }
    });
    var ue = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        de = / jQuery\d+="(?:null|\d+)"/g, he = new RegExp("<(?:" + ue + ")[\\s/>]", "i"), pe = /^\s+/,
        me = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, _e = /<([\w:]+)/,
        ge = /<tbody/i, fe = /<|&#?\w+;/, Se = /<(?:script|style|link)/i, Te = /^(?:checkbox|radio)$/i,
        ye = /checked\s*(?:[^=]|=\s*.checked.)/i, ve = /^$|\/(?:java|ecma)script/i, Ce = /^true\/(.*)/,
        Ie = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, be = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            area: [1, "<map>", "</map>"],
            param: [1, "<object>", "</object>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: I.support.htmlSerialize ? [0, "", ""] : [1, "X<div>", "</div>"]
        }, Ee = createSafeFragment(document).appendChild(document.createElement("div"));
    be.optgroup = be.option, be.tbody = be.tfoot = be.colgroup = be.caption = be.thead, be.th = be.td, I.fn.extend({
        text: function (value) {
            return I.access(this, function (value) {
                return value === undefined ? I.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value))
            }, null, value, arguments.length)
        }, append: function () {
            return this.domManip(arguments, function (t) {
                1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || manipulationTarget(this, t).appendChild(t)
            })
        }, prepend: function () {
            return this.domManip(arguments, function (t) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var target = manipulationTarget(this, t);
                    target.insertBefore(t, target.firstChild)
                }
            })
        }, before: function () {
            return this.domManip(arguments, function (t) {
                this.parentNode && this.parentNode.insertBefore(t, this)
            })
        }, after: function () {
            return this.domManip(arguments, function (t) {
                this.parentNode && this.parentNode.insertBefore(t, this.nextSibling)
            })
        }, remove: function (selector, t) {
            for (var i, s = selector ? I.filter(selector, this) : this, o = 0; null != (i = s[o]); o++) t || 1 !== i.nodeType || I.cleanData(getAll(i)), i.parentNode && (t && I.contains(i.ownerDocument, i) && setGlobalEval(getAll(i, "script")), i.parentNode.removeChild(i));
            return this
        }, empty: function () {
            for (var t, i = 0; null != (t = this[i]); i++) {
                for (1 === t.nodeType && I.cleanData(getAll(t, !1)); t.firstChild;) t.removeChild(t.firstChild);
                t.options && I.nodeName(t, "select") && (t.options.length = 0)
            }
            return this
        }, clone: function (t, i) {
            return t = null != t && t, i = null == i ? t : i, this.map(function () {
                return I.clone(this, t, i)
            })
        }, html: function (value) {
            return I.access(this, function (value) {
                var t = this[0] || {}, i = 0, s = this.length;
                if (value === undefined) return 1 === t.nodeType ? t.innerHTML.replace(de, "") : undefined;
                if ("string" == typeof value && !Se.test(value) && (I.support.htmlSerialize || !he.test(value)) && (I.support.leadingWhitespace || !pe.test(value)) && !be[(_e.exec(value) || ["", ""])[1].toLowerCase()]) {
                    value = value.replace(me, "<$1></$2>");
                    try {
                        for (; i < s; i++) 1 === (t = this[i] || {}).nodeType && (I.cleanData(getAll(t, !1)), t.innerHTML = value);
                        t = 0
                    } catch (t) {
                    }
                }
                t && this.empty().append(value)
            }, null, value, arguments.length)
        }, replaceWith: function () {
            var t = I.map(this, function (t) {
                return [t.nextSibling, t.parentNode]
            }), i = 0;
            return this.domManip(arguments, function (s) {
                var next = t[i++], parent = t[i++];
                parent && (next && next.parentNode !== parent && (next = this.nextSibling), I(this).remove(), parent.insertBefore(s, next))
            }, !0), i ? this : this.remove()
        }, detach: function (selector) {
            return this.remove(selector, !0)
        }, domManip: function (t, i, s) {
            t = m.apply([], t);
            var o, l, u, scripts, h, p, _ = 0, g = this.length, set = this, S = g - 1, value = t[0],
                T = I.isFunction(value);
            if (T || !(g <= 1 || "string" != typeof value || I.support.checkClone) && ye.test(value)) return this.each(function (index) {
                var self = set.eq(index);
                T && (t[0] = value.call(this, index, self.html())), self.domManip(t, i, s)
            });
            if (g && (p = I.buildFragment(t, this[0].ownerDocument, !1, !s && this), o = p.firstChild, 1 === p.childNodes.length && (p = o), o)) {
                for (u = (scripts = I.map(getAll(p, "script"), disableScript)).length; _ < g; _++) l = p, _ !== S && (l = I.clone(l, !0, !0), u && I.merge(scripts, getAll(l, "script"))), i.call(this[_], l, _);
                if (u) for (h = scripts[scripts.length - 1].ownerDocument, I.map(scripts, restoreScript), _ = 0; _ < u; _++) l = scripts[_], ve.test(l.type || "") && !I._data(l, "globalEval") && I.contains(h, l) && (l.src ? I._evalUrl(l.src) : I.globalEval((l.text || l.textContent || l.innerHTML || "").replace(Ie, "")));
                p = o = null
            }
            return this
        }
    }), I.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function (name, t) {
        I.fn[name] = function (selector) {
            for (var i, s = 0, o = [], l = I(selector), u = l.length - 1; s <= u; s++) i = s === u ? this : this.clone(!0), I(l[s])[t](i), _.apply(o, i.get())
            ;
            return this.pushStack(o)
        }
    }), I.extend({
        clone: function (t, i, s) {
            var o, l, clone, u, h, p = I.contains(t.ownerDocument, t);
            if (I.support.html5Clone || I.isXMLDoc(t) || !he.test("<" + t.nodeName + ">") ? clone = t.cloneNode(!0) : (Ee.innerHTML = t.outerHTML, Ee.removeChild(clone = Ee.firstChild)), !(I.support.noCloneEvent && I.support.noCloneChecked || 1 !== t.nodeType && 11 !== t.nodeType || I.isXMLDoc(t))) for (o = getAll(clone), h = getAll(t), u = 0; null != (l = h[u]); ++u) o[u] && fixCloneNodeIssues(l, o[u]);
            if (i) if (s) for (h = h || getAll(t), o = o || getAll(clone), u = 0; null != (l = h[u]); u++) cloneCopyEvent(l, o[u]); else cloneCopyEvent(t, clone);
            return (o = getAll(clone, "script")).length > 0 && setGlobalEval(o, !p && getAll(t, "script")), o = h = l = null, clone
        }, buildFragment: function (t, context, scripts, selection) {
            for (var i, s, contains, o, tag, l, wrap, u = t.length, h = createSafeFragment(context), p = [], m = 0; m < u; m++) if ((s = t[m]) || 0 === s) if ("object" === I.type(s)) I.merge(p, s.nodeType ? [s] : s); else if (fe.test(s)) {
                for (o = o || h.appendChild(context.createElement("div")), tag = (_e.exec(s) || ["", ""])[1].toLowerCase(), wrap = be[tag] || be._default, o.innerHTML = wrap[1] + s.replace(me, "<$1></$2>") + wrap[2], i = wrap[0]; i--;) o = o.lastChild;
                if (!I.support.leadingWhitespace && pe.test(s) && p.push(context.createTextNode(pe.exec(s)[0])), !I.support.tbody) for (i = (s = "table" !== tag || ge.test(s) ? "<table>" !== wrap[1] || ge.test(s) ? 0 : o : o.firstChild) && s.childNodes.length; i--;) I.nodeName(l = s.childNodes[i], "tbody") && !l.childNodes.length && s.removeChild(l);
                for (I.merge(p, o.childNodes), o.textContent = ""; o.firstChild;) o.removeChild(o.firstChild);
                o = h.lastChild
            } else p.push(context.createTextNode(s));
            for (o && h.removeChild(o), I.support.appendChecked || I.grep(getAll(p, "input"), fixDefaultChecked), m = 0; s = p[m++];) if ((!selection || -1 === I.inArray(s, selection)) && (contains = I.contains(s.ownerDocument, s), o = getAll(h.appendChild(s), "script"), contains && setGlobalEval(o), scripts)) for (i = 0; s = o[i++];) ve.test(s.type || "") && scripts.push(s);
            return o = null, h
        }, cleanData: function (t, i) {
            for (var o, type, id, data, l = 0, u = I.expando, h = I.cache, m = I.support.deleteExpando, _ = I.event.special; null != (o = t[l]); l++) if ((i || I.acceptData(o)) && (id = o[u], data = id && h[id])) {
                if (data.events) for (type in data.events) _[type] ? I.event.remove(o, type) : I.removeEvent(o, type, data.handle);
                h[id] && (delete h[id], m ? delete o[u] : typeof o.removeAttribute !== s ? o.removeAttribute(u) : o[u] = null, p.push(id))
            }
        }, _evalUrl: function (url) {
            return I.ajax({url: url, type: "GET", dataType: "script", async: !1, global: !1, throws: !0})
        }
    }), I.fn.extend({
        wrapAll: function (t) {
            if (I.isFunction(t)) return this.each(function (i) {
                I(this).wrapAll(t.call(this, i))
            });
            if (this[0]) {
                var wrap = I(t, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && wrap.insertBefore(this[0]), wrap.map(function () {
                    for (var t = this; t.firstChild && 1 === t.firstChild.nodeType;) t = t.firstChild;
                    return t
                }).append(this)
            }
            return this
        }, wrapInner: function (t) {
            return I.isFunction(t) ? this.each(function (i) {
                I(this).wrapInner(t.call(this, i))
            }) : this.each(function () {
                var self = I(this), i = self.contents();
                i.length ? i.wrapAll(t) : self.append(t)
            })
        }, wrap: function (t) {
            var i = I.isFunction(t);
            return this.each(function (s) {
                I(this).wrapAll(i ? t.call(this, s) : t)
            })
        }, unwrap: function () {
            return this.parent().each(function () {
                I.nodeName(this, "body") || I(this).replaceWith(this.childNodes)
            }).end()
        }
    });
    var we, Le, Ae, Re = /alpha\([^)]*\)/i, De = /opacity\s*=\s*([^)]*)/, Pe = /^(top|right|bottom|left)$/,
        Ue = /^(none|table(?!-c[ea]).+)/, Ne = /^margin/, Oe = new RegExp("^(" + L + ")(.*)$", "i"),
        Be = new RegExp("^(" + L + ")(?!px)[a-z%]+$", "i"), Ve = new RegExp("^([+-])=(" + L + ")", "i"),
        Me = {BODY: "block"}, Fe = {position: "absolute", visibility: "hidden", display: "block"},
        ke = {letterSpacing: 0, fontWeight: 400}, qe = ["Top", "Right", "Bottom", "Left"],
        Ge = ["Webkit", "O", "Moz", "ms"];
    I.fn.extend({
        css: function (name, value) {
            return I.access(this, function (t, name, value) {
                var i, s, map = {}, o = 0;
                if (I.isArray(name)) {
                    for (s = Le(t), i = name.length; o < i; o++) map[name[o]] = I.css(t, name[o], !1, s);
                    return map
                }
                return value !== undefined ? I.style(t, name, value) : I.css(t, name)
            }, name, value, arguments.length > 1)
        }, show: function () {
            return showHide(this, !0)
        }, hide: function () {
            return showHide(this)
        },
        toggle: function (state) {
            var t = "boolean" == typeof state;
            return this.each(function () {
                (t ? state : isHidden(this)) ? I(this).show() : I(this).hide()
            })
        }
    }), I.extend({
        cssHooks: {
            opacity: {
                get: function (t, i) {
                    if (i) {
                        var s = Ae(t, "opacity");
                        return "" === s ? "1" : s
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {float: I.support.cssFloat ? "cssFloat" : "styleFloat"},
        style: function (t, name, value, i) {
            if (t && 3 !== t.nodeType && 8 !== t.nodeType && t.style) {
                var s, type, o, l = I.camelCase(name), style = t.style;
                if (name = I.cssProps[l] || (I.cssProps[l] = vendorPropName(style, l)), o = I.cssHooks[name] || I.cssHooks[l], value === undefined) return o && "get" in o && (s = o.get(t, !1, i)) !== undefined ? s : style[name];
                if (!("string" == (type = typeof value) && (s = Ve.exec(value)) && (value = (s[1] + 1) * s[2] + parseFloat(I.css(t, name)), type = "number"), null == value || "number" === type && isNaN(value) || ("number" !== type || I.cssNumber[l] || (value += "px"), I.support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"), o && "set" in o && (value = o.set(t, value, i)) === undefined))) try {
                    style[name] = value
                } catch (t) {
                }
            }
        },
        css: function (t, name, i, s) {
            var o, l, u, h = I.camelCase(name);
            return name = I.cssProps[h] || (I.cssProps[h] = vendorPropName(t.style, h)), (u = I.cssHooks[name] || I.cssHooks[h]) && "get" in u && (l = u.get(t, !0, i)), l === undefined && (l = Ae(t, name, s)), "normal" === l && name in ke && (l = ke[name]), "" === i || i ? (o = parseFloat(l), !0 === i || I.isNumeric(o) ? o || 0 : l) : l
        }
    }), window.getComputedStyle ? (Le = function (t) {
        return window.getComputedStyle(t, null)
    }, Ae = function (t, name, i) {
        var width, minWidth, maxWidth, s = i || Le(t), o = s ? s.getPropertyValue(name) || s[name] : undefined,
            style = t.style;
        return s && ("" !== o || I.contains(t.ownerDocument, t) || (o = I.style(t, name)), Be.test(o) && Ne.test(name) && (width = style.width, minWidth = style.minWidth, maxWidth = style.maxWidth, style.minWidth = style.maxWidth = style.width = o, o = s.width, style.width = width, style.minWidth = minWidth, style.maxWidth = maxWidth)), o
    }) : document.documentElement.currentStyle && (Le = function (t) {
        return t.currentStyle
    }, Ae = function (t, name, i) {
        var left, s, o, l = i || Le(t), u = l ? l[name] : undefined, style = t.style;
        return null == u && style && style[name] && (u = style[name]), Be.test(u) && !Pe.test(name) && (left = style.left, (o = (s = t.runtimeStyle) && s.left) && (s.left = t.currentStyle.left), style.left = "fontSize" === name ? "1em" : u, u = style.pixelLeft + "px", style.left = left, o && (s.left = o)), "" === u ? "auto" : u
    }), I.each(["height", "width"], function (t, name) {
        I.cssHooks[name] = {
            get: function (t, i, s) {
                if (i) return 0 === t.offsetWidth && Ue.test(I.css(t, "display")) ? I.swap(t, Fe, function () {
                    return getWidthOrHeight(t, name, s)
                }) : getWidthOrHeight(t, name, s)
            }, set: function (t, value, i) {
                var s = i && Le(t);
                return setPositiveNumber(0, value, i ? augmentWidthOrHeight(t, name, i, I.support.boxSizing && "border-box" === I.css(t, "boxSizing", !1, s), s) : 0)
            }
        }
    }), I.support.opacity || (I.cssHooks.opacity = {
        get: function (t, i) {
            return De.test((i && t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : i ? "1" : ""
        }, set: function (t, value) {
            var style = t.style, currentStyle = t.currentStyle,
                opacity = I.isNumeric(value) ? "alpha(opacity=" + 100 * value + ")" : "",
                filter = currentStyle && currentStyle.filter || style.filter || "";
            style.zoom = 1, (value >= 1 || "" === value) && "" === I.trim(filter.replace(Re, "")) && style.removeAttribute && (style.removeAttribute("filter"), "" === value || currentStyle && !currentStyle.filter) || (style.filter = Re.test(filter) ? filter.replace(Re, opacity) : filter + " " + opacity)
        }
    }), I(function () {
        I.support.reliableMarginRight || (I.cssHooks.marginRight = {
            get: function (t, i) {
                if (i) return I.swap(t, {display: "inline-block"}, Ae, [t, "marginRight"])
            }
        }), !I.support.pixelPosition && I.fn.position && I.each(["top", "left"], function (t, i) {
            I.cssHooks[i] = {
                get: function (t, s) {
                    if (s) return s = Ae(t, i), Be.test(s) ? I(t).position()[i] + "px" : s
                }
            }
        })
    }), I.expr && I.expr.filters && (I.expr.filters.hidden = function (t) {
        return t.offsetWidth <= 0 && t.offsetHeight <= 0 || !I.support.reliableHiddenOffsets && "none" === (t.style && t.style.display || I.css(t, "display"))
    }, I.expr.filters.visible = function (t) {
        return !I.expr.filters.hidden(t)
    }), I.each({
        margin: "",
        padding: "", border: "Width"
    }, function (prefix, suffix) {
        I.cssHooks[prefix + suffix] = {
            expand: function (value) {
                for (var t = 0, i = {}, s = "string" == typeof value ? value.split(" ") : [value]; t < 4; t++) i[prefix + qe[t] + suffix] = s[t] || s[t - 2] || s[0];
                return i
            }
        }, Ne.test(prefix) || (I.cssHooks[prefix + suffix].set = setPositiveNumber)
    });
    var xe = /%20/g, He = /\[\]$/, ze = /\r?\n/g, je = /^(?:submit|button|image|reset|file)$/i,
        Ye = /^(?:input|select|textarea|keygen)/i;
    I.fn.extend({
        serialize: function () {
            return I.param(this.serializeArray())
        }, serializeArray: function () {
            return this.map(function () {
                var elements = I.prop(this, "elements");
                return elements ? I.makeArray(elements) : this
            }).filter(function () {
                var type = this.type;
                return this.name && !I(this).is(":disabled") && Ye.test(this.nodeName) && !je.test(type) && (this.checked || !Te.test(type))
            }).map(function (t, i) {
                var s = I(this).val();
                return null == s ? null : I.isArray(s) ? I.map(s, function (t) {
                    return {name: i.name, value: t.replace(ze, "\r\n")}
                }) : {name: i.name, value: s.replace(ze, "\r\n")}
            }).get()
        }
    }), I.param = function (a, t) {
        var prefix, i = [], add = function (key, value) {
            value = I.isFunction(value) ? value() : null == value ? "" : value, i[i.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value)
        };
        if (t === undefined && (t = I.ajaxSettings && I.ajaxSettings.traditional), I.isArray(a) || a.jquery && !I.isPlainObject(a)) I.each(a, function () {
            add(this.name, this.value)
        }); else for (prefix in a) buildParams(prefix, a[prefix], t, add);
        return i.join("&").replace(xe, "+")
    }, I.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (t, name) {
        I.fn[name] = function (data, t) {
            return arguments.length > 0 ? this.on(name, null, data, t) : this.trigger(name)
        }
    }), I.fn.extend({
        hover: function (t, i) {
            return this.mouseenter(t).mouseleave(i || t)
        }, bind: function (types, data, t) {
            return this.on(types, null, data, t)
        }, unbind: function (types, t) {
            return this.off(types, null, t)
        }, delegate: function (selector, types, data, t) {
            return this.on(types, selector, data, t)
        }, undelegate: function (selector, types, t) {
            return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", t)
        }
    });
    var Ke, Je, We = I.now(), $e = /\?/, Xe = /#.*$/, Qe = /([?&])_=[^&]*/, Ze = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm,
        et = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, tt = /^(?:GET|HEAD)$/, it = /^\/\//,
        st = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, nt = I.fn.load, ot = {}, at = {}, rt = "*/".concat("*");
    try {
        Je = location.href
    } catch (t) {
        (Je = document.createElement("a")).href = "", Je = Je.href
    }
    Ke = st.exec(Je.toLowerCase()) || [], I.fn.load = function (url, t, i) {
        if ("string" != typeof url && nt) return nt.apply(this, arguments);
        var selector, response, type, self = this, s = url.indexOf(" ");
        return s >= 0 && (selector = url.slice(s, url.length), url = url.slice(0, s)), I.isFunction(t) ? (i = t, t = undefined) : t && "object" == typeof t && (type = "POST"), self.length > 0 && I.ajax({
            url: url,
            type: type,
            dataType: "html",
            data: t
        }).done(function (responseText) {
            response = arguments, self.html(selector ? I("<div>").append(I.parseHTML(responseText)).find(selector) : responseText)
        }).complete(i && function (t, status) {
            self.each(i, response || [t.responseText, status, t])
        }), this
    }, I.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (t, type) {
        I.fn[type] = function (t) {
            return this.on(type, t)
        }
    }), I.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: Je,
            type: "GET",
            isLocal: et.test(Ke[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": rt,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {xml: /xml/, html: /html/, json: /json/},
            responseFields: {xml: "responseXML", text: "responseText", json: "responseJSON"},
            converters: {"* text": String, "text html": !0, "text json": I.parseJSON, "text xml": I.parseXML},
            flatOptions: {url: !0, context: !0}
        },
        ajaxSetup: function (target, t) {
            return t ? ajaxExtend(ajaxExtend(target, I.ajaxSettings), t) : ajaxExtend(I.ajaxSettings, target)
        },
        ajaxPrefilter: addToPrefiltersOrTransports(ot),
        ajaxTransport: addToPrefiltersOrTransports(at),
        ajax: function (url, options) {
            function done(status, t, i, headers) {
                var p, C, error, response, L, statusText = t;
                2 !== state && (state = 2, l && clearTimeout(l), h = undefined, o = headers || "", D.readyState = status > 0 ? 4 : 0, p = status >= 200 && status < 300 || 304 === status, i && (response = ajaxHandleResponses(m, D, i)), response = ajaxConvert(m, response, D, p), p ? (m.ifModified && ((L = D.getResponseHeader("Last-Modified")) && (I.lastModified[s] = L), (L = D.getResponseHeader("etag")) && (I.etag[s] = L)), 204 === status || "HEAD" === m.type ? statusText = "nocontent" : 304 === status ? statusText = "notmodified" : (statusText = response.state, C = response.data, p = !(error = response.error))) : (error = statusText, !status && statusText || (statusText = "error", status < 0 && (status = 0))), D.status = status, D.statusText = (t || statusText) + "", p ? S.resolveWith(_, [C, statusText, D]) : S.rejectWith(_, [D, statusText, error]), D.statusCode(v), v = undefined, u && g.trigger(p ? "ajaxSuccess" : "ajaxError", [D, m, p ? C : error]), T.fireWith(_, [D, statusText]), u && (g.trigger("ajaxComplete", [D, m]), --I.active || I.event.trigger("ajaxStop")))
            }

            "object" == typeof url && (options = url, url = undefined), options = options || {};
            var t, i, s, o, l, u, h, p, m = I.ajaxSetup({}, options), _ = m.context || m,
                g = m.context && (_.nodeType || _.jquery) ? I(_) : I.event, S = I.Deferred(),
                T = I.Callbacks("once memory"), v = m.statusCode || {}, C = {}, L = {}, state = 0, R = "canceled", D = {
                    readyState: 0, getResponseHeader: function (key) {
                        var match;
                        if (2 === state) {
                            if (!p) for (p = {}; match = Ze.exec(o);) p[match[1].toLowerCase()] = match[2];
                            match = p[key.toLowerCase()]
                        }
                        return null == match ? null : match
                    }, getAllResponseHeaders: function () {
                        return 2 === state ? o : null
                    }, setRequestHeader: function (name, value) {
                        var t = name.toLowerCase();
                        return state || (name = L[t] = L[t] || name, C[name] = value), this
                    }, overrideMimeType: function (type) {
                        return state || (m.mimeType = type), this
                    }, statusCode: function (map) {
                        var code;
                        if (map) if (state < 2) for (code in map) v[code] = [v[code], map[code]]; else D.always(map[D.status]);
                        return this
                    }, abort: function (statusText) {
                        var t = statusText || R;
                        return h && h.abort(t), done(0, t), this
                    }
                };
            if (S.promise(D).complete = T.add, D.success = D.done, D.error = D.fail, m.url = ((url || m.url || Je) + "").replace(Xe, "").replace(it, Ke[1] + "//"), m.type = options.method || options.type || m.method || m.type, m.dataTypes = I.trim(m.dataType || "*").toLowerCase().match(A) || [""], null == m.crossDomain && (t = st.exec(m.url.toLowerCase()), m.crossDomain = !(!t || t[1] === Ke[1] && t[2] === Ke[2] && (t[3] || ("http:" === t[1] ? "80" : "443")) === (Ke[3] || ("http:" === Ke[1] ? "80" : "443")))), m.data && m.processData && "string" != typeof m.data && (m.data = I.param(m.data, m.traditional)), inspectPrefiltersOrTransports(ot, m, options, D), 2 === state) return D;
            (u = m.global) && 0 == I.active++ && I.event.trigger("ajaxStart"), m.type = m.type.toUpperCase(), m.hasContent = !tt.test(m.type), s = m.url, m.hasContent || (m.data && (s = m.url += ($e.test(s) ? "&" : "?") + m.data, delete m.data), !1 === m.cache && (m.url = Qe.test(s) ? s.replace(Qe, "$1_=" + We++) : s + ($e.test(s) ? "&" : "?") + "_=" + We++)), m.ifModified && (I.lastModified[s] && D.setRequestHeader("If-Modified-Since", I.lastModified[s]), I.etag[s] && D.setRequestHeader("If-None-Match", I.etag[s])), (m.data && m.hasContent && !1 !== m.contentType || options.contentType) && D.setRequestHeader("Content-Type", m.contentType), D.setRequestHeader("Accept", m.dataTypes[0] && m.accepts[m.dataTypes[0]] ? m.accepts[m.dataTypes[0]] + ("*" !== m.dataTypes[0] ? ", " + rt + "; q=0.01" : "") : m.accepts["*"]);
            for (i in m.headers) D.setRequestHeader(i, m.headers[i]);
            if (m.beforeSend && (!1 === m.beforeSend.call(_, D, m) || 2 === state)) return D.abort();
            R = "abort";
            for (i in{success: 1, error: 1, complete: 1}) D[i](m[i]);
            if (h = inspectPrefiltersOrTransports(at, m, options, D)) {
                D.readyState = 1, u && g.trigger("ajaxSend", [D, m]), m.async && m.timeout > 0 && (l = setTimeout(function () {
                    D.abort("timeout")
                }, m.timeout));
                try {
                    state = 1, h.send(C, done)
                } catch (t) {
                    if (!(state < 2)) throw t;
                    done(-1, t)
                }
            } else done(-1, "No Transport");
            return D
        },
        getJSON: function (url, data, t) {
            return I.get(url, data, t, "json")
        },
        getScript: function (url, t) {
            return I.get(url, undefined, t, "script")
        }
    }), I.each(["get", "post"], function (t, method) {
        I[method] = function (url, data, t, type) {
            return I.isFunction(data) && (type = type || t, t = data, data = undefined), I.ajax({
                url: url,
                type: method,
                dataType: type,
                data: data,
                success: t
            })
        }
    }), I.ajaxSetup({
        accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
        contents: {script: /(?:java|ecma)script/},
        converters: {
            "text script": function (text) {
                return I.globalEval(text), text
            }
        }
    }), I.ajaxPrefilter("script", function (t) {
        t.cache === undefined && (t.cache = !1), t.crossDomain && (t.type = "GET", t.global = !1)
    }), I.ajaxTransport("script", function (t) {
        if (t.crossDomain) {
            var i, head = document.head || I("head")[0] || document.documentElement;
            return {
                send: function (s, o) {
                    (i = document.createElement("script")).async = !0, t.scriptCharset && (i.charset = t.scriptCharset), i.src = t.url, i.onload = i.onreadystatechange = function (t, s) {
                        (s || !i.readyState || /loaded|complete/.test(i.readyState)) && (i.onload = i.onreadystatechange = null, i.parentNode && i.parentNode.removeChild(i), i = null, s || o(200, "success"))
                    }, head.insertBefore(i, head.firstChild)
                }, abort: function () {
                    i && i.onload(undefined, !0)
                }
            }
        }
    });
    var lt = [], ct = /(=)\?(?=&|$)|\?\?/;
    I.ajaxSetup({
        jsonp: "callback", jsonpCallback: function () {
            var t = lt.pop() || I.expando + "_" + We++;
            return this[t] = !0, t
        }
    }), I.ajaxPrefilter("json jsonp", function (t, i, s) {
        var o, l, u,
            h = !1 !== t.jsonp && (ct.test(t.url) ? "url" : "string" == typeof t.data && !(t.contentType || "").indexOf("application/x-www-form-urlencoded") && ct.test(t.data) && "data");
        if (h || "jsonp" === t.dataTypes[0]) return o = t.jsonpCallback = I.isFunction(t.jsonpCallback) ? t.jsonpCallback() : t.jsonpCallback, h ? t[h] = t[h].replace(ct, "$1" + o) : !1 !== t.jsonp && (t.url += ($e.test(t.url) ? "&" : "?") + t.jsonp + "=" + o), t.converters["script json"] = function () {
            return u || I.error(o + " was not called"), u[0]
        }, t.dataTypes[0] = "json", l = window[o], window[o] = function () {
            u = arguments
        }, s.always(function () {
            window[o] = l, t[o] && (t.jsonpCallback = i.jsonpCallback, lt.push(o)), u && I.isFunction(l) && l(u[0]), u = l = undefined
        }), "script"
    });
    var ut, dt, ht = 0, pt = window.ActiveXObject && function () {
        var key;
        for (key in ut) ut[key](undefined, !0)
    };
    I.ajaxSettings.xhr = window.ActiveXObject ? function () {
        return !this.isLocal && createStandardXHR() || createActiveXHR()
    } : createStandardXHR, dt = I.ajaxSettings.xhr(), I.support.cors = !!dt && "withCredentials" in dt, (dt = I.support.ajax = !!dt) && I.ajaxTransport(function (t) {
        if (!t.crossDomain || I.support.cors) {
            var i;
            return {
                send: function (headers, complete) {
                    var s, o, l = t.xhr();
                    if (t.username ? l.open(t.type, t.url, t.async, t.username, t.password) : l.open(t.type, t.url, t.async), t.xhrFields) for (o in t.xhrFields) l[o] = t.xhrFields[o];
                    t.mimeType && l.overrideMimeType && l.overrideMimeType(t.mimeType), t.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (o in headers) l.setRequestHeader(o, headers[o])
                    } catch (t) {
                    }
                    l.send(t.hasContent && t.data || null), i = function (o, u) {
                        var status, h, statusText, p;
                        try {
                            if (i && (u || 4 === l.readyState)) if (i = undefined, s && (l.onreadystatechange = I.noop, pt && delete ut[s]), u) 4 !== l.readyState && l.abort(); else {
                                p = {}, status = l.status, h = l.getAllResponseHeaders(), "string" == typeof l.responseText && (p.text = l.responseText);
                                try {
                                    statusText = l.statusText
                                } catch (t) {
                                    statusText = ""
                                }
                                status || !t.isLocal || t.crossDomain ? 1223 === status && (status = 204) : status = p.text ? 200 : 404
                            }
                        } catch (t) {
                            u || complete(-1, t)
                        }
                        p && complete(status, statusText, p, h)
                    }, t.async ? 4 === l.readyState ? setTimeout(i) : (s = ++ht, pt && (ut || (ut = {}, I(window).unload(pt)), ut[s] = i), l.onreadystatechange = i) : i()
                }, abort: function () {
                    i && i(undefined, !0)
                }
            }
        }
    });
    var _t, gt, ft = /^(?:toggle|show|hide)$/, St = new RegExp("^(?:([+-])=|)(" + L + ")([a-z%]*)$", "i"),
        Tt = /queueHooks$/, yt = [function defaultPrefilter(t, i, s) {
            var o, value, toggle, l, u, h, p = this, m = {}, style = t.style, hidden = t.nodeType && isHidden(t),
                _ = I._data(t, "fxshow");
            s.queue || (null == (u = I._queueHooks(t, "fx")).unqueued && (u.unqueued = 0, h = u.empty.fire, u.empty.fire = function () {
                u.unqueued || h()
            }), u.unqueued++, p.always(function () {
                p.always(function () {
                    u.unqueued--, I.queue(t, "fx").length || u.empty.fire()
                })
            })), 1 === t.nodeType && ("height" in i || "width" in i) && (s.overflow = [style.overflow, style.overflowX, style.overflowY],
            "inline" === I.css(t, "display") && "none" === I.css(t, "float") && (I.support.inlineBlockNeedsLayout && "inline" !== css_defaultDisplay(t.nodeName) ? style.zoom = 1 : style.display = "inline-block")), s.overflow && (style.overflow = "hidden", I.support.shrinkWrapBlocks || p.always(function () {
                style.overflow = s.overflow[0], style.overflowX = s.overflow[1], style.overflowY = s.overflow[2]
            }));
            for (o in i) if (value = i[o], ft.exec(value)) {
                if (delete i[o], toggle = toggle || "toggle" === value, value === (hidden ? "hide" : "show")) continue;
                m[o] = _ && _[o] || I.style(t, o)
            }
            if (!I.isEmptyObject(m)) {
                _ ? "hidden" in _ && (hidden = _.hidden) : _ = I._data(t, "fxshow", {}), toggle && (_.hidden = !hidden), hidden ? I(t).show() : p.done(function () {
                    I(t).hide()
                }), p.done(function () {
                    var i;
                    I._removeData(t, "fxshow");
                    for (i in m) I.style(t, i, m[i])
                });
                for (o in m) l = createTween(hidden ? _[o] : 0, o, p), o in _ || (_[o] = l.start, hidden && (l.end = l.start, l.start = "width" === o || "height" === o ? 1 : 0))
            }
        }], vt = {
            "*": [function (t, value) {
                var i = this.createTween(t, value), target = i.cur(), s = St.exec(value),
                    o = s && s[3] || (I.cssNumber[t] ? "" : "px"),
                    start = (I.cssNumber[t] || "px" !== o && +target) && St.exec(I.css(i.elem, t)), scale = 1, l = 20;
                if (start && start[3] !== o) {
                    o = o || start[3], s = s || [], start = +target || 1;
                    do {
                        start /= scale = scale || ".5", I.style(i.elem, t, start + o)
                    } while (scale !== (scale = i.cur() / target) && 1 !== scale && --l)
                }
                return s && (start = i.start = +start || +target || 0, i.unit = o, i.end = s[1] ? start + (s[1] + 1) * s[2] : +s[2]), i
            }]
        };
    I.Animation = I.extend(Animation, {
        tweener: function (t, i) {
            I.isFunction(t) ? (i = t, t = ["*"]) : t = t.split(" ");
            for (var s, index = 0, length = t.length; index < length; index++) s = t[index], vt[s] = vt[s] || [], vt[s].unshift(i)
        }, prefilter: function (t, i) {
            i ? yt.unshift(t) : yt.push(t)
        }
    }), I.Tween = Tween, Tween.prototype = {
        constructor: Tween, init: function (t, options, i, end, s, o) {
            this.elem = t, this.prop = i, this.easing = s || "swing", this.options = options, this.start = this.now = this.cur(), this.end = end, this.unit = o || (I.cssNumber[i] ? "" : "px")
        }, cur: function () {
            var t = Tween.propHooks[this.prop];
            return t && t.get ? t.get(this) : Tween.propHooks._default.get(this)
        }, run: function (t) {
            var i, s = Tween.propHooks[this.prop];
            return this.options.duration ? this.pos = i = I.easing[this.easing](t, this.options.duration * t, 0, 1, this.options.duration) : this.pos = i = t, this.now = (this.end - this.start) * i + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), s && s.set ? s.set(this) : Tween.propHooks._default.set(this), this
        }
    }, Tween.prototype.init.prototype = Tween.prototype, Tween.propHooks = {
        _default: {
            get: function (t) {
                var result;
                return null == t.elem[t.prop] || t.elem.style && null != t.elem.style[t.prop] ? (result = I.css(t.elem, t.prop, "")) && "auto" !== result ? result : 0 : t.elem[t.prop]
            }, set: function (t) {
                I.fx.step[t.prop] ? I.fx.step[t.prop](t) : t.elem.style && (null != t.elem.style[I.cssProps[t.prop]] || I.cssHooks[t.prop]) ? I.style(t.elem, t.prop, t.now + t.unit) : t.elem[t.prop] = t.now
            }
        }
    }, Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function (t) {
            t.elem.nodeType && t.elem.parentNode && (t.elem[t.prop] = t.now)
        }
    }, I.each(["toggle", "show", "hide"], function (t, name) {
        var i = I.fn[name];
        I.fn[name] = function (speed, t, s) {
            return null == speed || "boolean" == typeof speed ? i.apply(this, arguments) : this.animate(genFx(name, !0), speed, t, s)
        }
    }), I.fn.extend({
        fadeTo: function (speed, t, i, s) {
            return this.filter(isHidden).css("opacity", 0).show().end().animate({opacity: t}, speed, i, s)
        }, animate: function (t, speed, i, s) {
            var empty = I.isEmptyObject(t), o = I.speed(speed, i, s), l = function () {
                var i = Animation(this, I.extend({}, t), o);
                (empty || I._data(this, "finish")) && i.stop(!0)
            };
            return l.finish = l, empty || !1 === o.queue ? this.each(l) : this.queue(o.queue, l)
        }, stop: function (type, t, i) {
            var s = function (t) {
                var stop = t.stop;
                delete t.stop, stop(i)
            };
            return "string" != typeof type && (i = t, t = type, type = undefined), t && !1 !== type && this.queue(type || "fx", []), this.each(function () {
                var t = !0, index = null != type && type + "queueHooks", o = I.timers, data = I._data(this);
                if (index) data[index] && data[index].stop && s(data[index]); else for (index in data) data[index] && data[index].stop && Tt.test(index) && s(data[index]);
                for (index = o.length; index--;) o[index].elem !== this || null != type && o[index].queue !== type || (o[index].anim.stop(i), t = !1,
                    o.splice(index, 1));
                !t && i || I.dequeue(this, type)
            })
        }, finish: function (type) {
            return !1 !== type && (type = type || "fx"), this.each(function () {
                var index, data = I._data(this), t = data[type + "queue"], i = data[type + "queueHooks"], s = I.timers,
                    length = t ? t.length : 0;
                for (data.finish = !0, I.queue(this, type, []), i && i.stop && i.stop.call(this, !0), index = s.length; index--;) s[index].elem === this && s[index].queue === type && (s[index].anim.stop(!0), s.splice(index, 1));
                for (index = 0; index < length; index++) t[index] && t[index].finish && t[index].finish.call(this);
                delete data.finish
            })
        }
    }), I.each({
        slideDown: genFx("show"),
        slideUp: genFx("hide"),
        slideToggle: genFx("toggle"),
        fadeIn: {opacity: "show"},
        fadeOut: {opacity: "hide"},
        fadeToggle: {opacity: "toggle"}
    }, function (name, t) {
        I.fn[name] = function (speed, i, s) {
            return this.animate(t, speed, i, s)
        }
    }), I.speed = function (speed, t, i) {
        var s = speed && "object" == typeof speed ? I.extend({}, speed) : {
            complete: i || !i && t || I.isFunction(speed) && speed,
            duration: speed,
            easing: i && t || t && !I.isFunction(t) && t
        };
        return s.duration = I.fx.off ? 0 : "number" == typeof s.duration ? s.duration : s.duration in I.fx.speeds ? I.fx.speeds[s.duration] : I.fx.speeds._default, null != s.queue && !0 !== s.queue || (s.queue = "fx"), s.old = s.complete, s.complete = function () {
            I.isFunction(s.old) && s.old.call(this), s.queue && I.dequeue(this, s.queue)
        }, s
    }, I.easing = {
        linear: function (t) {
            return t
        }, swing: function (t) {
            return .5 - Math.cos(t * Math.PI) / 2
        }
    }, I.timers = [], I.fx = Tween.prototype.init, I.fx.tick = function () {
        var t, i = I.timers, s = 0;
        for (_t = I.now(); s < i.length; s++) (t = i[s])() || i[s] !== t || i.splice(s--, 1);
        i.length || I.fx.stop(), _t = undefined
    }, I.fx.timer = function (t) {
        t() && I.timers.push(t) && I.fx.start()
    }, I.fx.interval = 13, I.fx.start = function () {
        gt || (gt = setInterval(I.fx.tick, I.fx.interval))
    }, I.fx.stop = function () {
        clearInterval(gt), gt = null
    }, I.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, I.fx.step = {}, I.expr && I.expr.filters && (I.expr.filters.animated = function (t) {
        return I.grep(I.timers, function (i) {
            return t === i.elem
        }).length
    }), I.fn.offset = function (options) {
        if (arguments.length) return options === undefined ? this : this.each(function (t) {
            I.offset.setOffset(this, options, t)
        });
        var t, i, o = {top: 0, left: 0}, l = this[0], u = l && l.ownerDocument;
        if (u) return t = u.documentElement, I.contains(t, l) ? (typeof l.getBoundingClientRect !== s && (o = l.getBoundingClientRect()), i = getWindow(u), {
            top: o.top + (i.pageYOffset || t.scrollTop) - (t.clientTop || 0),
            left: o.left + (i.pageXOffset || t.scrollLeft) - (t.clientLeft || 0)
        }) : o
    }, I.offset = {
        setOffset: function (t, options, i) {
            var position = I.css(t, "position");
            "static" === position && (t.style.position = "relative");
            var s, o, l = I(t), u = l.offset(), h = I.css(t, "top"), p = I.css(t, "left"), m = {}, _ = {};
            ("absolute" === position || "fixed" === position) && I.inArray("auto", [h, p]) > -1 ? (s = (_ = l.position()).top, o = _.left) : (s = parseFloat(h) || 0, o = parseFloat(p) || 0), I.isFunction(options) && (options = options.call(t, i, u)), null != options.top && (m.top = options.top - u.top + s), null != options.left && (m.left = options.left - u.left + o), "using" in options ? options.using.call(t, m) : l.css(m)
        }
    }, I.fn.extend({
        position: function () {
            if (this[0]) {
                var offsetParent, offset, t = {top: 0, left: 0}, i = this[0];
                return "fixed" === I.css(i, "position") ? offset = i.getBoundingClientRect() : (offsetParent = this.offsetParent(), offset = this.offset(), I.nodeName(offsetParent[0], "html") || (t = offsetParent.offset()), t.top += I.css(offsetParent[0], "borderTopWidth", !0), t.left += I.css(offsetParent[0], "borderLeftWidth", !0)), {
                    top: offset.top - t.top - I.css(i, "marginTop", !0),
                    left: offset.left - t.left - I.css(i, "marginLeft", !0)
                }
            }
        }, offsetParent: function () {
            return this.map(function () {
                for (var offsetParent = this.offsetParent || o; offsetParent && !I.nodeName(offsetParent, "html") && "static" === I.css(offsetParent, "position");) offsetParent = offsetParent.offsetParent;
                return offsetParent || o
            })
        }
    }), I.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function (method, t) {
        var top = /Y/.test(t);
        I.fn[method] = function (i) {
            return I.access(this, function (i, method, s) {
                var o = getWindow(i);
                if (s === undefined) return o ? t in o ? o[t] : o.document.documentElement[method] : i[method];
                o ? o.scrollTo(top ? I(o).scrollLeft() : s, top ? s : I(o).scrollTop()) : i[method] = s
            }, method, i, arguments.length, null)
        }
    }), I.each({Height: "height", Width: "width"}, function (name, type) {
        I.each({padding: "inner" + name, content: type, "": "outer" + name}, function (t, i) {
            I.fn[i] = function (margin, value) {
                var i = arguments.length && (t || "boolean" != typeof margin),
                    s = t || (!0 === margin || !0 === value ? "margin" : "border");
                return I.access(this, function (t, type, value) {
                    var i;
                    return I.isWindow(t) ? t.document.documentElement["client" + name] : 9 === t.nodeType ? (i = t.documentElement, Math.max(t.body["scroll" + name], i["scroll" + name], t.body["offset" + name], i["offset" + name], i["client" + name])) : value === undefined ? I.css(t, type, s) : I.style(t, type, value, s)
                }, type, i ? margin : undefined, i, null)
            }
        })
    }), I.fn.size = function () {
        return this.length
    }, I.fn.andSelf = I.fn.addBack, "object" == typeof module && module && "object" == typeof module.exports ? module.exports = I : (window.jQuery = window.$ = I, "function" == typeof define && define.hasOwnProperty("amd") && define("jquery", [], function () {
        return I
    }))
}(window), function () {
    function J(a) {
        i.set(a)
    }

    function Ja(a) {
        if (100 != a.get(Ft) && La(ne(a, Q)) % 1e4 >= 100 * oe(a, Ft)) throw"abort"
    }

    function Ma(a) {
        if (O(ne(a, At))) throw"abort"
    }

    function Oa() {
        var a = U.location.protocol;
        if ("http:" != a && "https:" != a) throw"abort"
    }

    function Pa(a) {
        try {
            P.navigator.sendBeacon ? J(42) : P.XMLHttpRequest && "withCredentials" in new P.XMLHttpRequest && J(40)
        } catch (t) {
        }
        a.set(lt, o(a), !0), a.set(Ie, oe(a, Ie) + 1);
        var b = [];
        ie.map(function (c, d) {
            if (d.F) {
                var e = a.get(c);
                void 0 != e && e != d.defaultValue && ("boolean" == typeof e && (e *= 1), b.push(d.F + "=" + T("" + e)))
            }
        }), b.push("z=" + ee()), a.set(ye, b.join("&"), !0)
    }

    function Sa(a) {
        var b = ne(a, Gt) || q() + "/collect", c = ne(a, Ce);
        if (!c && a.get(ve) && (c = "beacon"), c) {
            var d = ne(a, ye), e = (e = a.get(Te)) || S;
            "image" == c ? j(b, d, e) : "xhr" == c && Y(b, d, e) || "beacon" == c && x(b, d, e) || H(b, d, e)
        } else H(b, ne(a, ye), a.get(Te));
        b = a.get(At), c = (b = W(b)).hitcount, b.hitcount = c ? c + 1 : 1, b = a.get(At), delete W(b).pending_experiments, a.set(Te, S, !0)
    }

    function Hc(a) {
        (P.gaData = P.gaData || {}).expId && a.set(Ze, (P.gaData = P.gaData || {}).expId), (P.gaData = P.gaData || {}).expVar && a.set(et, (P.gaData = P.gaData || {}).expVar);
        var b, c = a.get(At);
        if (c = W(c).pending_experiments) {
            var d = [];
            for (b in c) c.hasOwnProperty(b) && c[b] && d.push(encodeURIComponent(b) + "." + encodeURIComponent(c[b]));
            b = d.join("!")
        } else b = void 0;
        b && a.set(tt, b, !0)
    }

    function cd() {
        if (P.navigator && "preview" == P.navigator.loadPurpose) throw"abort"
    }

    function yd(a) {
        var b = P.gaDevIds;
        h(b) && 0 != b.length && a.set("&did", b.join(","), !0)
    }

    function vb(a) {
        if (!a.get(At)) throw"abort"
    }

    function Ta(a) {
        var b = oe(a, ot);
        if (500 <= b && J(15), "transaction" != (c = ne(a, Se)) && "item" != c) {
            var c = oe(a, rt), d = (new Date).getTime(), e = oe(a, at);
            if (0 == e && a.set(at, d), 0 < (e = Math.round(2 * (d - e) / 1e3)) && (c = Math.min(c + e, 20), a.set(at, d)), 0 >= c) throw"abort";
            a.set(rt, --c)
        }
        a.set(ot, ++b)
    }

    function X(a, b, c, d) {
        b[a] = function () {
            try {
                return d && J(d), c.apply(this, arguments)
            } catch (t) {
                throw K("exc", a, t && t.name), t
            }
        }
    }

    function fc() {
        var a, b, c;
        if ((c = (c = P.navigator) ? c.plugins : null) && c.length) for (var d = 0; d < c.length && !b; d++) {
            var e = c[d];
            -1 < e.name.indexOf("Shockwave Flash") && (b = e.description)
        }
        if (!b) try {
            b = (a = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7")).GetVariable("$version")
        } catch (t) {
        }
        if (!b) try {
            b = "WIN 6,0,21,0", (a = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6")).AllowScriptAccess = "always", b = a.GetVariable("$version")
        } catch (t) {
        }
        if (!b) try {
            b = (a = new ActiveXObject("ShockwaveFlash.ShockwaveFlash")).GetVariable("$version")
        } catch (t) {
        }
        return b && (a = b.match(/[\d]+/g)) && 3 <= a.length && (b = a[0] + "." + a[1] + " r" + a[2]), b || void 0
    }

    function Xc(a, b, c) {
        "none" == b && (b = "");
        var d = [], e = B(a);
        a = "__utma" == a ? 6 : 2;
        for (var t = 0; t < e.length; t++) {
            var i = ("" + e[t]).split(".");
            i.length >= a && d.push({hash: i[0], R: e[t], O: i})
        }
        if (0 != d.length) return 1 == d.length ? d[0] : Zc(b, d) || Zc(c, d) || Zc(null, d) || d[0]
    }

    function Zc(a, b) {
        var c, d;
        null == a ? c = d = 1 : (c = La(a), d = La(m(a, ".") ? a.substring(1) : "." + a));
        for (var e = 0; e < b.length; e++) if (b[e].hash == c || b[e].hash == d) return b[e]
    }

    function Ic(a, b) {
        for (var c = new Date, e = (d = P.navigator).plugins || [], c = [a, d.userAgent, c.getTimezoneOffset(), c.getYear(), c.getDate(), c.getHours(), c.getMinutes() + b], d = 0; d < e.length; ++d) c.push(e[d].description);
        return La(c.join("."))
    }

    function sd(a, b) {
        if (b == U.location.hostname) return !1;
        for (var c = 0; c < a.length; c++) if (a[c] instanceof RegExp) {
            if (a[c].test(b)) return !0
        } else if (0 <= b.indexOf(a[c])) return !0;
        return !1
    }

    function ud(a) {
        return 0 <= a.indexOf(".") || 0 <= a.indexOf(":")
    }

    function La(a) {
        var c, d, b = 1;
        if (a) for (b = 0, d = a.length - 1; 0 <= d; d--) c = a.charCodeAt(d), b = (b << 6 & 268435455) + c + (c << 14), c = 266338304 & b, b = 0 != c ? b ^ c >> 21 : b;
        return b
    }

    var t = function (a) {
        this.w = a || []
    };
    t.prototype.set = function (a) {
        this.w[a] = !0
    }, t.prototype.encode = function () {
        for (var a = [], b = 0; b < this.w.length; b++) this.w[b] && (a[Math.floor(b / 6)] ^= 1 << b % 6);
        for (b = 0; b < a.length; b++) a[b] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_".charAt(a[b] || 0);
        return a.join("") + "~"
    };
    var i = new t, s = function (a, b) {
        var c = new t(l(a));
        c.set(b), a.set(ct, c.w)
    }, o = function (a) {
        a = l(a), a = new t(a);
        for (var b = i.w.slice(), c = 0; c < a.w.length; c++) b[c] = b[c] || a.w[c];
        return new t(b).encode()
    }, l = function (a) {
        return a = a.get(ct), h(a) || (a = []), a
    }, u = function (a) {
        return "function" == typeof a
    }, h = function (a) {
        return "[object Array]" == Object.prototype.toString.call(Object(a))
    }, p = function (a) {
        return void 0 != a && -1 < (a.constructor + "").indexOf("String")
    }, m = function (a, b) {
        return 0 == a.indexOf(b)
    }, _ = function (a) {
        return a ? a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "") : ""
    }, g = function (a) {
        var b = U.createElement("img");
        return b.width = 1, b.height = 1, b.src = a, b
    }, S = function () {
    }, T = function (a) {
        return encodeURIComponent instanceof Function ? encodeURIComponent(a) : (J(28), a)
    }, v = function (a, b, c, d) {
        try {
            a.addEventListener ? a.addEventListener(b, c, !!d) : a.attachEvent && a.attachEvent("on" + b, c)
        } catch (t) {
            J(27)
        }
    }, f = /^[\w\-:/.?=&%!]+$/, C = function (a, b, c) {
        a && (c ? (c = "", b && f.test(b) && (c = ' id="' + b + '"'), f.test(a) && U.write("<script" + c + ' src="' + a + '"><\/script>')) : (c = U.createElement("script"), c.type = "text/javascript", c.async = !0, c.src = a, b && (c.id = b), (a = U.getElementsByTagName("script")[0]).parentNode.insertBefore(c, a)))
    }, I = function () {
        return "https:" == U.location.protocol
    }, E = function (a, b) {
        var c = a.match("(?:&|#|\\?)" + T(b).replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1") + "=([^&#]*)");
        return c && 2 == c.length ? c[1] : ""
    }, L = function () {
        var a = "" + U.location.hostname;
        return 0 == a.indexOf("www.") ? a.substring(4) : a
    }, A = function (a) {
        var b = U.referrer;
        if (/^https?:\/\//i.test(b)) {
            if (a) return b;
            a = "//" + U.location.hostname;
            var c = b.indexOf(a);
            if (!(5 != c && 6 != c || "/" != (a = b.charAt(c + a.length)) && "?" != a && "" != a && ":" != a)) return;
            return b
        }
    }, R = function (a, b) {
        if (1 == b.length && null != b[0] && "object" == typeof b[0]) return b[0];
        for (var c = {}, d = Math.min(a.length + 1, b.length), e = 0; e < d; e++) {
            if ("object" == typeof b[e]) {
                for (var t in b[e]) b[e].hasOwnProperty(t) && (c[t] = b[e][t]);
                break
            }
            e < a.length && (c[a[e]] = b[e])
        }
        return c
    }, D = function () {
        this.keys = [], this.values = {}, this.m = {}
    };
    D.prototype.set = function (a, b, c) {
        this.keys.push(a), c ? this.m[":" + a] = b : this.values[":" + a] = b
    }, D.prototype.get = function (a) {
        return this.m.hasOwnProperty(":" + a) ? this.m[":" + a] : this.values[":" + a]
    }, D.prototype.map = function (a) {
        for (var b = 0; b < this.keys.length; b++) {
            var c = this.keys[b], d = this.get(c);
            d && a(c, d)
        }
    };
    var P = window, U = document, N = window, O = function (a) {
        var b = N._gaUserPrefs;
        if (b && b.ioo && b.ioo() || a && !0 === N["ga-disable-" + a]) return !0;
        try {
            var c = N.external;
            if (c && c._gaUserPrefs && "oo" == c._gaUserPrefs) return !0
        } catch (t) {
        }
        return !1
    }, B = function (a) {
        var b = [], c = U.cookie.split(";");
        a = new RegExp("^\\s*" + a + "=\\s*(.*?)\\s*$");
        for (var d = 0; d < c.length; d++) {
            var e = c[d].match(a);
            e && b.push(e[1])
        }
        return b
    }, V = function (a, b, c, d, e, t) {
        if (!(e = !O(e) && !(k.test(U.location.hostname) || "/" == c && F.test(d)))) return !1;
        if (b && 1200 < b.length && (b = b.substring(0, 1200), J(24)), c = a + "=" + b + "; path=" + c + "; ", t && (c += "expires=" + new Date((new Date).getTime() + t).toGMTString() + "; "), d && "none" != d && (c += "domain=" + d + ";"), d = U.cookie, U.cookie = c, !(d = d != U.cookie)) e:{
            for (a = B(a), d = 0; d < a.length; d++) if (b == a[d]) {
                d = !0;
                break e
            }
            d = !1
        }
        return d
    }, M = function (a) {
        return T(a).replace(/\(/g, "%28").replace(/\)/g, "%29")
    }, F = /^(www\.)?google(\.com?)?(\.[a-z]{2})?$/, k = /(^|\.)doubleclick\.net$/i, q = function () {
        return (me || I() ? "https:" : "http:") + "//www.google-analytics.com"
    }, G = function (a) {
        this.name = "len", this.message = a + "-8192"
    }, H = function (a, b, c) {
        if (c = c || S, 2036 >= b.length) j(a, b, c); else {
            if (!(8192 >= b.length)) throw K("len", b.length), new G(b.length);
            x(a, b, c) || Y(a, b, c) || j(a, b, c)
        }
    }, j = function (a, b, c) {
        var d = g(a + "?" + b);
        d.onload = d.onerror = function () {
            d.onload = null, d.onerror = null, c()
        }
    }, Y = function (a, b, c) {
        var d = P.XMLHttpRequest;
        if (!d) return !1;
        var e = new d;
        return "withCredentials" in e && (e.open("POST", a, !0), e.withCredentials = !0, e.setRequestHeader("Content-Type", "text/plain"), e.onreadystatechange = function () {
            4 == e.readyState && (c(), e = null)
        }, e.send(b), !0)
    }, x = function (a, b, c) {
        return !!P.navigator.sendBeacon && (!!P.navigator.sendBeacon(a, b) && (c(), !0))
    }, K = function (a, b, c) {
        1 <= 100 * Math.random() || O("?") || (a = ["t=error", "_e=" + a, "_v=j47", "sr=1"], b && a.push("_f=" + b), c && a.push("_m=" + T(c.substring(0, 100))), a.push("aip=1"), a.push("z=" + Z()), j(q() + "/collect", a.join("&"), S))
    }, W = function (a) {
        var b = P.gaData = P.gaData || {};
        return b[a] = b[a] || {}
    }, $ = function () {
        this.M = []
    };
    $.prototype.add = function (a) {
        this.M.push(a)
    }, $.prototype.D = function (a) {
        try {
            for (var b = 0; b < this.M.length; b++) {
                var c = a.get(this.M[b]);
                c && u(c) && c.call(P, a)
            }
        } catch (t) {
        }
        (b = a.get(Te)) != S && u(b) && (a.set(Te, S, !0), setTimeout(b, 10))
    };
    var Z = function () {
        return Math.round(2147483647 * Math.random())
    }, ee = function () {
        try {
            var a = new Uint32Array(1);
            return P.crypto.getRandomValues(a), 2147483647 & a[0]
        } catch (t) {
            return Z()
        }
    }, te = function () {
        this.data = new D
    }, ie = new D, se = [];
    te.prototype.get = function (a) {
        var b = le(a), c = this.data.get(a);
        return b && void 0 == c && (c = u(b.defaultValue) ? b.defaultValue() : b.defaultValue), b && b.Z ? b.Z(this, a, c) : c
    };
    var ne = function (a, b) {
        var c = a.get(b);
        return void 0 == c ? "" : "" + c
    }, oe = function (a, b) {
        var c = a.get(b);
        return void 0 == c || "" === c ? 0 : 1 * c
    };
    te.prototype.set = function (a, b, c) {
        if (a) if ("object" == typeof a) for (var d in a) a.hasOwnProperty(d) && ae(this, d, a[d], c); else ae(this, a, b, c)
    };
    var ae = function (a, b, c, d) {
            if (void 0 != c) switch (b) {
                case At:
                    Ei.test(c)
            }
            var e = le(b);
            e && e.o ? e.o(a, b, c, d) : a.data.set(b, c, d)
        }, re = function (a, b, c, d, e) {
            this.name = a, this.F = b, this.Z = d, this.o = e, this.defaultValue = c
        }, le = function (a) {
            var b = ie.get(a);
            if (!b) for (var c = 0; c < se.length; c++) {
                var d = se[c], e = d[0].exec(a);
                if (e) {
                    b = d[1](e), ie.set(b.name, b);
                    break
                }
            }
            return b
        }, ce = function (a) {
            var b;
            return ie.map(function (c, d) {
                d.F == a && (b = d)
            }), b && b.name
        }, ue = function (a, b, c, d, e) {
            return a = new re(a, b, c, d, e), ie.set(a.name, a), a.name
        }, de = function (a, b) {
            se.push([new RegExp("^" + a + "$"), b])
        }, he = function (a, b, c) {
            return ue(a, b, c, void 0, db)
        }, db = function () {
        }, pe = p(window.GoogleAnalyticsObject) && _(window.GoogleAnalyticsObject) || "ga", me = !1,
        _e = he("apiVersion", "v"), ge = he("clientVersion", "_v");
    ue("anonymizeIp", "aip");
    var fe = ue("adSenseId", "a"), Se = ue("hitType", "t"), Te = ue("hitCallback"), ye = ue("hitPayload");
    ue("nonInteraction", "ni"), ue("currencyCode", "cu"), ue("dataSource", "ds");
    var ve = ue("useBeacon", void 0, !1), Ce = ue("transport");
    ue("sessionControl", "sc", ""), ue("sessionGroup", "sg"), ue("queueTime", "qt");
    var Ie = ue("_s", "_s");
    ue("screenName", "cd");
    var be = ue("location", "dl", ""), Ee = ue("referrer", "dr"), we = ue("page", "dp", "");
    ue("hostname", "dh");
    var Le = ue("language", "ul"), Ae = ue("encoding", "de");
    ue("title", "dt", function () {
        return U.title || void 0
    }), de("contentGroup([0-9]+)", function (a) {
        return new re(a[0], "cg" + a[1])
    });
    var Re = ue("screenColors", "sd"), De = ue("screenResolution", "sr"), Pe = ue("viewportSize", "vp"),
        Ue = ue("javaEnabled", "je"), Ne = ue("flashVersion", "fl");
    ue("campaignId", "ci"), ue("campaignName", "cn"), ue("campaignSource", "cs"), ue("campaignMedium", "cm"), ue("campaignKeyword", "ck"), ue("campaignContent", "cc")
    ;var Oe = ue("eventCategory", "ec"), Be = ue("eventAction", "ea"), Ve = ue("eventLabel", "el"),
        Me = ue("eventValue", "ev"), Fe = ue("socialNetwork", "sn"), ke = ue("socialAction", "sa"),
        qe = ue("socialTarget", "st"), Ge = ue("l1", "plt"), xe = ue("l2", "pdt"), He = ue("l3", "dns"),
        ze = ue("l4", "rrt"), je = ue("l5", "srt"), Ye = ue("l6", "tcp"), Ke = ue("l7", "dit"), Je = ue("l8", "clt"),
        We = ue("timingCategory", "utc"), $e = ue("timingVar", "utv"), Xe = ue("timingLabel", "utl"),
        Qe = ue("timingValue", "utt");
    ue("appName", "an"), ue("appVersion", "av", ""), ue("appId", "aid", ""), ue("appInstallerId", "aiid", ""), ue("exDescription", "exd"), ue("exFatal", "exf");
    var Ze = ue("expId", "xid"), et = ue("expVar", "xvar"), tt = ue("exp", "exp"), it = ue("_utma", "_utma"),
        st = ue("_utmz", "_utmz"), nt = ue("_utmht", "_utmht"), ot = ue("_hc", void 0, 0), at = ue("_ti", void 0, 0),
        rt = ue("_to", void 0, 20);
    de("dimension([0-9]+)", function (a) {
        return new re(a[0], "cd" + a[1])
    }), de("metric([0-9]+)", function (a) {
        return new re(a[0], "cm" + a[1])
    }), ue("linkerParam", void 0, void 0, function Bc(a) {
        var b = Ic(a = a.get(Q), 0);
        return "_ga=1." + T(b + "." + a)
    }, db);
    var lt = ue("usage", "_u"), ct = ue("_um");
    ue("forceSSL", void 0, void 0, function () {
        return me
    }, function (a, b, c) {
        J(34), me = !!c
    });
    var ut = ue("_j1", "jid");
    de("\\&(.*)", function (a) {
        var b = new re(a[0], a[1]), c = ce(a[0].substring(1));
        return c && (b.Z = function (a) {
            return a.get(c)
        }, b.o = function (a, b, t, i) {
            a.set(c, t, i)
        }, b.F = void 0), b
    });
    var dt = he("_oot"), ht = ue("previewTask"), pt = ue("checkProtocolTask"), _t = ue("validationTask"),
        gt = ue("checkStorageTask"), ft = ue("historyImportTask"), St = ue("samplerTask"), Tt = ue("_rlt"),
        yt = ue("buildHitTask"), vt = ue("sendHitTask"), Ct = ue("ceTask"), It = ue("devIdTask"), bt = ue("timingTask"),
        Et = ue("displayFeaturesTask"), wt = he("name"), Q = he("clientId", "cid"), n = he("clientIdTime"),
        Lt = ue("userId", "uid"), At = he("trackingId", "tid"), Rt = he("cookieName", void 0, "_ga"),
        Dt = he("cookieDomain"), Pt = he("cookiePath", void 0, "/"), Ut = he("cookieExpires", void 0, 63072e3),
        Nt = he("legacyCookieDomain"), Ot = he("legacyHistoryImport", void 0, !0), Bt = he("storage", void 0, "cookie"),
        Vt = he("allowLinker", void 0, !1), Mt = he("allowAnchor", void 0, !0), Ft = he("sampleRate", "sf", 100),
        kt = he("siteSpeedSampleRate", void 0, 1), qt = he("alwaysSendReferrer", void 0, !1), Gt = ue("transportUrl"),
        xt = ue("_r", "_r"), Ht = function (a) {
            this.V = a, this.fa = void 0, this.$ = !1, this.oa = void 0, this.ea = 1
        }, zt = function (a, b) {
            var c;
            if (a.fa && a.$) return 0;
            if (a.$ = !0, b) {
                if (a.oa && oe(b, a.oa)) return oe(b, a.oa);
                if (0 == b.get(kt)) return 0
            }
            return 0 == a.V ? 0 : (void 0 === c && (c = ee()), 0 == c % a.V ? Math.floor(c / a.V) % a.ea + 1 : 0)
        }, jt = function (a) {
            var b = Math.min(oe(a, kt), 100);
            return !(La(ne(a, Q)) % 100 >= b)
        }, Yt = function (a) {
            var b = {};
            if (Kt(b) || Jt(b)) {
                var c = b[Ge];
                void 0 == c || 1 / 0 == c || isNaN(c) || (0 < c ? (Wt(b, He), Wt(b, Ye), Wt(b, je), Wt(b, xe), Wt(b, ze), Wt(b, Ke), Wt(b, Je), a(b)) : v(P, "load", function () {
                    Yt(a)
                }, !1))
            }
        }, Kt = function (a) {
            var b = P.performance || P.webkitPerformance;
            if (!(b = b && b.timing)) return !1;
            var c = b.navigationStart;
            return 0 != c && (a[Ge] = b.loadEventStart - c, a[He] = b.domainLookupEnd - b.domainLookupStart, a[Ye] = b.connectEnd - b.connectStart, a[je] = b.responseStart - b.requestStart, a[xe] = b.responseEnd - b.responseStart, a[ze] = b.fetchStart - c, a[Ke] = b.domInteractive - c, a[Je] = b.domContentLoadedEventStart - c, !0)
        }, Jt = function (a) {
            if (P.top != P) return !1;
            var b = P.external, c = b && b.onloadT;
            return b && !b.isValidLoadTime && (c = void 0), 2147483648 < c && (c = void 0), 0 < c && b.setPageReadyTime(), void 0 != c && (a[Ge] = c, !0)
        }, Wt = function (a, b) {
            var c = a[b];
            (isNaN(c) || 1 / 0 == c || 0 > c) && (a[b] = void 0)
        }, $t = function (a) {
            return function (b) {
                if ("pageview" == b.get(Se) && !a.I) {
                    a.I = !0;
                    var c = jt(b);
                    b = 0 < E(b.get(be), "gclid").length, (c || b) && Yt(function (b) {
                        a.send(c ? "timing" : "adtiming", b)
                    })
                }
            }
        }, Xt = !1, Qt = function (a) {
            if ("cookie" == ne(a, Bt)) {
                var b = ne(a, Rt), c = ti(a), d = ni(ne(a, Pt)), e = si(ne(a, Dt)), t = 1e3 * oe(a, Ut), i = ne(a, At);
                if ("auto" != e) V(b, c, d, e, i, t) && (Xt = !0); else {
                    J(32);
                    var s;
                    if (c = [], 4 != (e = L().split(".")).length || (s = e[e.length - 1], parseInt(s, 10) != s)) {
                        for (s = e.length - 2; 0 <= s; s--) c.push(e.slice(s).join("."));
                        c.push("none"), s = c
                    } else s = ["none"];
                    for (var o = 0; o < s.length; o++) if (e = s[o], a.data.set(Dt, e), c = ti(a), V(b, c, d, e, i, t)) return void(Xt = !0);
                    a.data.set(Dt, "auto")
                }
            }
        }, Zt = function (a) {
            if ("cookie" == ne(a, Bt) && !Xt && (Qt(a), !Xt)) throw"abort"
        }, ei = function (a) {
            if (a.get(Ot)) {
                var b = ne(a, Dt), c = ne(a, Nt) || L(), d = Xc("__utma", c, b);
                d && (J(19), a.set(nt, (new Date).getTime(), !0), a.set(it, d.R), (b = Xc("__utmz", c, b)) && d.hash == b.hash && a.set(st, b.R))
            }
        }, ti = function (a) {
            var b = M(ne(a, Q)), c = si(ne(a, Dt)).split(".").length;
            return 1 < (a = oi(ne(a, Pt))) && (c += "-" + a), ["GA1", c, b].join(".")
        }, ii = function (a, b, c) {
            for (var t, d = [], e = [], i = 0; i < a.length; i++) {
                var s = a[i];
                s.H[c] == b ? d.push(s) : void 0 == t || s.H[c] < t ? (e = [s], t = s.H[c]) : s.H[c] == t && e.push(s)
            }
            return 0 < d.length ? d : e
        }, si = function (a) {
            return 0 == a.indexOf(".") ? a.substr(1) : a
        }, ni = function (a) {
            return a ? (1 < a.length && a.lastIndexOf("/") == a.length - 1 && (a = a.substr(0, a.length - 1)), 0 != a.indexOf("/") && (a = "/" + a), a) : "/"
        }, oi = function (a) {
            return "/" == (a = ni(a)) ? 1 : a.split("/").length
        }, ai = new RegExp(/^https?:\/\/([^\/:]+)/), ri = /(.*)([?&#])(?:_ga=[^&#]*)(?:&?)(.*)/, li = function (a) {
            J(48), this.target = a, this.T = !1
        };
    li.prototype.ca = function (a, b) {
        if (a.tagName) {
            if ("a" == a.tagName.toLowerCase()) return void(a.href && (a.href = ci(this, a.href, b)));
            if ("form" == a.tagName.toLowerCase()) return ui(this, a)
        }
        if ("string" == typeof a) return ci(this, a, b)
    };
    var ci = function (a, b, c) {
        (d = ri.exec(b)) && 3 <= d.length && (b = d[1] + (d[3] ? d[2] + d[3] : "")), a = a.target.get("linkerParam");
        var e = b.indexOf("?"), d = b.indexOf("#");
        return c ? b += (-1 == d ? "#" : "&") + a : (c = -1 == e ? "?" : "&", b = -1 == d ? b + (c + a) : b.substring(0, d) + c + a + b.substring(d)), b = b.replace(/&+_ga=/, "&_ga=")
    }, ui = function (a, b) {
        if (b && b.action) {
            var c = a.target.get("linkerParam").split("=")[1];
            if ("get" == b.method.toLowerCase()) {
                for (var d = b.childNodes || [], e = 0; e < d.length; e++) if ("_ga" == d[e].name) return void d[e].setAttribute("value", c);
                (d = U.createElement("input")).setAttribute("type", "hidden"), d.setAttribute("name", "_ga"), d.setAttribute("value", c), b.appendChild(d)
            } else "post" == b.method.toLowerCase() && (b.action = ci(a, b.action))
        }
    };
    li.prototype.S = function (a, b, c) {
        function d(c) {
            try {
                var d;
                e:{
                    var t = (c = c || P.event).target || c.srcElement;
                    for (c = 100; t && 0 < c;) {
                        if (t.href && t.nodeName.match(/^a(?:rea)?$/i)) {
                            d = t;
                            break e
                        }
                        t = t.parentNode, c--
                    }
                    d = {}
                }
                ("http:" == d.protocol || "https:" == d.protocol) && sd(a, d.hostname || "") && d.href && (d.href = ci(e, d.href, b))
            } catch (t) {
                J(26)
            }
        }

        var e = this;
        this.T || (this.T = !0, v(U, "mousedown", d, !1), v(U, "keyup", d, !1)), c && v(U, "submit", function (b) {
            if (b = b || P.event, (b = b.target || b.srcElement) && b.action) {
                var c = b.action.match(ai);
                c && sd(a, c[1]) && ui(e, b)
            }
        })
    };
    var di, hi = /^(GTM|OPT)-[A-Z0-9]+$/, pi = /;_gaexp=[^;]*/g, r = /;((__utma=)|([^;=]+=GAX?\d+\.))[^;]*/g,
        mi = function (a) {
            function b(a, b) {
                b && (c += "&" + a + "=" + T(b))
            }

            var c = "https://www.google-analytics.com/gtm/js?id=" + T(a.id);
            return "dataLayer" != a.B && b("l", a.B), b("t", a.target), b("cid", a.ja), b("cidt", a.ka), b("gac", a.la), b("aip", a.ia), a.na && b("m", "sync"), b("cycle", a.G), c
        }, _i = function (a, b, c) {
            this.U = ut, this.aa = b, (b = c) || (b = (b = ne(a, wt)) && "t0" != b ? yi.test(b) ? "_gat_" + M(ne(a, At)) : "_gat_" + M(b) : "_gat"), this.Y = b, zt(new Ht(100), a) && (J(30), this.pa = !0)
        }, gi = function (a, b) {
            var c = b.get(yt);
            b.set(yt, function (b) {
                fi(a, b);
                var d = c(b);
                return Si(a, b), d
            });
            var d = b.get(vt);
            b.set(vt, function (b) {
                var c = d(b);
                return Ti(a, b), c
            })
        }, fi = function (a, b) {
            b.get(a.U) || ("1" == B(a.Y)[0] ? b.set(a.U, "", !0) : b.set(a.U, "" + Z(), !0))
        }, Si = function (a, b) {
            if (b.get(a.U)) {
                var c = 6e5;
                a.pa && (c /= 10), V(a.Y, "1", b.get(Pt), b.get(Dt), b.get(At), c)
            }
        }, Ti = function (a, b) {
            if (b.get(a.U)) {
                var c = new D, d = function (a) {
                    le(a).F && c.set(le(a).F, b.get(a))
                };
                d(_e), d(ge), d(At), d(Q), d(Lt), d(a.U), c.set(le(lt).F, o(b));
                var e = a.aa;
                c.map(function (a, b) {
                    e += T(a) + "=", e += T("" + b) + "&"
                }), e += "z=" + Z(), g(e), b.set(a.U, "", !0)
            }
        }, yi = /^gtm\d+$/, vi = function (a, b) {
            var c = a.b;
            if (!c.get("dcLoaded")) {
                s(c, 29);
                var d;
                (b = b || {})[Rt] && (d = M(b[Rt])), d = new _i(c, "https://stats.g.doubleclick.net/r/collect?t=dc&aip=1&_r=3&", d), gi(d, c), c.set("dcLoaded", !0)
            }
        }, Ci = function (a) {
            if (!a.get("dcLoaded") && "cookie" == a.get(Bt)) {
                s(a, 51);
                var b = new _i(a);
                fi(b, a), Si(b, a), a.get(b.U) && (a.set(xt, 1, !0), a.set(Gt, q() + "/r/collect", !0))
            }
        }, Ii = function () {
            var a = P.gaGlobal = P.gaGlobal || {};
            return a.hid = a.hid || Z()
        }, bi = function (a, b, c) {
            if (!di) {
                var d;
                d = U.location.hash
                ;var e = P.name, t = /^#?gaso=([^&]*)/;
                (e = (d = (d = d && d.match(t) || e && e.match(t)) ? d[1] : B("GASO")[0] || "") && d.match(/^(?:!([-0-9a-z.]{1,40})!)?([-.\w]{10,1200})$/i)) && (V("GASO", "" + d, c, b, a, 0), window._udo || (window._udo = b), window._utcp || (window._utcp = c), a = e[1], C("https://www.google.com/analytics/web/inpage/pub/inpage.js?" + (a ? "prefix=" + a + "&" : "") + Z(), "_gasojs")), di = !0
            }
        }, Ei = /^(UA|YT|MO|GP)-(\d+)-(\d+)$/, wi = function (a) {
            function b(a, b) {
                d.b.data.set(a, b)
            }

            function c(a, c) {
                b(a, c), d.filters.add(a)
            }

            var d = this;
            this.b = new te, this.filters = new $, b(wt, a[wt]), b(At, _(a[At])), b(Rt, a[Rt]), b(Dt, a[Dt] || L()), b(Pt, a[Pt]), b(Ut, a[Ut]), b(Nt, a[Nt]), b(Ot, a[Ot]), b(Vt, a[Vt]), b(Mt, a[Mt]), b(Ft, a[Ft]), b(kt, a[kt]), b(qt, a[qt]), b(Bt, a[Bt]), b(Lt, a[Lt]), b(n, a[n]), b(_e, 1), b(ge, "j47"), c(dt, Ma), c(ht, cd), c(pt, Oa), c(_t, vb), c(gt, Zt), c(ft, ei), c(St, Ja), c(Tt, Ta), c(Ct, Hc), c(It, yd), c(Et, Ci), c(yt, Pa), c(vt, Sa), c(bt, $t(this)), Li(this.b, a[Q]), Ai(this.b), this.b.set(fe, Ii()), bi(this.b.get(At), this.b.get(Dt), this.b.get(Pt))
        }, Li = function (a, b) {
            if ("cookie" == ne(a, Bt)) {
                Xt = !1;
                var c;
                e:{
                    var d = B(ne(a, Rt));
                    if (d && !(1 > d.length)) {
                        c = [];
                        for (var e = 0; e < d.length; e++) {
                            var t, i = (t = d[e].split(".")).shift();
                            ("GA1" == i || "1" == i) && 1 < t.length ? (1 == (i = t.shift().split("-")).length && (i[1] = "1"), i[0] *= 1, i[1] *= 1, t = {
                                H: i,
                                s: t.join(".")
                            }) : t = void 0, t && c.push(t)
                        }
                        if (1 == c.length) {
                            J(13), c = c[0].s;
                            break e
                        }
                        if (0 != c.length) {
                            if (J(14), d = si(ne(a, Dt)).split(".").length, 1 == (c = ii(c, d, 0)).length) {
                                c = c[0].s;
                                break e
                            }
                            d = oi(ne(a, Pt)), c = (c = ii(c, d, 1))[0] && c[0].s;
                            break e
                        }
                        J(12)
                    }
                    c = void 0
                }
                c || (c = ne(a, Dt), d = ne(a, Nt) || L(), void 0 != (c = Xc("__utma", d, c)) ? (J(10), c = c.O[1] + "." + c.O[2]) : c = void 0), c && (a.data.set(Q, c), Xt = !0)
            }
            if (c = a.get(Mt), (e = E(U.location[c ? "href" : "search"], "_ga")) && (a.get(Vt) ? -1 == (c = e.indexOf(".")) ? J(22) : (d = e.substring(c + 1), "1" != e.substring(0, c) ? J(22) : -1 == (c = d.indexOf(".")) ? J(22) : (e = d.substring(0, c), c = d.substring(c + 1), e != Ic(c, 0) && e != Ic(c, -1) && e != Ic(c, -2) ? J(23) : (J(11), a.data.set(Q, c)))) : J(21)), b && (J(9), a.data.set(Q, T(b))), !a.get(Q)) if (c = (c = P.gaGlobal && P.gaGlobal.vid) && -1 != c.search(/^(?:utma\.)?\d+\.\d+$/) ? c : void 0) J(17), a.data.set(Q, c); else {
                for (J(8), d = (c = P.navigator.userAgent + (U.cookie ? U.cookie : "") + (U.referrer ? U.referrer : "")).length, e = P.history.length; 0 < e;) c += e-- ^ d++;
                a.data.set(Q, [Z() ^ 2147483647 & La(c), Math.round((new Date).getTime() / 1e3)].join("."))
            }
            Qt(a)
        }, Ai = function (a) {
            var b = P.navigator, c = P.screen, d = U.location;
            if (a.set(Ee, A(a.get(qt))), d) {
                var e = d.pathname || "";
                "/" != e.charAt(0) && (J(31), e = "/" + e), a.set(be, d.protocol + "//" + d.hostname + e + d.search)
            }
            c && a.set(De, c.width + "x" + c.height), c && a.set(Re, c.colorDepth + "-bit");
            var c = U.documentElement, t = (e = U.body) && e.clientWidth && e.clientHeight, i = [];
            if (c && c.clientWidth && c.clientHeight && ("CSS1Compat" === U.compatMode || !t) ? i = [c.clientWidth, c.clientHeight] : t && (i = [e.clientWidth, e.clientHeight]), c = 0 >= i[0] || 0 >= i[1] ? "" : i.join("x"), a.set(Pe, c), a.set(Ne, fc()), a.set(Ae, U.characterSet || U.charset), a.set(Ue, b && "function" == typeof b.javaEnabled && b.javaEnabled() || !1), a.set(Le, (b && (b.language || b.browserLanguage) || "").toLowerCase()), d && a.get(Mt) && (b = U.location.hash)) {
                for (b = b.split(/[?&#]+/), d = [], c = 0; c < b.length; ++c) (m(b[c], "utm_id") || m(b[c], "utm_campaign") || m(b[c], "utm_source") || m(b[c], "utm_medium") || m(b[c], "utm_term") || m(b[c], "utm_content") || m(b[c], "gclid") || m(b[c], "dclid") || m(b[c], "gclsrc")) && d.push(b[c]);
                0 < d.length && (b = "#" + d.join("&"), a.set(be, a.get(be) + b))
            }
        };
    wi.prototype.get = function (a) {
        return this.b.get(a)
    }, wi.prototype.set = function (a, b) {
        this.b.set(a, b)
    };
    var Ri = {pageview: [we], event: [Oe, Be, Ve, Me], social: [Fe, ke, qe], timing: [We, $e, Qe, Xe]};
    wi.prototype.send = function (a) {
        if (!(1 > arguments.length)) {
            var b, c;
            "string" == typeof arguments[0] ? (b = arguments[0], c = [].slice.call(arguments, 1)) : (b = arguments[0] && arguments[0][Se], c = arguments), b && (c = R(Ri[b] || [], c), c[Se] = b, this.b.set(c, void 0, !0), this.filters.D(this.b), this.b.data.m = {})
        }
    }, wi.prototype.ma = function (a, b) {
        var c = this;
        Mi(a, c, b) || (Fi(a, function () {
            Mi(a, c, b)
        }), y(String(c.get(wt)), a, void 0, b, !0))
    };
    var Di, Pi, Ui, Ni, Oi = function (a) {
        return "prerender" != U.visibilityState && (a(), !0)
    }, z = function (a) {
        if (!Oi(a)) {
            J(16)
            ;var b = !1, c = function () {
                if (!b && Oi(a)) {
                    b = !0;
                    var d = c, e = U;
                    e.removeEventListener ? e.removeEventListener("visibilitychange", d, !1) : e.detachEvent && e.detachEvent("onvisibilitychange", d)
                }
            };
            v(U, "visibilitychange", c)
        }
    }, Bi = /^(?:(\w+)\.)?(?:(\w+):)?(\w+)$/, Vi = function (a) {
        if (u(a[0])) this.u = a[0]; else {
            var b = Bi.exec(a[0]);
            if (null != b && 4 == b.length && (this.c = b[1] || "t0", this.K = b[2] || "", this.C = b[3], this.a = [].slice.call(a, 1), this.K || (this.A = "create" == this.C, this.i = "require" == this.C, this.g = "provide" == this.C, this.ba = "remove" == this.C), this.i && (3 <= this.a.length ? (this.X = this.a[1], this.W = this.a[2]) : this.a[1] && (p(this.a[1]) ? this.X = this.a[1] : this.W = this.a[1]))), b = a[1], a = a[2], !this.C) throw"abort";
            if (this.i && (!p(b) || "" == b)) throw"abort";
            if (this.g && (!p(b) || "" == b || !u(a))) throw"abort";
            if (ud(this.c) || ud(this.K)) throw"abort";
            if (this.g && "t0" != this.c) throw"abort"
        }
    };
    Di = new D, Ui = new D, Ni = new D, Pi = {ec: 45, ecommerce: 46, linkid: 47};
    var Mi = function (a, b, c) {
        b == Hi || b.get(wt);
        var d = Di.get(a);
        return !!u(d) && (b.plugins_ = b.plugins_ || new D, !!b.plugins_.get(a) || (b.plugins_.set(a, new d(b, c || {})), !0))
    }, y = function (a, b, c, d, e) {
        if (!u(Di.get(b)) && !Ui.get(b)) {
            if (Pi.hasOwnProperty(b) && J(Pi[b]), hi.test(b)) {
                if (J(52), !(a = Hi.j(a))) return !0;
                d = {
                    id: b,
                    B: (c = d || {}).dataLayer || "dataLayer",
                    ia: !!a.get("anonymizeIp"),
                    na: e,
                    G: !1
                }, a.get("&gtm") == b && (d.G = !0);
                var t = String(a.get("name"));
                "t0" != t && (d.target = t), O(String(a.get("trackingId"))) || (d.ja = String(a.get(Q)), d.ka = Number(a.get(n)), a = c.palindrome ? r : pi, a = (a = U.cookie.replace(/^|(; +)/g, ";").match(a)) ? a.sort().join("").substring(1) : void 0, d.la = a), a = d.B, c = (new Date).getTime(), P[a] = P[a] || [], c = {"gtm.start": c}, e || (c.event = "gtm.js"), P[a].push(c), c = mi(d)
            }
            !c && Pi.hasOwnProperty(b) ? (J(39), c = b + ".js") : J(43), c && (c && 0 <= c.indexOf("/") || (c = (me || I() ? "https:" : "http:") + "//www.google-analytics.com/plugins/ua/" + c), d = Gi(c), a = d.protocol, c = U.location.protocol, ("https:" == a || a == c || ("http:" != a ? 0 : "http:" == c)) && qi(d) && (C(d.url, void 0, e), Ui.set(b, !0)))
        }
    }, Fi = function (a, b) {
        var c = Ni.get(a) || [];
        c.push(b), Ni.set(a, c)
    }, ki = function (a, b) {
        Di.set(a, b);
        for (var c = Ni.get(a) || [], d = 0; d < c.length; d++) c[d]();
        Ni.set(a, [])
    }, qi = function (a) {
        var b = Gi(U.location.href);
        return !!m(a.url, "https://www.google-analytics.com/gtm/js?id=") || !(a.query || 0 <= a.url.indexOf("?") || 0 <= a.path.indexOf("://")) && (a.host == b.host && a.port == b.port || (b = "http:" == a.protocol ? 80 : 443, !("www.google-analytics.com" != a.host || (a.port || b) != b || !m(a.path, "/plugins/"))))
    }, Gi = function (a) {
        function b(a) {
            var b = (a.hostname || "").split(":")[0].toLowerCase(), c = (a.protocol || "").toLowerCase(),
                c = 1 * a.port || ("http:" == c ? 80 : "https:" == c ? 443 : "");
            return a = a.pathname || "", m(a, "/") || (a = "/" + a), [b, "" + c, a]
        }

        var c = U.createElement("a");
        c.href = U.location.href;
        var d = (c.protocol || "").toLowerCase(), e = b(c), t = c.search || "",
            i = d + "//" + e[0] + (e[1] ? ":" + e[1] : "");
        return m(a, "//") ? a = d + a : m(a, "/") ? a = i + a : !a || m(a, "?") ? a = i + e[2] + (a || t) : 0 > a.split("/")[0].indexOf(":") && (a = i + e[2].substring(0, e[2].lastIndexOf("/")) + "/" + a), c.href = a, d = b(c), {
            protocol: (c.protocol || "").toLowerCase(),
            host: d[0],
            port: d[1],
            path: d[2],
            query: c.search || "",
            url: a || ""
        }
    }, xi = {
        ga: function () {
            xi.f = []
        }
    };
    xi.ga(), xi.D = function (a) {
        var b = xi.J.apply(xi, arguments), b = xi.f.concat(b);
        for (xi.f = []; 0 < b.length && !xi.v(b[0]) && (b.shift(), !(0 < xi.f.length));) ;
        xi.f = xi.f.concat(b)
    }, xi.J = function (a) {
        for (var b = [], c = 0; c < arguments.length; c++) try {
            var d = new Vi(arguments[c]);
            d.g ? ki(d.a[0], d.a[1]) : (d.i && (d.ha = y(d.c, d.a[0], d.X, d.W)), b.push(d))
        } catch (t) {
        }
        return b
    }, xi.v = function (a) {
        try {
            if (a.u) a.u.call(P, Hi.j("t0")); else {
                var b = a.c == pe ? Hi : Hi.j(a.c);
                if (a.A) "t0" != a.c || Hi.create.apply(Hi, a.a); else if (a.ba) Hi.remove(a.c); else if (b) if (a.i) {
                    if (a.ha && (a.ha = y(a.c, a.a[0], a.X, a.W)), !Mi(a.a[0], b, a.W)) return !0
                } else if (a.K) {
                    var c = a.C, d = a.a, e = b.plugins_.get(a.K);
                    e[c].apply(e, d)
                } else b[a.C].apply(b, a.a)
            }
        } catch (t) {
        }
    };
    var Hi = function (a) {
        J(1), xi.D.apply(xi, [arguments])
    };
    Hi.h = {}, Hi.P = [], Hi.L = 0, Hi.answer = 42;
    var zi = [At, Dt, wt];
    Hi.create = function (a) {
        var b = R(zi, [].slice.call(arguments));
        b[wt] || (b[wt] = "t0");
        var c = "" + b[wt];
        return Hi.h[c] ? Hi.h[c] : (b = new wi(b), Hi.h[c] = b, Hi.P.push(b), b)
    },
        Hi.remove = function (a) {
            for (var b = 0; b < Hi.P.length; b++) if (Hi.P[b].get(wt) == a) {
                Hi.P.splice(b, 1), Hi.h[a] = null;
                break
            }
        }, Hi.j = function (a) {
        return Hi.h[a]
    }, Hi.getAll = function () {
        return Hi.P.slice(0)
    }, Hi.N = function () {
        "ga" != pe && J(49);
        var a = P[pe];
        if (!a || 42 != a.answer) {
            if (Hi.L = a && a.l, Hi.loaded = !0, X("create", b = P[pe] = Hi, b.create), X("remove", b, b.remove), X("getByName", b, b.j, 5), X("getAll", b, b.getAll, 6), b = wi.prototype, X("get", b, b.get, 7), X("set", b, b.set, 4), X("send", b, b.send), X("requireSync", b, b.ma), b = te.prototype, X("get", b, b.get), X("set", b, b.set), !I() && !me) {
                e:{
                    for (var b = U.getElementsByTagName("script"), c = 0; c < b.length && 100 > c; c++) {
                        var d = b[c].src;
                        if (d && 0 == d.indexOf("https://www.google-analytics.com/analytics")) {
                            J(33), b = !0;
                            break e
                        }
                    }
                    b = !1
                }
                b && (me = !0)
            }
            I() || me || !zt(new Ht(1e4)) || (J(36), me = !0), (P.gaplugins = P.gaplugins || {}).Linker = li, b = li.prototype, ki("linker", li), X("decorate", b, b.ca, 20), X("autoLink", b, b.S, 25), ki("displayfeatures", vi), ki("adfeatures", vi), a = a && a.q, h(a) ? xi.D.apply(Hi, a) : J(50)
        }
    }, Hi.da = function () {
        for (var a = Hi.getAll(), b = 0; b < a.length; b++) a[b].get(wt)
    };
    var ji = Hi.N, Yi = P[pe];
    Yi && Yi.r ? ji() : z(ji), z(function () {
        xi.D(["provide", "render", S])
    })
}(window), function (t) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery)
}(function (t) {
    "use strict";
    var i = window.Slick || {};
    (i = function () {
        var i = 0;
        return function Slick(s, o) {
            var l, u = this;
            u.defaults = {
                accessibility: !0,
                adaptiveHeight: !1,
                appendArrows: t(s),
                appendDots: t(s),
                arrows: !0,
                asNavFor: null,
                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                autoplay: !1,
                autoplaySpeed: 3e3,
                centerMode: !1,
                centerPadding: "50px",
                cssEase: "ease",
                customPaging: function (i, s) {
                    return t('<button type="button" />').text(s + 1)
                },
                dots: !1,
                dotsClass: "slick-dots",
                draggable: !0,
                easing: "linear",
                edgeFriction: .35,
                fade: !1,
                focusOnSelect: !1,
                focusOnChange: !1,
                infinite: !0,
                initialSlide: 0,
                lazyLoad: "ondemand",
                mobileFirst: !1,
                pauseOnHover: !0,
                pauseOnFocus: !0,
                pauseOnDotsHover: !1,
                respondTo: "window",
                responsive: null,
                rows: 1,
                rtl: !1,
                slide: "",
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: !0,
                swipeToSlide: !1,
                touchMove: !0,
                touchThreshold: 5,
                useCSS: !0,
                useTransform: !0,
                variableWidth: !1,
                vertical: !1,
                verticalSwiping: !1,
                waitForAnimate: !0,
                zIndex: 1e3
            }, u.initials = {
                animating: !1,
                dragging: !1,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                scrolling: !1,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: !1,
                slideOffset: 0,
                swipeLeft: null,
                swiping: !1,
                $list: null,
                touchObject: {},
                transformsEnabled: !1,
                unslicked: !1
            }, t.extend(u, u.initials), u.activeBreakpoint = null, u.animType = null, u.animProp = null, u.breakpoints = [], u.breakpointSettings = [], u.cssTransitions = !1, u.focussed = !1, u.interrupted = !1, u.hidden = "hidden", u.paused = !0, u.positionProp = null, u.respondTo = null, u.rowCount = 1, u.shouldClick = !0, u.$slider = t(s), u.$slidesCache = null, u.transformType = null, u.transitionType = null, u.visibilityChange = "visibilitychange", u.windowWidth = 0, u.windowTimer = null, l = t(s).data("slick") || {}, u.options = t.extend({}, u.defaults, o, l), u.currentSlide = u.options.initialSlide, u.originalSettings = u.options, void 0 !== document.mozHidden ? (u.hidden = "mozHidden", u.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (u.hidden = "webkitHidden", u.visibilityChange = "webkitvisibilitychange"), u.autoPlay = t.proxy(u.autoPlay, u), u.autoPlayClear = t.proxy(u.autoPlayClear, u), u.autoPlayIterator = t.proxy(u.autoPlayIterator, u), u.changeSlide = t.proxy(u.changeSlide, u), u.clickHandler = t.proxy(u.clickHandler, u), u.selectHandler = t.proxy(u.selectHandler, u), u.setPosition = t.proxy(u.setPosition, u), u.swipeHandler = t.proxy(u.swipeHandler, u), u.dragHandler = t.proxy(u.dragHandler, u), u.keyHandler = t.proxy(u.keyHandler, u), u.instanceUid = i++, u.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, u.registerBreakpoints(), u.init(!0)
        }
    }()).prototype.activateADA = function () {
        this.$slideTrack.find(".slick-active").attr({"aria-hidden": "false"}).find("a, input, button, select").attr({tabindex: "0"})
    }, i.prototype.addSlide = i.prototype.slickAdd = function (i, index, s) {
        var o = this;
        if ("boolean" == typeof index) s = index, index = null; else if (index < 0 || index >= o.slideCount) return !1;
        o.unload(), "number" == typeof index ? 0 === index && 0 === o.$slides.length ? t(i).appendTo(o.$slideTrack) : s ? t(i).insertBefore(o.$slides.eq(index)) : t(i).insertAfter(o.$slides.eq(index)) : !0 === s ? t(i).prependTo(o.$slideTrack) : t(i).appendTo(o.$slideTrack), o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), o.$slideTrack.append(o.$slides), o.$slides.each(function (index, i) {
            t(i).attr("data-slick-index", index)
        }), o.$slidesCache = o.$slides, o.reinit()
    }, i.prototype.animateHeight = function () {
        var t = this;
        if (1 === t.options.slidesToShow && !0 === t.options.adaptiveHeight && !1 === t.options.vertical) {
            var i = t.$slides.eq(t.currentSlide).outerHeight(!0);
            t.$list.animate({height: i}, t.options.speed)
        }
    }, i.prototype.animateSlide = function (i, s) {
        var o = {}, l = this;
        l.animateHeight(), !0 === l.options.rtl && !1 === l.options.vertical && (i = -i), !1 === l.transformsEnabled ? !1 === l.options.vertical ? l.$slideTrack.animate({left: i}, l.options.speed, l.options.easing, s) : l.$slideTrack.animate({top: i}, l.options.speed, l.options.easing, s) : !1 === l.cssTransitions ? (!0 === l.options.rtl && (l.currentLeft = -l.currentLeft), t({animStart: l.currentLeft}).animate({animStart: i}, {
            duration: l.options.speed,
            easing: l.options.easing,
            step: function (now) {
                now = Math.ceil(now), !1 === l.options.vertical ? (o[l.animType] = "translate(" + now + "px, 0px)", l.$slideTrack.css(o)) : (o[l.animType] = "translate(0px," + now + "px)", l.$slideTrack.css(o))
            },
            complete: function () {
                s && s.call()
            }
        })) : (l.applyTransition(), i = Math.ceil(i), !1 === l.options.vertical ? o[l.animType] = "translate3d(" + i + "px, 0px, 0px)" : o[l.animType] = "translate3d(0px," + i + "px, 0px)", l.$slideTrack.css(o), s && setTimeout(function () {
            l.disableTransition(), s.call()
        }, l.options.speed))
    }, i.prototype.getNavTarget = function () {
        var i = this, s = i.options.asNavFor;
        return s && null !== s && (s = t(s).not(i.$slider)), s
    }, i.prototype.asNavFor = function (index) {
        var i = this.getNavTarget();
        null !== i && "object" == typeof i && i.each(function () {
            var target = t(this).slick("getSlick");
            target.unslicked || target.slideHandler(index, !0)
        })
    }, i.prototype.applyTransition = function (t) {
        var i = this, transition = {};
        !1 === i.options.fade ? transition[i.transitionType] = i.transformType + " " + i.options.speed + "ms " + i.options.cssEase : transition[i.transitionType] = "opacity " + i.options.speed + "ms " + i.options.cssEase, !1 === i.options.fade ? i.$slideTrack.css(transition) : i.$slides.eq(t).css(transition)
    }, i.prototype.autoPlay = function () {
        var t = this;
        t.autoPlayClear(), t.slideCount > t.options.slidesToShow && (t.autoPlayTimer = setInterval(t.autoPlayIterator, t.options.autoplaySpeed))
    }, i.prototype.autoPlayClear = function () {
        var t = this;
        t.autoPlayTimer && clearInterval(t.autoPlayTimer)
    }, i.prototype.autoPlayIterator = function () {
        var t = this, i = t.currentSlide + t.options.slidesToScroll;
        t.paused || t.interrupted || t.focussed || (!1 === t.options.infinite && (1 === t.direction && t.currentSlide + 1 === t.slideCount - 1 ? t.direction = 0 : 0 === t.direction && (i = t.currentSlide - t.options.slidesToScroll, t.currentSlide - 1 == 0 && (t.direction = 1))), t.slideHandler(i))
    }, i.prototype.buildArrows = function () {
        var i = this;
        !0 === i.options.arrows && (i.$prevArrow = t(i.options.prevArrow).addClass("slick-arrow"), i.$nextArrow = t(i.options.nextArrow).addClass("slick-arrow"), i.slideCount > i.options.slidesToShow ? (i.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), i.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), i.htmlExpr.test(i.options.prevArrow) && i.$prevArrow.prependTo(i.options.appendArrows), i.htmlExpr.test(i.options.nextArrow) && i.$nextArrow.appendTo(i.options.appendArrows), !0 !== i.options.infinite && i.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : i.$prevArrow.add(i.$nextArrow).addClass("slick-hidden").attr({
            "aria-disabled": "true",
            tabindex: "-1"
        }))
    },
        i.prototype.buildDots = function () {
            var i, s, o = this;
            if (!0 === o.options.dots && o.slideCount > o.options.slidesToShow) {
                for (o.$slider.addClass("slick-dotted"), s = t("<ul />").addClass(o.options.dotsClass), i = 0; i <= o.getDotCount(); i += 1) s.append(t("<li />").append(o.options.customPaging.call(this, o, i)));
                o.$dots = s.appendTo(o.options.appendDots), o.$dots.find("li").first().addClass("slick-active")
            }
        }, i.prototype.buildOut = function () {
        var i = this;
        i.$slides = i.$slider.children(i.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), i.slideCount = i.$slides.length, i.$slides.each(function (index, i) {
            t(i).attr("data-slick-index", index).data("originalStyling", t(i).attr("style") || "")
        }), i.$slider.addClass("slick-slider"), i.$slideTrack = 0 === i.slideCount ? t('<div class="slick-track"/>').appendTo(i.$slider) : i.$slides.wrapAll('<div class="slick-track"/>').parent(), i.$list = i.$slideTrack.wrap('<div class="slick-list"/>').parent(), i.$slideTrack.css("opacity", 0), !0 !== i.options.centerMode && !0 !== i.options.swipeToSlide || (i.options.slidesToScroll = 1), t("img[data-lazy]", i.$slider).not("[src]").addClass("slick-loading"), i.setupInfinite(), i.buildArrows(), i.buildDots(), i.updateDots(), i.setSlideClasses("number" == typeof i.currentSlide ? i.currentSlide : 0), !0 === i.options.draggable && i.$list.addClass("draggable")
    }, i.prototype.buildRows = function () {
        var a, b, c, t, i, s, o, l = this;
        if (t = document.createDocumentFragment(), s = l.$slider.children(), l.options.rows > 0) {
            for (o = l.options.slidesPerRow * l.options.rows, i = Math.ceil(s.length / o), a = 0; a < i; a++) {
                var u = document.createElement("div");
                for (b = 0; b < l.options.rows; b++) {
                    var h = document.createElement("div");
                    for (c = 0; c < l.options.slidesPerRow; c++) {
                        var target = a * o + (b * l.options.slidesPerRow + c);
                        s.get(target) && h.appendChild(s.get(target))
                    }
                    u.appendChild(h)
                }
                t.appendChild(u)
            }
            l.$slider.empty().append(t), l.$slider.children().children().children().css({
                width: 100 / l.options.slidesPerRow + "%",
                display: "inline-block"
            })
        }
    }, i.prototype.checkResponsive = function (i, s) {
        var o, l, u, h = this, p = !1, m = h.$slider.width(), _ = window.innerWidth || t(window).width();
        if ("window" === h.respondTo ? u = _ : "slider" === h.respondTo ? u = m : "min" === h.respondTo && (u = Math.min(_, m)), h.options.responsive && h.options.responsive.length && null !== h.options.responsive) {
            l = null;
            for (o in h.breakpoints) h.breakpoints.hasOwnProperty(o) && (!1 === h.originalSettings.mobileFirst ? u < h.breakpoints[o] && (l = h.breakpoints[o]) : u > h.breakpoints[o] && (l = h.breakpoints[o]));
            null !== l ? null !== h.activeBreakpoint ? (l !== h.activeBreakpoint || s) && (h.activeBreakpoint = l, "unslick" === h.breakpointSettings[l] ? h.unslick(l) : (h.options = t.extend({}, h.originalSettings, h.breakpointSettings[l]), !0 === i && (h.currentSlide = h.options.initialSlide), h.refresh(i)), p = l) : (h.activeBreakpoint = l, "unslick" === h.breakpointSettings[l] ? h.unslick(l) : (h.options = t.extend({}, h.originalSettings, h.breakpointSettings[l]), !0 === i && (h.currentSlide = h.options.initialSlide), h.refresh(i)), p = l) : null !== h.activeBreakpoint && (h.activeBreakpoint = null, h.options = h.originalSettings, !0 === i && (h.currentSlide = h.options.initialSlide), h.refresh(i), p = l), i || !1 === p || h.$slider.trigger("breakpoint", [h, p])
        }
    }, i.prototype.changeSlide = function (event, i) {
        var s, o, l, u = this, h = t(event.currentTarget);
        switch (h.is("a") && event.preventDefault(), h.is("li") || (h = h.closest("li")), l = u.slideCount % u.options.slidesToScroll != 0, s = l ? 0 : (u.slideCount - u.currentSlide) % u.options.slidesToScroll, event.data.message) {
            case"previous":
                o = 0 === s ? u.options.slidesToScroll : u.options.slidesToShow - s, u.slideCount > u.options.slidesToShow && u.slideHandler(u.currentSlide - o, !1, i);
                break;
            case"next":
                o = 0 === s ? u.options.slidesToScroll : s, u.slideCount > u.options.slidesToShow && u.slideHandler(u.currentSlide + o, !1, i);
                break;
            case"index":
                var index = 0 === event.data.index ? 0 : event.data.index || h.index() * u.options.slidesToScroll;
                u.slideHandler(u.checkNavigable(index), !1, i), h.children().trigger("focus");
                break;
            default:
                return
        }
    }, i.prototype.checkNavigable = function (index) {
        var t, i;
        if (t = this.getNavigableIndexes(), i = 0, index > t[t.length - 1]) index = t[t.length - 1]; else for (var n in t) {
            if (index < t[n]) {
                index = i;
                break
            }
            i = t[n]
        }
        return index
    }, i.prototype.cleanUpEvents = function () {
        var i = this;
        i.options.dots && null !== i.$dots && (t("li", i.$dots).off("click.slick tap", i.changeSlide).off("mouseenter.slick", t.proxy(i.interrupt, i, !0)).off("mouseleave.slick", t.proxy(i.interrupt, i, !1)), !0 === i.options.accessibility && i.$dots.off("keydown.slick", i.keyHandler)), i.$slider.off("focus.slick blur.slick"), !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow && i.$prevArrow.off("click.slick tap", i.changeSlide), i.$nextArrow && i.$nextArrow.off("click.slick tap", i.changeSlide), !0 === i.options.accessibility && (i.$prevArrow && i.$prevArrow.off("keydown.slick", i.keyHandler), i.$nextArrow && i.$nextArrow.off("keydown.slick", i.keyHandler))), i.$list.off("touchstart.slick mousedown.slick", i.swipeHandler), i.$list.off("touchmove.slick mousemove.slick", i.swipeHandler), i.$list.off("touchend.slick mouseup.slick", i.swipeHandler), i.$list.off("touchcancel.slick mouseleave.slick", i.swipeHandler), i.$list.off("click.slick tap", i.clickHandler), t(document).off(i.visibilityChange, i.visibility), i.cleanUpSlideEvents(), !0 === i.options.accessibility && i.$list.off("keydown.slick", i.keyHandler), !0 === i.options.focusOnSelect && t(i.$slideTrack).children().off("click.slick tap", i.selectHandler), t(window).off("orientationchange.slick.slick-" + i.instanceUid, i.orientationChange), t(window).off("resize.slick.slick-" + i.instanceUid, i.resize), t("[draggable!=true]", i.$slideTrack).off("dragstart", i.preventDefault), t(window).off("load.slick.slick-" + i.instanceUid, i.setPosition)
    }, i.prototype.cleanUpSlideEvents = function () {
        var i = this;
        i.$list.off("mouseenter.slick", t.proxy(i.interrupt, i, !0)), i.$list.off("mouseleave.slick", t.proxy(i.interrupt, i, !1))
    }, i.prototype.cleanUpRows = function () {
        var t, i = this;
        i.options.rows > 0 && ((t = i.$slides.children().children()).removeAttr("style"), i.$slider.empty().append(t))
    }, i.prototype.clickHandler = function (event) {
        !1 === this.shouldClick && (event.stopImmediatePropagation(), event.stopPropagation(), event.preventDefault())
    }, i.prototype.destroy = function (refresh) {
        var i = this;
        i.autoPlayClear(), i.touchObject = {}, i.cleanUpEvents(), t(".slick-cloned", i.$slider).detach(), i.$dots && i.$dots.remove(), i.$prevArrow && i.$prevArrow.length && (i.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), i.htmlExpr.test(i.options.prevArrow) && i.$prevArrow.remove()), i.$nextArrow && i.$nextArrow.length && (i.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), i.htmlExpr.test(i.options.nextArrow) && i.$nextArrow.remove()), i.$slides && (i.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function () {
            t(this).attr("style", t(this).data("originalStyling"))
        }), i.$slideTrack.children(this.options.slide).detach(), i.$slideTrack.detach(), i.$list.detach(), i.$slider.append(i.$slides)), i.cleanUpRows(), i.$slider.removeClass("slick-slider"), i.$slider.removeClass("slick-initialized"), i.$slider.removeClass("slick-dotted"), i.unslicked = !0, refresh || i.$slider.trigger("destroy", [i])
    }, i.prototype.disableTransition = function (t) {
        var i = this, transition = {};
        transition[i.transitionType] = "", !1 === i.options.fade ? i.$slideTrack.css(transition) : i.$slides.eq(t).css(transition)
    }, i.prototype.fadeSlide = function (t, i) {
        var s = this;
        !1 === s.cssTransitions ? (s.$slides.eq(t).css({zIndex: s.options.zIndex}), s.$slides.eq(t).animate({opacity: 1}, s.options.speed, s.options.easing, i)) : (s.applyTransition(t), s.$slides.eq(t).css({
            opacity: 1,
            zIndex: s.options.zIndex
        }), i && setTimeout(function () {
            s.disableTransition(t), i.call()
        }, s.options.speed))
    }, i.prototype.fadeSlideOut = function (t) {
        var i = this;
        !1 === i.cssTransitions ? i.$slides.eq(t).animate({
            opacity: 0,
            zIndex: i.options.zIndex - 2
        }, i.options.speed, i.options.easing) : (i.applyTransition(t), i.$slides.eq(t).css({
            opacity: 0,
            zIndex: i.options.zIndex - 2
        }))
    },
        i.prototype.filterSlides = i.prototype.slickFilter = function (filter) {
            var t = this;
            null !== filter && (t.$slidesCache = t.$slides, t.unload(), t.$slideTrack.children(this.options.slide).detach(), t.$slidesCache.filter(filter).appendTo(t.$slideTrack), t.reinit())
        }, i.prototype.focusHandler = function () {
        var i = this;
        i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function (event) {
            event.stopImmediatePropagation();
            var s = t(this);
            setTimeout(function () {
                i.options.pauseOnFocus && (i.focussed = s.is(":focus"), i.autoPlay())
            }, 0)
        })
    }, i.prototype.getCurrent = i.prototype.slickCurrentSlide = function () {
        return this.currentSlide
    }, i.prototype.getDotCount = function () {
        var t = this, i = 0, s = 0, o = 0;
        if (!0 === t.options.infinite) if (t.slideCount <= t.options.slidesToShow) ++o; else for (; i < t.slideCount;) ++o, i = s + t.options.slidesToScroll, s += t.options.slidesToScroll <= t.options.slidesToShow ? t.options.slidesToScroll : t.options.slidesToShow; else if (!0 === t.options.centerMode) o = t.slideCount; else if (t.options.asNavFor) for (; i < t.slideCount;) ++o, i = s + t.options.slidesToScroll, s += t.options.slidesToScroll <= t.options.slidesToShow ? t.options.slidesToScroll : t.options.slidesToShow; else o = 1 + Math.ceil((t.slideCount - t.options.slidesToShow) / t.options.slidesToScroll);
        return o - 1
    }, i.prototype.getLeft = function (t) {
        var i, s, o, l, u = this, h = 0;
        return u.slideOffset = 0, s = u.$slides.first().outerHeight(!0), !0 === u.options.infinite ? (u.slideCount > u.options.slidesToShow && (u.slideOffset = u.slideWidth * u.options.slidesToShow * -1, l = -1, !0 === u.options.vertical && !0 === u.options.centerMode && (2 === u.options.slidesToShow ? l = -1.5 : 1 === u.options.slidesToShow && (l = -2)), h = s * u.options.slidesToShow * l), u.slideCount % u.options.slidesToScroll != 0 && t + u.options.slidesToScroll > u.slideCount && u.slideCount > u.options.slidesToShow && (t > u.slideCount ? (u.slideOffset = (u.options.slidesToShow - (t - u.slideCount)) * u.slideWidth * -1, h = (u.options.slidesToShow - (t - u.slideCount)) * s * -1) : (u.slideOffset = u.slideCount % u.options.slidesToScroll * u.slideWidth * -1, h = u.slideCount % u.options.slidesToScroll * s * -1))) : t + u.options.slidesToShow > u.slideCount && (u.slideOffset = (t + u.options.slidesToShow - u.slideCount) * u.slideWidth, h = (t + u.options.slidesToShow - u.slideCount) * s), u.slideCount <= u.options.slidesToShow && (u.slideOffset = 0, h = 0), !0 === u.options.centerMode && u.slideCount <= u.options.slidesToShow ? u.slideOffset = u.slideWidth * Math.floor(u.options.slidesToShow) / 2 - u.slideWidth * u.slideCount / 2 : !0 === u.options.centerMode && !0 === u.options.infinite ? u.slideOffset += u.slideWidth * Math.floor(u.options.slidesToShow / 2) - u.slideWidth : !0 === u.options.centerMode && (u.slideOffset = 0, u.slideOffset += u.slideWidth * Math.floor(u.options.slidesToShow / 2)), i = !1 === u.options.vertical ? t * u.slideWidth * -1 + u.slideOffset : t * s * -1 + h, !0 === u.options.variableWidth && (o = u.slideCount <= u.options.slidesToShow || !1 === u.options.infinite ? u.$slideTrack.children(".slick-slide").eq(t) : u.$slideTrack.children(".slick-slide").eq(t + u.options.slidesToShow), i = !0 === u.options.rtl ? o[0] ? -1 * (u.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, !0 === u.options.centerMode && (o = u.slideCount <= u.options.slidesToShow || !1 === u.options.infinite ? u.$slideTrack.children(".slick-slide").eq(t) : u.$slideTrack.children(".slick-slide").eq(t + u.options.slidesToShow + 1), i = !0 === u.options.rtl ? o[0] ? -1 * (u.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, i += (u.$list.width() - o.outerWidth()) / 2)), i
    }, i.prototype.getOption = i.prototype.slickGetOption = function (t) {
        return this.options[t]
    }, i.prototype.getNavigableIndexes = function () {
        var max, t = this, i = 0, s = 0, o = [];
        for (!1 === t.options.infinite ? max = t.slideCount : (i = -1 * t.options.slidesToScroll, s = -1 * t.options.slidesToScroll, max = 2 * t.slideCount); i < max;) o.push(i), i = s + t.options.slidesToScroll, s += t.options.slidesToScroll <= t.options.slidesToShow ? t.options.slidesToScroll : t.options.slidesToShow;
        return o
    }, i.prototype.getSlick = function () {
        return this
    }, i.prototype.getSlideCount = function () {
        var i, s, o = this;
        return s = !0 === o.options.centerMode ? o.slideWidth * Math.floor(o.options.slidesToShow / 2) : 0,
            !0 === o.options.swipeToSlide ? (o.$slideTrack.find(".slick-slide").each(function (index, l) {
                if (l.offsetLeft - s + t(l).outerWidth() / 2 > -1 * o.swipeLeft) return i = l, !1
            }), Math.abs(t(i).attr("data-slick-index") - o.currentSlide) || 1) : o.options.slidesToScroll
    }, i.prototype.goTo = i.prototype.slickGoTo = function (t, i) {
        this.changeSlide({data: {message: "index", index: parseInt(t)}}, i)
    }, i.prototype.init = function (i) {
        var s = this;
        t(s.$slider).hasClass("slick-initialized") || (t(s.$slider).addClass("slick-initialized"), s.buildRows(), s.buildOut(), s.setProps(), s.startLoad(), s.loadSlider(), s.initializeEvents(), s.updateArrows(), s.updateDots(), s.checkResponsive(!0), s.focusHandler()), i && s.$slider.trigger("init", [s]), !0 === s.options.accessibility && s.initADA(), s.options.autoplay && (s.paused = !1, s.autoPlay())
    }, i.prototype.initADA = function () {
        var i = this, s = Math.ceil(i.slideCount / i.options.slidesToShow),
            o = i.getNavigableIndexes().filter(function (t) {
                return t >= 0 && t < i.slideCount
            });
        i.$slides.add(i.$slideTrack.find(".slick-cloned")).attr({
            "aria-hidden": "true",
            tabindex: "-1"
        }).find("a, input, button, select").attr({tabindex: "-1"}), null !== i.$dots && (i.$slides.not(i.$slideTrack.find(".slick-cloned")).each(function (s) {
            var l = o.indexOf(s);
            if (t(this).attr({role: "tabpanel", id: "slick-slide" + i.instanceUid + s, tabindex: -1}), -1 !== l) {
                var u = "slick-slide-control" + i.instanceUid + l;
                t("#" + u).length && t(this).attr({"aria-describedby": u})
            }
        }), i.$dots.attr("role", "tablist").find("li").each(function (l) {
            var u = o[l];
            t(this).attr({role: "presentation"}), t(this).find("button").first().attr({
                role: "tab",
                id: "slick-slide-control" + i.instanceUid + l,
                "aria-controls": "slick-slide" + i.instanceUid + u,
                "aria-label": l + 1 + " of " + s,
                "aria-selected": null,
                tabindex: "-1"
            })
        }).eq(i.currentSlide).find("button").attr({"aria-selected": "true", tabindex: "0"}).end());
        for (var l = i.currentSlide, max = l + i.options.slidesToShow; l < max; l++) i.options.focusOnChange ? i.$slides.eq(l).attr({tabindex: "0"}) : i.$slides.eq(l).removeAttr("tabindex");
        i.activateADA()
    }, i.prototype.initArrowEvents = function () {
        var t = this;
        !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && (t.$prevArrow.off("click.slick tap").on("click.slick tap", {message: "previous"}, t.changeSlide), t.$nextArrow.off("click.slick tap").on("click.slick tap", {message: "next"}, t.changeSlide), !0 === t.options.accessibility && (t.$prevArrow.on("keydown.slick", t.keyHandler), t.$nextArrow.on("keydown.slick", t.keyHandler)))
    }, i.prototype.initDotEvents = function () {
        var i = this;
        !0 === i.options.dots && i.slideCount > i.options.slidesToShow && (t("li", i.$dots).on("click.slick tap", {message: "index"}, i.changeSlide), !0 === i.options.accessibility && i.$dots.on("keydown.slick", i.keyHandler)), !0 === i.options.dots && !0 === i.options.pauseOnDotsHover && i.slideCount > i.options.slidesToShow && t("li", i.$dots).on("mouseenter.slick", t.proxy(i.interrupt, i, !0)).on("mouseleave.slick", t.proxy(i.interrupt, i, !1))
    }, i.prototype.initSlideEvents = function () {
        var i = this;
        i.options.pauseOnHover && (i.$list.on("mouseenter.slick", t.proxy(i.interrupt, i, !0)), i.$list.on("mouseleave.slick", t.proxy(i.interrupt, i, !1)))
    }, i.prototype.initializeEvents = function () {
        var i = this;
        i.initArrowEvents(), i.initDotEvents(), i.initSlideEvents(), i.$list.on("touchstart.slick mousedown.slick", {action: "start"}, i.swipeHandler), i.$list.on("touchmove.slick mousemove.slick", {action: "move"}, i.swipeHandler), i.$list.on("touchend.slick mouseup.slick", {action: "end"}, i.swipeHandler), i.$list.on("touchcancel.slick mouseleave.slick", {action: "end"}, i.swipeHandler), i.$list.on("click.slick tap", i.clickHandler), t(document).on(i.visibilityChange, t.proxy(i.visibility, i)), !0 === i.options.accessibility && i.$list.on("keydown.slick", i.keyHandler), !0 === i.options.focusOnSelect && t(i.$slideTrack).children().on("click.slick tap", i.selectHandler), t(window).on("orientationchange.slick.slick-" + i.instanceUid, t.proxy(i.orientationChange, i)), t(window).on("resize.slick.slick-" + i.instanceUid, t.proxy(i.resize, i)), t("[draggable!=true]", i.$slideTrack).on("dragstart", i.preventDefault), t(window).on("load.slick.slick-" + i.instanceUid, i.setPosition),
            t(i.setPosition)
    }, i.prototype.initUI = function () {
        var t = this;
        !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && (t.$prevArrow.show(), t.$nextArrow.show()), !0 === t.options.dots && t.slideCount > t.options.slidesToShow && t.$dots.show()
    }, i.prototype.keyHandler = function (event) {
        var t = this;
        event.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === event.keyCode && !0 === t.options.accessibility ? t.changeSlide({data: {message: !0 === t.options.rtl ? "next" : "previous"}}) : 39 === event.keyCode && !0 === t.options.accessibility && t.changeSlide({data: {message: !0 === t.options.rtl ? "previous" : "next"}}))
    }, i.prototype.lazyLoad = function () {
        function loadImages(i) {
            t("img[data-lazy]", i).each(function () {
                var i = t(this), s = t(this).attr("data-lazy"), o = t(this).attr("data-srcset"),
                    u = t(this).attr("data-sizes") || l.$slider.attr("data-sizes"), h = document.createElement("img");
                h.onload = function () {
                    i.animate({opacity: 0}, 100, function () {
                        o && (i.attr("srcset", o), u && i.attr("sizes", u)), i.attr("src", s).animate({opacity: 1}, 200, function () {
                            i.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")
                        }), l.$slider.trigger("lazyLoaded", [l, i, s])
                    })
                }, h.onerror = function () {
                    i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), l.$slider.trigger("lazyLoadError", [l, i, s])
                }, h.src = s
            })
        }

        var i, s, o, l = this;
        if (!0 === l.options.centerMode ? !0 === l.options.infinite ? o = (s = l.currentSlide + (l.options.slidesToShow / 2 + 1)) + l.options.slidesToShow + 2 : (s = Math.max(0, l.currentSlide - (l.options.slidesToShow / 2 + 1)), o = l.options.slidesToShow / 2 + 1 + 2 + l.currentSlide) : (s = l.options.infinite ? l.options.slidesToShow + l.currentSlide : l.currentSlide, o = Math.ceil(s + l.options.slidesToShow), !0 === l.options.fade && (s > 0 && s--, o <= l.slideCount && o++)), i = l.$slider.find(".slick-slide").slice(s, o), "anticipated" === l.options.lazyLoad) for (var u = s - 1, h = o, p = l.$slider.find(".slick-slide"), m = 0; m < l.options.slidesToScroll; m++) u < 0 && (u = l.slideCount - 1), i = (i = i.add(p.eq(u))).add(p.eq(h)), u--, h++;
        loadImages(i), l.slideCount <= l.options.slidesToShow ? loadImages(l.$slider.find(".slick-slide")) : l.currentSlide >= l.slideCount - l.options.slidesToShow ? loadImages(l.$slider.find(".slick-cloned").slice(0, l.options.slidesToShow)) : 0 === l.currentSlide && loadImages(l.$slider.find(".slick-cloned").slice(-1 * l.options.slidesToShow))
    }, i.prototype.loadSlider = function () {
        var t = this;
        t.setPosition(), t.$slideTrack.css({opacity: 1}), t.$slider.removeClass("slick-loading"), t.initUI(), "progressive" === t.options.lazyLoad && t.progressiveLazyLoad()
    }, i.prototype.next = i.prototype.slickNext = function () {
        this.changeSlide({data: {message: "next"}})
    }, i.prototype.orientationChange = function () {
        var t = this;
        t.checkResponsive(), t.setPosition()
    }, i.prototype.pause = i.prototype.slickPause = function () {
        var t = this;
        t.autoPlayClear(), t.paused = !0
    }, i.prototype.play = i.prototype.slickPlay = function () {
        var t = this;
        t.autoPlay(), t.options.autoplay = !0, t.paused = !1, t.focussed = !1, t.interrupted = !1
    }, i.prototype.postSlide = function (index) {
        var i = this;
        i.unslicked || (i.$slider.trigger("afterChange", [i, index]), i.animating = !1, i.slideCount > i.options.slidesToShow && i.setPosition(), i.swipeLeft = null, i.options.autoplay && i.autoPlay(), !0 === i.options.accessibility && (i.initADA(), i.options.focusOnChange && t(i.$slides.get(i.currentSlide)).attr("tabindex", 0).focus()))
    }, i.prototype.prev = i.prototype.slickPrev = function () {
        this.changeSlide({data: {message: "previous"}})
    }, i.prototype.preventDefault = function (event) {
        event.preventDefault()
    }, i.prototype.progressiveLazyLoad = function (i) {
        i = i || 1;
        var s, o, l, u, h, p = this, m = t("img[data-lazy]", p.$slider);
        m.length ? (s = m.first(), o = s.attr("data-lazy"), l = s.attr("data-srcset"), u = s.attr("data-sizes") || p.$slider.attr("data-sizes"), (h = document.createElement("img")).onload = function () {
            l && (s.attr("srcset", l), u && s.attr("sizes", u)), s.attr("src", o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), !0 === p.options.adaptiveHeight && p.setPosition(), p.$slider.trigger("lazyLoaded", [p, s, o]), p.progressiveLazyLoad()
        }, h.onerror = function () {
            i < 3 ? setTimeout(function () {
                p.progressiveLazyLoad(i + 1)
            }, 500) : (s.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), p.$slider.trigger("lazyLoadError", [p, s, o]), p.progressiveLazyLoad())
        }, h.src = o) : p.$slider.trigger("allImagesLoaded", [p])
    }, i.prototype.refresh = function (i) {
        var s, o, l = this;
        o = l.slideCount - l.options.slidesToShow, !l.options.infinite && l.currentSlide > o && (l.currentSlide = o), l.slideCount <= l.options.slidesToShow && (l.currentSlide = 0), s = l.currentSlide, l.destroy(!0), t.extend(l, l.initials, {currentSlide: s}), l.init(), i || l.changeSlide({
            data: {
                message: "index",
                index: s
            }
        }, !1)
    }, i.prototype.registerBreakpoints = function () {
        var i, s, o, l = this, u = l.options.responsive || null;
        if ("array" === t.type(u) && u.length) {
            l.respondTo = l.options.respondTo || "window";
            for (i in u) if (o = l.breakpoints.length - 1, u.hasOwnProperty(i)) {
                for (s = u[i].breakpoint; o >= 0;) l.breakpoints[o] && l.breakpoints[o] === s && l.breakpoints.splice(o, 1), o--;
                l.breakpoints.push(s), l.breakpointSettings[s] = u[i].settings
            }
            l.breakpoints.sort(function (a, b) {
                return l.options.mobileFirst ? a - b : b - a
            })
        }
    }, i.prototype.reinit = function () {
        var i = this;
        i.$slides = i.$slideTrack.children(i.options.slide).addClass("slick-slide"), i.slideCount = i.$slides.length, i.currentSlide >= i.slideCount && 0 !== i.currentSlide && (i.currentSlide = i.currentSlide - i.options.slidesToScroll), i.slideCount <= i.options.slidesToShow && (i.currentSlide = 0), i.registerBreakpoints(), i.setProps(), i.setupInfinite(), i.buildArrows(), i.updateArrows(), i.initArrowEvents(), i.buildDots(), i.updateDots(), i.initDotEvents(), i.cleanUpSlideEvents(), i.initSlideEvents(), i.checkResponsive(!1, !0), !0 === i.options.focusOnSelect && t(i.$slideTrack).children().on("click.slick tap", i.selectHandler), i.setSlideClasses("number" == typeof i.currentSlide ? i.currentSlide : 0), i.setPosition(), i.focusHandler(), i.paused = !i.options.autoplay, i.autoPlay(), i.$slider.trigger("reInit", [i])
    }, i.prototype.resize = function () {
        var i = this;
        t(window).width() !== i.windowWidth && (clearTimeout(i.windowDelay), i.windowDelay = window.setTimeout(function () {
            i.windowWidth = t(window).width(), i.checkResponsive(), i.unslicked || i.setPosition()
        }, 50))
    }, i.prototype.removeSlide = i.prototype.slickRemove = function (index, t, i) {
        var s = this;
        if (index = "boolean" == typeof index ? !0 === (t = index) ? 0 : s.slideCount - 1 : !0 === t ? --index : index, s.slideCount < 1 || index < 0 || index > s.slideCount - 1) return !1;
        s.unload(), !0 === i ? s.$slideTrack.children().remove() : s.$slideTrack.children(this.options.slide).eq(index).remove(), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slidesCache = s.$slides, s.reinit()
    }, i.prototype.setCSS = function (position) {
        var x, y, t = this, i = {};
        !0 === t.options.rtl && (position = -position), x = "left" == t.positionProp ? Math.ceil(position) + "px" : "0px", y = "top" == t.positionProp ? Math.ceil(position) + "px" : "0px", i[t.positionProp] = position, !1 === t.transformsEnabled ? t.$slideTrack.css(i) : (i = {}, !1 === t.cssTransitions ? (i[t.animType] = "translate(" + x + ", " + y + ")", t.$slideTrack.css(i)) : (i[t.animType] = "translate3d(" + x + ", " + y + ", 0px)", t.$slideTrack.css(i)))
    }, i.prototype.setDimensions = function () {
        var t = this;
        !1 === t.options.vertical ? !0 === t.options.centerMode && t.$list.css({padding: "0px " + t.options.centerPadding}) : (t.$list.height(t.$slides.first().outerHeight(!0) * t.options.slidesToShow), !0 === t.options.centerMode && t.$list.css({padding: t.options.centerPadding + " 0px"})), t.listWidth = t.$list.width(), t.listHeight = t.$list.height(), !1 === t.options.vertical && !1 === t.options.variableWidth ? (t.slideWidth = Math.ceil(t.listWidth / t.options.slidesToShow), t.$slideTrack.width(Math.ceil(t.slideWidth * t.$slideTrack.children(".slick-slide").length))) : !0 === t.options.variableWidth ? t.$slideTrack.width(5e3 * t.slideCount) : (t.slideWidth = Math.ceil(t.listWidth), t.$slideTrack.height(Math.ceil(t.$slides.first().outerHeight(!0) * t.$slideTrack.children(".slick-slide").length)));
        var offset = t.$slides.first().outerWidth(!0) - t.$slides.first().width();
        !1 === t.options.variableWidth && t.$slideTrack.children(".slick-slide").width(t.slideWidth - offset)
    }, i.prototype.setFade = function () {
        var i, s = this;
        s.$slides.each(function (index, o) {
            i = s.slideWidth * index * -1, !0 === s.options.rtl ? t(o).css({
                position: "relative",
                right: i,
                top: 0,
                zIndex: s.options.zIndex - 2,
                opacity: 0
            }) : t(o).css({position: "relative", left: i, top: 0, zIndex: s.options.zIndex - 2, opacity: 0})
        }), s.$slides.eq(s.currentSlide).css({zIndex: s.options.zIndex - 1, opacity: 1})
    }, i.prototype.setHeight = function () {
        var t = this;
        if (1 === t.options.slidesToShow && !0 === t.options.adaptiveHeight && !1 === t.options.vertical) {
            var i = t.$slides.eq(t.currentSlide).outerHeight(!0);
            t.$list.css("height", i)
        }
    }, i.prototype.setOption = i.prototype.slickSetOption = function () {
        var i, item, s, value, type, o = this, refresh = !1;
        if ("object" === t.type(arguments[0]) ? (s = arguments[0], refresh = arguments[1], type = "multiple") : "string" === t.type(arguments[0]) && (s = arguments[0], value = arguments[1], refresh = arguments[2], "responsive" === arguments[0] && "array" === t.type(arguments[1]) ? type = "responsive" : void 0 !== arguments[1] && (type = "single")), "single" === type) o.options[s] = value; else if ("multiple" === type) t.each(s, function (t, i) {
            o.options[t] = i
        }); else if ("responsive" === type) for (item in value) if ("array" !== t.type(o.options.responsive)) o.options.responsive = [value[item]]; else {
            for (i = o.options.responsive.length - 1; i >= 0;) o.options.responsive[i].breakpoint === value[item].breakpoint && o.options.responsive.splice(i, 1), i--;
            o.options.responsive.push(value[item])
        }
        refresh && (o.unload(), o.reinit())
    }, i.prototype.setPosition = function () {
        var t = this;
        t.setDimensions(), t.setHeight(), !1 === t.options.fade ? t.setCSS(t.getLeft(t.currentSlide)) : t.setFade(), t.$slider.trigger("setPosition", [t])
    }, i.prototype.setProps = function () {
        var t = this, i = document.body.style;
        t.positionProp = !0 === t.options.vertical ? "top" : "left", "top" === t.positionProp ? t.$slider.addClass("slick-vertical") : t.$slider.removeClass("slick-vertical"), void 0 === i.WebkitTransition && void 0 === i.MozTransition && void 0 === i.msTransition || !0 === t.options.useCSS && (t.cssTransitions = !0), t.options.fade && ("number" == typeof t.options.zIndex ? t.options.zIndex < 3 && (t.options.zIndex = 3) : t.options.zIndex = t.defaults.zIndex), void 0 !== i.OTransform && (t.animType = "OTransform", t.transformType = "-o-transform", t.transitionType = "OTransition", void 0 === i.perspectiveProperty && void 0 === i.webkitPerspective && (t.animType = !1)), void 0 !== i.MozTransform && (t.animType = "MozTransform", t.transformType = "-moz-transform", t.transitionType = "MozTransition", void 0 === i.perspectiveProperty && void 0 === i.MozPerspective && (t.animType = !1)), void 0 !== i.webkitTransform && (t.animType = "webkitTransform", t.transformType = "-webkit-transform", t.transitionType = "webkitTransition", void 0 === i.perspectiveProperty && void 0 === i.webkitPerspective && (t.animType = !1)), void 0 !== i.msTransform && (t.animType = "msTransform", t.transformType = "-ms-transform", t.transitionType = "msTransition", void 0 === i.msTransform && (t.animType = !1)), void 0 !== i.transform && !1 !== t.animType && (t.animType = "transform", t.transformType = "transform", t.transitionType = "transition"), t.transformsEnabled = t.options.useTransform && null !== t.animType && !1 !== t.animType
    }, i.prototype.setSlideClasses = function (index) {
        var t, i, s, o, l = this;
        if (i = l.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), l.$slides.eq(index).addClass("slick-current"), !0 === l.options.centerMode) {
            var u = l.options.slidesToShow % 2 == 0 ? 1 : 0;
            t = Math.floor(l.options.slidesToShow / 2), !0 === l.options.infinite && (index >= t && index <= l.slideCount - 1 - t ? l.$slides.slice(index - t + u, index + t + 1).addClass("slick-active").attr("aria-hidden", "false") : (s = l.options.slidesToShow + index, i.slice(s - t + 1 + u, s + t + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === index ? i.eq(i.length - 1 - l.options.slidesToShow).addClass("slick-center") : index === l.slideCount - 1 && i.eq(l.options.slidesToShow).addClass("slick-center")), l.$slides.eq(index).addClass("slick-center")
        } else index >= 0 && index <= l.slideCount - l.options.slidesToShow ? l.$slides.slice(index, index + l.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : i.length <= l.options.slidesToShow ? i.addClass("slick-active").attr("aria-hidden", "false") : (o = l.slideCount % l.options.slidesToShow, s = !0 === l.options.infinite ? l.options.slidesToShow + index : index, l.options.slidesToShow == l.options.slidesToScroll && l.slideCount - index < l.options.slidesToShow ? i.slice(s - (l.options.slidesToShow - o), s + o).addClass("slick-active").attr("aria-hidden", "false") : i.slice(s, s + l.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false"));
        "ondemand" !== l.options.lazyLoad && "anticipated" !== l.options.lazyLoad || l.lazyLoad()
    }, i.prototype.setupInfinite = function () {
        var i, s, o, l = this;
        if (!0 === l.options.fade && (l.options.centerMode = !1), !0 === l.options.infinite && !1 === l.options.fade && (s = null, l.slideCount > l.options.slidesToShow)) {
            for (o = !0 === l.options.centerMode ? l.options.slidesToShow + 1 : l.options.slidesToShow, i = l.slideCount; i > l.slideCount - o; i -= 1) s = i - 1, t(l.$slides[s]).clone(!0).attr("id", "").attr("data-slick-index", s - l.slideCount).prependTo(l.$slideTrack).addClass("slick-cloned");
            for (i = 0; i < o + l.slideCount; i += 1) s = i, t(l.$slides[s]).clone(!0).attr("id", "").attr("data-slick-index", s + l.slideCount).appendTo(l.$slideTrack).addClass("slick-cloned");
            l.$slideTrack.find(".slick-cloned").find("[id]").each(function () {
                t(this).attr("id", "")
            })
        }
    }, i.prototype.interrupt = function (toggle) {
        var t = this;
        toggle || t.autoPlay(), t.interrupted = toggle
    }, i.prototype.selectHandler = function (event) {
        var i = this,
            targetElement = t(event.target).is(".slick-slide") ? t(event.target) : t(event.target).parents(".slick-slide"),
            index = parseInt(targetElement.attr("data-slick-index"));
        index || (index = 0), i.slideCount <= i.options.slidesToShow ? i.slideHandler(index, !1, !0) : i.slideHandler(index)
    }, i.prototype.slideHandler = function (index, t, i) {
        var s, o, l, u, h, p = null, m = this;
        if (t = t || !1, !(!0 === m.animating && !0 === m.options.waitForAnimate || !0 === m.options.fade && m.currentSlide === index)) if (!1 === t && m.asNavFor(index), s = index, p = m.getLeft(s), u = m.getLeft(m.currentSlide), m.currentLeft = null === m.swipeLeft ? u : m.swipeLeft, !1 === m.options.infinite && !1 === m.options.centerMode && (index < 0 || index > m.getDotCount() * m.options.slidesToScroll)) !1 === m.options.fade && (s = m.currentSlide, !0 !== i && m.slideCount > m.options.slidesToShow ? m.animateSlide(u, function () {
            m.postSlide(s)
        }) : m.postSlide(s)); else if (!1 === m.options.infinite && !0 === m.options.centerMode && (index < 0 || index > m.slideCount - m.options.slidesToScroll)) !1 === m.options.fade && (s = m.currentSlide, !0 !== i && m.slideCount > m.options.slidesToShow ? m.animateSlide(u, function () {
            m.postSlide(s)
        }) : m.postSlide(s)); else {
            if (m.options.autoplay && clearInterval(m.autoPlayTimer), o = s < 0 ? m.slideCount % m.options.slidesToScroll != 0 ? m.slideCount - m.slideCount % m.options.slidesToScroll : m.slideCount + s : s >= m.slideCount ? m.slideCount % m.options.slidesToScroll != 0 ? 0 : s - m.slideCount : s, m.animating = !0, m.$slider.trigger("beforeChange", [m, m.currentSlide, o]), l = m.currentSlide, m.currentSlide = o, m.setSlideClasses(m.currentSlide), m.options.asNavFor && (h = (h = m.getNavTarget()).slick("getSlick")).slideCount <= h.options.slidesToShow && h.setSlideClasses(m.currentSlide), m.updateDots(), m.updateArrows(), !0 === m.options.fade) return !0 !== i ? (m.fadeSlideOut(l), m.fadeSlide(o, function () {
                m.postSlide(o)
            })) : m.postSlide(o), void m.animateHeight();
            !0 !== i && m.slideCount > m.options.slidesToShow ? m.animateSlide(p, function () {
                m.postSlide(o)
            }) : m.postSlide(o)
        }
    }, i.prototype.startLoad = function () {
        var t = this;
        !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && (t.$prevArrow.hide(), t.$nextArrow.hide()), !0 === t.options.dots && t.slideCount > t.options.slidesToShow && t.$dots.hide(), t.$slider.addClass("slick-loading")
    }, i.prototype.swipeDirection = function () {
        var t, i, r, s, o = this;
        return t = o.touchObject.startX - o.touchObject.curX, i = o.touchObject.startY - o.touchObject.curY, r = Math.atan2(i, t), (s = Math.round(180 * r / Math.PI)) < 0 && (s = 360 - Math.abs(s)),
            s <= 45 && s >= 0 ? !1 === o.options.rtl ? "left" : "right" : s <= 360 && s >= 315 ? !1 === o.options.rtl ? "left" : "right" : s >= 135 && s <= 225 ? !1 === o.options.rtl ? "right" : "left" : !0 === o.options.verticalSwiping ? s >= 35 && s <= 135 ? "down" : "up" : "vertical"
    }, i.prototype.swipeEnd = function (event) {
        var t, direction, i = this;
        if (i.dragging = !1, i.swiping = !1, i.scrolling) return i.scrolling = !1, !1;
        if (i.interrupted = !1, i.shouldClick = !(i.touchObject.swipeLength > 10), void 0 === i.touchObject.curX) return !1;
        if (!0 === i.touchObject.edgeHit && i.$slider.trigger("edge", [i, i.swipeDirection()]), i.touchObject.swipeLength >= i.touchObject.minSwipe) {
            switch (direction = i.swipeDirection()) {
                case"left":
                case"down":
                    t = i.options.swipeToSlide ? i.checkNavigable(i.currentSlide + i.getSlideCount()) : i.currentSlide + i.getSlideCount(), i.currentDirection = 0;
                    break;
                case"right":
                case"up":
                    t = i.options.swipeToSlide ? i.checkNavigable(i.currentSlide - i.getSlideCount()) : i.currentSlide - i.getSlideCount(), i.currentDirection = 1
            }
            "vertical" != direction && (i.slideHandler(t), i.touchObject = {}, i.$slider.trigger("swipe", [i, direction]))
        } else i.touchObject.startX !== i.touchObject.curX && (i.slideHandler(i.currentSlide), i.touchObject = {})
    }, i.prototype.swipeHandler = function (event) {
        var t = this;
        if (!(!1 === t.options.swipe || "ontouchend" in document && !1 === t.options.swipe || !1 === t.options.draggable && -1 !== event.type.indexOf("mouse"))) switch (t.touchObject.fingerCount = event.originalEvent && void 0 !== event.originalEvent.touches ? event.originalEvent.touches.length : 1, t.touchObject.minSwipe = t.listWidth / t.options.touchThreshold, !0 === t.options.verticalSwiping && (t.touchObject.minSwipe = t.listHeight / t.options.touchThreshold), event.data.action) {
            case"start":
                t.swipeStart(event);
                break;
            case"move":
                t.swipeMove(event);
                break;
            case"end":
                t.swipeEnd(event)
        }
    }, i.prototype.swipeMove = function (event) {
        var t, i, s, o, touches, l, u = this;
        return touches = void 0 !== event.originalEvent ? event.originalEvent.touches : null, !(!u.dragging || u.scrolling || touches && 1 !== touches.length) && (t = u.getLeft(u.currentSlide), u.touchObject.curX = void 0 !== touches ? touches[0].pageX : event.clientX, u.touchObject.curY = void 0 !== touches ? touches[0].pageY : event.clientY, u.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(u.touchObject.curX - u.touchObject.startX, 2))), l = Math.round(Math.sqrt(Math.pow(u.touchObject.curY - u.touchObject.startY, 2))), !u.options.verticalSwiping && !u.swiping && l > 4 ? (u.scrolling = !0, !1) : (!0 === u.options.verticalSwiping && (u.touchObject.swipeLength = l), i = u.swipeDirection(), void 0 !== event.originalEvent && u.touchObject.swipeLength > 4 && (u.swiping = !0, event.preventDefault()), o = (!1 === u.options.rtl ? 1 : -1) * (u.touchObject.curX > u.touchObject.startX ? 1 : -1), !0 === u.options.verticalSwiping && (o = u.touchObject.curY > u.touchObject.startY ? 1 : -1), s = u.touchObject.swipeLength, u.touchObject.edgeHit = !1, !1 === u.options.infinite && (0 === u.currentSlide && "right" === i || u.currentSlide >= u.getDotCount() && "left" === i) && (s = u.touchObject.swipeLength * u.options.edgeFriction, u.touchObject.edgeHit = !0), !1 === u.options.vertical ? u.swipeLeft = t + s * o : u.swipeLeft = t + s * (u.$list.height() / u.listWidth) * o, !0 === u.options.verticalSwiping && (u.swipeLeft = t + s * o), !0 !== u.options.fade && !1 !== u.options.touchMove && (!0 === u.animating ? (u.swipeLeft = null, !1) : void u.setCSS(u.swipeLeft))))
    }, i.prototype.swipeStart = function (event) {
        var touches, t = this;
        if (t.interrupted = !0, 1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow) return t.touchObject = {}, !1;
        void 0 !== event.originalEvent && void 0 !== event.originalEvent.touches && (touches = event.originalEvent.touches[0]), t.touchObject.startX = t.touchObject.curX = void 0 !== touches ? touches.pageX : event.clientX, t.touchObject.startY = t.touchObject.curY = void 0 !== touches ? touches.pageY : event.clientY, t.dragging = !0
    }, i.prototype.unfilterSlides = i.prototype.slickUnfilter = function () {
        var t = this;
        null !== t.$slidesCache && (t.unload(), t.$slideTrack.children(this.options.slide).detach(), t.$slidesCache.appendTo(t.$slideTrack), t.reinit())
    }, i.prototype.unload = function () {
        var i = this;
        t(".slick-cloned", i.$slider).remove(), i.$dots && i.$dots.remove(),
        i.$prevArrow && i.htmlExpr.test(i.options.prevArrow) && i.$prevArrow.remove(), i.$nextArrow && i.htmlExpr.test(i.options.nextArrow) && i.$nextArrow.remove(), i.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "")
    }, i.prototype.unslick = function (t) {
        var i = this;
        i.$slider.trigger("unslick", [i, t]), i.destroy()
    }, i.prototype.updateArrows = function () {
        var t = this;
        Math.floor(t.options.slidesToShow / 2), !0 === t.options.arrows && t.slideCount > t.options.slidesToShow && !t.options.infinite && (t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === t.currentSlide ? (t.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), t.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : t.currentSlide >= t.slideCount - t.options.slidesToShow && !1 === t.options.centerMode ? (t.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : t.currentSlide >= t.slideCount - 1 && !0 === t.options.centerMode && (t.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), t.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")))
    }, i.prototype.updateDots = function () {
        var t = this;
        null !== t.$dots && (t.$dots.find("li").removeClass("slick-active").end(), t.$dots.find("li").eq(Math.floor(t.currentSlide / t.options.slidesToScroll)).addClass("slick-active"))
    }, i.prototype.visibility = function () {
        var t = this;
        t.options.autoplay && (document[t.hidden] ? t.interrupted = !0 : t.interrupted = !1)
    }, t.fn.slick = function () {
        var t, s, o = this, l = arguments[0], u = Array.prototype.slice.call(arguments, 1), h = o.length;
        for (t = 0; t < h; t++) if ("object" == typeof l || void 0 === l ? o[t].slick = new i(o[t], l) : s = o[t].slick[l].apply(o[t].slick, u), void 0 !== s) return s;
        return o
    }
}), window.matchMedia || (window.matchMedia = function () {
    "use strict";
    var styleMedia = window.styleMedia || window.media;
    if (!styleMedia) {
        var style = document.createElement("style"), t = document.getElementsByTagName("script")[0], info = null;
        style.type = "text/css", style.id = "matchmediajs-test", t.parentNode.insertBefore(style, t), info = "getComputedStyle" in window && window.getComputedStyle(style, null) || style.currentStyle, styleMedia = {
            matchMedium: function (media) {
                var text = "@media " + media + "{ #matchmediajs-test { width: 1px; } }";
                return style.styleSheet ? style.styleSheet.cssText = text : style.textContent = text, "1px" === info.width
            }
        }
    }
    return function (media) {
        return {matches: styleMedia.matchMedium(media || "all"), media: media || "all"}
    }
}()), function ($) {
    var escapeable = /["\\\x00-\x1f\x7f-\x9f]/g,
        meta = {"\b": "\\b", "\t": "\\t", "\n": "\\n", "\f": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\"};
    $.toJSON = "object" == typeof JSON && JSON.stringify ? JSON.stringify : function (t) {
        if (null === t) return "null";
        var type = typeof t;
        if ("undefined" !== type) {
            if ("number" === type || "boolean" === type) return "" + t;
            if ("string" === type) return $.quoteString(t);
            if ("object" === type) {
                if ("function" == typeof t.toJSON) return $.toJSON(t.toJSON());
                if (t.constructor === Date) {
                    var i = t.getUTCMonth() + 1, s = t.getUTCDate(), o = t.getUTCFullYear(), l = t.getUTCHours(),
                        u = t.getUTCMinutes(), h = t.getUTCSeconds(), p = t.getUTCMilliseconds();
                    return i < 10 && (i = "0" + i), s < 10 && (s = "0" + s), l < 10 && (l = "0" + l), u < 10 && (u = "0" + u), h < 10 && (h = "0" + h), p < 100 && (p = "0" + p), p < 10 && (p = "0" + p), '"' + o + "-" + i + "-" + s + "T" + l + ":" + u + ":" + h + "." + p + 'Z"'
                }
                if (t.constructor === Array) {
                    for (var m = [], _ = 0; _ < t.length; _++) m.push($.toJSON(t[_]) || "null");
                    return "[" + m.join(",") + "]"
                }
                var name, g, S = [];
                for (var T in t) {
                    if ("number" == (type = typeof T)) name = '"' + T + '"'; else {
                        if ("string" !== type) continue;
                        name = $.quoteString(T)
                    }
                    "function" !== (type = typeof t[T]) && "undefined" !== type && (g = $.toJSON(t[T]), S.push(name + ":" + g))
                }
                return "{" + S.join(",") + "}"
            }
        }
    }, $.evalJSON = "object" == typeof JSON && JSON.parse ? JSON.parse : function (src) {
        return eval("(" + src + ")")
    }, $.secureEvalJSON = "object" == typeof JSON && JSON.parse ? JSON.parse : function (src) {
        var filtered = src.replace(/\\["\\\/bfnrtu]/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
        if (/^[\],:{}\s]*$/.test(filtered)) return eval("(" + src + ")");
        throw new SyntaxError("Error parsing JSON, source is not valid.")
    }, $.quoteString = function (t) {
        return t.match(escapeable) ? '"' + t.replace(escapeable, function (a) {
            var c = meta[a];
            return "string" == typeof c ? c : (c = a.charCodeAt(), "\\u00" + Math.floor(c / 16).toString(16) + (c % 16).toString(16))
        }) + '"' : '"' + t + '"'
    }
}(jQuery), function () {
    function GAPlugin() {
    }

    var t = window.PhoneGap || window.Cordova || window.cordova;
    GAPlugin.prototype.trackEvent = function (i, s, category, o, l, u) {
        return t.exec(i, s, "GAPlugin", "trackEvent", [category, o, l, u])
    }, GAPlugin.prototype.trackPage = function (i, s, o) {
        return t.exec(i, s, "GAPlugin", "trackPage", [o])
    }, window.plugins || (window.plugins = {}), window.plugins.gaPlugin || (window.plugins.gaPlugin = new GAPlugin)
}(), function () {
    function Utilities() {
    }

    var t = window.PhoneGap || window.Cordova || window.cordova;
    Utilities.prototype.getFreeDiskSpace = function getFreeDiskSpace(i, s) {
        "function" == typeof i && "function" == typeof s && t.exec(i, s, "Utilities", "getFreeDiskSpace", [])
    }, Utilities.prototype.getAppVersion = function getAppVersion(i, s) {
        "function" == typeof i && "function" == typeof s && t.exec(i, s, "Utilities", "getAppVersion", [])
    }, Utilities.prototype.getPNToken = function getPNToken(t, i) {
        "function" == typeof t && "function" == typeof i && t()
    }, Utilities.prototype.getDeepLink = function getDeepLink(i, s) {
        "function" == typeof i && "function" == typeof s && t.exec(i, s, "Utilities", "getDeepLink", [])
    }, Utilities.prototype.registerNimble = function registerNimble(i, s, o, l) {
        "function" == typeof o && "function" == typeof l && t.exec(o, l, "Utilities", "registerNimble", [i, s])
    }, Utilities.prototype.showStoreAppPage = function showStoreAppPage(i, s) {
        "function" == typeof i && "function" == typeof s && t.exec(i, s, "Utilities", "showStoreAppPage", [getStoreId()])
    }, Utilities.prototype.showStatusBar = function showStatusBar(t, i) {
        "function" == typeof t && "function" == typeof i && t()
    }, Utilities.prototype.setStatusBarStyle = function setStatusBarStyle(t, i, style) {
        "function" == typeof t && "function" == typeof i && t()
    }, window.plugins || (window.plugins = {}), window.plugins.utilities = new Utilities
}(), function () {
    function PluginResourceCache() {
    }

    var t = window.PhoneGap || window.Cordova || window.cordova;
    PluginResourceCache.prototype.isResourceAvailable = function (t, i, s, o) {
        this.getCachedResource(function (i, path) {
            t("" !== path)
        }, i, s, o)
    }, PluginResourceCache.prototype.getCachedResource = function (i, s, o, l) {
        "function" == typeof i && "function" == typeof s && t.exec(i, s, "PluginResourceCache", "getCachedResource", [{
            resourcePath: o,
            baseUrl: l
        }])
    }, PluginResourceCache.prototype.cacheResource = function (i, s, o, l) {
        "function" == typeof i && "function" == typeof s && t.exec(i, s, "PluginResourceCache", "cacheResource", [{
            resourcePath: o,
            baseUrl: l
        }])
    }, PluginResourceCache.prototype.clearCache = function (i, s) {
        "function" == typeof i && "function" == typeof s && t.exec(i, s, "PluginResourceCache", "clearCache", [])
    };
    window.plugins || (window.plugins = {}), window.plugins.resCache = new PluginResourceCache, PluginResourceCache.UNKNOWN_ERROR = 0
}()
;var SPLASH_SCREEN_HIDE_DELAY = 50, RESUME_REFRESH_THRESHOLD = 60,
    DEVICE_PIXEL_RATIO = Math.round(window.devicePixelRatio) || 1, CLIENT_VERSION = 1, APP_VERSION = "19.0.0",
    PREV_GAME_NAME = "fifa18", GAME_NAME = "fifa19", STORAGE_DEEP_LINK_KEY = "deepLinkURL",
    STORAGE_LOCALE_KEY = "UT_LOCALE", STORAGE_SHOW_OFF_KEY = "showOffId",
    STORAGE_PN_STATUS_KEY = "pushNotificationEnabled", MS_PER_SECOND = 1e3, SECONDS_PER_MINUTE = 60,
    SECONDS_PER_HOUR = 3600, SECONDS_PER_DAY = 86400, SECONDS_PER_MONTH = 2678400, SECONDS_PER_YEAR = 31536e3,
    ALEX_HUNTER_MIN_ID = 22800, ALEX_HUNTER_MAX_ID = 22811, ALEX_HUNTER_PLACEHOLDER_ASSET_ID = 26501,
    JIM_HUNTER_MIN_ID = 22820, JIM_HUNTER_MAX_ID = 22842, JIM_HUNTER_PLACEHOLDER_ASSET_ID = 26525,
    DANNY_WILLIAMS_MIN_ID = 22880, DANNY_WILLIAMS_MAX_ID = 22899, DANNY_WILLIAMS_PLACEHOLDER_ASSET_ID = 26503,
    AUCTION_COUNTDOWN_THRESHOLD = 30, AUCTION_COUNTDOWN_FLASING_THRESHOLD = 15, AUCTION_COUNTDOWN_ALERT_THRESHOLD = 5,
    AUCTION_LATENCY_THRESHOLD = 3, AUCTION_MIN_BUY = 200, AUCTION_MIN_BID = 150, AUCTION_MAX_BID = 15e6,
    PLAYSTYLE_CHEMISTRY_THRESHOLD = 4,
    MONTH_NAMES = ["date.january", "date.february", "date.march", "date.april", "date.may", "date.june", "date.july", "date.august", "date.september", "date.october", "date.november", "date.december"],
    TOP_NINE_NATIONS = [52, 54, 14, 18, 21, 34, 27, 38, 45],
    SEARCHABLE_POSITIONS = [0, 2, 3, 5, 7, 8, 10, 12, 14, 16, 18, 20, 21, 22, 23, 25, 27],
    PLAYER_ATTRIB_LOOKUP = ["pace", "shooting", "passing", "dribbling", "defending", "heading"],
    GK_ATTRIB_LOOKUP = ["gkDiving", "gkHandling", "gkKicking", "gkReflexes", "gkOneOnOne", "gkPositioning"],
    HEALTH_ATTRIB_LOOKUP = ["physioArm", "physioBack", "physioFoot", "physioHead", "physioHip", "physioLeg", "physioShoudler", "fitness", "managerTalk", "physioAll"],
    ZONE_DEFENDER_VALUE = "defense", ZONE_MIDFIELDER_VALUE = "midfield", ZONE_ATTACKER_VALUE = "attacker",
    ZONE_NO_GK_VALUE = "noGK", PLAYER_ZONE_LOOKUP = [{id: -1, label: "roles.defaultRole", value: "any"}, {
        id: 130,
        label: "search.positions.zone130",
        value: ZONE_DEFENDER_VALUE
    }, {id: 131, label: "search.positions.zone131", value: ZONE_MIDFIELDER_VALUE}, {
        id: 132,
        label: "search.positions.zone132",
        value: ZONE_ATTACKER_VALUE
    }, {id: 133, label: "roles.defaultRole", value: ZONE_NO_GK_VALUE}],
    POSITION_ZONE_LOOKUP = [{value: ZONE_DEFENDER_VALUE, minPosId: 1, maxPosId: 8}, {
        value: ZONE_MIDFIELDER_VALUE,
        minPosId: 9,
        maxPosId: 19
    }, {value: ZONE_ATTACKER_VALUE, minPosId: 20, maxPosId: 27}, {value: ZONE_NO_GK_VALUE, minPosId: 1, maxPosId: 27}],
    STRING_EQUALITY_LOOKUP = [{equivalent: "a", characters: "Ã Ã¡Ã¢Ã£Ã¤Ã¥ÄÄƒÄ…"}, {
        equivalent: "ae",
        characters: "Ã¦"
    }, {equivalent: "c", characters: "Ã§Ä‡Ä‰Ä‹Ä"}, {equivalent: "d", characters: "ÄÄ‘"}, {
        equivalent: "e",
        characters: "Ã¨Ã©ÃªÃ«Ä“Ä•Ä—Ä™Ä›"
    }, {equivalent: "g", characters: "ÄÄŸÄ¡Ä£"}, {equivalent: "h", characters: "Ä¥"}, {
        equivalent: "i",
        characters: "Ã¬Ã­Ã®Ã¯Ä©Ä«Ä­Ä¯Ä±"
    }, {equivalent: "j", characters: "Äµ"}, {equivalent: "k", characters: "Ä·"}, {
        equivalent: "l",
        characters: "ÄºÄ¼Ä¾Å€Å‚"
    }, {equivalent: "n", characters: "Ã±Å„Å†ÅˆÅ‰"}, {
        equivalent: "o",
        characters: "Ã²Ã³Ã´ÃµÃ¶ÅÅÅ‘Ã¸"
    }, {equivalent: "r", characters: "Å•Å—Å™"}, {equivalent: "s", characters: "Å›ÅÅŸÅ¡"}, {
        equivalent: "t",
        characters: "Å£Å¥Å§"
    }, {equivalent: "u", characters: "Ã¹ÃºÃ»Ã¼Å©Å«Å­Å¯Å±Å³"}, {equivalent: "y", characters: "Ã½Å·"}, {
        equivalent: "z",
        characters: "ÅºÅ¼Å¾"
    }], DEFAULT_PLAYSTYLE_ID = 250, DEFAULT_FORMATION = "f442", MAX_NEW_ITEMS = 5, MIN_SQUAD_NAME_LENGTH = 3,
    MAX_SQUAD_NAME_LENGTH = 15, MAX_ITEMS_REQUEST = 90, PIN_MESSAGE_EVT_STATUS = "click",
    PIN_MILESTONE_EVT_MODE = "fut", PIN_MILESTONE_EVT_MOMENT = "complete", PIN_PAGEVIEW_EVT_TYPE = "menu",
    NamespaceManager = {};
NamespaceManager.Register = function (t) {
    function registerObjs(t, parent) {
        var name = t.shift();
        parent && name && (parent[name] || (parent[name] = {}), registerObjs(t, parent[name]))
    }

    registerObjs(t.split("."), window)
}, NamespaceManager.Register("utils"), utils.JS = {}, utils.JS.isValid = function isValid(value) {
    return void 0 !== value && null !== value
}, utils.JS.isEmpty = function isEmpty(value) {
    return void 0 === value || null === value || utils.JS.isString(value) && "" === value.trim()
}, utils.JS.isString = function isString(value) {
    return "string" == typeof value
}, utils.JS.isNumber = function isNumber(value) {
    return "number" == typeof value && isFinite(value)
}, utils.JS.isBoolean = function isBoolean(value) {
    return "boolean" == typeof value
},
    utils.JS.isObject = function isObject(value) {
        return "object" == typeof value && null !== value && !Array.isArray(value)
    }, utils.JS.isFunction = function isFunction(t) {
    return "[object Function]" === Object.prototype.toString.call(t)
}, utils.JS.valToArray = function valToArray(t) {
    return utils.JS.isValid(t) ? Array.isArray(t) ? t : [t] : []
}, utils.JS.removeElementsFromArray = function removeElementsFromArray(a, b) {
    return b = utils.JS.valToArray(b), a.filter(function (t) {
        return b.indexOf(t) < 0
    })
}, utils.JS.flattenArray = function (t) {
    return t.reduce(function (t, i) {
        return t.concat(Array.isArray(i) ? utils.JS.flattenArray(i) : i)
    }, [])
}, utils.JS.getDefinitionByName = function getDefinitionByName(className) {
    var t, i, s = className.split("."), o = window || this, l = s.length;
    for (i = 0; i < l; ++i) o = o[s[i]], i === l - 1 && (t = o);
    return t
}, utils.JS.parseNumber = function parseNumber(t, locale) {
    if (0 === t.length) return 0;
    var i = 1.1.toLocaleString(locale), s = new RegExp("[^-+0-9$" + i.charAt(1) + "]", "g");
    return parseFloat(t.replace(s, "").replace(i.charAt(1), "."))
}, utils.JS.baseToBase = function baseToBase(t, i, value) {
    return utils.JS.isEmpty(value) && (value = 0), value = parseInt(value, t), Number(value).toString(i).toUpperCase()
}, utils.JS.inherits = function inherits(t, i) {
    t.prototype = Object.create(i.prototype), Object.defineProperty(t.prototype, "constructor", {
        value: t,
        writable: !1,
        enumerable: !1
    }), t.superClass_ = i.prototype
}, utils.JS.find = function find(t, i) {
    if (!utils.JS.isValid(t) || "function" != typeof i) return utils.Debug.Assert(utils.JS.isValid(t), "Array find method called without a valid array."), utils.Debug.Assert("function" == typeof i, "Array find method called without a valid callback function."), null;
    var s;
    for (s = 0; s < t.length; s++) if (i(t[s], s, t)) return t[s];
    return null
}, utils.JS.getSortedKeys = function getSortedKeys(t) {
    var keys = [], key = null;
    for (key in t) t.hasOwnProperty(key) && keys.push(key);
    return keys.sort(function (a, b) {
        return t[b] - t[a]
    })
}, utils.JS.sortCompare = function sortCompare(a, b, reverse) {
    return a < b ? reverse ? 1 : -1 : a > b ? reverse ? -1 : 1 : 0
}, utils.JS.getRandomArrayValues = function getRandomArrayValues(t, i) {
    return t.sort(function (a, b) {
        return .5 - Math.random()
    }).slice(0, i)
}, utils.JS.createEvent = function createEvent(type) {
    var event;
    try {
        event = new Event(type)
    } catch (t) {
        (event = document.createEvent("Event")).initEvent(type, !1, !1)
    }
    return event
}, utils.JS.assignPropertyValues = function assignPropertyValues(t, i) {
    var key;
    for (key in i) i.hasOwnProperty(key) && t.hasOwnProperty(key) && (i[key] = t[key])
}, utils.JS.getApproxByteSize = function getApproxByteSize(input) {
    function _calculateValueSize(t) {
        if ("boolean" == typeof t) return 4;
        if ("string" == typeof t) return 2 * t.length;
        if ("number" == typeof t) return 8;
        if ("object" == typeof t) {
            var i, s = [];
            for (i in t) t.hasOwnProperty(i) && s.push(t[i]);
            return s.reduce(function (total, t) {
                return total + _calculateValueSize(t)
            }, 0)
        }
        return 0
    }

    return _calculateValueSize(input)
}, NamespaceManager.Register("utils"), utils.FUTData = {}, utils.FUTData.mapSkuToCurrentYear = function mapSkuToCurrentYear(t) {
    switch (t) {
        case enums.SKU.XBX:
        case enums.SKU.PREV_XBX:
            return enums.SKU.XBX;
        case enums.SKU.XBO:
        case enums.SKU.PREV_XBO:
            return enums.SKU.XBO;
        case enums.SKU.PS3:
        case enums.SKU.PREV_PS3:
            return enums.SKU.PS3;
        case enums.SKU.PS4:
        case enums.SKU.PREV_PS4:
            return enums.SKU.PS4;
        case enums.SKU.PC:
        case enums.SKU.PREV_PC:
            return enums.SKU.PC;
        case enums.SKU.SWI:
        case enums.SKU.PREV_SWI:
            return enums.SKU.SWI
    }
    return enums.SKU.NONE
}, utils.FUTData.mapSkuToPreviousYear = function mapSkuToPreviousYear(t) {
    switch (t) {
        case enums.SKU.XBX:
        case enums.SKU.PREV_XBX:
            return enums.SKU.PREV_XBX;
        case enums.SKU.XBO:
        case enums.SKU.PREV_XBO:
            return enums.SKU.PREV_XBO;
        case enums.SKU.PS3:
        case enums.SKU.PREV_PS3:
            return enums.SKU.PREV_PS3;
        case enums.SKU.PS4:
        case enums.SKU.PREV_PS4:
            return enums.SKU.PREV_PS4;
        case enums.SKU.PC:
        case enums.SKU.PREV_PC:
            return enums.SKU.PREV_PC;
        case enums.SKU.SWI:
        case enums.SKU.PREV_SWI:
            return enums.SKU.PREV_SWI
    }
    return enums.SKU.NONE
}, utils.FUTData.mapSkuToPlatform = function mapSkuToPlatform(t) {
    switch (t) {
        case enums.SKU.XBX:
        case enums.SKU.PREV_XBX:
            return enums.Platform.XBX
                ;
        case enums.SKU.XBO:
        case enums.SKU.PREV_XBO:
            return enums.Platform.XBO;
        case enums.SKU.PS3:
        case enums.SKU.PREV_PS3:
            return enums.Platform.PS3;
        case enums.SKU.PS4:
        case enums.SKU.PREV_PS4:
            return enums.Platform.PS4;
        case enums.SKU.PC:
        case enums.SKU.PREV_PC:
            return enums.Platform.PC;
        case enums.SKU.SWI:
        case enums.SKU.PREV_SWI:
            return enums.Platform.SWI
    }
    return enums.Platform.NONE
}, utils.FUTData.mapNationIdToOnboardingCountryId = function mapNationIdToOnboardingCountryId(id) {
    switch (id) {
        case enums.Country.ENGLAND:
            return 1;
        case enums.Country.BRAZIL:
            return 2;
        case enums.Country.FRANCE:
            return 3;
        case enums.Country.ARGENTINA:
            return 4;
        case enums.Country.GERMANY:
            return 5;
        case enums.Country.ITALY:
            return 6;
        case enums.Country.SPAIN:
            return 7;
        case enums.Country.PORTUGAL:
            return 8;
        case enums.Country.NETHERLANDS:
            return 9
    }
    return 0
}, utils.FUTData.mapOnboardingCountryIdToNationId = function mapOnboardingCountryIdToNationId(id) {
    switch (id) {
        case 1:
            return enums.Country.ENGLAND;
        case 2:
            return enums.Country.BRAZIL;
        case 3:
            return enums.Country.FRANCE;
        case 4:
            return enums.Country.ARGENTINA;
        case 5:
            return enums.Country.GERMANY;
        case 6:
            return enums.Country.ITALY;
        case 7:
            return enums.Country.SPAIN;
        case 8:
            return enums.Country.PORTUGAL;
        case 9:
            return enums.Country.NETHERLANDS
    }
    return 0
}, NamespaceManager.Register("utils"), utils.TextUtils = {}, utils.TextUtils.getYearString = function getYearString(t) {
    switch (t) {
        case enums.Year.YEAR_2009:
            return "2009";
        case enums.Year.YEAR_2010:
            return "2010";
        case enums.Year.YEAR_2011:
            return "2011";
        case enums.Year.YEAR_2012:
            return "2012";
        case enums.Year.YEAR_2013:
            return "2013";
        case enums.Year.YEAR_2014:
            return "2014";
        case enums.Year.YEAR_2015:
            return "2015";
        case enums.Year.YEAR_2016:
            return "2016";
        case enums.Year.YEAR_2017:
            return "2017";
        case enums.Year.YEAR_2018:
            return "2018";
        case enums.Year.YEAR_2019:
        default:
            return "2019"
    }
}, utils.TextUtils.getYearEnum = function getYearEnum(t) {
    switch (t) {
        case 2009:
            return enums.Year.YEAR_2009;
        case 2010:
            return enums.Year.YEAR_2010;
        case 2011:
            return enums.Year.YEAR_2011;
        case 2012:
            return enums.Year.YEAR_2012;
        case 2013:
            return enums.Year.YEAR_2013;
        case 2014:
            return enums.Year.YEAR_2014;
        case 2015:
            return enums.Year.YEAR_2015;
        case 2016:
            return enums.Year.YEAR_2016;
        case 2017:
            return enums.Year.YEAR_2017;
        case 2018:
            return enums.Year.YEAR_2018;
        case 2019:
        default:
            return enums.Year.YEAR_2019
    }
}, utils.TextUtils.getYearFromString = function getYearFromString(t) {
    switch (t) {
        case"2009":
            return enums.Year.YEAR_2009;
        case"2010":
            return enums.Year.YEAR_2010;
        case"2011":
            return enums.Year.YEAR_2011;
        case"2012":
            return enums.Year.YEAR_2012;
        case"2013":
            return enums.Year.YEAR_2013;
        case"2014":
            return enums.Year.YEAR_2014;
        case"2015":
            return enums.Year.YEAR_2015;
        case"2016":
            return enums.Year.YEAR_2016;
        case"2017":
            return enums.Year.YEAR_2017;
        case"2018":
            return enums.Year.YEAR_2018;
        case"2019":
            return enums.Year.YEAR_2019;
        default:
            return enums.Year.ASSET
    }
}, utils.TextUtils.nltobr = function nltobr(t) {
    return t.replace(/(?:\r\n|\r|\n|\\n|â†µ)/g, "<br />")
}, utils.TextUtils.formatToTwoDigits = function formatToTwoDigits(n) {
    return n < 10 ? "0" + n : n.toString()
}, utils.TextUtils.centimetersToFeet = function centimetersToFeet(t) {
    var i = utils.TextUtils.centimetersToInches(t), s = Math.floor(i / 12), o = i / 12 - s, l = Math.round(12 * o);
    return l >= 12 && (s++, l = 0), s + "' " + l + '"'
}, utils.TextUtils.centimetersToInches = function centimetersToInches(t) {
    return .393700787 * t
}, utils.TextUtils.replaceHtmlLinks = function replaceHtmlLinks(t) {
    $('a[target="_blank"]', t).each(function () {
        var t = $(this), href = t.attr("href");
        t.removeAttr("href"), t.on(enums.Event.TAP, function () {
            services.URL.process(href)
        })
    })
}, utils.TextUtils.destroyHtmlLinks = function destroyHtmlLinks(t) {
    $('a[target="_blank"]', t).each(function () {
        $(this).off(enums.Event.TAP)
    })
}, utils.TextUtils.basename = function basename(path) {
    return path.replace(/\\/g, "/").replace(/.*\//, "")
}, utils.TextUtils.dirname = function dirname(path) {
    return path.replace(/\\/g, "/").replace(/\/[^\/]*$/, "")
}, utils.TextUtils.truncate = function truncate(length, t) {
    return utils.JS.isString(t) && "" !== t ? !utils.JS.isNumber(length) || length < 1 ? (utils.Debug.Assert(!1, "[utils.JS::truncate] Invalid length parameter; expected number greater than zero."), t) : (t.length > length && (t = t.substr(0, length).trim(), t += "&hellip;"), t) : (utils.Debug.Assert(!1, "[utils.JS::truncate] Invalid string parameter; expected non-empty string."), "")
}, utils.TextUtils.stripTrailingSlash = function stripTrailingSlash(t) {
    return "/" === t.substr(-1) ? t.substr(0, t.length - 1) : t
}, utils.TextUtils.cleanString = function cleanString(input) {
    return input.replace(/\s+/g, " ").trim()
}, utils.TextUtils.capitalize = function capitalize(input) {
    return input.replace(/\w\S*/g, function (t) {
        return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase()
    })
}, utils.TextUtils.restrictSpecialCharacters = function restrictSpecialCharacters(input) {
    return input.replace(/[^a-zA-Z0-9\u0410-\u044f ]/g, "")
}, utils.TextUtils.removeEmoticons = function removeEmoticons(input) {
    return input.replace(/([\uD800-\uDBFF][\uDC00-\uDFFF])/g, "")
}, utils.TextUtils.stripSpecialCharacters = function stripSpecialCharacters(input) {
    for (var t = "", i = input.length; i-- > 0;) {
        var s = input.charAt(i);
        if (input.charCodeAt(i) < 128) t = s + t; else {
            for (var o = STRING_EQUALITY_LOOKUP.length, l = !1; o-- > 0;) {
                var u = STRING_EQUALITY_LOOKUP[o];
                if (u.characters.indexOf(s.toLowerCase()) >= 0) {
                    t = u.equivalent + t, l = !0;
                    break
                }
            }
            l || (t = s + t)
        }
    }
    return t
}, utils.TextUtils.isValidNameSquad = function isValidNameSquad(t) {
    var i = utils.TextUtils.cleanString(t);
    return i.length >= MIN_SQUAD_NAME_LENGTH && i.length <= MAX_SQUAD_NAME_LENGTH
}, utils.TextUtils.squadNameExists = function squadNameExists(t, i) {
    return i.filter(function (i) {
        return i.getName() === t
    }).length > 0
}, utils.TextUtils.createSquadNameCopy = function createSquadNameCopy(t, i) {
    var s = services.Localization.localize("squad.name.copy").toUpperCase(), o = 0, l = utils.TextUtils.cleanString(t),
        u = "";
    do {
        u = s, u += o > 0 ? o.toString() + " " : " ", (u += l).length > MAX_SQUAD_NAME_LENGTH && (u = u.slice(0, -(u.length - MAX_SQUAD_NAME_LENGTH))), t = u, o++
    } while (utils.TextUtils.squadNameExists(t, i));
    return t
}, utils.TextUtils.createSquadName = function createSquadName(t, i) {
    var s = 0, o = utils.TextUtils.cleanString(t), l = "";
    do {
        for (l = o, l += s > 0 ? " " + s.toString() : ""; l.length < MIN_SQUAD_NAME_LENGTH;) l += "-";
        l.length > MAX_SQUAD_NAME_LENGTH && (l = l.slice(0, -(l.length - MAX_SQUAD_NAME_LENGTH))), t = l, s++
    } while (utils.TextUtils.squadNameExists(t, i));
    return t
}, utils.TextUtils.addSignToNum = function addSignToNum(t) {
    return t > 0 ? "+" + t : t.toString()
}, NamespaceManager.Register("enums"), enums.AuctionBidState = {
    BUYNOW: "buyNow",
    HIGHEST: "highest",
    NONE: "none",
    OUTBID: "outbid"
}, Object.freeze(enums.AuctionBidState), enums.AuctionTradeState = {
    ACTIVE: "active",
    CLOSED: "closed",
    EXPIRED: "expired",
    INACTIVE: "inactive",
    INVALID: "invalid"
}, Object.freeze(enums.AuctionTradeState), NamespaceManager.Register("enums"), enums.SessionProtocol = {
    HTTP: "http",
    HTTPS: "https"
}, Object.freeze(enums.SessionProtocol), enums.AuthEnvironment = {
    NONE: 0,
    UTAS: 1,
    PAS: 2
}, Object.freeze(enums.AuthEnvironment), enums.AuthenticationState = {
    STATE_UNAUTHENTICATED: "UNAUTHENTICATED",
    STATE_AUTHENTICATING: "AUTHENTICATING",
    STATE_AUTHENTICATED: "AUTHENTICATED",
    STATE_AUTHENTICATION_FAILED: "AUTHENTICATION_FAILED"
}, Object.freeze(enums.AuthenticationState), enums.UserState = {
    NONE: "",
    RETURNING_USER_EXPIRED: "RETURNING_USER_EXPIRED"
}, Object.freeze(enums.UserState), enums.EADPIdentity = {
    ACCESS_TOKEN: "_eadp.identity.access_token",
    EXPIRE: "_eadp.identity.expire",
    REFRESH_TOKEN: "_eadp.identity.refresh_token",
    PID: "_eadp.identity.pidId",
    TIMESTAMP: "_eadp.identity.timestamp"
}, Object.freeze(enums.EADPIdentity), enums.FOSService = {FUT: "SERVICE_FUT"}, Object.freeze(enums.FOSService), enums.FUTAuthState = {
    NO_DATA: 0,
    SERVER_DOWN: 1,
    CONCURRENT_SESSION: 2,
    NEW_TRIAL_USER: 3,
    COMPLETE: 4
}, Object.freeze(enums.FUTAuthState), enums.Platform = {
    NONE: "",
    XBX: "XBX",
    XBO: "XBO",
    PS3: "PS3",
    PS4: "PS4",
    PC: "PC",
    SWI: "SWI"
}, Object.freeze(enums.Platform), enums.SKU = {
    NONE: "",
    XBX: "FFA19XBX",
    XBO: "FFA19XBO",
    PS3: "FFA19PS3",
    PS4: "FFA19PS4",
    PC: "FFA19PCC",
    SWI: "FFA19SWI",
    PREV_XBX: "FFA18XBX",
    PREV_XBO: "FFA18XBO",
    PREV_PS3: "FFA18PS3",
    PREV_PS4: "FFA18PS4",
    PREV_PC: "FFA18PCC",
    PREV_SWI: "FFA18SWI"
}, enums.SKU.FUT = "FUT19WEB", Object.freeze(enums.SKU), NamespaceManager.Register("enums"), enums.Event = {
    CLICK: "click",
    MOUSEDOWN: "mousedown",
    MOUSEMOVE: "mousemove",
    MOUSEUP: "mouseup",
    MOUSELEAVE: "mouseleave",
    MOUSEENTER: "mouseenter",
    MOUSECANCEL: "mousecancel",
    TOUCHSTART: "touchstart",
    TOUCHEND: "touchend",
    TOUCHMOVE: "touchmove",
    TOUCHCANCEL: "touchcancel",
    TOUCHLEAVE: "touchleave",
    FOCUS: "focus",
    BLUR: "blur",
    CHANGE: "change",
    INPUT: "input",
    CUT: "cut",
    PASTE: "paste",
    TAP: "tap",
    ANIMATIONSTART: "animationstart webkitAnimationStart",
    ANIMATIONEND: "animationend webkitAnimationEnd",
    TRANSITIONEND: "transitionend webkitTransitionEnd",
    RESIZE: "resize",
    LOAD: "load",
    ERROR: "error",
    KEYDOWN: "keydown",
    KEYUP: "keyup"
}, Object.freeze(enums.Event), enums.UIItemNavigationEvent = {
    NEXT: "next",
    PREV: "prev"
}, Object.freeze(enums.UIItemNavigationEvent), enums.UIPaginationEvent = {
    NEXT: "paginationnext",
    PREVIOUS: "paginationprev"
}, Object.freeze(enums.UIPaginationEvent), enums.UIListEvent = {
    ROW_ACTION: "rowaction",
    ROW_SELECT: "rowselect"
}, Object.freeze(enums.UIListEvent), enums.UIPackEvent = {
    OPEN: "open",
    BUY_COINS: "buyCoins",
    BUY_POINTS: "buyPoints",
    CHECK_ODDS: "checkOdds"
}, Object.freeze(enums.UIPackEvent), enums.UIItemActionEvent = {
    BIO: "itemBio",
    REDEEM: "itemRedeem",
    APPLY_CONSUMABLE: "itemApplyConsumable",
    ACTIVATE: "itemActivate",
    SEND_TO_CLUB: "itemSendToClub",
    SEND_TO_TRANSFERS: "itemSendToTransfers",
    SEND_TO_SQUAD: "itemSendToSquad",
    DISCARD: "itemDiscard",
    REMOVE_FROM_SQUAD: "itemRemoveFromSquad",
    ADD_SWAP: "itemAddSwap",
    LIST_ON_MARKET: "itemListOnMarket",
    COMPARE: "itemCompare",
    SEARCH_ON_MARKET: "itemSearchOnMarket",
    SEARCH_SLOT_ON_MARKET: "slotSearchOnMarket"
}, Object.freeze(enums.UIItemActionEvent), enums.UISquadPitchEvent = {
    DRAG_START: "squadDragStart",
    DRAG_END: "squadDragEnd",
    ITEM_SWAP: "squadItemSwap",
    SLOT_SELECT: "squadSlotSelect"
}, Object.freeze(enums.UISquadPitchEvent), NamespaceManager.Register("enums"), enums.Product = {
    WEB: "Web",
    COMPANION: "Companion"
}, Object.freeze(enums.Product), enums.Year = {
    YEAR_2009: 1,
    YEAR_2010: 2,
    YEAR_2011: 3,
    YEAR_2012: 4,
    YEAR_2013: 5,
    YEAR_2014: 6,
    YEAR_2015: 7,
    YEAR_2016: 8,
    YEAR_2017: 9,
    YEAR_2018: 10,
    YEAR_2019: 11,
    ASSET: 11
}, Object.freeze(enums.Year),enums.Country = {
    BELGIUM: 7,
    ENGLAND: 14,
    FRANCE: 18,
    GERMANY: 21,
    ITALY: 27,
    NETHERLANDS: 34,
    PORTUGAL: 38,
    SPAIN: 45,
    ARGENTINA: 52,
    BRAZIL: 54
},Object.freeze(enums.Country),enums.Currency = {
    COINS: "COINS",
    POINTS: "POINTS",
    DRAFT_TOKEN: "DRAFT_TOKEN"
},Object.freeze(enums.Currency),enums.ItemPileLimitKey = {
    TRANSFER: 2,
    CONSUMABLES: 3,
    INBOX: 4,
    SQUADS: 6,
    AUCTIONS: 11
},Object.freeze(enums.ItemPileLimitKey),enums.FUTItemPile = {
    ANY: 0,
    TRANSFER: 5,
    PURCHASED: 6,
    CLUB: 7,
    INBOX: 8,
    GIFT: 9
},Object.freeze(enums.FUTItemPile),enums.TradeAccessLevel = {
    NONE: 0,
    BLACKLIST: 1,
    WHITELIST: 2,
    GREYLIST: 3,
    MAINTENANCE: 100
},Object.freeze(enums.TradeAccessLevel),enums.PlaceholderAssetId = {
    PLAYER: 0,
    KIT: 0,
    TEAM: 0,
    STAFF: 0,
    BALL: 0,
    FLAG: 0,
    STADIUM: 0
},Object.freeze(enums.PlaceholderAssetId),enums.PlaceholderAssetKey = {
    PLAYERS: "players",
    KITS: "kits",
    CREST: "badges",
    CREST_LIGHT: "light",
    CREST_DARK: "dark",
    STAFF: "staff",
    BALLS: "balls"
},Object.freeze(enums.PlaceholderAssetKey),enums.GettingStartedTypes = {
    ACCESS_TRIAL: "ACCESS_TRIAL",
    FREE_TRIAL: "FREE_TRIAL",
    FUT: "FUT",
    FIFA: "FIFA",
    PLATFORM_SWITCH: "PLATFORM_SWITCH",
    PLATFORM_GEN3: "PLATFORM_GEN3",
    WEBSTART_OVER: "WEBSTART_OVER"
},Object.freeze(enums.GettingStartedTypes),enums.PlayerBioDisplayGroup = {
    INFO: 0,
    ATTRIBUTES: 1,
    LEGENDS: 2
},Object.freeze(enums.PlayerBioDisplayGroup),enums.ItemSearchFeature = {
    CLUB: "club",
    CONCEPT: "dream",
    MARKET: "market"
},Object.freeze(enums.ItemSearchFeature),enums.SearchSortType = {
    VALUE_DESC: 0,
    VALUE_ASC: 1,
    RECENCY_DESC: 2
},Object.freeze(enums.SearchSortType),enums.SearchSort = {
    NONE: "",
    ASCENDING: "asc",
    DESCENDING: "desc"
},Object.freeze(enums.SearchSort),enums.SearchUntradeables = {
    DEFAULT: "",
    ONLY: "true",
    EXCLUDE: "false"
},Object.freeze(enums.SearchUntradeables),enums.SearchBucket = {
    PLAYER: 0,
    STAFF: 1,
    CLUB: 2,
    CONSUMABLE: 3
},Object.freeze(enums.SearchBucket),enums.SearchType = {
    ANY: "any", BALL: "ball", CLUB_INFO: "clubInfo", CONSUMABLES_DEVELOPMENT: "development",
    CONSUMABLES_TRAINING: "training", PLAYER: "player", STADIUM: "stadium", STAFF: "staff"
},Object.freeze(enums.SearchType),enums.SearchCategory = {
    ANY: "any",
    PLAYER_GK: "playerGK",
    PLAYER_NO_GK: "noGK",
    MANAGER: "manager",
    COACH_FITNESS: "fitnessCoach",
    COACH_GK: "GKCoach",
    COACH_HEAD: "headCoach",
    PHYSIO: "physio",
    BADGE: "badge",
    KIT: "kit",
    PLAYER_TRAINING: "playerTraining",
    GK_TRAINING: "GKTraining",
    POSITION: "position",
    CONTRACT: "contract",
    FITNESS: "fitness",
    HEALING: "healing",
    STADIUM: "stadium",
    BALL: "ball",
    PLAYSTYLE: "playStyle",
    MANAGER_LEAGUE: "managerLeagueModifier",
    DEFID: "definitionId",
    MASKED_DEFID: "maskedDefId"
},Object.freeze(enums.SearchCategory),enums.SearchLevel = {
    ANY: "any",
    BRONZE: "bronze",
    SILVER: "silver",
    GOLD: "gold",
    SPECIAL: "SP"
},Object.freeze(enums.SearchLevel),enums.LoyaltyRewardType = {
    PACKS: 1,
    COINS: 2,
    ITEMS: 4,
    DRAFT_TOKENS: 7
},Object.freeze(enums.LoyaltyRewardType),enums.AwardType = {
    COIN: "coin",
    PACK: "pack",
    ITEM: "item",
    CHAMPION_QUALIFICATION_POINTS: "champions_qualification_points"
},Object.freeze(enums.AwardType),enums.TeamStarRanges = {
    RATING_0_0: 0,
    RATING_0_5: 59,
    RATING_1_0: 62,
    RATING_1_5: 64,
    RATING_2_0: 66,
    RATING_2_5: 68,
    RATING_3_0: 70,
    RATING_3_5: 74,
    RATING_4_0: 78,
    RATING_4_5: 82,
    RATING_5_0: 99
},Object.freeze(enums.TeamStarRanges),enums.PlayerPositions = {
    GK: "GK",
    RWB: "RWB",
    RB: "RB",
    LWB: "LWB",
    LB: "LB",
    CDM: "CDM",
    CM: "CM",
    RM: "RM",
    LM: "LM",
    CAM: "CAM",
    RF: "RF",
    CF: "CF",
    LF: "LF",
    RW: "RW",
    LW: "LW",
    ST: "ST"
},Object.freeze(enums.PlayerPositions),enums.PlayerPositionsAsInts = {
    GK: 0,
    SW: 1,
    RWB: 2,
    RB: 3,
    RCB: 4,
    CB: 5,
    LCB: 6,
    LB: 7,
    LWB: 8,
    RDM: 9,
    CDM: 10,
    LDM: 11,
    RM: 12,
    RCM: 13,
    CM: 14,
    LCM: 15,
    LM: 16,
    RAM: 17,
    CAM: 18,
    LAM: 19,
    RF: 20,
    CF: 21,
    LF: 22,
    RW: 23,
    RS: 24,
    ST: 25,
    LS: 26,
    LW: 27
},Object.freeze(enums.PlayerPositionsAsInts),enums.PlayerZonesAsInts = {
    DEFENSE: 130,
    MIDFIELD: 131,
    ATTACKER: 132
},Object.freeze(enums.PlayerZonesAsInts),enums.PlayerStats = {
    PACE: 0,
    SHOOTING: 1,
    PASSING: 2,
    DRIBBLING: 3,
    DEFEND: 4,
    HEADING: 5,
    ALL: 6
},Object.freeze(enums.PlayerStats),enums.GKStats = {
    DIVING: 0,
    HANDLING: 1,
    KICKING: 2,
    REFLEX: 3,
    SPEED: 4,
    POSITION: 5,
    ALL: 6
},Object.freeze(enums.GKStats),enums.ItemRatingTier = {
    NONE: 0,
    BRONZE: 1,
    SILVER: 2,
    GOLD: 3
},Object.freeze(enums.ItemRatingTier),enums.KitActivationSlot = {
    HOME: 101,
    AWAY: 102
},Object.freeze(enums.KitActivationSlot),enums.ItemCardAssetId = {
    TRAINING_PLAYER: 1,
    TRAINING_GK: 3,
    CONTRACT_PLAYER: 7,
    CONTRACT_MANAGER: 8,
    HEALING: 9,
    FITNESS_PLAYER: 10,
    FITNESS_TEAM: 11,
    MANAGER_LEAGUE: 32,
    POSITION_MODIFIER: 34,
    PLAYSTYLE_PLAYER: 50,
    PLAYSTYLE_GK: 51
},Object.freeze(enums.ItemCardAssetId),enums.ItemType = {
    NONE: "none",
    BADGE: "custom",
    BALL: "ball",
    CONTRACT: "contract",
    FITNESS_COACH: "fitnessCoach",
    GK_COACH: "gkCoach",
    HEAD_COACH: "headCoach",
    HEALTH: "health",
    KIT: "kit",
    MANAGER: "manager",
    MISC: "misc",
    PHYSIO: "physio",
    PLAYER: "player",
    STADIUM: "stadium",
    TRAINING: "training"
},Object.freeze(enums.ItemType),enums.ItemSubType = {
    NONE: 0,
    PLAYER: 2,
    MANAGER: 4,
    HEAD_COACH: 5,
    GK_COACH: 6,
    PHYSIO: 7,
    FITNESS_COACH: 8,
    TRAINING_GK_DIVING: 51,
    TRAINING_GK_HANDLING: 52,
    TRAINING_GK_KICKING: 53,
    TRAINING_GK_SPEED: 54,
    TRAINING_GK_POSITION: 55,
    TRAINING_GK_REFLEX: 56,
    TRAINING_GK_ALL: 57,
    TRAINING_PLAYER_PACE: 61,
    TRAINING_PLAYER_SHOOTING: 62,
    TRAINING_PLAYER_PASSING: 63,
    TRAINING_PLAYER_DRIBBLING: 64,
    TRAINING_PLAYER_HEADING: 65,
    TRAINING_PLAYER_DEFEND: 66,
    TRAINING_PLAYER_ALL: 67,
    TRAINING_PLAYER_FORMATION_3412: 71,
    TRAINING_PLAYER_FORMATION_3421: 72,
    TRAINING_PLAYER_FORMATION_343: 73,
    TRAINING_PLAYER_FORMATION_352: 74,
    TRAINING_PLAYER_FORMATION_41212: 75,
    TRAINING_PLAYER_FORMATION_4231: 76,
    TRAINING_PLAYER_FORMATION_4222: 77,
    TRAINING_PLAYER_FORMATION_4312: 78,
    TRAINING_PLAYER_FORMATION_4321: 79,
    TRAINING_PLAYER_FORMATION_433: 80,
    TRAINING_PLAYER_FORMATION_4411: 81,
    TRAINING_PLAYER_FORMATION_442: 82,
    TRAINING_PLAYER_FORMATION_451: 83,
    TRAINING_PLAYER_FORMATION_5212: 84,
    TRAINING_PLAYER_FORMATION_5221: 85,
    TRAINING_PLAYER_FORMATION_532: 86,
    TRAINING_PLAYER_POS_LWB_LB: 91,
    TRAINING_PLAYER_POS_LB_LWB: 92,
    TRAINING_PLAYER_POS_RWB_RB: 93,
    TRAINING_PLAYER_POS_RB_RWB: 94,
    TRAINING_PLAYER_POS_LM_LW: 95,
    TRAINING_PLAYER_POS_RM_RW: 96,
    TRAINING_PLAYER_POS_LW_LM: 97,
    TRAINING_PLAYER_POS_RW_RM: 98,
    TRAINING_PLAYER_POS_LW_LF: 99,
    TRAINING_PLAYER_POS_RW_RF: 100,
    TRAINING_PLAYER_POS_LF_LW: 101,
    TRAINING_PLAYER_POS_RF_RW: 102,
    TRAINING_PLAYER_POS_CM_CAM: 103,
    TRAINING_PLAYER_POS_CAM_CM: 104,
    TRAINING_PLAYER_POS_CDM_CM: 105,
    TRAINING_PLAYER_POS_CM_CDM: 106,
    TRAINING_PLAYER_POS_CAM_CF: 107,
    TRAINING_PLAYER_POS_CF_CAM: 108,
    TRAINING_PLAYER_POS_CF_ST: 109,
    TRAINING_PLAYER_POS_ST_CF: 110,
    TRAINING_MANAGER_FORMATION_3412: 121,
    TRAINING_MANAGER_FORMATION_3421: 122,
    TRAINING_MANAGER_FORMATION_343: 123,
    TRAINING_MANAGER_FORMATION_352: 124,
    TRAINING_MANAGER_FORMATION_41212: 125,
    TRAINING_MANAGER_FORMATION_4231: 126,
    TRAINING_MANAGER_FORMATION_4222: 127,
    TRAINING_MANAGER_FORMATION_4312: 128,
    TRAINING_MANAGER_FORMATION_4321: 129,
    TRAINING_MANAGER_FORMATION_433: 130,
    TRAINING_MANAGER_FORMATION_4411: 131,
    TRAINING_MANAGER_FORMATION_442: 132,
    TRAINING_MANAGER_FORMATION_451: 133,
    TRAINING_MANAGER_FORMATION_5212: 134,
    TRAINING_MANAGER_FORMATION_5221: 135,
    TRAINING_MANAGER_FORMATION_532: 136,
    CONTRACT_PLAYER: 201,
    CONTRACT_MANAGER: 202,
    HEALING_HEAD: 211,
    HEALING_SHOULDER: 212,
    HEALING_ARM: 213,
    HEALING_BACK: 214,
    HEALING_HIP: 215,
    HEALING_LEG: 216,
    HEALING_FOOT: 217,
    HEALING_ALL: 218,
    FITNESS_PLAYER: 219,
    FITNESS_TEAM: 220,
    MORALE_PLAYER: 221,
    MORALE_TEAM: 222,
    FREE_COINS: 231,
    STADIUM_UPGRADE: 232,
    FREE_PACK: 233,
    WC_PACK: 235,
    DRAFT_TOKEN: 236,
    PLAYER_PICK_ITEM: 237,
    TRAINING_PLAYERSTYLE_GENERAL_1: 250,
    TRAINING_PLAYERSTYLE_GENERAL_2: 251,
    TRAINING_PLAYERSTYLE_GENERAL_3: 252,
    TRAINING_PLAYERSTYLE_GENERAL_4: 253,
    TRAINING_PLAYERSTYLE_GENERAL_5: 254,
    TRAINING_PLAYERSTYLE_GENERAL_6: 255,
    TRAINING_PLAYERSTYLE_GENERAL_7: 256,
    TRAINING_PLAYERSTYLE_GENERAL_8: 257,
    TRAINING_PLAYERSTYLE_GENERAL_9: 258,
    TRAINING_PLAYERSTYLE_GENERAL_10: 259,
    TRAINING_PLAYERSTYLE_GENERAL_11: 260,
    TRAINING_PLAYERSTYLE_GENERAL_12: 261,
    TRAINING_PLAYERSTYLE_GENERAL_13: 262,
    TRAINING_PLAYERSTYLE_GENERAL_14: 263,
    TRAINING_PLAYERSTYLE_GENERAL_15: 264,
    TRAINING_PLAYERSTYLE_GENERAL_16: 265,
    TRAINING_PLAYERSTYLE_GENERAL_17: 266,
    TRAINING_PLAYERSTYLE_GENERAL_18: 267,
    TRAINING_PLAYERSTYLE_GENERAL_19: 268,
    TRAINING_PLAYERSTYLE_GOALKEEPER_1: 269,
    TRAINING_PLAYERSTYLE_GOALKEEPER_2: 270,
    TRAINING_PLAYERSTYLE_GOALKEEPER_3: 271,
    TRAINING_PLAYERSTYLE_GOALKEEPER_4: 272,
    TRAINING_PLAYERSTYLE_GOALKEEPER_5: 273,
    MANAGERLEAGUE_DENMARK: 300,
    MANAGERLEAGUE_RUSSIA: 343
},Object.freeze(enums.ItemSubType),enums.ClubItemType = {
    KITS: "kits",
    BALLS: "balls",
    PLAYERS: "players",
    STADIA: "stadia",
    STAFF: "staff",
    TROPHIES: "trophies"
},Object.freeze(enums.ClubItemType),enums.ItemState = {
    FREE: "free",
    INGAME: "ingame",
    FORSALE: "forSale",
    OFFERED: "offered",
    ACTIVE: "active",
    INVALID: "invalid",
    ACTIVE_BADGE: "activeBadge",
    ACTIVE_HOME_KIT: "activeHomeKit",
    ACTIVE_AWAY_KIT: "activeAwayKit",
    ACTIVE_BALL: "activeBall",
    ACTIVE_STADIUM: "activeStadium"
},Object.freeze(enums.ItemState),enums.PlayerInjury = {
    NONE: "none",
    HEAD: "head",
    SHOULDER: "shoulder",
    ARM: "arm",
    BACK: "back",
    HIP: "hip",
    LEG: "leg",
    FOOT: "foot"
},Object.freeze(enums.PlayerInjury),enums.ItemMask = {
    DATABASE: 16777215,
    REVISION: 251658240,
    FULL_REVISION: 4278190080,
    YEAR: 4026531840
},Object.freeze(enums.ItemMask),enums.UserSquadId = {
    ACTIVE: "active",
    GENERATIONS: "generations"
},Object.freeze(enums.UserSquadId),enums.SquadType = {
    REGULAR: "REGULAR_SQUAD",
    DREAM: "DREAM_SQUAD",
    DRAFT: "DRAFT_SQUAD",
    GENERATIONS: "GENERATIONS_SQUAD"
},Object.freeze(enums.SquadType),enums.PlayerZone = {
    ATTACKERS: "ATTACKERS",
    DEFENDERS: "DEFENDERS",
    MIDFIELDERS: "MIDFIELDERS",
    GOALKEEPERS: "GOALKEEPERS"
},Object.freeze(enums.PlayerZone),enums.SquadPositionZones = {
    0: enums.PlayerZone.GOALKEEPERS,
    1: enums.PlayerZone.DEFENDERS,
    2: enums.PlayerZone.DEFENDERS,
    3: enums.PlayerZone.DEFENDERS,
    4: enums.PlayerZone.DEFENDERS,
    5: enums.PlayerZone.DEFENDERS,
    6: enums.PlayerZone.DEFENDERS,
    7: enums.PlayerZone.DEFENDERS,
    8: enums.PlayerZone.DEFENDERS,
    9: enums.PlayerZone.MIDFIELDERS,
    10: enums.PlayerZone.MIDFIELDERS,
    11: enums.PlayerZone.MIDFIELDERS,
    12: enums.PlayerZone.MIDFIELDERS,
    13: enums.PlayerZone.MIDFIELDERS,
    14: enums.PlayerZone.MIDFIELDERS,
    15: enums.PlayerZone.MIDFIELDERS,
    16: enums.PlayerZone.MIDFIELDERS,
    17: enums.PlayerZone.MIDFIELDERS,
    18: enums.PlayerZone.MIDFIELDERS,
    19: enums.PlayerZone.ATTACKERS,
    20: enums.PlayerZone.ATTACKERS,
    21: enums.PlayerZone.ATTACKERS,
    22: enums.PlayerZone.ATTACKERS,
    23: enums.PlayerZone.ATTACKERS,
    24: enums.PlayerZone.ATTACKERS,
    25: enums.PlayerZone.ATTACKERS,
    26: enums.PlayerZone.ATTACKERS,
    27: enums.PlayerZone.ATTACKERS
},Object.freeze(enums.SquadPositionZones),enums.SquadPitchThemes = {
    NONE: "",
    WINTER: "winterTheme"
},Object.freeze(enums.SquadPitchThemes),enums.SquadPitchTypes = {
    REGULAR: "",
    CONCEPT: "dreamPitch"
},Object.freeze(enums.SquadPitchTypes),enums.SquadPitchModes = {
    REGULAR: "",
    GENERATIONS: "generations",
    SBC: "sbc"
},Object.freeze(enums.SquadPitchModes),enums.OnboardingStateType = {
    HOME_KIT: 1,
    AWAY_KIT: 2,
    BADGE: 3,
    NATION: 4
},Object.freeze(enums.OnboardingStateType),enums.ItemAssetType = {
    SHELL: "shell",
    MAIN: "main",
    FLAG: "flag",
    BADGE: "badge"
},NamespaceManager.Register("enums"),enums.Language = {
    UNKNOWN: "",
    ENGLISH: "en",
    FRENCH: "fr",
    GERMAN: "de",
    SPANISH: "es",
    ITALIAN: "it",
    DUTCH: "nl",
    POLISH: "pl",
    RUSSIAN: "ru",
    PORTUGUESE: "pt",
    ARABIC: "ar",
    TURKISH: "tr"
},Object.freeze(enums.Language),enums.Region = {
    UNKNOWN: "",
    USA: "US",
    CANADA: "CA",
    GREAT_BRITAIN: "GB",
    UK: "UK",
    AUSTRALIA: "AU",
    FRANCE: "FR",
    GERMANY: "DE",
    SPAIN: "ES",
    MEXICO: "MX",
    ITALY: "IT",
    NETHERLANDS: "NL",
    POLAND: "PL",
    RUSSIA: "RU",
    BRAZIL: "BR",
    SAUDI_ARABIA: "SA",
    TURKEY: "TR"
},Object.freeze(enums.Region),enums.BaseURLHALString = {
    PRIVACY_POLICY: "link.privacy_policy_base.url",
    USER_AGREEMENT: "link.terms_of_service_base.url",
    ITEM_DATABASE: "link.itemdatabase.url"
},Object.freeze(enums.BaseURLHALString),enums.Localization = {},enums.Localization.BLANK_STR = "---",enums.Localization.STATS_LABELS_PLAYER = ["cards.cardfront.paceAbbr", "cards.cardfront.shootingAbbr", "cards.cardfront.passingAbbr", "cards.cardfront.dribblingAbbr", "cards.cardfront.defendingAbbr", "cards.cardfront.headingAbbr"],enums.Localization.STATS_LABELS_GK = ["cards.cardfront.divingAbbr", "cards.cardfront.handlingAbbr", "cards.cardfront.kickAbbr", "cards.cardfront.reflexAbbr", "cards.cardfront.speedAbbr", "cards.cardfront.positionAbbr"],NamespaceManager.Register("enums"),enums.ArubaScreenId = {
    COMPANION_HUB: "companionfuthub",
    WEB_HUB: "webfuthub",
    COMPANION_LIVE: "companionfutlivemsg",
    WEB_LIVE: "futweblivemsg"
},enums.ArubaStringKeys = {
    COUNTDOWN: "^COUNTDOWNTO-",
    FUT_CLUB_NAME: "^FUT_CLUB_NAME^",
    GAMERTAG: "^GAMERTAG^",
    SUPPORTED_CLUB: "^SUPPORTED_CLUB^"
},Object.freeze(enums.ArubaStringKeys),enums.ArubaTextFieldType = {
    TITLE: "titleText",
    SUBTITLE: "subTitleText",
    BODY: "bodyText",
    INFO: "infoText"
},Object.freeze(enums.ArubaTextFieldType),enums.ArubaImageType = {
    BACKGROUND: "backgroundImage",
    BODY: "bodyImage"
},Object.freeze(enums.ArubaImageType),enums.GoToLink = {
    NONE: "",
    AUCTION_SEARCH: "gotoauctionsearch",
    CHANGE_CLUB_NAME: "gotochangeclubname",
    CLUB: "gotoclub",
    DRAFT_OFFLINE: "gotodraftoffline",
    DRAFT_ONLINE: "gotodraftonline",
    OFFLINE_RIVALS: "gotoofflinerivals",
    OFFLINE_SEASONS: "gotoofflineseasons",
    OFFLINE_TOTW: "gotoofflinetotw",
    ONLINE_RIVALS: "gotoonlinerivals",
    ONLINE_SEASONS: "gotoonlineseasons",
    SBC: "gotosbc",
    SQUAD: "gotosquad",
    SQUAD_BATTLE: "gotosquadbattle",
    SQUAD_SELECT: "gotosquadselect",
    STORE: "gotostore",
    TRADE_PILE: "gototradepile",
    UNASSIGNED: "gotounassigneditems",
    WATCH_LIST: "gotowatchlist"
},Object.freeze(enums.GoToLink),NamespaceManager.Register("enums"),enums.HTTPRequestMethod = {
    POST: "POST",
    GET: "GET",
    PUT: "PUT",
    DELETE: "DELETE"
},enums.HTTPContentType = {
    XML: "text/xml",
    JSON: "application/json",
    TEXT_PLAIN: "text/plain",
    FORM_DATA: "application/x-www-form-urlencoded"
},enums.HTTPStatusCode = {
    UNKNOWN: 0,
    OK: 200,
    NO_CONTENT: 204,
    NOT_MODIFIED: 304,
    BAD_REQUEST: 400,
    UNAUTHORIZED: 401,
    FORBIDDEN: 403,
    NOT_FOUND: 404,
    CONFLICT: 409,
    UNSUPPORTED_TYPE: 415,
    RATE_LIMIT: 429,
    FUN_CAPTCHA_REQUIRED: 458,
    CAPTCHA_REQUIRED: 459,
    UT_BAD_REQUEST: 460,
    PERMISSION_DENIED: 461,
    STATE_INVALID: 462,
    NO_BID_TOKENS: 463,
    NO_USER: 465,
    NAME_EXISTS: 466,
    PROFANITY: 467,
    LOGGED_IN_ON_CONSOLE_LEGACY: 468,
    DELETING_LAST_SQUAD: 469,
    NOT_ENOUGH_CREDIT: 470,
    ITEM_EXISTS: 471,
    DUPLICATE_ITEM_TYPE: 472,
    DESTINATION_FULL: 473,
    LOGGED_IN_ON_CONSOLE: 474,
    NO_CARD_EXISTS: 475,
    CARD_IN_TRADE: 476,
    INVALID_DECK: 477,
    NO_TRADE_EXISTS: 478,
    INVALID_OWNER: 479,
    SERVICE_IS_DISABLED: 480,
    INVALID_COOKIE: 482,
    ALREADY_ANSWERED_PHISHING_QUESTION: 483,
    NO_REMAINING_ATTEMPTS: 485,
    PLAYER_HAS_RED_CARD: 486,
    REMOVE_WATCH_FAILURE: 487,
    SWAP_ITEM_WITH_ITSELF: 488,
    USER_IS_HIGHEST_BIDDER: 489,
    DID_CREATE_EXCEEDED: 489,
    DID_LOGIN_EXCEEDED: 490,
    DEVICE_SUSPENDED: 491,
    LOCKED_TRANSFER_MARKET: 494,
    SOME_ITEMS_NOT_FREE: 495,
    SERVER_ERROR: 500,
    SERVICE_UNAVAILABLE_ERROR: 503,
    UNRECOVERABLE_ERROR: 1e4,
    NO_INTERNET_CONNECTION: 10666,
    NETWORK_ERROR: 10667,
    REQUEST_TIME_OUT: 10668,
    FIFA_POINTS_FAILED: 10670,
    ACCOUNT_BANNED: 2e4,
    UPDATE_REQUIRED: 20001,
    INVALID_CREDENTIALS: 20002,
    GEOIP_BLACKLISTED: 20003
},enums.NetworkErrorReason = {
    MULTIPLE_SESSION: "multiple session",
    WRONG_CREDENTIALS: "Wrong credentials",
    INVALID_CREDENTIALS: "invalid credentials",
    BANNED: "BANNED",
    CLIENT_VERSION_EXPIRED: "client version expired",
    CLIENT_VERSION_UNKNOWN: "unknown client version",
    SESSION_THROTTLED: "throttled",
    GEOIP_BLACKLISTED: "blocked country"
},enums.NetworkErrorLevel = {
    UNIMPORTANT: 0,
    IMPORTANT: 1,
    CRITICAL: 2
},NamespaceManager.Register("enums"),enums.Notification = {
    APP_PAUSE: "NOTIF_AppPause",
    APP_RESUME: "NOTIF_AppResume",
    AUCTION_CLOSE: "NOTIF_AuctionClose",
    ITEM_ACTIVATE: "NOTIF_ItemActivate",
    ITEM_APPLY: "NOTIF_ItemApply",
    ITEM_BID: "NOTIF_ItemBid",
    ITEM_CLEARSOLD: "NOTIF_ItemClearSold",
    ITEM_DISCARD: "NOTIF_ItemDiscard",
    ITEM_LIST: "NOTIF_ItemList",
    ITEM_MOVE: "NOTIF_ItemMove",
    ITEM_REDEEM: "NOTIF_ItemRedeem",
    ITEM_UNWATCH: "NOTIF_ItemUnwatch",
    ITEM_WATCH: "NOTIF_ItemWatch",
    OBJECTIVE_COMPLETE: "NOTIF_ObjectiveComplete",
    OBJECTIVE_PROGRESS: "NOTIF_ObjectiveProgress",
    SQUAD_CREATE: "NOTIF_SquadCreate",
    SQUAD_DELETE: "NOTIF_SquadDelete",
    SQUAD_SAVE: "NOTIF_SquadSave",
    STORE_PACK_COUNT_CHANGE: "NOTIF_StorePackCountChange",
    UNASSIGNED_ITEM_ADDED: "NOTIF_UnassignedItemAdded",
    UI_ITEM_STATE_CHANGE: "NOTIF_UIItemStateChange",
    UI_NOTIFICATION: "NOTIF_UINotification",
    USER_CURRENCY_UPDATE: "NOTIF_UserCurrencyUpdate"
},Object.freeze(enums.Notification),NamespaceManager.Register("enums"),enums.Objectives = {},enums.Objectives.Type = {
    INVALID: "INVALID",
    BEGINNER: "BEGINNER",
    DAILY: "DAILY",
    WEEKLY: "WEEKLY"
},Object.freeze(enums.Objectives.Type),enums.Objectives.State = {
    INVALID: "INVALID",
    IN_PROGRESS: "IN_PROGRESS",
    COMPLETED: "COMPLETED",
    REDEEMED: "REDEEMED",
    LOCKED: "LOCKED",
    EXPIRED: "EXPIRED"
},Object.freeze(enums.Objectives.State),NamespaceManager.Register("enums"),enums.PIN = {},enums.PIN.CONFIG = {
    ENABLED: "e",
    BATCH_ENABLED: "b",
    BATCH_FREQUENCY: "bf",
    BATCH_SIZE: "bs",
    RETRY_TIMES: "r",
    RETRY_FREQUENCY: "rf"
},Object.freeze(enums.PIN.CONFIG),enums.PIN.EVENT = {
    BOOT_START: "boot_start",
    BOOT_END: "boot_end",
    CONNECTION: "connection",
    ERROR: "error",
    LOGIN: "login",
    LOGOUT: "logout",
    MESSAGE: "message",
    MILESTONE: "milestone",
    PAGE_VIEW: "page_view",
    SETTINGS: "settings",
    UI_INTERACTION: "ui_interaction"
},Object.freeze(enums.PIN.EVENT),enums.PIN.BOOT_START_EVT_STATUS = {
    SUCCESS: "success",
    SOURCE_UPDATE: "source_update"
},Object.freeze(enums.PIN.BOOT_START_EVT_STATUS),enums.PIN.BOOT_START_EVT_SOURCE = {
    NORMAL: "normal",
    OPT_IN_TEL: "opt_in_tel",
    UPGRADE: "upgrade"
},Object.freeze(enums.PIN.BOOT_START_EVT_SOURCE),enums.PIN.BOOT_END_EVT_REASON = {
    NORMAL: "normal",
    OPT_OUT_TEL: "opt_out_tel"
},Object.freeze(enums.PIN.BOOT_END_EVT_REASON),enums.PIN.ERROR_EVT_ERRID = {
    CONNECTION: "disconnect",
    SERVER: "server_error"
},Object.freeze(enums.PIN.ERROR_EVT_ERRID),enums.PIN.LOGIN_EVT_STATUS = {
    SUCCESS: "success",
    FAIL: "error"
},Object.freeze(enums.PIN.LOGIN_EVT_STATUS),enums.PIN.LOGOUT_EVT_END_REASON = {
    NORMAL: "normal",
    ERROR: "error"
},Object.freeze(enums.PIN.LOGOUT_EVT_END_REASON),enums.PIN.MESSAGE_EVT_TYPE = {
    FET: "in-game",
    PN: "pn"
},Object.freeze(enums.PIN.MESSAGE_EVT_TYPE),enums.PIN.MILESTONE_EVT_ID = {
    COUNTRY: "FUTONBOARDING_FLOW_COUNTRY",
    EXPLORESQUAD: "FUTONBOARDING_FLOW_EXPLORESQUAD",
    LOANSELECT: "FUTONBOARDING_FLOW_LOANSELECT",
    LOANEXPLORE: "FUTONBOARDING_FLOW_LOANEXPLORE",
    HOMEKIT: "FUTONBOARDING_FLOW_HOMEKIT",
    AWAYKIT: "FUTONBOARDING_FLOW_AWAYKIT",
    BADGE: "FUTONBOARDING_FLOW_BADGE",
    SUMMARY: "FUTONBOARDING_FLOW_SUMMARY",
    DAILY_OBJECTIVE: "fut_daily_quest_"
},Object.freeze(enums.PIN.MILESTONE_EVT_ID),enums.PIN.MILESTONE_EVT_TYPE = {
    ONBOARDING: "onboarding",
    OBJECTIVES: "quest"
},Object.freeze(enums.PIN.MILESTONE_EVT_TYPE),enums.PIN.SETTINGS_EVT_STATUS = {
    OPT_IN: "accepted", OPT_OUT: "declined"
},Object.freeze(enums.PIN.SETTINGS_EVT_STATUS),NamespaceManager.Register("enums"),enums.Purchase = {},enums.Purchase.DisplayGroup = {
    BRONZE: "bronze",
    SILVER: "silver",
    GOLD: "gold",
    SPECIAL: "special",
    MYPACKS: "mypacks"
},enums.Purchase.DisplayGroupId = {
    BRONZE: 1,
    SILVER: 2,
    GOLD: 3,
    SPECIAL: 4,
    MYPACKS: 5
},enums.Purchase.DealType = {
    REGULAR: "REGULAR",
    DEAL: "DEAL",
    PROMO: "PROMO",
    BESTDEAL: "BESTDEAL"
},enums.Purchase.SaleType = {
    NONE: "NONE",
    QUANTITY: "QUANTITY",
    TIME: "TIME",
    TIME_QUANTITY: "TIME_QUANTITY"
},enums.Purchase.PackState = {ACTIVE: "active", HIDDEN: "hidden"},enums.Purchase.PackTier = {
    BRONZE: 1,
    SILVER: 2,
    GOLD: 3,
    SPECIAL: 4,
    LOAN: 5,
    STARTER: 6,
    LEGENDS: 8,
    STORY: 9,
    SBC: 10,
    CHAMPION: 11
},enums.Purchase.PackType = {
    ALL: "ALL",
    CARDPACK: "CARDPACK",
    DRAFTENTRY: "DRAFTENTRY"
},enums.Purchase.State = {
    INVALID: "INVALID",
    NOTRANSACTION: "NOTRANSACTION",
    TRANSACTIONCREATED: "TRANSACTIONCREATED",
    TRANSACTIONCANCEL: "TRANSACTIONCANCEL",
    TRANSACTIONCOMPLETE: "TRANSACTIONCOMPLETE",
    PURCHASESTARTED: "PURCHASESTARTED",
    PURCHASECOMPLETE: "PURCHASECOMPLETE",
    PURCHASECONSUMABLECOUNT: "PURCHASECONSUMABLECOUNT",
    PURCHASECONSUME: "PURCHASECONSUME"
},NamespaceManager.Register("enums"),enums.SBC = {},enums.SBC.SET_TAGS = {
    TAGGED_BY_PRODUCTION: "taggedByProduction",
    TAGGED_BY_USER: "taggedByUser"
},Object.freeze(enums.SBC.SET_TAGS),enums.SBC.CATEGORY_TYPE = {
    SERVER: 0,
    CUSTOM_ALL: 1,
    CUSTOM_FAVOURITE: 2
},Object.freeze(enums.SBC.CATEGORY_TYPE),enums.SBC.CHALLENGE_STATUS = {
    NOT_STARTED: "NOT_STARTED",
    IN_PROGRESS: "IN_PROGRESS",
    COMPLETED: "COMPLETED"
},Object.freeze(enums.SBC.CHALLENGE_STATUS),enums.SBC.CHALLENGE_TYPE = {
    OPEN: "OPEN_CHALLENGE",
    BRICK: "BRICK_CHALLENGE",
    CUSTOM_BRICK: "CUSTOM_BRICK_CHALLENGE"
},Object.freeze(enums.SBC.CHALLENGE_TYPE),enums.SBC.PLAYER_TYPE = {
    DEFAULT: "DEFAULT",
    BRICK: "BRICK",
    CUSTOM_BRICK: "CUSTOM_BRICK"
},Object.freeze(enums.SBC.PLAYER_TYPE),enums.SBC.ELG_OPERATION = {
    AND: "AND",
    OR: "OR"
},Object.freeze(enums.SBC.ELG_OPERATION),enums.SBC.ELG_KEY = {
    FUT_ELGRULE_TEAM_STAR_RATING: 0,
    FUT_ELGRULE_TEAM_CHEMISTRY: 1,
    FUT_ELGRULE_PLAYER_COUNT: 2,
    FUT_ELGRULE_PLAYER_QUALITY: 3,
    FUT_ELGRULE_SAME_NATION_COUNT: 4,
    FUT_ELGRULE_SAME_LEAGUE_COUNT: 5,
    FUT_ELGRULE_SAME_CLUB_COUNT: 6,
    FUT_ELGRULE_NATION_COUNT: 7,
    FUT_ELGRULE_LEAGUE_COUNT: 8,
    FUT_ELGRULE_CLUB_COUNT: 9,
    FUT_ELGRULE_NATION_ID: 10,
    FUT_ELGRULE_LEAGUE_ID: 11,
    FUT_ELGRULE_CLUB_ID: 12,
    FUT_ELGRULE_SCOPE: 13,
    FUT_ELGRULE_APPLY_TO: 14,
    FUT_ELGRULE_LEGEND_COUNT: 15,
    FUT_ELGRULE_NUM_TROPHY_REQUIRED: 16,
    FUT_ELGRULE_PLAYER_LEVEL: 17,
    FUT_ELGRULE_PLAYER_RARITY: 18,
    FUT_ELGRULE_TEAM_RATING: 19,
    FUT_ELGRULE_PLAYER_COUNT_COMBINED: 21
},Object.freeze(enums.SBC.ELG_KEY),enums.SBC.ELG_SCOPE = {
    FUT_ELGRULE_SCOPE_GREATER: 0,
    FUT_ELGRULE_SCOPE_LOWER: 1,
    FUT_ELGRULE_SCOPE_EXACT: 2
},Object.freeze(enums.SBC.ELG_SCOPE),enums.SBC.ELG_QUALITY_TYPES = {
    BRONZE: 1,
    SILVER: 2,
    GOLD: 3
},Object.freeze(enums.SBC.ELG_QUALITY_TYPES),NamespaceManager.Register("enums"),enums.KeyCode = {RETURN: 13},Object.freeze(enums.KeyCode),enums.KeyboardKey = {
    ARROW_DOWN: "ArrowDown",
    ARROW_LEFT: "ArrowLeft",
    ARROW_RIGHT: "ArrowRight",
    ARROW_UP: "ArrowUp",
    ENTER: "Enter",
    ESCAPE: "Escape",
    MS_ESCAPE: "Esc",
    F7: "F7",
    F8: "F8",
    F9: "F9"
},Object.freeze(enums.KeyboardKey),enums.DeviceOrientation = {
    PORTRAIT_DOWN: 180,
    LANDSCAPE_LEFT: -90,
    LANDSCAPE_RIGHT: 90,
    PORTRAIT: 0
},Object.freeze(enums.DeviceOrientation),enums.UIModalDisplayStyles = {
    FILL: "ui-modal-display-fill",
    FULLSCREEN: "ui-modal-display-fullscreen",
    FORM: "ui-modal-display-form",
    PAGE: "ui-modal-display-page"
},Object.freeze(enums.UIModalDisplayStyles),enums.UIDialogTypes = {
    MESSAGE: "ui-dialog-type-message",
    ALERT: "ui-dialog-type-alert",
    ROTATE: "ui-dialog-type-rotate"
},Object.freeze(enums.DeviceOrientation),enums.UIShieldStyles = {
    TRANSPARENT: "ui-shield-style-transparent",
    OPAQUE: "ui-shield-style-opaque"
},Object.freeze(enums.UIShieldStyles),enums.UIDialogOptions = {
    YES: 0,
    NO: 1,
    OK: 2,
    CANCEL: 3,
    RETRY: 4,
    SIGN_OUT: 5,
    TAKE_ME: 6
},Object.freeze(enums.UIDialogOptions),enums.UIAnimation = {
    FADE_IN: "fade-in",
    FADE_OUT: "fade-out",
    SLIDE_OUT_LEFT: "slide-out-left",
    SLIDE_OUT_RIGHT: "slide-out-right",
    SLIDE_IN_LEFT: "slide-in-left",
    SLIDE_IN_RIGHT: "slide-in-right",
    SLIDE_IN_LEFT_FADE_OUT: "scroll-right-fade-in-fade-out",
    BLINK: "alarm-txt",
    MARQUEE: "scroll-txt",
    BOUNCE: "cardBounce"
},Object.freeze(enums.UIAnimation),enums.UIText = {SECONDARY: "secondary"},Object.freeze(enums.UIText),enums.UINavigationBarStyle = {
    DEFAULT: "",
    LANDSCAPE: "navbar-style-landscape",
    SECONDARY: "navbar-style-secondary"
},Object.freeze(enums.UINavigationBarStyle),enums.UIRowActionClass = {
    ADD: "add",
    SWAP: "swap",
    MORE: "more"
},Object.freeze(enums.UIRowActionClass),enums.UIState = {
    ACTIVE: "active",
    DISABLED: "disabled",
    ENABLED: "enabled",
    HOVER: "hover",
    SELECTED: "selected"
},Object.freeze(enums.UIState),enums.UILayout = {
    RIGHT: "ui-layout-right",
    LEFT: "ui-layout-left",
    TOP: "ui-layout-top",
    BOTTOM: "ui-layout-bottom"
},Object.freeze(enums.UILayout),enums.UIDirection = {
    RIGHT: "ui-direction-right",
    LEFT: "ui-direction-left",
    UP: "ui-direction-up",
    DOWN: "ui-direction-down",
    FLIP_HORIZONTAL: "ui-flip-horizontal",
    FLIP_VERTICAL: "ui-flip-vertical",
    DEFAULT: "ui-direction-default"
},Object.freeze(enums.UIDirection),enums.UISlotInteractionState = {
    NONE: "",
    HOVER: "ui-slot-hover",
    SELECTED: "ui-slot-selected"
},Object.freeze(enums.UISlotInteractionState),enums.UIButtonState = {
    ACTIVE: enums.UIState.ACTIVE,
    DISABLED: enums.UIState.DISABLED,
    HOVER: enums.UIState.HOVER,
    CALL_TO_ACTION: "call-to-action"
},Object.freeze(enums.UIButtonState),enums.UIListRowState = {
    HAS_ACTION: "has-action",
    HAS_TAP_CALLBACK: "has-tap-callback",
    IS_ACTIVE_SQUAD: "is-active",
    SELECTED: enums.UIState.SELECTED,
    ACTIVE: enums.UIState.ACTIVE,
    DISABLED: enums.UIState.DISABLED,
    ENABLED: enums.UIState.ENABLED
},Object.freeze(enums.UIListRowState),enums.UIFeedbackState = {
    NONE: "no-state",
    LOW: "feedback-red",
    MEDIUM: "feedback-orange",
    HIGH: "feedback-green",
    STAT_INCREASE: "statIncrease",
    STAT_DECREASE: "statIncrease"
},Object.freeze(enums.UIFeedbackState),enums.UICompletionState = {
    INCOMPLETE: 0,
    IN_PROGRESS: 1,
    COMPLETE: 2
},Object.freeze(enums.UICompletionState),enums.UIPinnedListItem = {
    HAS_ITERATOR: "has-iterator",
    HAS_NEXT: "has-next",
    HAS_PREV: "has-prev"
},Object.freeze(enums.UIPinnedListItem),enums.UIPanels = {TABLE_ALTERNATING: "panel-table-alternating"},Object.freeze(enums.UIPanels),enums.UIDeviceTypes = {
    PHONE: "phone",
    LANDSCAPE: "landscape"
},Object.freeze(enums.UIDeviceTypes),enums.UIProgressBar = {
    SBC: "sbc-progress-bar",
    STATS: "stats-progress-bar",
    REVERSE: "reverse"
},Object.freeze(enums.UIProgressBar),enums.UIFlexible = {
    LG: "lg",
    XLG: "xlg",
    MD: "md",
    SM: "sm"
},Object.freeze(enums.UIFlexible),enums.UISquadTabTypes = {
    WORK_AREA: "workTab",
    DOCK_TAB: "dockTab",
    ACTION_TAB: "actionTab",
    DEFAULT: "default"
},Object.freeze(enums.UISquadTabTypes),enums.UIConsumableCategory = {
    CONTRACTS: 0,
    FITNESS: 1,
    HEALING: 2,
    LEAGUEMOD: 3,
    PLAYSTYLE: 4,
    POSITION: 5,
    TRAINING: 6
},Object.freeze(enums.UIConsumableCategory),enums.UIActiveItemImgType = {
    HOME_KIT: 0,
    AWAY_KIT: 1,
    BADGE_NORMAL: 2,
    BADGE_DARK: 3,
    BALL: 4,
    STADIUM: 5
},Object.freeze(enums.UIActiveItemImgType),enums.UIInputType = {
    TEXT: "text",
    PASSWORD: "password"
},Object.freeze(enums.UIInputType),enums.UISearchFilters = {
    YEAR: "year",
    TYPE: "type",
    LEVEL: "level",
    POSITION: "position",
    POSITION_MOD: "positionMod",
    PLAYSTYLE: "playStyle",
    NATION: "nation",
    LEAGUE: "league",
    CLUB: "club"
},Object.freeze(enums.UISearchFilters),enums.UINotificationType = {
    POSITIVE: 0,
    NEUTRAL: 1,
    NEGATIVE: 2
},Object.freeze(enums.UINotificationType),enums.UIOnboardingSelectionType = {
    NATION: "selection-nation",
    HOME_KIT: "selection-kit-home",
    AWAY_KIT: "selection-kit-away",
    BADGE: "selection-badge"
},Object.freeze(enums.UIOnboardingSelectionType),enums.UIOnboardingStep = {
    NATION: 1,
    LOANER: 2,
    KITS: 3,
    BADGE: 4,
    SUMMARY: 5
},Object.freeze(enums.UIOnboardingStep),enums.UISortOptionType = {
    DISCARD: "sort-discard",
    UNTRADEABLE: "sort-untradeable",
    CONCEPT: "build-concept",
    REPLACE: "build-replace"
},Object.freeze(enums.UISortOptionType),enums.UIPlatform = {
    NONE: "",
    XBX: "xbox360",
    XBO: "xboxOne",
    PS3: "playstation3",
    PS4: "playstation4",
    PC: "pc",
    SWI: "nintendoSwitch"
},Object.freeze(enums.UIPlatform),enums.ItemViewType = {
    SMALL: 0,
    LARGE: 1
},Object.freeze(enums.ItemViewType),enums.UIItemInfoState = {
    MAIN: 1,
    BIO: 2,
    STATS: 3,
    STYLE: 4
},Object.freeze(enums.UIItemInfoState),
NamespaceManager.Register("enums"),enums.URLParams = {
    TOKEN: "token",
    EXPIRE: "expire",
    SHOWOFFID: "showoffId"
},enums.DeepLinkSections = {
    NONE: "",
    HOME: "home",
    SBC: "sbc",
    AUCTION: "auction",
    ACTIVE_SQUAD: "activesquad",
    STORE: "store",
    TOTW: "teamoftheweek",
    TRADE_PILE: "tradepile",
    UNASSIGNED: "unassigned",
    WATCH_LIST: "watchlist",
    OBJECTIVES: "objectives"
},Object.defineProperty(UTObject.prototype, "superclass", {
    get: function get() {
        for (var t = get.caller, name = t.name, i = this[name] === t, s = this; s && (s = Object.getPrototypeOf(s)) && s[name];) if (s[name] === t) i = !0; else if (i) return s[name];
        return utils.Debug.Assert(!1, "superclass() may not be called outside a named method implementation."), null
    }
}),UTObject.prototype.isSubClass = function isSubClass(t) {
    return utils.Debug.Assert(utils.JS.isFunction(t), "Expected function representing a class."), this instanceof t
},UTObject.prototype.conforms = function conforms(t) {
    utils.Debug.Assert(utils.JS.isFunction(t), "Expected function representing an interface.");
    var i;
    for (i in t.prototype) if (t.prototype.hasOwnProperty(i) && !this[i]) return !1;
    return !0
},UTObject.prototype.init = function init() {
},UTObject.prototype.dealloc = function dealloc() {
},UTHashTable.prototype.set = function set(key, value) {
    var t = this.has(key) ? this._collection[key] : null;
    return this._collection[key] = value, t
},UTHashTable.prototype.get = function get(key) {
    return this.has(key) ? this._collection[key] : null
},UTHashTable.prototype.has = function has(key) {
    return this._collection.hasOwnProperty(key)
},UTHashTable.prototype.remove = function remove(key) {
    if (this.has(key)) {
        var t = this._collection[key];
        return delete this._collection[key], t
    }
    return null
},UTHashTable.prototype.keys = function keys() {
    return Object.keys(this._collection)
},UTHashTable.prototype.values = function values() {
    var t, i = [];
    for (t in this._collection) this._collection.hasOwnProperty(t) && i.push(this._collection[t]);
    return i
},UTHashTable.prototype.forEach = function forEach(t, scope) {
    this.values().forEach(t, scope)
},UTHashTable.prototype.map = function map(t, scope) {
    return this.values().map(t, scope)
},UTHashTable.prototype.filter = function filter(t, scope) {
    return this.values().filter(t, scope)
},UTHashTable.prototype.find = function find(t) {
    if ("function" != typeof t) return utils.Debug.Assert(!1, "[UTHashTable::find] Expected a comparison function as first parameter."), null;
    var i;
    for (i in this._collection) if (this._collection.hasOwnProperty(i) && t(this._collection[i])) return this._collection[i];
    return null
},UTHashTable.prototype.clear = function clear() {
    this._collection = {}
},utils.JS.inherits(UTIterator, UTObject),UTIterator.prototype._atFirstIndex = function _atFirstIndex() {
    return 0 === this._index
},UTIterator.prototype._atLastIndex = function _atLastIndex() {
    var t = this._collection.length;
    return 0 === t || this._index === t - 1
},UTIterator.prototype.getLength = function getLength() {
    return this._collection.length
},UTIterator.prototype.setIndex = function setIndex(t) {
    utils.Debug.Assert(0 === t || t > 0 && t < this._collection.length, "[UTIterator::setIndex] Value provided is outside acceptable bounds."), t < 0 ? t = 0 : t >= this._collection.length && (t = this._collection.length - 1), this._index = t
},UTIterator.prototype.getIndex = function getIndex() {
    return this._index
},UTIterator.prototype.getLastIndex = function getLastIndex() {
    var index = this._collection.length - 1;
    return index >= 0 ? index : 0
},UTIterator.prototype.resetCollection = function resetCollection(t) {
    this._collection = t, this._index = 0
},UTIterator.prototype.current = function current() {
    return this._collection[this._index] || null
},UTIterator.prototype.get = function get(index) {
    return this._collection[index] || null
},UTIterator.prototype.set = function set(t, index) {
    utils.JS.isNumber(index) && index < this._collection.length ? this._collection[index] = t : utils.Debug.Assert(!1, "UTIterator::set. Trying to set val in an invalid index.")
},UTIterator.prototype.next = function next() {
    return this._index < this._collection.length - 1 && ++this._index, this._collection[this._index] || null
},UTIterator.prototype.previous = function previous() {
    return this._index > 0 && --this._index,
    this._collection[this._index] || null
},UTIterator.prototype.add = function add(t, index) {
    return !utils.JS.isNumber(index) || index >= this._collection.length ? this._collection.push(t) : this._collection.splice(index, 0, t), t
},UTIterator.prototype.remove = function remove(index) {
    var t = this._collection.splice(index, 1) || null;
    return this._index >= this._collection.length && (this._index = this._collection.length > 0 ? this._collection.length - 1 : 0), t
},UTIterator.prototype.shift = function shift() {
    var t = this._collection.shift() || null;
    return this._index >= this._collection.length && (this._index = this._collection.length > 0 ? this._collection.length - 1 : 0), t
},UTIterator.prototype.pop = function pop() {
    var t = this._collection.pop() || null;
    return this._index >= this._collection.length && (this._index = this._collection.length > 0 ? this._collection.length - 1 : 0), t
},UTIterator.prototype.values = function values() {
    return this._collection
},UTIterator.prototype.indexOf = function indexOf(t) {
    if ("function" != typeof t) return utils.Debug.Assert(!1, "[UTIterator::indexOf] Expected a function to be provided."), -1;
    var i, s = this._collection.length;
    for (i = 0; i < s; ++i) if (t(this._collection[i])) return i;
    return -1
},utils.JS.inherits(UTObservable, UTObject),UTObservable.prototype.dealloc = function dealloc() {
    this.clearObservers(), this.superclass()
},UTObservable.prototype.observe = function observe(t, i) {
    utils.Debug.Assert(utils.JS.isObject(t), "Expected a scope of type object."), utils.Debug.Assert(utils.JS.isFunction(i), "Expected a callback function.");
    for (var s = this._observers.length; s-- > 0;) {
        var o = this._observers[s];
        if (o.scope === t && o.cb === i) return this
    }
    return this._observers.push({scope: t, cb: i}), this
},UTObservable.prototype.unobserve = function unobserve(t, i) {
    return this._observers = this._observers.filter(function _clearObserver(s) {
        return s.scope !== t && (!utils.JS.isFunction(i) || s.cb !== i)
    }, this), this
},UTObservable.prototype.clearObservers = function clearObservers() {
    return this._observers = [], this
},UTObservable.prototype.notify = function notify(data) {
    function _notifyObserver(t) {
        t.cb.apply(t.scope, s)
    }

    var t, i = arguments.length, s = [];
    for (t = 0; t < i; t++) s[t] = arguments[t];
    return s.unshift(this), setTimeout(function () {
        this._observers.slice().forEach(_notifyObserver, this)
    }.bind(this), 0), this
},utils.JS.inherits(UTStorageAlternative, UTObject),UTStorageAlternative.prototype.setItem = function setItem(key, value) {
    this._localStorage[key] = value
},UTStorageAlternative.prototype.getItem = function getItem(key) {
    return void 0 !== this._localStorage[key] ? this._localStorage[key] : null
},UTStorageAlternative.prototype.key = function key(t) {
    return Object.keys(this._localStorage)[t]
},UTStorageAlternative.prototype.removeItem = function removeItem(key) {
    delete this._localStorage[key]
},UTStorageAlternative.prototype.clear = function clear() {
    var key;
    for (key in this._localStorage) this._localStorage.hasOwnProperty(key) && this.removeItem(key);
    this._localStorage = {}
},utils.JS.inherits(UTNotificationDispatcher, UTObject),UTNotificationDispatcher.prototype.addObserver = function addObserver(id, t, i) {
    this._observers.has(id) || this._observers.set(id, new UTObservable), this._observers.get(id).observe(t, i)
},UTNotificationDispatcher.prototype.removeObserver = function removeObserver(id, t) {
    this._observers.has(id) && this._observers.get(id).unobserve(t)
},UTNotificationDispatcher.prototype.removeObserversById = function removeObserversById(id) {
    this._observers.has(id) && (this._observers.get(id).clearObservers(), this._observers.remove(id))
},UTNotificationDispatcher.prototype.clearObservers = function clearObservers() {
    this._observers.clear()
},UTNotificationDispatcher.prototype.notify = function notify(id, sender, data) {
    this._observers.has(id) && this._observers.get(id).notify(sender, data)
},NamespaceManager.Register("interfaces"),interfaces.TouchResponder = function () {
},interfaces.TouchResponder.prototype._touchStarted = function (e) {
},interfaces.TouchResponder.prototype._touchMoved = function (e) {
},interfaces.TouchResponder.prototype._touchEnded = function (e) {
},interfaces.TouchResponder.prototype._touchCancelled = function (e) {
},
interfaces.TouchResponder.prototype._tapDetected = function (e) {
},utils.JS.inherits(UTResponder, UTObject),UTResponder.prototype.dealloc = function dealloc() {
    this._stopHandlingEvents(!0), this._eventElement = null, this._eventDelegates = [], this.superclass()
},UTResponder.prototype.setEventDelegate = function setEventDelegate(t) {
    utils.Debug.Assert(t instanceof UTResponder, "Expected an instance of UTResponder"), this._eventDelegates.push(t)
},UTResponder.prototype.getEventDelegate = function getEventDelegate() {
    var t = this._eventDelegates.length;
    return t > 0 ? this._eventDelegates[t - 1] : null
},UTResponder.prototype.removeEventDelegate = function removeEventDelegate(t) {
    utils.Debug.Assert(t instanceof UTResponder, "Expected an instance of UTResponder");
    var index = this._eventDelegates.indexOf(t);
    index >= 0 && this._eventDelegates.splice(index, 1)
},UTResponder.prototype._addListener = function _addListener(event, t, i, s) {
    event.split(" ").forEach(function (event) {
        t.addEventListener(event, i, !1), this._eventListeners.push({event: event, elem: t, cb: i, ns: s || ""})
    }, this)
},UTResponder.prototype._removeListenersByNS = function _removeListenersByNS(t) {
    var i = [];
    this._eventListeners.forEach(function (s) {
        s.ns === t ? s.elem.removeEventListener(s.event, s.cb) : i.push(s)
    }, this), this._eventListeners = i
},UTResponder.prototype._removeListenersByName = function _removeListenersByName(t) {
    Array.prototype.slice.call(arguments, 0).forEach(function _removeListenerByName(event) {
        var t = [];
        this._eventListeners.forEach(function (i) {
            event.indexOf(i.event) > -1 ? i.elem.removeEventListener(i.event, i.cb) : t.push(i)
        }, this), this._eventListeners = t
    }, this)
},UTResponder.prototype._setScrollPosCache = function _setScrollPosCache(t, i) {
    t.push(i.scrollTop), i.parentElement && "BODY" !== i.nodeName && this._setScrollPosCache(t, i.parentElement)
},UTResponder.prototype._detectScroll = function _detectScroll() {
    var t = [];
    if (this._setScrollPosCache(t, this._eventElement), t.length !== this._scrollPositions.length) return !0;
    for (var i = t.length; i-- > 0;) if (t[i] !== this._scrollPositions[i]) return !0;
    return !1
},UTResponder.prototype._compareTouchIdentifier = function _compareTouchIdentifier(t) {
    return t.identifier === this._touchID
},UTResponder.prototype._getTouch = function _getTouch(e) {
    return e instanceof MouseEvent ? e : utils.JS.find(e.targetTouches, this._compareTouchIdentifier.bind(this))
},UTResponder.prototype._checkDidTouchChange = function _checkDidTouchChange(e) {
    if (e instanceof MouseEvent) return !0;
    var t = utils.JS.find(e.changedTouches, this._compareTouchIdentifier.bind(this));
    return utils.JS.isValid(t)
},UTResponder.prototype._resetState = function _resetState() {
    this._touchID = -1, this._hasMoved = !1, this._touchOriginX = 0, this._touchOriginY = 0, this._scrollPositions = []
},UTResponder.prototype._startHandlingEvents = function _startHandlingEvents(t) {
    utils.Debug.Assert(t instanceof Element, "Expected an HTML element to handle events against."), this._eventElement = t, this._addListener(enums.Event.TOUCHSTART, this._eventElement, this._handleTouchStartEvent.bind(this)), this._addListener(enums.Event.MOUSEDOWN, this._eventElement, this._handleTouchStartEvent.bind(this)), this._addListener(enums.Event.MOUSEENTER, this._eventElement, this._handleMouseEnterEvent.bind(this)), this._addListener(enums.Event.MOUSELEAVE, this._eventElement, this._handleMouseLeaveEvent.bind(this))
},UTResponder.prototype._stopHandlingEvents = function _stopHandlingEvents(t) {
    this._touchID >= 0 && this._touchCancelled(null), this._eventListeners.forEach(function (i) {
        (t || i.elem === this._eventElement) && i.elem.removeEventListener(i.event, i.cb)
    }, this), this._eventListeners = [], this._resetState()
},UTResponder.prototype._handleTouchStartEvent = function _handleTouchStartEvent(e) {
    if (this._eventElement && !(this._touchID >= 0)) {
        if (this.allowLegacyPropagation || e.stopImmediatePropagation(), e instanceof MouseEvent) this._touchID = 1, this._touchOriginX = e.clientX, this._touchOriginY = e.clientY; else {
            if (e.touches.length > 1) return e.preventDefault(), void e.stopPropagation();
            this._touchID = e.targetTouches[0].identifier, this._touchOriginX = e.targetTouches[0].clientX,
                this._touchOriginY = e.targetTouches[0].clientY
        }
        this._setScrollPosCache(this._scrollPositions, this._eventElement), this._eventElementClientRect = this._eventElement.getBoundingClientRect(), this._touchStarted(e), this._addListener(enums.Event.TOUCHMOVE, this._eventElement, this._handleTouchMoveEvent.bind(this)), this._addListener(enums.Event.TOUCHEND, this._eventElement, this._handleTouchEndEvent.bind(this)), this._addListener(enums.Event.TOUCHCANCEL, this._eventElement, this._handleTouchCancelEvent.bind(this)), this._addListener(enums.Event.MOUSEMOVE, this._eventElement, this._handleTouchMoveEvent.bind(this)), this._addListener(enums.Event.MOUSEUP, this._eventElement, this._handleTouchEndEvent.bind(this)), this._addListener(enums.Event.MOUSECANCEL, this._eventElement, this._handleTouchCancelEvent.bind(this))
    }
},UTResponder.prototype._handleTouchMoveEvent = function _handleTouchMoveEvent(e) {
    if (this._checkDidTouchChange(e)) if (this._eventElement) {
        var t = this._getTouch(e);
        if (t) {
            if (!this._hasMoved) {
                var i = t.clientX, s = t.clientY, bounds = this._eventElementClientRect,
                    o = i < bounds.left || i > bounds.right || s < bounds.top || s > bounds.bottom;
                this._hasMoved = o || Math.abs(i - this._touchOriginX) > this.moveDistanceThreshold || Math.abs(s - this._touchOriginY) > this.moveDistanceThreshold
            }
            this._hasMoved && this._touchMoved(e)
        }
    } else this._handleTouchCancelEvent(e)
},UTResponder.prototype._handleTouchEndEvent = function _handleTouchEndEvent(e) {
    if (this._checkDidTouchChange(e)) {
        var t = this._detectScroll();
        !this._hasMoved && t && this._touchMoved(e), this._touchEnded(e), this._hasMoved || t || ("SELECT" !== e.target.tagName && (e.preventDefault(), e.target !== document.activeElement && (document.activeElement.blur(), e.target.focus && e.target.focus())), this._tapDetected(e)), this._resetState(), this._removeListenersByName(enums.Event.MOUSEMOVE, enums.Event.MOUSEUP, enums.Event.MOUSECANCEL)
    }
},UTResponder.prototype._handleTouchCancelEvent = function _handleTouchCancelEvent(e) {
    this._checkDidTouchChange(e) && (this._touchCancelled(e), this._resetState(), this._removeListenersByName(enums.Event.MOUSEMOVE, enums.Event.MOUSEUP, enums.Event.MOUSECANCEL))
},UTResponder.prototype._handleMouseEnterEvent = function _handleMouseEnterEvent(e) {
    e instanceof MouseEvent && this._mouseEnter(e)
},UTResponder.prototype._handleMouseLeaveEvent = function _handleMouseLeaveEvent(e) {
    e instanceof MouseEvent && (this._touchID >= 0 && this._handleTouchCancelEvent(e), this._mouseLeave(e), this._resetState(), this._removeListenersByName(enums.Event.MOUSEMOVE, enums.Event.MOUSEUP, enums.Event.MOUSECANCEL))
},UTResponder.prototype._touchStarted = function _touchStarted(e) {
    var t = this.getEventDelegate();
    t && t._touchStarted(e)
},UTResponder.prototype._touchMoved = function _touchMoved(e) {
    var t = this.getEventDelegate();
    t && t._touchMoved(e)
},UTResponder.prototype._touchEnded = function _touchEnded(e) {
    var t = this.getEventDelegate();
    t && t._touchEnded(e)
},UTResponder.prototype._touchCancelled = function _touchCancelled(e) {
    var t = this.getEventDelegate();
    t && t._touchCancelled(e)
},UTResponder.prototype._mouseEnter = function _mouseEnter(e) {
},UTResponder.prototype._mouseLeave = function _mouseLeave(e) {
},UTResponder.prototype._tapDetected = function _tapDetected(e) {
    var t = this.getEventDelegate();
    t && t._tapDetected(e)
},NamespaceManager.Register("interfaces"),interfaces.AuthDelegate = function () {
},interfaces.AuthDelegate.prototype.getCurrentUser = function getCurrentUser() {
},interfaces.AuthDelegate.prototype.getSession = function getSession(t) {
},interfaces.AuthDelegate.prototype.authenticate = function authenticate(t) {
},NamespaceManager.Register("utils"),utils.HTTP = {},utils.HTTP.baseUrlParse = /^(?:([A-Za-z]+):)?(\/{0,3})([0-9.\-A-Za-z]+)(?::(\d+))?(?:\/([^?#]*))?(?:\?([^#]*))?(?:#(.*))?$/,utils.HTTP.getParamsFromUrl = function getParamsFromUrl(url) {
    var t = url ? url.split("?")[1] : window.location.search.slice(1), i = new UTHashTable({});
    return t && (t = t.split("#")[0]).split("&").forEach(function (t) {
        var a = t.split("="), s = void 0 === a[1] ? "" : a[1], o = a[0];
        i.set(o, s)
    }), i
},utils.HTTP.generateUrlParams = function generateUrlParams(t) {
    var i = ""
    ;
    if (utils.JS.isValid(t)) {
        var s;
        for (s in t) t.hasOwnProperty(s) && (i += -1 === i.indexOf("?") ? "?" : "&", i += s + "=" + t[s])
    }
    return i
},utils.HTTP.removeURLParameter = function removeURLParameter(url, t) {
    var i = url.split("?");
    if (i.length >= 2) {
        for (var prefix = encodeURIComponent(t) + "=", s = i[1].split(/[&;]/g), o = s.length; 0 !== o;) -1 !== s[--o].lastIndexOf(prefix, 0) && s.splice(o, 1);
        return url = i[0] + (s.length > 0 ? "?" + s.join("&") : "")
    }
    return url
},utils.HTTP.getUriHost = function getUriHost(href) {
    var t = utils.HTTP.baseUrlParse.exec(href);
    return null === t ? "" : t[1] + ":" + t[2] + t[3] + "/"
},utils.HTTP.getUriPath = function getUriPath(href) {
    var t = utils.HTTP.baseUrlParse.exec(href);
    return null === t ? "" : t[5]
},utils.HTTP.getUriRoot = function getUriRoot(href) {
    return href.substring(0, href.lastIndexOf("/")) + "/"
},utils.HTTP.getHostname = function getHostname(url) {
    var hostname;
    return hostname = url.indexOf("://") > -1 ? url.split("/")[2] : url.split("/")[0], hostname = hostname.split(":")[0], hostname = hostname.split("?")[0]
},utils.HTTP.urlHasFile = function urlHasFile(href, t) {
    var i = new RegExp("." + t + "$");
    return null !== href.match(i)
},utils.HTTP.urlHasImage = function urlHasImage(href) {
    return href = href.toLowerCase(), utils.HTTP.urlHasFile(href, "png") || utils.HTTP.urlHasFile(href, "gif") || utils.HTTP.urlHasFile(href, "jpg") || utils.HTTP.urlHasFile(href, "jpeg")
},NamespaceManager.Register("utils"),utils.Debug = {},utils.Debug.Assert = function (t, message) {
},utils.Debug.StackTrace = function () {
},utils.Debug.Watch = function (name, scope) {
},NamespaceManager.Register("transferobjects"),transferobjects.FUTHttpResponse = function FUTHttpResponseDTO() {
    this.status = enums.HTTPStatusCode.UNKNOWN, this.success = !1, this.response = null, this.maxAge = 0, this.retryAfter = 0
},utils.JS.inherits(UTHttpRequest, UTObservable),UTHttpRequest.prototype.setCache = function setCache(t) {
    this._cache = !!t
},UTHttpRequest.prototype.setUrl = function setUrl(url) {
    this._url = url
},UTHttpRequest.prototype.setContentType = function setContentType(type) {
    this._contentType = type
},UTHttpRequest.prototype.setRequestType = function setRequestType(type) {
    this._requestType = type
},UTHttpRequest.prototype.overrideMimeType = function overrideMimeType(type) {
    this._mimeOverride = type
},UTHttpRequest.prototype.setUrlVariables = function setUrlVariables(t) {
    this._urlVariables = utils.HTTP.generateUrlParams(t)
},UTHttpRequest.prototype.setRequestBody = function setRequestBody(body) {
    this._requestBody = JSON.stringify(body)
},UTHttpRequest.prototype.setRequestHeader = function setRequestHeader(name, value) {
    this._http.readyState > XMLHttpRequest.OPENED ? utils.Debug.Assert(!1, "Attempted to set an HTTP request header when request has already been sent.") : this._http.readyState === XMLHttpRequest.UNSENT ? this._requestHeaders.push({
        name: name,
        value: value
    }) : this._http.setRequestHeader(name, value)
},UTHttpRequest.prototype.setTimeout = function setTimeout(time) {
    this._http.readyState === XMLHttpRequest.DONE ? utils.Debug.Assert(!1, "Attempted to assign timeout to an HTTP request when it has already been completed.") : this._http.readyState > XMLHttpRequest.UNSENT && (this._http.timeout = time), this._timeout = time
},UTHttpRequest.prototype._setDefaultHeaders = function _setDefaultHeaders() {
    this._http.setRequestHeader("Content-Type", this._contentType)
},UTHttpRequest.prototype.reset = function reset() {
    this._http.abort()
},UTHttpRequest.prototype.send = function send() {
    if (this._http.readyState > XMLHttpRequest.UNSENT && this._http.readyState < XMLHttpRequest.DONE) utils.Debug.Assert(!1, "Attempted to send an HTTP request when it is in the middle of sending."); else if (this._http.readyState === XMLHttpRequest.DONE && this.reset(), utils.JS.isEmpty(this._url)) utils.Debug.Assert(!1, "Attempted to send an HTTP request when URL is not set."); else {
        var url = this._url + this._urlVariables;
        this._http.open(this._requestType, url, !0), this._setDefaultHeaders();
        for (var headers = this._requestHeaders.slice(); headers.length > 0;) {
            var t = headers.pop();
            this._http.setRequestHeader(t.name, t.value)
        }
        this._cache || this._http.setRequestHeader("Cache-Control", "no-cache"),
        this._timeout > 0 && (this._http.timeout = this._timeout), this._http.onreadystatechange = this._onStateChange.bind(this), this._requestBody && this._requestType !== enums.HTTPRequestMethod.DELETE ? this._http.send(this._requestBody) : this._http.send()
    }
},UTHttpRequest.prototype._onStateChange = function _onStateChange() {
    if (this._http.readyState === XMLHttpRequest.DONE) {
        var status = this._http.status;
        this._http.statusText;
        if (this._http.responseURL) {
            var t = /^file:\/\//;
            this._isLocal = t.test(this._http.responseURL)
        } else {
            var i = /^[a-zA-Z]+:\/\//;
            this._isLocal = !i.test(this._url)
        }
        if (this._isLocal) {
            var s = utils.JS.isString(this._http.responseText) && this._http.responseText.length > 0;
            status = s ? enums.HTTPStatusCode.OK : enums.HTTPStatusCode.NOT_FOUND, s ? "OK" : "Not Found"
        }
        status >= 200 && status < 300 || 304 === status ? this._handleSuccess() : this._handleFail()
    }
},UTHttpRequest.prototype._parseResponse = function _parseResponse() {
    if (this._http.response) {
        if (this._http.getResponseHeader("content-type") === enums.HTTPContentType.XML || this._http.responseXML) return this._http.responseXML;
        if ("json" === this._http.responseType || utils.JS.isString(this._http.response) && this._http.response.length > 0) try {
            return JSON.parse(this._http.response)
        } catch (t) {
        }
        return this._http.response.toString()
    }
    return null
},UTHttpRequest.prototype._handleSuccess = function _handleSuccess() {
    var t = new transferobjects.FUTHttpResponse;
    t.status = this._isLocal ? enums.HTTPStatusCode.OK : this._http.status, t.success = !0, t.response = this._parseResponse(), this.notify(t)
},UTHttpRequest.prototype._handleFail = function _handleFail() {
    var t = new transferobjects.FUTHttpResponse;
    if (t.status = this._isLocal ? enums.HTTPStatusCode.NOT_FOUND : this._http.status, !this._isLocal && utils.JS.isString(this._http.response)) {
        var reason = this._http.response;
        reason.match(enums.NetworkErrorReason.MULTIPLE_SESSION) ? t.status = enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE : reason.match(enums.NetworkErrorReason.WRONG_CREDENTIALS) || reason.match(enums.NetworkErrorReason.INVALID_CREDENTIALS) ? t.status = enums.HTTPStatusCode.INVALID_CREDENTIALS : reason.match(enums.NetworkErrorReason.BANNED) ? t.status = enums.HTTPStatusCode.ACCOUNT_BANNED : reason.match(enums.NetworkErrorReason.CLIENT_VERSION_EXPIRED) || reason.match(enums.NetworkErrorReason.CLIENT_VERSION_UNKNOWN) ? t.status = enums.HTTPStatusCode.UPDATE_REQUIRED : reason.match(enums.NetworkErrorReason.GEOIP_BLACKLISTED) && (t.status = enums.HTTPStatusCode.GEOIP_BLACKLISTED)
    }
    t.retryAfter = parseInt(this._http.getResponseHeader("Retry-After"), 10) || 0, this.notify(t)
},NamespaceManager.Register("transferobjects"),transferobjects.ServerShard = function ServerShardDTO(data) {
    this.id = data.shardId, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.hostname = data.clientFacingIpPort, Object.defineProperty(this, "hostname", {
        writable: !1,
        enumerable: !0
    }), this.protocol = data.clientProtocol, Object.defineProperty(this, "protocol", {
        writable: !1,
        enumerable: !0
    }), this.platforms = data.platforms, Object.defineProperty(this, "platforms", {
        writable: !1,
        enumerable: !0
    }), this.skus = data.skus, Object.defineProperty(this, "skus", {writable: !1, enumerable: !0})
},transferobjects.ServerShard.prototype.supportsPlatform = function supportsPlatform(platform) {
    return this.platforms.indexOf(platform) >= 0
},transferobjects.ServerShard.prototype.supportsSKU = function supportsSKU(t) {
    return this.skus.indexOf(t) >= 0
},NamespaceManager.Register("accessobjects"),accessobjects.Authentication = function () {
    function UTAuthenticationDAO() {
        UTObject.call(this), this._authDelegate = null, Object.defineProperty(this, "_authDelegate", {
            writable: !0,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTAuthenticationDAO, UTObject), UTAuthenticationDAO.prototype.setAuthDelegate = function setAuthDelegate(t) {
        t && t.conforms(interfaces.AuthDelegate) && (this._authDelegate = t)
    }, UTAuthenticationDAO.prototype._triggerUnauthorizedResponse = function _triggerUnauthorizedResponse(t) {
        var i = new transferobjects.FUTHttpResponse;
        i.status = enums.HTTPStatusCode.UNAUTHORIZED, t.notify(i)
    }, UTAuthenticationDAO.prototype.getShards = function getShards() {
        var t = new UTHttpRequest, i = new UTObservable;
        return t.setUrl(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_DEFAULT_FUT_SERVICE_PROTOCOL) + "://" + gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_DEFAULT_FUT_SERVICE_URL) + "/ut/shards/v2"), t.observe(this, function _onGetShardsComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {
                shards: data.success ? data.response.shardInfo.map(function (t) {
                    return new transferobjects.ServerShard(t)
                }) : []
            }, i.notify(s)
        }), t.send(), i
    }, UTAuthenticationDAO.prototype.authenticate = function authenticate(t) {
        var i = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(i), i;
        var s = this._authDelegate.getCurrentUser(), o = this._authDelegate.getSession(t), l = new UTHttpRequest;
        if (t === enums.AuthEnvironment.UTAS) {
            var u = s.getSelectedPersona(), h = utils.FUTData.mapSkuToCurrentYear(u.sku);
            l.setUrl(o.url + "/ut/auth"), l.setRequestBody({
                isReadOnly: !1,
                sku: enums.SKU.FUT,
                clientVersion: CLIENT_VERSION,
                locale: services.Localization.getLocale().toBCPString(),
                method: "authcode",
                priorityLevel: 4,
                identification: {authCode: this._authDelegate.authToken, redirectUrl: "nucleus:rest"},
                nucleusPersonaId: u.id,
                gameSku: h
            })
        } else utils.Debug.Assert(!1, "Unsupported LiOn environment.");
        var p = gUserSettingsModel.getUserItem(models.UserSettingsModel.SECURITY_TOKEN, "");
        return p && l.setRequestHeader("X-UT-PHISHING-TOKEN", p), l.setRequestType(enums.HTTPRequestMethod.POST), l.setCache(!1), l.observe(this, function _onLoginComplete(s, data) {
            s.unobserve(this);
            var o = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, o), o.response = {
                phishingToken: data.success ? data.response.phishingToken : "",
                protocol: data.success ? data.response.protocol : "",
                hostname: data.success ? data.response.ipPort : "",
                id: data.success ? data.response.sid : "",
                environment: t
            }, i.notify(o)
        }), l.send(), i
    }, UTAuthenticationDAO.prototype.unauthenticate = function unauthenticate(t) {
        var i = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(i), i;
        var s = this._authDelegate.getSession(t), o = new UTHttpRequest;
        if (s.state === enums.AuthenticationState.STATE_UNAUTHENTICATED) {
            var l = new transferobjects.FUTHttpResponse;
            return l.success = !0, l.status = enums.HTTPStatusCode.OK, i.notify(l), i
        }
        return t === enums.AuthEnvironment.UTAS ? o.setUrl(s.url + "/ut/auth") : utils.Debug.Assert(!1, "Unsupported LiOn environment."), o.setRequestType(enums.HTTPRequestMethod.DELETE), o.setCache(!1), o.observe(this, function _onUnauthenticateComplete(t, data) {
            t.unobserve(this), data.success && (s.state = enums.AuthenticationState.STATE_UNAUTHENTICATED), i.notify(data)
        }), o.send(), i
    }, new UTAuthenticationDAO
}(),utils.JS.inherits(UTUtasHttpRequest, UTHttpRequest),UTUtasHttpRequest.prototype.reset = function reset() {
    this.superclass(), this._doReauth = !0
},UTUtasHttpRequest.prototype.setPath = function setPath(url) {
    this._url = this._delegate.getSession(enums.AuthEnvironment.UTAS).url + url
},UTUtasHttpRequest.prototype._setDefaultHeaders = function _setDefaultHeaders() {
    this.superclass(), this._http.setRequestHeader("X-UT-SID", this._delegate.getSession(enums.AuthEnvironment.UTAS).id)
},UTUtasHttpRequest.prototype.send = function send() {
    this.superclass()
},UTUtasHttpRequest.prototype._handleReauth = function _handleReauth(t, response) {
    response.data.environment === enums.AuthEnvironment.UTAS && (t.unobserve(this), response.success ? this.send() : (this._doReauth = !1, this._handleFail()))
},UTUtasHttpRequest.prototype._handleSuccess = function _handleSuccess() {
    var t = new transferobjects.FUTHttpResponse;
    t.status = this._http.status, t.success = !0, t.response = this._parseResponse(), utils.JS.isObject(t.response) && t.response.hasOwnProperty("code") && "200" !== t.response.code && (t.success = !1, t.status = parseInt(t.response.code, 10));
    var i = this._http.getResponseHeader("Cache-Control");
    if (i) {
        var s = i.split(/[= ,]/);
        "max-age" === s[0] && "string" == typeof s[1] && s[1].length > 0 && (t.maxAge = parseInt(s[1], 10))
    }
    this.notify(t)
},UTUtasHttpRequest.prototype._handleFail = function _handleFail() {
    this._doReauth && this._http.status === enums.HTTPStatusCode.UNAUTHORIZED ? this._delegate.authenticate(enums.AuthEnvironment.UTAS).observe(this, this._handleReauth) : this.superclass()
},NamespaceManager.Register("accessobjects"),accessobjects.User = function () {
    function UTUserDAO() {
        UTObject.call(this)
    }

    return utils.JS.inherits(UTUserDAO, UTObject), UTUserDAO.prototype.getPersonas = function getPersonas(t, i) {
        var s = new UTObservable, o = new UTHttpRequest, l = t.getCurrentUser();
        return o.setUrl(i.protocol + "://" + i.hostname + "/ut/game/" + GAME_NAME + "/user/accountinfo"), o.setUrlVariables({
            filterConsoleLogin: !0,
            sku: enums.SKU.FUT,
            returningUserGameYear: (parseInt(utils.TextUtils.getYearString(), 10) - 1).toString()
        }), o.setRequestHeader("Easw-Session-Data-Nucleus-Id", l.id.toString()), o.observe(this, function _onGetPersonasComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i), i.response = {personas: data.success ? data.response.userAccountInfo.personas : []}, s.notify(i)
        }), o.send(), s
    }, UTUserDAO.prototype.getCurrencies = function getCurrencies(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t), o = new transferobjects.FUTHttpResponse;
        return s.setPath("/ut/game/" + GAME_NAME + "/user/credits"), s.observe(this, function _onGetCurrenciesComplete(t, data) {
            t.unobserve(this), utils.JS.assignPropertyValues(data, o);
            var s = [], l = 0;
            data.success && (Array.isArray(data.response.currencies) && (s = data.response.currencies.map(function (t) {
                return new valueobjects.Currency(t.name, t.funds)
            })), data.response.unopenedPacks && (l = (data.response.unopenedPacks.preOrderPacks || 0) + (data.response.unopenedPacks.recoveredPacks || 0))), o.response = {
                currencies: s,
                unopenedPacks: l
            }, i.notify(o)
        }), s.send(), i
    }, UTUserDAO.prototype.getPileSizes = function getPileSizes(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t), o = new transferobjects.FUTHttpResponse;
        return s.setPath("/ut/game/" + GAME_NAME + "/clientdata/pileSize"), s.observe(this, function _onGetPileSizesComplete(t, data) {
            t.unobserve(this), utils.JS.assignPropertyValues(data, o);
            var s = [];
            data.success && Array.isArray(data.response.entries) && (s = data.response.entries.slice()), o.response = {pileSizes: s}, i.notify(o)
        }), s.send(), i
    }, UTUserDAO.prototype.getUserInfo = function getUserInfo(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t), o = new transferobjects.FUTHttpResponse;
        return s.setPath("/ut/game/" + GAME_NAME + "/user"), s.observe(this, function _onGetUserInfoComplete(t, data) {
            t.unobserve(this), utils.JS.assignPropertyValues(data, o);
            var s = [];
            data.success && Array.isArray(data.response.actives) && (s = data.response.actives.map(function (item) {
                return factories.Item.createItem(item)
            }));
            var l = [];
            data.success && Array.isArray(data.response.currencies) && (l = data.response.currencies.map(function (t) {
                return new valueobjects.Currency(t.name, t.funds)
            }));
            var u = enums.TradeAccessLevel.MAINTENANCE;
            data.success && data.response.feature && (u = parseInt(data.response.feature.trade, 10) || enums.TradeAccessLevel.NONE);
            var h = 0;
            data.success && data.response.unopenedPacks && (h = (data.response.unopenedPacks.recoveredPacks || 0) + (data.response.unopenedPacks.preOrderPacks || 0)), o.response = {
                activeItems: s,
                currencies: l,
                tradeAccess: u,
                unopenedPacks: h
            }, i.notify(o)
        }), s.send(), i
    }, UTUserDAO.prototype.getMassInfo = function getMassInfo(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t), o = new transferobjects.FUTHttpResponse;
        return s.setPath("/ut/game/" + GAME_NAME + "/usermassinfo"), s.observe(this, function _onGetMassInfoComplete(t, data) {
            t.unobserve(this), utils.JS.assignPropertyValues(data, o);
            var s = [];
            data.success && data.response.userInfo && Array.isArray(data.response.userInfo.actives) && (s = data.response.userInfo.actives.map(function (item) {
                return factories.Item.createItem(item)
            }));
            var l = [];
            data.success && data.response.userInfo && Array.isArray(data.response.userInfo.currencies) && (l = data.response.userInfo.currencies.map(function (t) {
                return new valueobjects.Currency(t.name, t.funds)
            }));
            var u = null
            ;data.success && data.response.activeMessages && Array.isArray(data.response.activeMessages.activeMessage) && (u = data.response.activeMessages.activeMessage.filter(function (t) {
                return utils.JS.isValid(t.rewardType)
            })[0] || null);
            var h = {hasOnboarding: !1, awayKitId: 0, badgeId: 0, nationId: 0, homeKitId: 0, loanDefId: 0};
            if (data.success && data.response.loanPlayerClientData && Array.isArray(data.response.loanPlayerClientData.entries)) {
                var p = data.response.loanPlayerClientData.entries[0];
                h.loanDefId = p ? p.value : 0, h.hasOnboarding = utils.JS.isValid(p)
            }
            data.success && data.response.onboardingClientData && Array.isArray(data.response.onboardingClientData.entries) && (h.hasOnboarding = !0, data.response.onboardingClientData.entries.forEach(function (t) {
                switch (t.key) {
                    case enums.OnboardingStateType.HOME_KIT:
                        h.homeKitId = t.value;
                        break;
                    case enums.OnboardingStateType.AWAY_KIT:
                        h.awayKitId = t.value;
                        break;
                    case enums.OnboardingStateType.BADGE:
                        h.badgeId = t.value;
                        break;
                    case enums.OnboardingStateType.NATION:
                        h.nationId = t.value
                }
            }, this));
            var m = [];
            data.success && data.response.pileSizeClientData && Array.isArray(data.response.pileSizeClientData.entries) && (m = data.response.pileSizeClientData.entries.slice());
            var _ = [];
            data.success && data.response.settings && Array.isArray(data.response.settings.configs) && (_ = data.response.settings.configs.slice());
            var g = enums.TradeAccessLevel.MAINTENANCE;
            data.success && data.response.userInfo && data.response.userInfo.feature && (g = parseInt(data.response.userInfo.feature.trade, 10) || enums.TradeAccessLevel.NONE);
            var S = [];
            data.success && data.response.purchasedItems && (S = factories.Item.generateItemsFromItemData(data.response.purchasedItems.itemData, data.response.purchasedItems.duplicateItemIdList));
            var T = 0;
            data.success && data.response.userInfo && data.response.userInfo.unopenedPacks && (T = (data.response.userInfo.unopenedPacks.recoveredPacks || 0) + (data.response.userInfo.unopenedPacks.preOrderPacks || 0));
            var v = !1;
            data.success && utils.JS.isBoolean(data.response.isPlayerPicksTemporaryStorageNotEmpty) && (v = data.response.isPlayerPicksTemporaryStorageNotEmpty), o.response = {
                activeItems: s,
                activeSquad: data.success && data.response.squad ? factories.Squad.createSquad(data.response.squad) : null,
                currencies: l,
                dailyGift: u,
                onboardingState: h,
                pileSizes: m,
                settings: _,
                tradeAccess: g,
                unassignedItems: S,
                unopenedPacks: T,
                playerPicksPending: v
            }, i.notify(o)
        }), s.send(), i
    }, new UTUserDAO
}(),NamespaceManager.Register("transferobjects"),transferobjects.Session = function SessionDTO(t) {
    this.id = "", this.environment = t, Object.defineProperty(this, "environment", {
        writable: !1,
        enumerable: !0
    }), this.hostname = "", this.url = "", Object.defineProperty(this, "url", {
        get: this.getUrl,
        enumerable: !0
    }), this.protocol = enums.SessionProtocol.HTTP, this.state = enums.AuthenticationState.STATE_UNAUTHENTICATED, this.statusCode = enums.HTTPStatusCode.OK, this.captchaCooldown = 10, this.count = 0
},transferobjects.Session.prototype.getUrl = function getUrl() {
    return this.protocol + "://" + this.hostname
},transferobjects.Session.prototype.isAuthenticated = function isAuthenticated() {
    return this.state === enums.AuthenticationState.STATE_AUTHENTICATED
},NamespaceManager.Register("transferobjects"),transferobjects.ServiceResponse = function ServiceResponseDTO() {
    this.success = !1, this.status = enums.HTTPStatusCode.UNKNOWN, this.data = null
},NamespaceManager.Register("services"),services.Authentication = function () {
    function UTAuthenticationService() {
        UTObject.call(this), this.authToken = "", this._sessionUtas = new transferobjects.Session(enums.AuthEnvironment.UTAS), Object.defineProperty(this, "_sessionUtas", {
            writable: !0,
            enumerable: !1
        }), this._shards = [], Object.defineProperty(this, "_shards", {
            writable: !0,
            enumerable: !1
        }), this._oAuthentication = new UTObservable, Object.defineProperty(this, "_oAuthentication", {
            writable: !1,
            enumerable: !0
        })
    }

    return utils.JS.inherits(UTAuthenticationService, UTObject), UTAuthenticationService.prototype.reset = function reset() {
        this.authToken = "", this._shards = [], this._sessionUtas = new transferobjects.Session(enums.AuthEnvironment.UTAS), this._oAuthentication.clearObservers()
    },
        UTAuthenticationService.prototype.getCurrentUser = function getCurrentUser() {
            return services.User.getUser()
        }, UTAuthenticationService.prototype.getFUTAuthState = function getFUTAuthState() {
        var status = this._sessionUtas.statusCode, t = !1;
        if (status !== enums.HTTPStatusCode.OK) switch (status) {
            case enums.HTTPStatusCode.NO_USER:
                return enums.FUTAuthState.NO_DATA;
            case enums.HTTPStatusCode.SERVER_ERROR:
            case enums.HTTPStatusCode.NOT_FOUND:
                return enums.FUTAuthState.SERVER_DOWN;
            case enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE:
                return enums.FUTAuthState.CONCURRENT_SESSION;
            default:
                t = !0
        }
        var i = services.User.getUser();
        if (!utils.JS.isValid(i)) return enums.FUTAuthState.NO_DATA;
        var s = i.getSelectedPersona();
        return s ? !s.isAccessTrial && !s.isFreeTrial || s.isReturningUser ? t ? enums.FUTAuthState.SERVER_DOWN : enums.FUTAuthState.COMPLETE : enums.FUTAuthState.NEW_TRIAL_USER : enums.FUTAuthState.NO_DATA
    }, UTAuthenticationService.prototype.requestServerShards = function requestServerShards() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse;
        return this._shards.length > 0 ? (i.success = !0, i.status = enums.HTTPStatusCode.OK, i.data = {shards: this._shards}, t.notify(i)) : accessobjects.Authentication.getShards().observe(this, function _onGetShardsComplete(s, data) {
            s.unobserve(this), this._shards = data.success ? data.response.shards : [], i.success = data.success, i.status = data.status, i.data = {shards: this._shards}, t.notify(i)
        }), t
    }, UTAuthenticationService.prototype.getServerShardBySKU = function getServerShardBySKU(t) {
        return utils.JS.find(this._shards, function (i) {
            return i.supportsSKU(t)
        })
    }, UTAuthenticationService.prototype.requestPersonas = function requestPersonas() {
        function _onGetPersonasComplete(o, data) {
            o.unobserve(this);
            var l = this.getCurrentUser();
            if (s--, data.success ? data.response.personas.forEach(function (t) {
                    l.addPersona(t)
                }) : i.success || (i.status = data.status), s <= 0) {
                var u = l.getSelectedPersona();
                if (u) {
                    var h = this.getServerShardBySKU(u.sku);
                    if (h) {
                        var p = this.getSession(enums.AuthEnvironment.UTAS);
                        p.protocol = h.protocol, p.hostname = h.hostname
                    }
                    i.success = !0, i.status = enums.HTTPStatusCode.OK
                }
                i.data = {
                    personas: l.personas.values(),
                    selectedPersona: u,
                    numPersonas: l.personas.length
                }, t.notify(i)
            }
        }

        function _getPersonasForShard(t) {
            accessobjects.User.getPersonas(this, t).observe(this, _onGetPersonasComplete)
        }

        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = 0;
        return this.requestServerShards().observe(this, function _onRequestServerShardsComplete(o, response) {
            o.unobserve(this), s = response.data.shards.length, response.success && s > 0 ? response.data.shards.forEach(_getPersonasForShard, this) : (i.success = response.success, i.status = response.status, i.data = {
                personas: [],
                selectedPersona: null,
                numPersonas: 0
            }, t.notify(i))
        }), t
    }, UTAuthenticationService.prototype.getSession = function getSession(t) {
        switch (t) {
            case enums.AuthEnvironment.UTAS:
                return this._sessionUtas
        }
        return utils.Debug.Assert(!1, "No session DTO found for environment"), new transferobjects.Session(enums.AuthEnvironment.NONE)
    }, UTAuthenticationService.prototype.setSession = function setSession(t) {
        switch (t.environment) {
            case enums.AuthEnvironment.UTAS:
                this._sessionUtas = t;
                break;
            default:
                utils.Debug.Assert(!1, "Session is associated with an unsupported environment")
        }
    }, UTAuthenticationService.prototype.authenticate = function authenticate(t) {
        function _onAuthComplete(t, data) {
            t.unobserve(this), s.success = data.success, s.status = data.status, s.data = {
                phishingToken: data.response.phishingToken,
                protocol: data.response.protocol,
                hostname: data.response.hostname,
                id: data.response.id,
                environment: data.response.environment
            }, data.success ? (o.id = data.response.id, data.response.protocol && (o.protocol = data.response.protocol), data.response.hostname && (o.hostname = data.response.hostname), data.response.phishingToken && gUserSettingsModel.setUserItem(models.UserSettingsModel.SECURITY_TOKEN, data.response.phishingToken), o.state = enums.AuthenticationState.STATE_AUTHENTICATED, o.statusCode = enums.HTTPStatusCode.OK) : (o.state = enums.AuthenticationState.STATE_AUTHENTICATION_FAILED, o.statusCode = data.status), i.notify(s)
        }

        var i = this._oAuthentication, s = new transferobjects.ServiceResponse, o = this.getSession(t);
        return o.state === enums.AuthenticationState.STATE_AUTHENTICATING ? i : (o.state = enums.AuthenticationState.STATE_AUTHENTICATING, eadp.identity.token2code("FOS-SERVER", function _onGetTokenSuccess(data) {
            this.authToken = data.response.code, accessobjects.Authentication.authenticate(t).observe(this, _onAuthComplete)
        }.bind(this), function _onGetTokenFail(data) {
            o.state = enums.AuthenticationState.STATE_AUTHENTICATION_FAILED, o.statusCode = data.status === enums.HTTPStatusCode.UNKNOWN ? enums.HTTPStatusCode.NO_INTERNET_CONNECTION : data.status, s.success = data.success, s.status = data.status, s.data = {environment: t}, i.notify(s)
        }.bind(this)), i)
    }, UTAuthenticationService.prototype.unauthenticate = function unauthenticate(t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse;
        return accessobjects.Authentication.unauthenticate(t).observe(this, function _onUnauthenticateComplete(o, data) {
            o.unobserve(this), s.success = data.success, s.status = data.status, s.data = {environment: t}, i.notify(s)
        }), i
    }, new UTAuthenticationService
}(),utils.JS.inherits(UTItemRarityColorMapDTO, UTObject),UTItemRarityDTO.prototype.getExpColorMap = function getExpColorMap(t) {
    return this.levels ? this._largeColorMaps.get(t) : this._largeColorMaps.get(enums.ItemRatingTier.NONE)
},UTItemRarityDTO.prototype.getSmallColorMap = function getSmallColorMap(t) {
    return this.levels ? this._smallColorMaps.get(t) : this._smallColorMaps.get(enums.ItemRatingTier.NONE)
},UTItemRarityDTO.prototype._generateColorMappingObject = function _generateColorMappingObject(t, i, s) {
    function _getRGBFromColorValue(color) {
        for (; color.length < 6;) color = "0" + color;
        var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(color);
        return result ? {
            r: parseInt(result[1], 16),
            g: parseInt(result[2], 16),
            b: parseInt(result[3], 16)
        } : (utils.Debug.Assert(!1, "[UTItemRarityDTO] Invalid Color " + color), {r: 0, g: 0, b: 0})
    }

    function _getColorFromIndex(t, index) {
        return index > 0 ? _getRGBFromColorValue(t[index - 1]) : {}
    }

    function _getColorsForLevel(t, index, i) {
        return t.slice(i * index, i * index + i)
    }

    function _generateColorMap(t, i) {
        var s = i.length > 0;
        return new UTItemRarityColorMapDTO(s ? i.slice(0, 8).map(function (i) {
            return _getColorFromIndex(t, i)
        }) : [], !!s && Boolean(i[8]))
    }

    var o = {};
    return t.length > 0 && (this.levels ? (o[enums.ItemRatingTier.BRONZE.toString()] = _generateColorMap(_getColorsForLevel(t, 0, s), i), o[enums.ItemRatingTier.SILVER.toString()] = _generateColorMap(_getColorsForLevel(t, 1, s), i), o[enums.ItemRatingTier.GOLD.toString()] = _generateColorMap(_getColorsForLevel(t, 2, s), i)) : o[enums.ItemRatingTier.NONE.toString()] = _generateColorMap(t, i)), o
},NamespaceManager.Register("accessobjects"),accessobjects.Configuration = function () {
    function UTConfigurationDAO() {
        UTObject.call(this), this._authDelegate = null, Object.defineProperty(this, "_authDelegate", {
            writable: !0,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTConfigurationDAO, UTObject), UTConfigurationDAO.prototype.setAuthDelegate = function setAuthDelegate(t) {
        t && t.conforms(interfaces.AuthDelegate) && (this._authDelegate = t)
    }, UTConfigurationDAO.prototype._triggerUnauthorizedResponse = function _triggerUnauthorizedResponse(t) {
        var i = new transferobjects.FUTHttpResponse;
        i.status = enums.HTTPStatusCode.UNAUTHORIZED, t.notify(i)
    }, UTConfigurationDAO.prototype.getLocalConfig = function getLocalConfig() {
        var t = new UTObservable, i = new UTHttpRequest;
        return i.setUrl("config/config.json"), i.observe(this, function _onGetLocalConfigComplete(i, data) {
            i.unobserve(this), t.notify(data)
        }), i.send(), t
    }, UTConfigurationDAO.prototype.getRemoteConfig = function getRemoteConfig() {
        var t = new UTObservable, i = new UTHttpRequest;
        return i.setUrl(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + utils.AssetLocator.getRemoteConfigFileURI()), i.setCache(!1), i.observe(this, function _onGetRemoteConfigComplete(i, data) {
            i.unobserve(this), t.notify(data)
        }), i.send(), t
    }, UTConfigurationDAO.prototype.getLocalization = function getLocalization(locale) {
        var t = new UTObservable, i = new UTHttpRequest;
        if (locale.isValid()) {
            var url = "loc/" + locale.toString() + ".json";
            url += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION), i.setUrl(url), i.observe(this, function _onGetLocalizationComplete(i, data) {
                i.unobserve(this), t.notify(data)
            }), i.send()
        } else {
            var s = new transferobjects.FUTHttpResponse;
            s.success = !1, s.status = enums.HTTPStatusCode.NOT_FOUND, t.notify(s)
        }
        return t
    }, UTConfigurationDAO.prototype.getDynamicLocalization = function getDynamicLocalization() {
        var t = new UTObservable, i = new UTHttpRequest;
        return i.setUrl(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + utils.AssetLocator.getExtendedLocFileURI()), i.setCache(!1), i.observe(this, function _onGetDynamicLocalizationComplete(i, data) {
            i.unobserve(this), t.notify(data)
        }), i.send(), t
    }, UTConfigurationDAO.prototype.getRarity = function getRarity(t) {
        var i = new UTObservable, s = new UTHttpRequest;
        (!utils.JS.isNumber(t) || t > enums.Year.ASSET || t < enums.Year.YEAR_2010) && (t = enums.Year.ASSET);
        var url;
        return url = t < enums.Year.ASSET ? "json/rarities_fut" + t.toString() + ".json" : gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + utils.AssetLocator.getRarityURI(), s.setUrl(url), s.setCache(!1), s.observe(this, function _onGetRemoteRarityComplete(s, data) {
            s.unobserve(this);
            var o = new transferobjects.FUTHttpResponse,
                l = data.success && utils.JS.isValid(data.response) && Array.isArray(data.response.rarities);
            utils.JS.assignPropertyValues(data, o), o.response = {
                year: t,
                rarities: l ? data.response.rarities.map(function (t) {
                    return new UTItemRarityDTO(t)
                }) : []
            }, i.notify(o)
        }), s.send(), i
    }, UTConfigurationDAO.prototype.getStoreLocalization = function getStoreLocalization() {
        var t = new UTObservable, i = new UTHttpRequest, s = utils.AssetLocator.getStoreLocFileURI();
        return i.observe(this, function _onGetStoreLocalizationComplete(i, data) {
            i.unobserve(this), t.notify(data)
        }), utils.ResourceManager.RequestResource(s, function _onResourceCacheSuccess(value) {
            i.setUrl(value.path), i.send()
        }, function _onResourceCacheFail() {
            i.setUrl(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + s), i.setCache(!1), i.send()
        }), t
    }, UTConfigurationDAO.prototype.getGBUDJson = function getGBUDJson() {
        var t = new UTObservable, i = new UTHttpRequest;
        return i.setUrl(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + utils.AssetLocator.getGBUDJSONURI()), i.observe(this, function _onGetJsonComplete(i, data) {
            i.unobserve(this), t.notify(data)
        }), i.send(), t
    }, UTConfigurationDAO.prototype.getSettingsData = function getSettingsData() {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t;
        var i = new UTUtasHttpRequest(this._authDelegate);
        return i.setPath("/ut/game/" + GAME_NAME + "/settings"), i.observe(this, function _onGetSettingsComplete(i, data) {
            i.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = [];
            utils.JS.assignPropertyValues(data, s), data.success && data.response.configs && Array.isArray(data.response.configs) && (o = data.response.configs.slice()), s.response = {settings: o}, t.notify(s)
        }), i.send(), t
    }, new UTConfigurationDAO
}(),NamespaceManager.Register("services"),services.Configuration = function () {
    function UTConfigurationService() {
        UTObject.call(this), this._GBUD = new UTHashTable({})
    }

    return utils.JS.inherits(UTConfigurationService, UTObject), UTConfigurationService.prototype.getItemRarity = function getItemRarity(item) {
        return repositories.Rarity.getRarity(item.rareflag, item.getYear())
    }, UTConfigurationService.prototype.loadRarityData = function loadRarityData() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return repositories.Rarity.isCacheExpired() ? accessobjects.Configuration.getRarity().observe(this, function _onGetRarityComplete(i, data) {
            i.unobserve(this), t.success = data.success, t.status = data.status, data.success && (repositories.Rarity.add(data.response.rarities, enums.Year.ASSET), repositories.Rarity.setCacheTimestamp(Date.now(), data.maxAge > 0 ? data.maxAge : null)), event.notify(t)
        }) : (t.success = !0, t.status = enums.HTTPStatusCode.OK, event.notify(t)), event
    },
        UTConfigurationService.prototype.loadGenerationsRarityData = function loadGenerationsRarityData() {
            var t, event = new UTObservable, i = new transferobjects.ServiceResponse, s = 0;
            i.data = {loadedYears: []};
            for (t in enums.Year) if (enums.Year.hasOwnProperty(t)) {
                var o = enums.Year[t];
                if (o === enums.Year.YEAR_2009 || o === enums.Year.ASSET) continue;
                repositories.Rarity.isYearEmpty(o) && (s++, accessobjects.Configuration.getRarity(o).observe(this, function _onGetRarityComplete(t, data) {
                    t.unobserve(this), data.success && (i.success = !0, i.status = enums.HTTPStatusCode.OK, i.data.loadedYears.push(data.response.year), repositories.Rarity.add(data.response.rarities, data.response.year)), 0 == (s -= 1) && event.notify(i)
                }))
            }
            return 0 === s && (i.success = !0, i.status = enums.HTTPStatusCode.OK, event.notify(i)), event
        }, UTConfigurationService.prototype.getGBUDData = function getGBUDData() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return this._GBUD.length > 0 ? (t.success = !0, t.status = enums.HTTPStatusCode.OK, t.data = this._GBUD, event.notify(t), event) : (accessobjects.Configuration.getGBUDJson().observe(this, function _onGetGBUDJsonComplete(i, data) {
            i.unobserve(this), Object.keys(data.response).forEach(function (t) {
                this._GBUD.set(t, data.response[t])
            }, this), t.status = data.status, t.success = data.success, t.data = this._GBUD, event.notify(t)
        }), event)
    }, UTConfigurationService.prototype.requestSettingsData = function requestSettingsData() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return accessobjects.Configuration.getSettingsData().observe(this, function _onRequestSettingsComplete(i, data) {
            i.unobserve(this), t.success = data.success, t.status = data.status, t.data = {settings: data.response.settings}, data.success && gSettingsModel.setConfigs(data.response.settings), event.notify(t)
        }), event
    }, new UTConfigurationService
}(),NamespaceManager.Register("transferobjects"),transferobjects.ChampionsEvent = function ChampionsEventDTO(data) {
    this.id = data.championEventId, Object.defineProperty(this, "id", {writable: !1}), this.type = data.championEventType, Object.defineProperty(this, "type", {writable: !1})
},NamespaceManager.Register("transferobjects"),transferobjects.Reward = function (data, item) {
    if (this.value = data.value || data.awardValue, Object.defineProperty(this, "value", {writable: !1}), this.count = data.count || data.awardCount, Object.defineProperty(this, "count", {writable: !1}), this.halId = data.halId, Object.defineProperty(this, "halId", {writable: !1}), this.type = data.type || data.awardType, Object.defineProperty(this, "type", {writable: !1}), this.isCoin = this.type === enums.AwardType.COIN, Object.defineProperty(this, "isCoin", {writable: !1}), this.isPack = this.type === enums.AwardType.PACK, Object.defineProperty(this, "isPack", {writable: !1}), this.isItem = this.type === enums.AwardType.ITEM || item instanceof entities.Item, Object.defineProperty(this, "isItem", {writable: !1}), this.isChampionQualificationPoints = this.type === enums.AwardType.CHAMPION_QUALIFICATION_POINTS, Object.defineProperty(this, "isChampionQualificationPoints", {writable: !1}), this.isUntradeable = !(!data.isUntradeable && !data.untradeable), Object.defineProperty(this, "isUntradeable", {writable: !1}), this.itemData = item instanceof entities.Item ? item : null, this.isItem && !utils.JS.isValid(this.itemData)) {
        var t = data.itemData || data.awardItemData;
        t.loans = 0 === t.loans ? -1 : t.loans, t.contract = t.loans > 0 ? t.loans : 7, this.itemData = factories.Item.createItem(t), this.itemData.playStyle = this.itemData.isGK() ? enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_1 : enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_1
    }
    Object.defineProperty(this, "itemData", {writable: !1})
},transferobjects.Reward.prototype.buildString = function () {
    var text = "";
    if (this.isCoin) text = services.Localization.localize("card.desc.FreeCreditsDesc"); else if (this.isChampionQualificationPoints) text = services.Localization.localizeNumber(this.value) + " " + services.Localization.localize("rivals.rewardset.weekendleaguepoints"); else {
        if (this.isPack) text += "x" + this.count + " " + services.Localization.localize("FUT_STORE_PACK_" + this.value + "_NAME_MOBILE"); else if (this.isItem) {
            var t = this.itemData.getStaticData(), i = "x" + this.count + " ", s = "", o = "", l = "";
            this.itemData.isPlayerPickItem() ? l = t.description : (l = t.name, this.itemData.isSpecial() || (o = services.Localization.localize("search.cardLevels.cardLevel" + this.itemData.getTier()) + " "), this.itemData.isCommon() || (s = services.Localization.localize("item.raretype" + this.itemData.rareflag) + " "), this.itemData.isKit() ? l = services.Localization.localize("card.title.kit") : this.itemData.isConsumable() && (l = t.name + " " + services.Localization.localize("itemtype.consumable"))), text += i + s + o + l
        }
        this.isUntradeable && (text += " (" + services.Localization.localize("infopanel.context.untradeable") + ")")
    }
    return text
},transferobjects.Reward.prototype.getPriority = function () {
    switch (this.type) {
        case enums.AwardType.ITEM:
            return 0;
        case enums.AwardType.PACK:
            return 1;
        case enums.AwardType.COIN:
            return 2;
        default:
            return utils.Debug.Assert(!1, "[transferobjects.Reward] | Reached default case: " + this.type), 3
    }
},NamespaceManager.Register("accessobjects"),accessobjects.Champions = function () {
    function UTChampionsDAO() {
        UTObject.call(this), this._authDelegate = null, Object.defineProperty(this, "_authDelegate", {
            writable: !0,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTChampionsDAO, UTObject), UTChampionsDAO.prototype.setAuthDelegate = function setAuthDelegate(t) {
        t && t.conforms(interfaces.AuthDelegate) && (this._authDelegate = t)
    }, UTChampionsDAO.prototype._triggerUnauthorizedResponse = function _triggerUnauthorizedResponse(t) {
        var i = new transferobjects.FUTHttpResponse;
        i.status = enums.HTTPStatusCode.UNAUTHORIZED, t.notify(i)
    }, UTChampionsDAO.prototype.getUnclaimedEvents = function getUnclaimedEvents() {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t;
        var i = new UTUtasHttpRequest(this._authDelegate);
        return i.setPath("/ut/game/" + GAME_NAME + "/champion/user/hub"), i.setUrlVariables({scope: "nano"}), i.observe(this, function _onGetUnclaimedEventsComplete(i, data) {
            i.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            s.response = {
                unclaimedPrizesChampionEvents: utils.JS.isObject(data.response) ? data.response.unclaimedPrizesChampionEvents.map(function (t) {
                    return new transferobjects.ChampionsEvent(t)
                }) : []
            }, s.status = data.status, s.success = data.success, t.notify(s)
        }), i.send(), t
    }, UTChampionsDAO.prototype.claimById = function claimById(t) {
        var i = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(i), i;
        var s = new UTUtasHttpRequest(this._authDelegate);
        return s.setPath("/ut/game/" + GAME_NAME + "/champion/user/prize"), s.setRequestBody({idList: t}), s.setRequestType(enums.HTTPRequestMethod.POST), s.observe(this, function _onClaimByIdComplete(s, data) {
            s.unobserve(this);
            var o = new transferobjects.FUTHttpResponse;
            if (o.response = {awards: [], eventsFullyClaimed: []}, utils.JS.isObject(data.response)) {
                data.response.awardedPrizes.forEach(function (t) {
                    t.awards.forEach(function (t) {
                        o.response.awards.push(new transferobjects.Reward(t))
                    }, this)
                }, this);
                var l = t;
                if (data.response.prizesInError.length > 0) {
                    var u = data.response.prizesInError.map(function (e) {
                        return e.eventId
                    }, this);
                    l = utils.JS.removeElementsFromArray(t, u)
                }
                o.response.eventsFullyClaimed = l
            }
            o.status = data.status, o.success = data.success, i.notify(o)
        }), s.send(), i
    }, new UTChampionsDAO
}(),NamespaceManager.Register("services"),services.Champions = function () {
    function ChampionsService() {
        this._events = new UTHashTable({})
    }

    return ChampionsService.prototype.reset = function reset() {
        this._events.clear()
    }, ChampionsService.prototype.getUnclaimedEvents = function getUnclaimedEvents() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return t.data = {unclaimedEvents: []}, gSettingsModel.isServiceAvailable(models.SettingsModel.CHAMPIONS_ENABLED) ? this._events.length > 0 ? (t.success = !0, t.status = enums.HTTPStatusCode.OK, t.data.unclaimedEvents = this._events.values(), event.notify(t), event) : (accessobjects.Champions.getUnclaimedEvents().observe(this, function _onUnclaimedEventsRetrieved(i, s) {
            i.unobserve(this), t.success = s.success, t.status = s.status,
                t.success ? (s.response.unclaimedPrizesChampionEvents.forEach(function (t) {
                    this._events.set(t.id, t)
                }, this), t.data.unclaimedEvents = this._events.values()) : t.status === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.CHAMPIONS_ENABLED), event.notify(t)
        }), event) : (t.status = enums.HTTPStatusCode.SERVICE_IS_DISABLED, event.notify(t), event)
    }, ChampionsService.prototype.claimById = function claimById(t) {
        var event = new UTObservable, i = new transferobjects.ServiceResponse;
        return accessobjects.Champions.claimById(utils.JS.valToArray(t)).observe(this, function _onClaimByIdComplete(t, s) {
            if (t.unobserve(this), i.success = s.success, i.status = s.status, i.data = {
                    awards: s.response.awards,
                    allClaimed: !1
                }, s.success && i.data.awards.length > 0) {
                s.response.eventsFullyClaimed.forEach(function (id) {
                    this._events.remove(id)
                }, this);
                var o = 0 === this._events.length;
                o || services.Notification.queue([services.Localization.localize("notification.champions.claimAllFailed"), enums.UINotificationType.NEGATIVE]), i.data.allClaimed = o
            } else i.status === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.CHAMPIONS_ENABLED), services.Notification.queue([services.Localization.localize("notification.champions.claimFailed"), enums.UINotificationType.NEGATIVE]);
            event.notify(i)
        }), event
    }, ChampionsService.prototype.claimRewards = function claimRewards() {
        function _onClaimComplete(i, response) {
            i.unobserve(this), t = response, event.notify(response)
        }

        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return this.getUnclaimedEvents().observe(this, function (i) {
            if (i.unobserve(this), this._events.length > 0) {
                var s = this._events.map(function (t) {
                    return t.id
                });
                this.claimById(s).observe(this, _onClaimComplete)
            } else services.Notification.queue([services.Localization.localize("notification.champions.claimFailed"), enums.UINotificationType.NEGATIVE]), event.notify(t)
        }), event
    }, new ChampionsService
}(),NamespaceManager.Register("transferobjects"),transferobjects.ObjectiveUpdates = function UTObjectiveUpdatesDTO(data) {
    this.completedDailyObjectives = data ? data.completedDailyObjectives || [] : [], Object.defineProperty(this, "completedDailyObjectives", {
        writable: !1,
        enumerable: !0
    }), this.newDailyObjectives = !!data && !!data.newDailyObjectives, Object.defineProperty(this, "newDailyObjectives", {
        writable: !1,
        enumerable: !0
    }), this.completedWeeklyObjectives = data ? data.completedWeeklyObjectives || [] : [], Object.defineProperty(this, "completedWeeklyObjectives", {
        writable: !1,
        enumerable: !0
    }), this.newWeeklyObjectives = !!data && !!data.newWeeklyObjectives, Object.defineProperty(this, "newWeeklyObjectives", {
        writable: !1,
        enumerable: !0
    }), this.progressOnWeeklyObjectives = data ? data.progressOnWeeklyObjectives || [] : [], Object.defineProperty(this, "progressOnWeeklyObjectives", {
        writable: !1,
        enumerable: !0
    })
},NamespaceManager.Register("interfaces"),interfaces.ValueObject = function () {
},interfaces.ValueObject.prototype.equals = function equals(t) {
},NamespaceManager.Register("valueobjects"),valueobjects.Currency = function CurrencyVO(type, t) {
    this.type = type || enums.Currency.COINS, Object.defineProperty(this, "type", {
        writable: !1,
        enumerable: !0
    }), this.amount = t || 0, Object.defineProperty(this, "amount", {writable: !1, enumerable: !0})
},valueobjects.Currency.prototype.value = function value() {
    return this.amount
},valueobjects.Currency.prototype.equals = function equals(t) {
    return this.type === t.type && this.amount === t.amount
},utils.JS.inherits(UTValueBandVO, UTObject),UTValueBandVO.prototype.value = function value() {
    return [this.minimum, this.maximum]
},UTValueBandVO.prototype.equals = function equals(t) {
    return this.minimum === t.minimum && this.maximum === t.maximum
},NamespaceManager.Register("accessobjects"),accessobjects.Item = function () {
    function UTItemDAO() {
        UTObject.call(this), this.MAX_DISCARDS = 35, Object.defineProperty(this, "MAX_DISCARDS", {
            writable: !1,
            enumerable: !0
        }), this.UTAS_REQUEST_PATH = "/ut/game/" + GAME_NAME + "/", this.UTAS_DELETE_PATH = "/ut/delete/game/" + GAME_NAME + "/"
    }

    return utils.JS.inherits(UTItemDAO, UTObject),
        UTItemDAO.prototype.applyConsumableTo = function applyConsumableTo(t, i, s) {
            var o = new UTObservable, l = new UTUtasHttpRequest(t);
            return l.setPath(this.UTAS_REQUEST_PATH + "item/resource/" + i.resourceId), l.setRequestType(enums.HTTPRequestMethod.POST), l.setRequestBody({
                apply: s.map(function (item) {
                    return {id: item.id}
                })
            }), l.observe(this, function _onApplyConsumableComplete(t, data) {
                t.unobserve(this);
                var i = new transferobjects.FUTHttpResponse;
                utils.JS.assignPropertyValues(data, i), i.response = {
                    objectiveUpdates: new transferobjects.ObjectiveUpdates(data.response ? data.response.dynamicObjectivesUpdates : null),
                    items: data.response && data.response.itemData ? factories.Item.generateItemsFromItemData(data.response.itemData) : []
                }, o.notify(i)
            }), l.send(), o
        }, UTItemDAO.prototype.bid = function bid(t, item, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return o.setPath(this.UTAS_REQUEST_PATH + "trade/" + item.getAuctionData().tradeId + "/bid"), o.setRequestType(enums.HTTPRequestMethod.PUT), o.setRequestBody({bid: i}), o.observe(this, function _onBidComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i), i.response = {
                currencies: data.success ? data.response.currencies.map(function (t) {
                    return new valueobjects.Currency(t.name, t.funds)
                }) : [],
                items: data.success ? factories.Item.generateItemsFromAuctionData(data.response.auctionInfo, data.response.duplicateItemIdList) : [],
                objectiveUpdates: new transferobjects.ObjectiveUpdates(data.response ? data.response.dynamicObjectivesUpdates : null)
            }, s.notify(i)
        }), o.send(), s
    }, UTItemDAO.prototype.confirmPlayerPickItemSelection = function confirmPlayerPickItemSelection(t, item) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "playerpicks/item/" + item.resourceId + "/select"), s.setRequestType(enums.HTTPRequestMethod.POST), s.observe(this, function _onConfirmPlayerPickItemSelectionComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {items: data.success && data.response ? factories.Item.generateItemsFromItemData(utils.JS.valToArray(data.response)) : []}, i.notify(s)
        }), s.send(), i
    }, UTItemDAO.prototype.discardByItemId = function discardByItemId(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t), isArray = Array.isArray(i);
        if (utils.Debug.Assert(!isArray || i.length <= this.MAX_DISCARDS, "Item collection exceeds maximum discard amount, will only discard the first " + this.MAX_DISCARDS + " items"), isArray && 1 !== i.length) o.setPath(this.UTAS_DELETE_PATH + "item"), o.setRequestType(enums.HTTPRequestMethod.POST), o.setRequestBody({
            itemId: i.map(function (item) {
                return item.id
            }).slice(0, this.MAX_DISCARDS)
        }); else {
            var item = isArray ? i[0] : i;
            o.setPath(this.UTAS_REQUEST_PATH + "item/" + item.id), o.setRequestType(enums.HTTPRequestMethod.DELETE), item.isDuplicateLoanPlayer() && o.setUrlVariables({combineWith: item.duplicateId})
        }
        return o.observe(this, function _onDiscardByItemIdComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response);
            utils.JS.assignPropertyValues(data, i), i.response = {
                totalCredits: o ? data.response.totalCredits : null,
                itemIds: o ? data.response.items.map(function (t) {
                    return t.id
                }) : []
            }, s.notify(i)
        }), o.send(), s
    }, UTItemDAO.prototype.discardByResourceId = function discardByResourceId(t, item) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "item/resource/" + item.resourceId), s.setRequestType(enums.HTTPRequestMethod.DELETE), s.observe(this, function _onDiscardByResourceIdComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response);
            utils.JS.assignPropertyValues(data, s), s.response = {
                totalCredits: o ? data.response.totalCredits : null,
                itemIds: o ? data.response.items.map(function (t) {
                    return t.id
                }) : []
            }, i.notify(s)
        }), s.send(), i
    }, UTItemDAO.prototype.getAuctionData = function getAuctionData(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t), l = i.reduce(function (t, item) {
            var i = item.getAuctionData()
            ;
            return i.isValid() && (i.isUpdating = !0, t.push(i.tradeId)), t
        }, []);
        return utils.Debug.Assert(l.length > 0, "Expected one or more items to retrieve auction data."), o.setPath(this.UTAS_REQUEST_PATH + "trade/status"), o.setUrlVariables({tradeIds: l.join(",")}), o.setCache(!1), o.observe(this, function _onGetAuctionDataComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i), i.response = {
                currencies: data.success ? data.response.currencies.map(function (t) {
                    return new valueobjects.Currency(t.name, t.funds)
                }) : [],
                items: data.success ? factories.Item.generateItemsFromAuctionData(data.response.auctionInfo, data.response.duplicateItemIdList) : []
            }, s.notify(i)
        }), o.send(), s
    }, UTItemDAO.prototype.getItemDataByDefId = function getItemDataByDefId(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return utils.Debug.Assert(utils.JS.isNumber(i), "Expected a numeric definition ID"), o.setPath(this.UTAS_REQUEST_PATH + "defid"), o.setUrlVariables({defId: i}), o.observe(this, function _onGetItemDataByDefIdComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i);
            var o = data.success && utils.JS.isObject(data.response) ? data.response.itemData[0] : null;
            i.response = {item: o ? factories.Item.createItem(o) : null}, s.notify(i)
        }), o.send(), s
    }, UTItemDAO.prototype.getItemDataById = function getItemDataById(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return utils.Debug.Assert(Array.isArray(i), "Expected an array of numeric item IDs."), o.setPath(this.UTAS_REQUEST_PATH + "item"), o.setUrlVariables({idList: i.join(",")}), o.observe(this, function _onGetItemDataByIdComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i), i.response = {items: data.success && data.response ? factories.Item.generateItemsFromItemData(data.response.itemData, data.response.duplicateItemIdList) : []}, s.notify(i)
        }), o.send(), s
    }, UTItemDAO.prototype.getItemMarketDataByDefId = function getItemMarketDataByDefId(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return utils.Debug.Assert(Array.isArray(i), "Expected an array of numeric item definition IDs."), o.setPath(this.UTAS_REQUEST_PATH + "marketdata/pricelimits"), o.setUrlVariables({defId: i.join(",")}), o.observe(this, function _onGetItemMarketDataByDefIdComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i);
            var o = data.success ? data.response.map(function (d) {
                return {defId: d.defId, itemId: d.itemId, priceLimits: new UTValueBandVO(d.minPrice, d.maxPrice)}
            }) : [];
            i.response = {marketData: o}, s.notify(i)
        }), o.send(), s
    }, UTItemDAO.prototype.getItemMarketDataById = function getItemMarketDataById(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return utils.Debug.Assert(Array.isArray(i), "Expected an array of numeric item IDs."), o.setPath(this.UTAS_REQUEST_PATH + "marketdata/item/pricelimits"), o.setUrlVariables({itemIdList: i.join(",")}), o.observe(this, function _onGetItemMarketDataByIdComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i);
            var o = data.success ? data.response.map(function (d) {
                return {defId: d.defId, itemId: d.itemId, priceLimits: new UTValueBandVO(d.minPrice, d.maxPrice)}
            }) : [];
            i.response = {marketData: o}, s.notify(i)
        }), o.send(), s
    }, UTItemDAO.prototype.getItemsPendingSelection = function getItemsPendingSelection(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "playerpicks/pending"), s.observe(this, function _onGetItemsPendingSelectionComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {items: data.success && data.response ? factories.Item.generateItemsFromItemData(data.response.itemData, data.response.duplicateItemIdList) : []}, i.notify(s)
        }), s.send(), i
    }, UTItemDAO.prototype.getTransferPile = function getTransferPile(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "tradepile"),
            s.observe(this, function _onGetTransferPileComplete(t, data) {
                t.unobserve(this);
                var s = new transferobjects.FUTHttpResponse;
                utils.JS.assignPropertyValues(data, s), s.response = {items: data.success && data.response ? factories.Item.generateItemsFromAuctionData(data.response.auctionInfo, data.response.duplicateItemIdList) : []}, i.notify(s)
            }), s.send(), i
    }, UTItemDAO.prototype.getUnassignedPile = function getUnassignedPile(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "purchased/items"), s.observe(this, function _onGetUnassignedPileComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {items: data.success && data.response ? factories.Item.generateItemsFromItemData(data.response.itemData, data.response.duplicateItemIdList) : []}, i.notify(s)
        }), s.send(), i
    }, UTItemDAO.prototype.getWatchPile = function getWatchPile(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "watchlist"), s.observe(this, function _onGetWatchPileComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {items: data.success && data.response ? factories.Item.generateItemsFromAuctionData(data.response.auctionInfo, data.response.duplicateItemIdList) : []}, i.notify(s)
        }), s.send(), i
    }, UTItemDAO.prototype.listItem = function listItem(t, id, i, s, duration) {
        var o = new UTObservable, l = new UTUtasHttpRequest(t),
            u = {itemData: {id: id}, startingBid: i, duration: duration};
        return s > 0 && (u.buyNowPrice = s), l.setPath(this.UTAS_REQUEST_PATH + "auctionhouse"), l.setRequestType(enums.HTTPRequestMethod.POST), l.setRequestBody(u), l.observe(this, function _onListItemComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i), i.response = {auctionIds: data.success ? [data.response.idStr] : []}, o.notify(i)
        }), l.send(), o
    }, UTItemDAO.prototype.redeemUnlockable = function redeemUnlockable(t, item) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return utils.Debug.Assert(item.isMiscItem(), "Expected an unlockable item."), s.setPath(this.UTAS_REQUEST_PATH + "item/" + item.id), s.setRequestType(enums.HTTPRequestMethod.POST), s.setRequestBody({apply: []}), s.observe(this, function _onRedeemComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {
                itemIds: [item.id],
                objectiveUpdates: new transferobjects.ObjectiveUpdates(data.response ? data.response.dynamicObjectivesUpdates : null),
                playerPicks: data.response.itemData ? factories.Item.generateItemsFromItemData(data.response.itemData, data.response.duplicateItemIdList) : []
            }, i.notify(s)
        }), s.send(), i
    }, UTItemDAO.prototype.relistExpiredAuctions = function relistExpiredAuctions(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "auctionhouse/relist"), s.setRequestType(enums.HTTPRequestMethod.PUT), s.observe(this, function _onRelistAuctionsComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {
                auctionIds: data.success && data.response.tradeIdList ? data.response.tradeIdList.map(function (t) {
                    return t.idStr
                }) : []
            }, i.notify(s)
        }), s.send(), i
    }, UTItemDAO.prototype.searchConceptItems = function searchConceptItems(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t), l = {};
        if (l.type = enums.SearchType.PLAYER, l.start = i.offset, l.count = i.count, l.sort = i.sort, i.level === enums.SearchLevel.SPECIAL ? l.rare = i.level : i.level !== enums.SearchLevel.ANY && (l.level = i.level), i.club > 0 && (l.team = i.club), i.league > 0 && (l.league = i.league), i.nation > 0 && (l.nation = i.nation), i.zone !== enums.SearchType.ANY) {
            var u = utils.JS.find(PLAYER_ZONE_LOOKUP, function (t) {
                return t.value === i.zone
            });
            utils.JS.isValid(u) && (l.type = u.id)
        } else i.position !== enums.SearchType.ANY && (l.position = i.position);
        return i.playStyle > 0 && (l.playStyle = i.playStyle), i.defId > 0 && (l.defId = i.defId), o.setPath(this.UTAS_REQUEST_PATH + "defid"), o.setUrlVariables(l),
            o.observe(this, function _onSearchConceptsComplete(t, data) {
                t.unobserve(this);
                var o = new transferobjects.FUTHttpResponse;
                utils.JS.assignPropertyValues(data, o), o.response = {
                    items: data.success && data.response ? factories.Item.generateItemsFromItemData(data.response.itemData) : [],
                    endOfList: !(!data.success || !data.response) && data.response.itemData.length < i.count
                }, s.notify(o)
            }), o.send(), s
    }, UTItemDAO.prototype.watchItems = function watchItems(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t), l = i.map(function (item) {
            return {id: item.getAuctionData().tradeId}
        });
        return o.setPath(this.UTAS_REQUEST_PATH + "watchlist"), o.setRequestType(enums.HTTPRequestMethod.PUT), o.setRequestBody({auctionInfo: l}), o.observe(this, function _onWatchComplete(t, data) {
            t.unobserve(this);
            var o = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, o), o.response = {
                itemIds: i.map(function (item) {
                    return item.id
                })
            }, s.notify(o)
        }), o.send(), s
    }, UTItemDAO.prototype.unwatchItems = function unwatchItems(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t), l = i.map(function (item) {
            return item.getAuctionData().tradeId
        });
        return o.setPath(this.UTAS_REQUEST_PATH + "watchlist"), o.setRequestType(enums.HTTPRequestMethod.DELETE), o.setUrlVariables({tradeId: l.join(",")}), o.observe(this, function _onUnwatchComplete(t, data) {
            t.unobserve(this);
            var o = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, o), o.response = {
                itemIds: i.map(function (item) {
                    return item.id
                })
            }, s.notify(o)
        }), o.send(), s
    }, new UTItemDAO
}(),NamespaceManager.Register("utils"),utils.EventDispatcher = function () {
    this._messageListeners = {}
},utils.EventDispatcher.prototype.dispatch = function (t, i) {
    if (utils.JS.isValid(this._messageListeners[t])) {
        var s, o = this._messageListeners[t].slice(0), l = [this];
        l = l.concat(Array.prototype.slice.call(arguments, 1));
        var u = o.length;
        for (s = 0; s < u; ++s) o[s].listener.apply(o[s].scope, l)
    }
},utils.EventDispatcher.prototype.addListener = function (t, scope, listener) {
    utils.Debug.Assert(utils.JS.isValid(listener) && utils.JS.isValid(scope), "Invalid listener parameters"), utils.JS.isValid(this._messageListeners[t]) || (this._messageListeners[t] = []), this._messageListeners[t].push({
        listener: listener,
        scope: scope
    })
},utils.EventDispatcher.prototype.removeListener = function (t, scope, listener) {
    utils.Debug.Assert(utils.JS.isValid(listener) && utils.JS.isValid(scope), "Invalid listener parameters");
    var i, s, o;
    if (utils.JS.isValid(this._messageListeners[t])) do {
        for (o = null, s = this._messageListeners[t].length, i = 0; i < s; i++) if (this._messageListeners[t][i].listener === listener && this._messageListeners[t][i].scope === scope) {
            o = i;
            break
        }
        null !== o && this._messageListeners[t].splice(o, 1)
    } while (null !== o)
},utils.EventDispatcher.prototype.clearListeners = function () {
    this._messageListeners = {}
},utils.EventDispatcher.prototype.clearListenersByEvent = function (t) {
    delete this._messageListeners[t]
},utils.EventDispatcher.prototype.clearListenersByScope = function (scope) {
    var t, x, i, s = null, o = [];
    for (x in this._messageListeners) if (this._messageListeners.hasOwnProperty(x) && utils.JS.isValid(this._messageListeners[x])) {
        do {
            for (s = null, i = this._messageListeners[x].length, t = 0; t < i; t++) if (this._messageListeners[x][t].scope === scope) {
                s = t;
                break
            }
            null !== s && this._messageListeners[x].splice(s, 1)
        } while (null !== s);
        0 === this._messageListeners[x].length && o.push(x)
    }
    for (i = o.length, t = 0; t < i; ++t) delete this._messageListeners[o[t]]
},NamespaceManager.Register("interfaces"),interfaces.CommunicationDelegate = function ICommunicationDelegate() {
},interfaces.CommunicationDelegate.prototype.send = function send() {
},interfaces.CommunicationDelegate.prototype.cancel = function cancel() {
},NamespaceManager.Register("models"),models.CommunicationModel = {},models.CommunicationModel.RESPONSE = {
    TEXT: "text",
    TEXT_JSON: "text json",
    TEXT_XML: "text xml",
    EMPTY: null
},NamespaceManager.Register("models"),models.ConfigurationModel = function () {
    this._dataObject = {}, this._remoteConfigTimestamp = 0, this._remoteConfigPollLock = !1, this._remoteConfigPollHandler = 0, this._remoteConfigPollers = new UTHashTable([]),
        this.onRemoteConfigLoaded = new UTObservable, Object.defineProperty(this, "onRemoteConfigLoaded", {writable: !1})
},models.ConfigurationModel.KEY_DEFAULT_FUT_SERVICE_URL = "authURL",models.ConfigurationModel.KEY_DEFAULT_FUT_SERVICE_PROTOCOL = "requestProtocol",models.ConfigurationModel.KEY_EADP_CONNECT_HOST = "eadpConnectHost",models.ConfigurationModel.KEY_EADP_PORTAL_HOST = "eadpPortalHost",models.ConfigurationModel.KEY_EADP_PROXY_HOST = "eadpProxyHost",models.ConfigurationModel.KEY_EADP_CLIENT_ID = "eadpClientId",models.ConfigurationModel.KEY_EADP_CLIENT_SECRET = "eadpClientSecret",models.ConfigurationModel.KEY_PIN_URL = "pinURL",models.ConfigurationModel.KEY_RELEASE_TYPE = "releaseType",models.ConfigurationModel.KEY_SHOW_OFF_URL = "showOffURL",models.ConfigurationModel.KEY_RESOURCE_ROOT = "resourceRoot",models.ConfigurationModel.KEY_STATIC_DATA_ROOT = "resourceBase",models.ConfigurationModel.KEY_LOCAL_STORAGE_VERSION = "localStorageVersion",models.ConfigurationModel.KEY_CHANGELIST = "changelist",models.ConfigurationModel.KEY_SETTINGS_REFRESH_INTERVAL = "settingsRefreshInterval",models.ConfigurationModel.KEY_REQUEST_TIMEOUT = "requestTimeout",models.ConfigurationModel.KEY_MAX_CONSECUTIVE_500_ERRORS = "maxConsecutive500Errors",models.ConfigurationModel.KEY_VERBOSE_LOGGING = "verboseLogging",models.ConfigurationModel.KEY_ORIGIN_CSS = "originCss",models.ConfigurationModel.KEY_ORIGIN_JS = "originJS",models.ConfigurationModel.KEY_ORIGIN_HOST = "origiHost",models.ConfigurationModel.KEY_ORIGIN_PROFILE = "originProfile",models.ConfigurationModel.KEY_ORIGIN_MASTER_TITLE = "originMasterTitle",models.ConfigurationModel.KEY_ANALYTICS = "analytics",models.ConfigurationModel.KEY_ASSETS_VERSION = "assetsVersion",models.ConfigurationModel.KEY_HIDE_GENERATIONS = "hideGenerations",models.ConfigurationModel.KEY_HIDE_TRANSFER_MARKET = "hideTransferMarket",models.ConfigurationModel.KEY_ITEMS_PER_PAGE = "itemsPerPage",models.ConfigurationModel.KEY_PIN = "pin",models.ConfigurationModel.KEY_UPDATE = "update",models.ConfigurationModel.KEY_WINTER_THEME = "winterTheme",models.ConfigurationModel.KEY_FUTWEB_MAINTENANCE = "futweb_maintenance",models.ConfigurationModel.KEY_FUNCAPTCHA_PK = "funCaptchaPublicKey",models.ConfigurationModel.ITEMS_PER_PAGE = {
    CLUB: "club",
    TRANSFER_MARKET: "transferMarket"
};
var gConfigurationModel = new models.ConfigurationModel;
models.ConfigurationModel.prototype.subscribePoller = function subscribePoller(t, frequency, i) {
    var s = t.constructor.name;
    utils.JS.isEmpty(s) ? utils.Debug.Assert(!1, "Object must have a declared constructor name in order to register for remote config polls") : (utils.Debug.Assert(frequency >= 6e4, "Frequency must be at least a minute."), this._remoteConfigPollers.has(s) || this.onRemoteConfigLoaded.observe(t, i), this._remoteConfigPollers.set(s, Math.max(6e4, frequency)), this._setupRemoteConfigPolling())
}, models.ConfigurationModel.prototype.unsubscribePoller = function unsubscribePoller(t) {
    var i = t.constructor.name;
    utils.JS.isEmpty(i) ? utils.Debug.Assert(!1, "Object must have a declared constructor name in order to unregister for remote config polls") : (this._remoteConfigPollers.remove(i), this.onRemoteConfigLoaded.unobserve(t), this._setupRemoteConfigPolling())
}, models.ConfigurationModel.prototype._getRemoteConfigPollFrequency = function _getRemoteConfigPollFrequency() {
    var t = this._remoteConfigPollers.values();
    return t.length > 0 ? Math.min.apply(Math, t) : 0
}, models.ConfigurationModel.prototype._setupRemoteConfigPolling = function _setupRemoteConfigPolling() {
    var t = this._getRemoteConfigPollFrequency();
    t > 0 && (this._remoteConfigPollHandler > 0 && clearInterval(this._remoteConfigPollHandler), (!this.hasRemoteConfigLoaded() || Date.now() - this._remoteConfigTimestamp > t) && this.loadRemoteConfig(), this._remoteConfigPollHandler = setInterval(this.loadRemoteConfig.bind(this), t))
}, models.ConfigurationModel.prototype.loadRemoteConfig = function loadRemoteConfig() {
    this._remoteConfigPollLock || (this._remoteConfigPollLock = !0, $.ajaxSetup({timeout: gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_REQUEST_TIMEOUT)}),
        accessobjects.Configuration.getRemoteConfig().observe(this, function _onGetRemoteConfigComplete(t, data) {
            t.unobserve(this), utils.Debug.Assert(data.success, "Remote configuration file failed to load."), data.success ? this.setRemoteConfigData(data) : this.onRemoteConfigLoaded.notify(!1), this._remoteConfigPollLock = !1
        }))
}, models.ConfigurationModel.prototype.setRemoteConfigData = function setRemoteConfigData(t) {
    this._remoteConfigTimestamp = Date.now(), this.setDataObject(t), this.onRemoteConfigLoaded.notify(!0)
}, models.ConfigurationModel.prototype.hasRemoteConfigLoaded = function hasRemoteConfigLoaded() {
    return this._remoteConfigTimestamp > 0
}, models.ConfigurationModel.prototype.setDataObject = function setDataObject(t) {
    var key;
    for (key in t) t.hasOwnProperty(key) && (this._dataObject[key] = t[key])
}, models.ConfigurationModel.prototype.getConfigObject = function getConfigObject(key) {
    return utils.JS.isObject(this._dataObject[key]) ? this._dataObject[key] : null
}, models.ConfigurationModel.prototype.getConfigNumber = function getConfigNumber(key) {
    if (utils.JS.isValid(this._dataObject[key])) {
        if (utils.JS.isNumber(this._dataObject[key])) return this._dataObject[key];
        try {
            return parseFloat(this._dataObject[key])
        } catch (t) {
            return 0
        }
    }
    return 0
}, models.ConfigurationModel.prototype.getConfigBoolean = function getConfigBoolean(key) {
    if (utils.JS.isValid(this._dataObject[key])) {
        if (utils.JS.isBoolean(this._dataObject[key])) return this._dataObject[key];
        try {
            return "true" === this._dataObject[key]
        } catch (t) {
            return !1
        }
    }
    return !1
}, models.ConfigurationModel.prototype.getConfigString = function getConfigString(key) {
    if (utils.JS.isValid(this._dataObject[key])) {
        if (utils.JS.isString(this._dataObject[key])) return this._dataObject[key];
        try {
            return this._dataObject[key].toString()
        } catch (t) {
            return ""
        }
    }
    return ""
}, NamespaceManager.Register("communication"), communication.BaseDelegate = function () {
    utils.EventDispatcher.call(this), this._url = "", this._urlVariables = {}, this._customHeaders = [], this._requestType = enums.HTTPRequestMethod.GET, this._responseType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON, this._mimeType = null, this._data = null, this._statusCode = 0, this._networkError = null, this._xhr = null, this._cancelled = !1, this._timedOut = !1, this._isImportant = !1, this._isSending = !1, this._cache = !1, this._useClickShield = !1, this._csShowing = !1, this._clickShieldType = components.ClickShield.SHIELD.LOADING
}, utils.JS.inherits(communication.BaseDelegate, utils.EventDispatcher), communication.BaseDelegate.SUCCESS = "communication.BaseDelegate.SUCCESS", communication.BaseDelegate.FAIL = "communication.BaseDelegate.FAIL", communication.BaseDelegate.CANCEL = "communication.BaseDelegate.CANCEL", communication.BaseDelegate.prototype._showClickShield = function () {
    this.useClickShield() && !this._csShowing && (gClickShield.showShield(this._clickShieldType), this._csShowing = !0)
}, communication.BaseDelegate.prototype._hideClickShield = function () {
    this._csShowing && !this._isSending && (gClickShield.hideShield(this._clickShieldType), this._csShowing = !1)
}, communication.BaseDelegate.prototype.setRequest = function (url, method, t, contentType) {
    this._url = url, this._requestType = method, this._dataType = t, this._contentType = contentType
}, communication.BaseDelegate.prototype.setImportant = function (t) {
    this._isImportant = t
}, communication.BaseDelegate.prototype.isImportant = function () {
    return this._isImportant
}, communication.BaseDelegate.prototype.setURLVariables = function (t) {
    this._urlVariables = t
}, communication.BaseDelegate.prototype.setMimeType = function (mimeType) {
    this._mimeType = mimeType
}, communication.BaseDelegate.prototype.setData = function (requestData) {
    this._data = requestData
}, communication.BaseDelegate.prototype._getStaticPayload = function () {
    var t, i = gConfigurationModel.getConfigObject("staticResponseData"), s = null;
    if (!utils.JS.isValid(i)) return s;
    for (t in i) if (i.hasOwnProperty(t) && this.constructor === utils.JS.getDefinitionByName(t)) {
        s = i[t];
        break
    }
    return s
}, communication.BaseDelegate.prototype.addHeader = function (t, i) {
    this._customHeaders[t] = i
},
    communication.BaseDelegate.prototype.getDefaultHeaders = function () {
        return {}
    }, communication.BaseDelegate.prototype.getHeaders = function () {
    var t, i = this.getDefaultHeaders(), s = this._customHeaders, headers = {};
    for (t in i) i.hasOwnProperty(t) && (headers[t] = i[t]);
    for (t in s) s.hasOwnProperty(t) && (headers[t] = s[t]);
    return headers
}, communication.BaseDelegate.prototype.setCache = function (t) {
    this._cache = t
}, communication.BaseDelegate.prototype.generateUrlParams = function () {
    return utils.HTTP.generateUrlParams(this._urlVariables)
}, communication.BaseDelegate.prototype.generateURL = function () {
    return this._url + this.generateUrlParams()
}, communication.BaseDelegate.prototype.getStatusCode = function () {
    return this._statusCode
}, communication.BaseDelegate.prototype.dataIsCached = function () {
    return !1
}, communication.BaseDelegate.prototype.getError = function () {
    return this._networkError
}, communication.BaseDelegate.prototype.execute = function () {
    this.send()
}, communication.BaseDelegate.prototype.cancel = function () {
    utils.JS.isValid(this._xhr) && !this._cancelled && (this._cancelled = !0, this._xhr.abort())
}, communication.BaseDelegate.prototype.send = function () {
    if (!this.dataIsCached()) if (hasConnection()) {
        this._isSending = !0, this._showClickShield();
        var url = this.generateURL(), data = "";
        utils.JS.isValid(this._data) && (data = utils.JS.isObject(this._data) ? $.toJSON(this._data) : this._data), this._sendExtension() && (this._xhr = $.ajax({
            url: url,
            headers: this.getHeaders(),
            type: this._requestType,
            dataType: this._dataType,
            contentType: this._contentType,
            mimeType: this._mimeType,
            timeout: gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_REQUEST_TIMEOUT),
            data: data,
            cache: this._cache
        }).done(this.onAPISuccess.bind(this)).fail(this.onAPIFailure.bind(this)))
    } else this.onFail(enums.HTTPStatusCode.NO_INTERNET_CONNECTION)
}, communication.BaseDelegate.prototype._sendExtension = function () {
    return !0
}, communication.BaseDelegate.prototype.onAPISuccess = function (data, t, i) {
    this._isSending = !1, this._xhr = null, this._statusCode = i.status, data = this._appendMaxAge(i, data), this._logSuccessResponse(i, t), this.onSuccess(data), this._hideClickShield()
}, communication.BaseDelegate.prototype.onAPIFailure = function (t, i, s) {
    if (this._isSending = !1, this._xhr = null, this._statusCode = t.status, "timeout" === i && (this._timedOut = !0), this._cancelled) return this.onCancel(), void this._hideClickShield();
    this._logErrorResponse(t, i, s), this.handleErrors(""), this._hideClickShield()
}, communication.BaseDelegate.prototype.onSuccess = function (data) {
    this.dispatch(communication.BaseDelegate.SUCCESS, data)
}, communication.BaseDelegate.prototype.onFail = function (errorCode) {
    this._networkError = this.generateDefaultNetworkError(errorCode), this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
}, communication.BaseDelegate.prototype.onCancel = function () {
    this.dispatch(communication.BaseDelegate.CANCEL)
}, communication.BaseDelegate.prototype.handleErrors = function (t) {
    this._handleError()
}, communication.BaseDelegate.prototype._handleError = function () {
    this._timedOut ? this._statusCode = enums.HTTPStatusCode.REQUEST_TIME_OUT : this._statusCode === enums.HTTPStatusCode.UNKNOWN ? this._statusCode = enums.HTTPStatusCode.NETWORK_ERROR : this._statusCode === enums.HTTPStatusCode.SERVER_ERROR && NetworkErrorManager.trackServerError(), this.onFail(this._statusCode)
}, communication.BaseDelegate.prototype.generateDefaultNetworkError = function (errorCode) {
    var t, i = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.NOT_FOUND:
            t = new valueobjects.NetworkErrorVO(errorCode, enums.NetworkErrorLevel.CRITICAL, "popup.error.serviceNotFoundTitle", "popup.error.serviceNotFound");
            break;
        case enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE:
        case enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE_LEGACY:
            t = new valueobjects.NetworkErrorVO(errorCode, enums.NetworkErrorLevel.CRITICAL, "signedontoanotherdevice.title", "rpcErrorResponses.general.CARDHOUSE_ERR_ALREADY_LOGGEDIN_ON_CONSOLE");
            break;
        case enums.HTTPStatusCode.ACCOUNT_BANNED:
            t = new valueobjects.NetworkErrorVO(errorCode, enums.NetworkErrorLevel.CRITICAL, "error.banneduser.header", "error.banneduser.body");
            break;
        case enums.HTTPStatusCode.INVALID_COOKIE:
            t = new valueobjects.NetworkErrorVO(errorCode, enums.NetworkErrorLevel.CRITICAL, "popup.error.invalidcookieTitle", "popup.error.invalidcookie");
            break;
        case enums.HTTPStatusCode.CAPTCHA_REQUIRED:
        case enums.HTTPStatusCode.FUN_CAPTCHA_REQUIRED:
            t = new valueobjects.NetworkErrorVO(errorCode, enums.NetworkErrorLevel.CRITICAL, "popup.error.captcharequiredTitle", "popup.error.captcharequired");
            break;
        case enums.HTTPStatusCode.NO_CONTENT:
        case enums.HTTPStatusCode.BAD_REQUEST:
        case enums.HTTPStatusCode.UT_BAD_REQUEST:
            t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.error.invalidrequestTitle", "popup.error.invalidrequest");
            break;
        case enums.HTTPStatusCode.NO_CARD_EXISTS:
            t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.error.NoSuchCardTitle", "popup.error.NoSuchCard");
            break;
        case enums.HTTPStatusCode.SERVER_ERROR:
            t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.error.serverdownTitle", "popup.error.serverdown");
            break;
        case enums.HTTPStatusCode.SERVICE_IS_DISABLED:
            t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.error.ServiceIsDisabledTitle", "popup.error.ServiceIsDisabled");
            break;
        case enums.HTTPStatusCode.RATE_LIMIT:
            t = new valueobjects.NetworkErrorVO(errorCode, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.RateLimitHeader", "popup.error.RateLimitBody");
            break;
        case enums.HTTPStatusCode.UNAUTHORIZED:
        case enums.HTTPStatusCode.UNRECOVERABLE_ERROR:
            t = new valueobjects.NetworkErrorVO(errorCode, enums.NetworkErrorLevel.CRITICAL, "popup.error.cannotcontinueTitle", "popup.error.cannotcontinue");
            break;
        case enums.HTTPStatusCode.NO_INTERNET_CONNECTION:
            t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.error.NoInternetConnectionTitle", "popup.error.NoInternetConnection");
            break;
        case enums.HTTPStatusCode.REQUEST_TIME_OUT:
        case enums.HTTPStatusCode.NETWORK_ERROR:
            t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.error.networkerrorTitle", "popup.error.networkerrorNotCritical");
            break;
        case enums.HTTPStatusCode.SOME_ITEMS_NOT_FREE:
            t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.error.activesquad.itemsNotFreeTitle", "popup.error.activesquad.itemsNotFreeMsg");
            break;
        default:
            utils.Debug.Assert(!1, "[communication.BaseServiceDelegate] Hit default case in method generateDefaultNetworkError on error code " + errorCode + "."), t = new valueobjects.NetworkErrorVO(errorCode, i, "popup.title.genericError", "popup.body.genericError")
    }
    return t
}, communication.BaseDelegate.prototype.useClickShield = function (t, type) {
    return utils.JS.isBoolean(t) && (this._useClickShield = t), utils.JS.isNumber(type) && (this._clickShieldType = type), this._useClickShield
}, communication.BaseDelegate.prototype._appendMaxAge = function (t, data) {
    if (t.getResponseHeader("Cache-Control")) {
        var i = t.getResponseHeader("Cache-Control").split(/[= ,]/);
        this._responseType === models.CommunicationModel.RESPONSE.TEXT_JSON && "max-age" === i[0] && utils.JS.isValid(i[1]) && "" !== i[1] && (data.maxAge = parseInt(i[1], 10))
    }
    return data
}, communication.BaseDelegate.prototype._logSuccessResponse = function (t, i) {
    this._statusCode, this._url, this._requestType, this._dataType, this._contentType
}, communication.BaseDelegate.prototype._logErrorResponse = function (t, i, s) {
    this._statusCode, this._url, this._requestType, this._dataType, this._contentType, this._timedOut
}, communication.BaseServiceDelegate = function () {
    communication.BaseDelegate.call(this), this._cachedClientSessionId = 0, this._reAuthAttempts = 0, this._checkAuth = !0
}, utils.JS.inherits(communication.BaseServiceDelegate, communication.BaseDelegate), communication.BaseServiceDelegate.prototype._hideClickShield = function () {
    var t = this.getSessionInfo(),
        i = !(!utils.JS.isValid(t) || !this._checkAuth) && t.state === enums.AuthenticationState.STATE_AUTHENTICATING;
    !this._csShowing || this._isSending || i || (gClickShield.hideShield(this._clickShieldType), this._csShowing = !1)
}, communication.BaseServiceDelegate.prototype.getDefaultHeaders = function () {
    return utils.Debug.Assert(!1, "[BaseServiceDelegate::getDefaultHeaders] Abstract method not overridden."), {"Easw-Session-Data-Nucleus-Id": services.User.getUser().id}
}, communication.BaseServiceDelegate.prototype.generateURL = function () {
    var t = this.getSessionInfo();
    return t.protocol + "://" + t.hostname + this._url + this.generateUrlParams()
}, communication.BaseServiceDelegate.prototype.checkAuthentication = function (t) {
    return utils.JS.isBoolean(t) && (this._checkAuth = t), this._checkAuth
}, communication.BaseServiceDelegate.prototype._sendExtension = function () {
    var t = this.getSessionInfo();
    return this._cachedClientSessionId = utils.JS.isValid(t) ? t.count : 0, !this.checkAuthentication() || t.state === enums.AuthenticationState.STATE_AUTHENTICATED || (this.attemptAuthentication(), !1)
}, communication.BaseServiceDelegate.prototype.onAPISuccess = function (data, t, i) {
    this._isSending = !1, this._xhr = null, this._statusCode = i.status, data = this._appendMaxAge(i, data);
    var s = i.getResponseHeader("Retry-After"), o = this.getSessionInfo();
    utils.JS.isValid(s) && utils.JS.isValid(o) && (o.captchaCooldown = s), this._hasFOSLegacyError(data) ? this.onAPIFailure(i, t, "Encountered legacy FOS error code.") : (this._logSuccessResponse(i, t), this.onSuccess(data), this._hideClickShield())
}, communication.BaseServiceDelegate.prototype.onAPIFailure = function (t, i, s) {
    if (this._isSending = !1, this._xhr = null, this._statusCode = t.status, "timeout" === i && (this._timedOut = !0), this._cancelled) return this.onCancel(), void this._hideClickShield();
    if (this._logErrorResponse(t, i, s), this.isSameClientSession()) {
        var o = this.getSessionInfo(),
            l = this._responseType === models.CommunicationModel.RESPONSE.TEXT_JSON ? t.responseJSON : null,
            u = l && l.hasOwnProperty("reason") ? l.reason : t.responseText;
        utils.JS.isValid(l) && l.hasOwnProperty("code") && 200 !== parseInt(l.code, 10) && (this._statusCode = parseInt(l.code, 10));
        var h = t.getResponseHeader("Retry-After");
        utils.JS.isValid(h) && utils.JS.isValid(o) && (o.captchaCooldown = h), this.handleErrorResponse(l), this.handleErrors(u)
    } else utils.Debug.Assert(!1, "BaseServiceDelegate::onAPIFailure - Not handling errors because we are not in same client session as when the request was sent.");
    this._hideClickShield()
}, communication.BaseServiceDelegate.prototype.attemptAuthentication = function () {
    var t = this.getSessionInfo();
    switch (this._reAuthAttempts > 2 && (t.state = enums.AuthenticationState.STATE_AUTHENTICATION_FAILED), this._requestType, this._url, t.state) {
        case enums.AuthenticationState.STATE_AUTHENTICATED:
            this.send();
            break;
        case enums.AuthenticationState.STATE_UNAUTHENTICATED:
        case enums.AuthenticationState.STATE_AUTHENTICATING:
            this._reAuthAttempts++, services.Authentication.authenticate(enums.AuthEnvironment.UTAS).observe(this, this._handleReauth);
            break;
        case enums.AuthenticationState.STATE_AUTHENTICATION_FAILED:
            this._isSending = !1, this._reAuthAttempts = 0, this.onFail(enums.HTTPStatusCode.UNAUTHORIZED), this.clearListeners(), this._hideClickShield()
    }
}, communication.BaseServiceDelegate.prototype._handleReauth = function _handleReauth(t, data) {
    if (t.unobserve(this), data.success) this._reAuthAttempts = 0, this.send(); else {
        if (data.status === enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE || data.status === enums.HTTPStatusCode.ACCOUNT_BANNED) this.onFail(data.status); else {
            if (data.status !== enums.HTTPStatusCode.INVALID_CREDENTIALS && data.status !== enums.HTTPStatusCode.UPDATE_REQUIRED) return void this.attemptAuthentication();
            this.onFail(enums.HTTPStatusCode.UNAUTHORIZED)
        }
        this._isSending = !1, this._hideClickShield()
    }
}, communication.BaseServiceDelegate.prototype.handleErrorResponse = function (t) {
}, communication.BaseServiceDelegate.prototype.handleErrors = function (t) {
    switch (this._statusCode) {
        case enums.HTTPStatusCode.UNAUTHORIZED:
            this._handleUnauthorizedError(t);
            break;
        default:
            this._handleError()
    }
}, communication.BaseServiceDelegate.prototype._handleUnauthorizedError = function (t) {
    var i = this.getSessionInfo();
    t !== enums.NetworkErrorReason.MULTIPLE_SESSION ? (i.state !== enums.AuthenticationState.STATE_AUTHENTICATING && (i.state = enums.AuthenticationState.STATE_UNAUTHENTICATED),
        this.attemptAuthentication()) : this.onFail(enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE)
}, communication.BaseServiceDelegate.prototype._hasFOSLegacyError = function (response) {
    return utils.JS.isValid(response) && response.hasOwnProperty("code") && "200" !== response.code
}, communication.BaseServiceDelegate.prototype.getSessionInfo = function () {
    return services.Authentication.getSession(enums.AuthEnvironment.UTAS)
}, communication.BaseServiceDelegate.prototype.isSameClientSession = function () {
    var t = this.getSessionInfo();
    return null === t || t.count === this._cachedClientSessionId
}, communication.BaseFUTDelegate = function () {
    communication.BaseServiceDelegate.call(this)
}, utils.JS.inherits(communication.BaseFUTDelegate, communication.BaseServiceDelegate), communication.BaseFUTDelegate.REQUEST_ROOT = "/ut/game/fifa19/", communication.BaseFUTDelegate.DELETE_ROOT = "/ut/delete/game/fifa19/", communication.BaseFUTDelegate.REQUEST_MM = "/ut/mm/game/fifa19/", communication.BaseFUTDelegate.prototype.getService = function () {
    return enums.FOSService.FUT
}, communication.BaseFUTDelegate.prototype.getDefaultHeaders = function () {
    return {"Easw-Session-Data-Nucleus-Id": services.User.getUser().id, "X-UT-SID": this.getSessionInfo().id}
}, communication.BaseFUTDelegate.prototype.handleErrors = function (t) {
    switch (this._statusCode) {
        case enums.HTTPStatusCode.UNAUTHORIZED:
            this._handleUnauthorizedError(t);
            break;
        case enums.HTTPStatusCode.INVALID_COOKIE:
        case enums.HTTPStatusCode.NO_USER:
            this.onFail(this._statusCode);
            break;
        case enums.HTTPStatusCode.CAPTCHA_REQUIRED:
        case enums.HTTPStatusCode.FUN_CAPTCHA_REQUIRED:
            this.onFail(this._statusCode);
            break;
        default:
            this._handleError()
    }
}, communication.MoveItemDelegate = function (t, i, s) {
    communication.BaseFUTDelegate.call(this);
    var o;
    switch (i) {
        case enums.FUTItemPile.CLUB:
            o = "club";
            break;
        case enums.FUTItemPile.TRANSFER:
            o = "trade";
            break;
        default:
            utils.Debug.Assert(!1, "Unsupported destination pile when moving items. Will attempt to send to club..."), o = "club"
    }
    this.setData({
        itemData: t.map(function (item) {
            var data = {id: s ? item.resourceId : item.id, pile: o};
            if (!s) {
                var t = item.getAuctionData();
                item.isDuplicate() && i === enums.FUTItemPile.CLUB && (data.swap = item.duplicateId), t && t.isWon() && t.isHighestBid() && (data.tradeId = t.tradeId)
            }
            return data
        })
    }), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + (s ? "item/resource" : "item"), enums.HTTPRequestMethod.PUT, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON)
}, utils.JS.inherits(communication.MoveItemDelegate, communication.BaseFUTDelegate), communication.MoveItemDelegate.prototype.onSuccess = function (response) {
    var t = response.itemData.length, errorCode = 0;
    if (0 !== t) {
        for (; t-- > 0;) {
            var i = response.itemData[t];
            if (i.success) return void this.dispatch(communication.BaseDelegate.SUCCESS, response);
            (!utils.JS.isNumber(errorCode) || errorCode <= 0) && (errorCode = i.errorCode || 0)
        }
        this.onFail(errorCode)
    } else this.dispatch(communication.BaseDelegate.SUCCESS, response)
}, communication.MoveItemDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.PERMISSION_DENIED:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.item.PermissionDeniedTitle", "popup.error.item.PermissionDenied");
            break;
        case enums.HTTPStatusCode.STATE_INVALID:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.item.InvalidStateTitle", "popup.error.item.InvalidState");
            break;
        case enums.HTTPStatusCode.DUPLICATE_ITEM_TYPE:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.item.DuplicatedItemTypeTitle", "popup.error.item.DuplicatedItemType");
            break;
        case enums.HTTPStatusCode.DESTINATION_FULL:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.tradetoken.DestinationFullTitle", "popup.error.item.DestinationFull");
            break;
        case enums.HTTPStatusCode.INVALID_DECK:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.tradetoken.InvalidDeckTitle", "popup.error.tradetoken.InvalidDeck");
            break;
        case enums.HTTPStatusCode.CARD_IN_TRADE:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.tradetoken.ItemInTradeOfferTitle", "popup.error.tradetoken.ItemInTradeOffer");
            break;
        case enums.HTTPStatusCode.NO_CARD_EXISTS:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.NoSuchCardTitle", "popup.error.NoSuchCard");
            break;
        case enums.HTTPStatusCode.PLAYER_HAS_RED_CARD:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.move.PlayerHasRedCardTitle", "popup.error.move.PlayerHasRedCard");
            break;
        case enums.HTTPStatusCode.REMOVE_WATCH_FAILURE:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.watchlist.RemoveWatchFailureTitle", "popup.error.watchlist.RemoveWatchFailure");
            break;
        case enums.HTTPStatusCode.SWAP_ITEM_WITH_ITSELF:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.CantSwapItemWithItselfTitle", "popup.error.CantSwapItemWithItself");
            break;
        case enums.HTTPStatusCode.USER_IS_HIGHEST_BIDDER:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.watchlist.UserIsHighestBidderTitle", "popup.error.watchlist.UserIsHighestBidder");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
}, communication.RemoveSoldItemDelegate = function (t) {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "trade/" + (t && t > 0 && "0" !== t ? t.toString() : "sold"), enums.HTTPRequestMethod.DELETE, models.CommunicationModel.RESPONSE.EMPTY, enums.HTTPContentType.JSON)
}, utils.JS.inherits(communication.RemoveSoldItemDelegate, communication.BaseFUTDelegate), NamespaceManager.Register("transferobjects"), transferobjects.PersonaClub = function UTPersonaClubDTO(data) {
    this.abbr = data.clubAbbr, Object.defineProperty(this, "abbr", {
        writable: !1,
        enumerable: !0
    }), this.name = data.clubName, Object.defineProperty(this, "name", {
        writable: !1,
        enumerable: !0
    }), this.established = data.established, Object.defineProperty(this, "established", {
        writable: !1,
        enumerable: !0
    }), this.lastAccessTime = data.lastAccessTime, Object.defineProperty(this, "lastAccessTime", {
        writable: !1,
        enumerable: !0
    }), this.assetId = data.assetId, Object.defineProperty(this, "assetId", {
        writable: !0,
        enumerable: !0
    }), this.sku = data.sku, Object.defineProperty(this, "sku", {
        writable: !1,
        enumerable: !0
    }), this.platform = utils.FUTData.mapSkuToPlatform(this.sku), Object.defineProperty(this, "platform", {
        writable: !1,
        enumerable: !0
    }), this.year = data.year, Object.defineProperty(this, "year", {
        writable: !1,
        enumerable: !0
    }), this.isXbox = this.platform === enums.Platform.XBX || this.platform === enums.Platform.XBO, Object.defineProperty(this, "isXbox", {
        writable: !1,
        enumerable: !0
    }), this.isPlaystation = this.platform === enums.Platform.PS3 || this.platform === enums.Platform.PS4, Object.defineProperty(this, "isPlaystation", {
        writable: !1,
        enumerable: !0
    }), this.isPC = this.platform === enums.Platform.PC, Object.defineProperty(this, "isPC", {
        writable: !1,
        enumerable: !0
    }), this.isSwitch = this.platform === enums.Platform.SWI, Object.defineProperty(this, "isSwitch", {
        writable: !1,
        enumerable: !0
    }), this.isGen3 = this.platform === enums.Platform.PS3 || this.platform === enums.Platform.XBX, Object.defineProperty(this, "isGen3", {
        writable: !1,
        enumerable: !0
    })
}, transferobjects.PersonaClub.prototype.setAssetId = function setAssetId(t) {
    this.assetId = t
}, NamespaceManager.Register("transferobjects"), transferobjects.LoyaltyReward = function LoyaltyRewardDTO(data) {
    this.quantity = data.rewardQuantity, Object.defineProperty(this, "quantity", {writable: !1}), this.type = data.rewardType, Object.defineProperty(this, "type", {writable: !1}), this.value = data.rewardValue, Object.defineProperty(this, "value", {writable: !1}), this.itemData = data.itemData ? factories.Item.createItem(data.itemData) : null
}, NamespaceManager.Register("entities"), entities.Persona = function UTPersonaEntity(data) {
    var t;
    Object.defineProperty(this, "sku", {
        get: function () {
            return t
        }, set: function (i) {
            this.clubs.has(i) && (t = i)
        }
    }), this.id = data.personaId, Object.defineProperty(this, "id", {writable: !1}), this.name = data.personaName, Object.defineProperty(this, "name", {writable: !1}), this.isReturningUser = 1 === data.returningUser, Object.defineProperty(this, "isReturningUser", {writable: !1}), this.isFreeTrial = data.trialFree, Object.defineProperty(this, "isFreeTrial", {writable: !1}), this.isAccessTrial = data.trial, Object.defineProperty(this, "isAccessTrial", {writable: !1}), this.state = data.userState || enums.UserState.NONE, Object.defineProperty(this, "state", {writable: !1}), this.clubs = new UTHashTable({}), this.sku = enums.SKU.NONE;
    var i = 0;
    data.userClubList.forEach(function (t) {
        var s = parseInt(utils.TextUtils.getYearString(), 10);
        if (this.isReturningUser && (s -= 1), !(parseInt(t.year, 10) < s)) {
            var o = enums.SKU.NONE;
            if (utils.JS.isValid(t.skuAccessList)) {
                var l;
                for (l in t.skuAccessList) if (t.skuAccessList.hasOwnProperty(l) && t.skuAccessList[l] === t.lastAccessTime) {
                    o = l;
                    break
                }
                var u = new transferobjects.PersonaClub({
                    clubAbbr: t.clubAbbr,
                    clubName: t.clubName,
                    established: t.established,
                    lastAccessTime: t.lastAccessTime,
                    assetId: t.assetId,
                    platform: t.platform,
                    sku: o,
                    year: t.year
                });
                this.clubs.set(u.sku, u), u.lastAccessTime > i && (i = u.lastAccessTime, this.sku = u.sku)
            }
        }
    }, this), utils.Debug.Assert(this.sku !== enums.SKU.NONE, "this account has no sku"), this.hasFUT = this.clubs.length > 0, Object.defineProperty(this, "hasFUT", {writable: !1}), this.hasClubForCurrentYear = !1, Object.defineProperty(this, "hasClubForCurrentYear", {
        get: function () {
            return utils.JS.isValid(this.clubs.find(function (t) {
                return t.year === utils.TextUtils.getYearString()
            }))
        }
    }), this.hasFullAccess = !this.isAccessTrial && !this.isFreeTrial && this.hasClubForCurrentYear, Object.defineProperty(this, "hasFullAccess", {writable: !1}), this.isEligibleForMobileStart = !1, Object.defineProperty(this, "isEligibleForMobileStart", {
        get: function () {
            return !!this.isReturningUser && (!this.hasClubForCurrentYear || (this.sku === enums.SKU.PREV_XBO && !this.clubs.has(enums.SKU.XBO) || this.sku === enums.SKU.PREV_PS4 && !this.clubs.has(enums.SKU.PS4) || this.sku === enums.SKU.PREV_PC && !this.clubs.has(enums.SKU.PC)))
        }
    }), this.platform = enums.Platform.NONE, Object.defineProperty(this, "platform", {
        get: function () {
            return this.clubs.has(this.sku) ? this.clubs.get(this.sku).platform : enums.Platform.NONE
        }
    }), this.isXbox = !1, Object.defineProperty(this, "isXbox", {
        get: function () {
            return !!this.clubs.has(this.sku) && this.clubs.get(this.sku).isXbox
        }
    }), this.isPlaystation = !1, Object.defineProperty(this, "isPlaystation", {
        get: function () {
            return !!this.clubs.has(this.sku) && this.clubs.get(this.sku).isPlaystation
        }
    }), this.isPC = !1, Object.defineProperty(this, "isPC", {
        get: function () {
            return !!this.clubs.has(this.sku) && this.clubs.get(this.sku).isPC
        }
    }), this.isSwitch = !1, Object.defineProperty(this, "isSwitch", {
        get: function () {
            return !!this.clubs.has(this.sku) && this.clubs.get(this.sku).isSwitch
        }
    }), this.isGen3 = !1, Object.defineProperty(this, "isGen3", {
        get: function () {
            return !!this.clubs.has(this.sku) && this.clubs.get(this.sku).isGen3
        }
    }), this.lastAccessTime = 0, Object.defineProperty(this, "lastAccessTime", {
        get: function () {
            return this.clubs.has(this.sku) ? this.clubs.get(this.sku).lastAccessTime : 0
        }
    }), this._loyaltyRewards = []
}, entities.Persona.prototype.getValidClubs = function getValidClubs() {
    return this.clubs.filter(function _checkValidClub(t) {
        var i = utils.TextUtils.getYearString(), s = (parseInt(i, 10) - 1).toString(),
            o = !this.hasClubForCurrentYear && this.isReturningUser && this.state !== enums.UserState.RETURNING_USER_EXPIRED && t.year === s;
        return t.year === i || o
    }, this)
}, entities.Persona.prototype.getCurrentClub = function getCurrentClub() {
    return this.clubs.get(this.sku)
}, entities.Persona.prototype.createClub = function createClub(t, i, s) {
    var o = new UTObservable;
    return this.hasClubForCurrentYear || !this.isReturningUser || this.state === enums.UserState.RETURNING_USER_EXPIRED ? (o.notify({
        success: !1,
        status: enums.HTTPStatusCode.FORBIDDEN,
        data: null
    }),
        o) : (accessobjects.Onboarding.createClub(t, i, s).observe(this, function _onCreateClubComplete(t, i) {
        if (t.unobserve(this), i.success) {
            var s = i.response, l = utils.FUTData.mapSkuToCurrentYear(this.sku),
                u = utils.JS.find(s.login.actives, function (item) {
                    return item.header && "Badge" === item.header
                }), h = utils.JS.isValid(u) ? u.assetId : -1, p = new transferobjects.PersonaClub({
                    clubAbbr: s.login.clubAbbr,
                    clubName: s.login.clubName,
                    established: parseInt(s.login.established, 10),
                    lastAccessTime: parseInt(s.login.established, 10),
                    assetId: h,
                    platform: this.platform,
                    sku: l,
                    year: utils.TextUtils.getYearString()
                });
            this.clubs.set(p.sku, p), this.sku = p.sku;
            var m = s.starterPack.map(function (item) {
                return factories.Item.createItem(item)
            }), _ = null, g = m.filter(function (item) {
                return item.isPlayer()
            });
            g.length > 0 ? g.forEach(function (t) {
                (!utils.JS.isValid(_) || _.rating < t.rating) && (_ = t)
            }) : m.forEach(function (item) {
                (!utils.JS.isValid(_) || _.discardValue < item.discardValue) && (_ = item)
            }), o.notify({success: !0, status: i.status, data: {items: m, highestRated: _}})
        } else o.notify({success: !1, status: i.status, data: null})
    }), o)
}, entities.Persona.prototype.setLoyaltyRewards = function setLoyaltyRewards(t) {
    this._loyaltyRewards = t
}, entities.Persona.prototype.getLoyaltyRewards = function getLoyaltyRewards() {
    return this._loyaltyRewards
}, NamespaceManager.Register("transferobjects"), transferobjects.SearchCriteria = function SearchCriteriaDTO() {
    function setNumberProperty(t, i) {
        return utils.Debug.Assert(utils.JS.isNumber(i), "[SearchCriteria] Assignment to numeric property expects a number."), utils.JS.isNumber(i) && (t = i), t
    }

    function setStringProperty(t, i) {
        return utils.Debug.Assert(utils.JS.isString(i), "[SearchCriteria] Assignment to string property expects a string."), utils.JS.isString(i) && (t = i), t
    }

    function setBooleanProperty(t, i) {
        return utils.Debug.Assert(utils.JS.isBoolean(i), "[SearchCriteria] Assignment to boolean property expects a boolean."), utils.JS.isBoolean(i) && (t = i), t
    }

    function setEnumProperty(t, i, s) {
        var o;
        for (o in t) if (t.hasOwnProperty(o) && t[o] === s) return s;
        utils.Debug.Assert(!1, "[SearchCriteria] Value assignment not found in enum.")
    }

    var offset = 0;
    Object.defineProperty(this, "offset", {
        get: function () {
            return offset
        }, set: function (t) {
            offset = setNumberProperty.call(this, offset, t)
        }
    });
    var sort = enums.SearchSort.DESCENDING;
    Object.defineProperty(this, "sort", {
        get: function () {
            return sort
        }, set: function (t) {
            sort = setStringProperty.call(this, sort, t), t !== enums.SearchSort.NONE && this.acquiredDate !== enums.SearchSort.NONE && (this.acquiredDate = enums.SearchSort.NONE)
        }
    });
    var t = enums.SearchSort.NONE;
    Object.defineProperty(this, "acquiredDate", {
        get: function () {
            return t
        }, set: function (i) {
            t = setStringProperty.call(this, t, i), i !== enums.SearchSort.NONE && this.sort !== enums.SearchSort.NONE && (this.sort = enums.SearchSort.NONE)
        }
    });
    var count = 0;
    Object.defineProperty(this, "count", {
        get: function () {
            return count
        }, set: function (t) {
            count = setNumberProperty.call(this, count, t)
        }
    });
    var type = enums.SearchType.ANY;
    Object.defineProperty(this, "type", {
        get: function () {
            return type
        }, set: function (t) {
            type !== t && ((type = setEnumProperty.call(this, enums.SearchType, type, t)) === enums.SearchType.ANY || type === enums.SearchType.STADIUM || type === enums.SearchType.BALL ? this.category = enums.SearchCategory.ANY : type === enums.SearchType.PLAYER && this.category !== enums.SearchCategory.PLAYER_GK && this.category !== enums.SearchCategory.PLAYER_NO_GK ? this.category = enums.SearchCategory.ANY : type === enums.SearchType.STAFF && this.category !== enums.SearchCategory.ANY && this.category !== enums.SearchCategory.MANAGER && this.category !== enums.SearchCategory.COACH_FITNESS && this.category !== enums.SearchCategory.COACH_GK && this.category !== enums.SearchCategory.COACH_HEAD && this.category !== enums.SearchCategory.PHYSIO ? this.category = enums.SearchCategory.ANY : type === enums.SearchType.CLUB_INFO && this.category !== enums.SearchCategory.KIT && this.category !== enums.SearchCategory.BADGE ? this.category = enums.SearchCategory.KIT : type === enums.SearchType.CONSUMABLES_DEVELOPMENT && this.category !== enums.SearchCategory.CONTRACT && this.category !== enums.SearchCategory.FITNESS && this.category !== enums.SearchCategory.HEALING ? this.category = enums.SearchCategory.CONTRACT : type === enums.SearchType.CONSUMABLES_TRAINING && this.category !== enums.SearchCategory.PLAYER_TRAINING && this.category !== enums.SearchCategory.GK_TRAINING && this.category !== enums.SearchCategory.POSITION && this.category !== enums.SearchCategory.PLAYSTYLE && this.category !== enums.SearchCategory.MANAGER_LEAGUE && (this.category = enums.SearchCategory.PLAYER_TRAINING), this.league = -1, this.nation = -1, this.club = -1, type !== enums.SearchType.PLAYER && (this.playStyle = -1, this.position = enums.SearchType.ANY, this.zone = enums.SearchType.ANY), type === enums.SearchType.BALL && (this.level = enums.SearchLevel.ANY))
        }
    });
    var category = enums.SearchCategory.ANY;
    Object.defineProperty(this, "category", {
        get: function () {
            return category
        }, set: function (t) {
            category = setEnumProperty.call(this, enums.SearchCategory, category, t), this.type === enums.SearchType.PLAYER || category !== enums.SearchCategory.PLAYER_GK && category !== enums.SearchCategory.PLAYER_NO_GK ? this.type === enums.SearchType.STAFF || category !== enums.SearchCategory.MANAGER && category !== enums.SearchCategory.COACH_FITNESS && category !== enums.SearchCategory.COACH_GK && category !== enums.SearchCategory.COACH_HEAD && category !== enums.SearchCategory.PHYSIO ? this.type === enums.SearchType.CLUB_INFO || category !== enums.SearchCategory.KIT && category !== enums.SearchCategory.BADGE ? this.type === enums.SearchType.CONSUMABLES_DEVELOPMENT || category !== enums.SearchCategory.CONTRACT && category !== enums.SearchCategory.FITNESS && category !== enums.SearchCategory.HEALING ? this.type === enums.SearchType.CONSUMABLES_TRAINING || category !== enums.SearchCategory.PLAYER_TRAINING && category !== enums.SearchCategory.GK_TRAINING && category !== enums.SearchCategory.POSITION && category !== enums.SearchCategory.PLAYSTYLE && category !== enums.SearchCategory.MANAGER_LEAGUE || (this.type = enums.SearchType.CONSUMABLES_TRAINING) : this.type = enums.SearchType.CONSUMABLES_DEVELOPMENT : this.type = enums.SearchType.CLUB_INFO : this.type = enums.SearchType.STAFF : this.type = enums.SearchType.PLAYER, this.type === enums.SearchType.STAFF && category !== enums.SearchCategory.MANAGER && (this.league = -1, this.nation = -1), this.type === enums.SearchType.CONSUMABLES_TRAINING && (category !== enums.SearchCategory.POSITION && (this.position = enums.SearchType.ANY), category !== enums.SearchCategory.PLAYSTYLE && (this.playStyle = -1))
        }
    });
    var position = enums.SearchType.ANY;
    Object.defineProperty(this, "position", {
        get: function () {
            return position
        }, set: function (t) {
            position = setStringProperty.call(this, position, t), t !== enums.SearchType.ANY && this.zone !== enums.SearchType.ANY && (this.zone = enums.SearchType.ANY)
        }
    });
    var i = enums.SearchType.ANY;
    Object.defineProperty(this, "zone", {
        get: function () {
            return i
        }, set: function (t) {
            i = setStringProperty.call(this, i, t), t !== enums.SearchType.ANY && this.position !== enums.SearchType.ANY && (this.position = enums.SearchType.ANY)
        }
    });
    var level = enums.SearchLevel.ANY;
    Object.defineProperty(this, "level", {
        get: function () {
            return level
        }, set: function (t) {
            level = setEnumProperty.call(this, enums.SearchLevel, level, t)
        }
    });
    var s = -1;
    Object.defineProperty(this, "nation", {
        get: function () {
            return s
        }, set: function (t) {
            s = setNumberProperty.call(this, s, t)
        }
    });
    var o = -1;
    Object.defineProperty(this, "league", {
        get: function () {
            return o
        }, set: function (t) {
            o = setNumberProperty.call(this, o, t)
        }
    });
    var l = -1;
    Object.defineProperty(this, "club", {
        get: function () {
            return l
        }, set: function (t) {
            l = setNumberProperty.call(this, l, t)
        }
    });
    var u = 0;
    Object.defineProperty(this, "playStyle", {
        get: function () {
            return u
        }, set: function (t) {
            u = setNumberProperty.call(this, u, t)
        }
    });
    var h = 0;
    Object.defineProperty(this, "minBid", {
        get: function () {
            return h
        }, set: function (t) {
            h = setNumberProperty.call(this, h, t)
        }
    });
    var p = 0;
    Object.defineProperty(this, "maxBid", {
        get: function () {
            return p
        }, set: function (t) {
            p = setNumberProperty.call(this, p, t)
        }
    });
    var m = 0;
    Object.defineProperty(this, "minBuy", {
        get: function () {
            return m
        }, set: function (t) {
            m = setNumberProperty.call(this, m, t)
        }
    });
    var _ = 0;
    Object.defineProperty(this, "maxBuy", {
        get: function () {
            return _
        }, set: function (t) {
            _ = setNumberProperty.call(this, _, t)
        }
    });
    var g = 0;
    Object.defineProperty(this, "maskedDefId", {
        get: function () {
            return g
        }, set: function (t) {
            g = setNumberProperty.call(this, g, t)
        }
    });
    var S = enums.SearchType.ANY;
    Object.defineProperty(this, "year", {
        get: function () {
            return S
        }, set: function (t) {
            S = setStringProperty.call(this, S, t)
        }
    });
    var T = enums.SearchUntradeables.DEFAULT;
    Object.defineProperty(this, "untradeables", {
        get: function () {
            return T
        }, set: function (t) {
            if (utils.JS.isString(t)) T = setStringProperty.call(this, T, t); else if (utils.JS.isBoolean(t)) {
                var i = t ? enums.SearchUntradeables.ONLY : enums.SearchUntradeables.EXCLUDE;
                T = setStringProperty.call(this, T, i)
            }
        }
    });
    var v = !1;
    Object.defineProperty(this, "isExactSearch", {
        get: function () {
            return v
        }, set: function (t) {
            v = setBooleanProperty.call(this, v, t)
        }
    }), this.offset = 0, this.count = 20, this.type = enums.SearchType.ANY, this.category = enums.SearchCategory.ANY, this.position = enums.SearchType.ANY, this.zone = enums.SearchType.ANY, this.level = enums.SearchLevel.ANY, this.nation = -1, this.league = -1, this.club = -1, this.playStyle = -1, this.minBid = 0, this.maxBid = 0, this.minBuy = 0, this.maxBuy = 0, this.defId = [], this.maskedDefId = 0, this.year = enums.SearchType.ANY, this.untradeables = enums.SearchUntradeables.DEFAULT, this.isExactSearch = !1
}, transferobjects.SearchCriteria.prototype.update = function update(t) {
    this.offset = t.offset, this.count = t.count, this.type = t.type, this.category = t.category, this.sort = t.sort, this.acquiredDate = t.acquiredDate, this.zone = t.zone, this.position = t.position, this.level = t.level, this.nation = t.nation, this.league = t.league, this.club = t.club, this.playStyle = t.playStyle, this.minBid = t.minBid, this.maxBid = t.maxBid, this.minBuy = t.minBuy, this.maxBuy = t.maxBuy, this.defId = t.defId, this.maskedDefId = t.maskedDefId, this.year = t.year, this.untradeables = t.untradeables, this.isExactSearch = t.isExactSearch
}, transferobjects.SearchCriteria.prototype.compare = function compare(t) {
    return this.offset === t.offset && this.sort === t.sort && this.acquiredDate === t.acquiredDate && this.count === t.count && this.type === t.type && this.category === t.category && this.zone === t.zone && this.position === t.position && this.level === t.level && this.nation === t.nation && this.league === t.league && this.club === t.club && this.playStyle === t.playStyle && this.minBid === t.minBid && this.maxBid === t.maxBid && this.minBuy === t.minBuy && this.maxBuy === t.maxBuy && this.defId === t.defId && this.maskedDefId === t.maskedDefId && this.year === t.year && this.untradeables === t.untradeables && this.isExactSearch === t.isExactSearch
}, transferobjects.SearchCriteria.prototype.reset = function reset() {
    this.offset = 0, this.sort = enums.SearchSort.DESCENDING, this.acquiredDate = enums.SearchSort.NONE, this.count = 20, this.type = enums.SearchType.ANY, this.category = enums.SearchCategory.ANY, this.position = enums.SearchType.ANY, this.zone = enums.SearchType.ANY, this.level = enums.SearchLevel.ANY, this.nation = -1, this.league = -1, this.club = -1, this.playStyle = -1, this.minBid = 0, this.maxBid = 0, this.minBuy = 0, this.maxBuy = 0, this.defId = [], this.maskedDefId = 0, this.year = enums.SearchType.ANY,
        this.untradeables = enums.SearchUntradeables.DEFAULT, this.isExactSearch = !1
}, transferobjects.SearchCriteria.prototype.hasValidDefId = function hasValidDefId() {
    return this.defId.length > 0 && this.defId.every(function _checkDefId(t) {
        return utils.JS.isNumber(t) && t > 0
    })
},transferobjects.SearchCriteria.prototype.resetDefId = function resetDefId() {
    this.defId = [], this.maskedDefId = 0
},transferobjects.SearchCriteria.prototype.isModified = function isModified(t) {
    return this.position !== enums.SearchType.ANY || this.zone !== enums.SearchType.ANY || this.level !== enums.SearchLevel.ANY || this.nation > 0 || this.league > 0 || this.club > 0 || this.playStyle > 0 || 0 !== this.minBid || 0 !== this.maxBid || 0 !== this.minBuy || 0 !== this.maxBuy || this.defId.length > 0 || 0 !== this.maskedDefId || this.year !== enums.SearchType.ANY || this.untradeables !== enums.SearchUntradeables.DEFAULT || !0 === this.isExactSearch || !t && this.sort !== enums.SearchSort.DESCENDING
},NamespaceManager.Register("entities"),entities.User = function UTUserEntity(data) {
    var t;
    Object.defineProperty(this, "selectedPersona", {
        get: function () {
            return t
        }, set: function (i) {
            utils.JS.isNumber(i) && (t = i)
        }
    }), this.id = data.pidId, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.status = data.status, Object.defineProperty(this, "status", {
        writable: !1,
        enumerable: !0
    }), this.personas = new UTHashTable({}), Object.defineProperty(this, "personas", {
        writable: !1,
        enumerable: !0
    }), this.selectedPersona = 0, this._coins = new valueobjects.Currency(enums.Currency.COINS, 0), Object.defineProperty(this, "_coins", {
        writable: !0,
        enumerable: !1
    }), this._points = new valueobjects.Currency(enums.Currency.POINTS, 0), Object.defineProperty(this, "_points", {
        writable: !0,
        enumerable: !1
    }), this._draftTokens = new valueobjects.Currency(enums.Currency.DRAFT_TOKEN, 0), Object.defineProperty(this, "_draftTokens", {
        writable: !0,
        enumerable: !1
    }), this._unopenedPacks = 0, Object.defineProperty(this, "_unopenedPacks", {
        writable: !0,
        enumerable: !1
    }), this.dateOfBirth = data.dob, Object.defineProperty(this, "dateOfBirth", {
        writable: !1,
        enumerable: !0
    }), this.email = data.email, Object.defineProperty(this, "email", {
        writable: !1,
        enumerable: !0
    }), this.hasPlayerPicksPending = !1, Object.defineProperty(this, "hasPlayerPicksPending", {
        writable: !0,
        enumerable: !0
    }), this.marketSearchCriteria = new transferobjects.SearchCriteria, Object.defineProperty(this, "marketSearchCriteria", {
        writable: !1,
        enumerable: !0
    }), this.squadSearchCriteria = new transferobjects.SearchCriteria, Object.defineProperty(this, "squadSearchCriteria", {
        writable: !1,
        enumerable: !0
    }), this._tradeAccess = enums.TradeAccessLevel.NONE
},entities.User.prototype.addPersona = function addPersona(t) {
    var i = new entities.Persona(t);
    this.personas.has(i.id) ? this.personas.has(i.id) && i.clubs.length > 0 && this.personas.set(i.id, i) : this.personas.set(i.id, i)
},entities.User.prototype.getSelectedPersona = function getSelectedPersona() {
    if (this.selectedPersona <= 0) {
        var t;
        this.personas.forEach(function (i) {
            (!t || !t.hasFullAccess && i.hasFullAccess || i.lastAccessTime >= t.lastAccessTime) && (t = i, this.selectedPersona = i.id)
        }, this)
    }
    return this.personas.get(this.selectedPersona)
},entities.User.prototype.getPersonas = function getPersonas(t) {
    return t ? this.personas.filter(function (t) {
        return t.id !== this.selectedPersona
    }, this) : this.personas.values()
},entities.User.prototype.getPersonaBySKU = function getPersonaBySKU(t) {
    return this.personas.find(function (i) {
        return i.sku === t
    })
},entities.User.prototype.setNumUnopenedPacks = function setNumUnopenedPacks(t) {
    var i = utils.JS.isNumber(t);
    utils.Debug.Assert(i, "Expected a number"), i && (this._unopenedPacks = t, getDefaultDispatcher().notify(enums.Notification.STORE_PACK_COUNT_CHANGE, this, {unopenedPacks: this._unopenedPacks}))
},entities.User.prototype.getNumUnopenedPacks = function getNumUnopenedPacks() {
    return this._unopenedPacks
},entities.User.prototype.incrementNumUnopenedPacks = function incrementNumUnopenedPacks(t) {
    this._unopenedPacks += t || 1, getDefaultDispatcher().notify(enums.Notification.STORE_PACK_COUNT_CHANGE, this, {unopenedPacks: this._unopenedPacks})
},
entities.User.prototype.decrementNumUnopenedPacks = function decrementNumUnopenedPacks(t) {
    this._unopenedPacks = Math.max(this._unopenedPacks - (t || 1), 0), getDefaultDispatcher().notify(enums.Notification.STORE_PACK_COUNT_CHANGE, this, {unopenedPacks: this._unopenedPacks})
},entities.User.prototype.setCurrency = function setCurrency(type, t) {
    var i = getDefaultDispatcher(), s = 0;
    switch (type) {
        case enums.Currency.COINS:
            s = t - this._coins.amount, this._coins = new valueobjects.Currency(enums.Currency.COINS, t), i.notify(enums.Notification.USER_CURRENCY_UPDATE, this, {
                currency: this._coins,
                difference: s
            });
            break;
        case enums.Currency.POINTS:
            s = t - this._points.amount, this._points = new valueobjects.Currency(enums.Currency.POINTS, t), i.notify(enums.Notification.USER_CURRENCY_UPDATE, this, {
                currency: this._points,
                difference: s
            });
            break;
        case enums.Currency.DRAFT_TOKEN:
            s = t - this._draftTokens.amount, this._draftTokens = new valueobjects.Currency(enums.Currency.DRAFT_TOKEN, t), i.notify(enums.Notification.USER_CURRENCY_UPDATE, this, {
                currency: this._draftTokens,
                difference: s
            });
            break;
        default:
            utils.Debug.Assert(!1, "Received an invalid currency type.")
    }
},entities.User.prototype.getCurrency = function getCurrency(type) {
    switch (type) {
        case enums.Currency.COINS:
            return this._coins;
        case enums.Currency.POINTS:
            return this._points;
        case enums.Currency.DRAFT_TOKEN:
            return this._draftTokens
    }
    return utils.Debug.Assert(!1, "Received an invalid currency type."), new valueobjects.Currency(enums.Currency.COINS, 0)
},entities.User.prototype.getCurrencies = function getCurrencies() {
    return [this._coins, this._points, this._draftTokens]
},entities.User.prototype.setTradeAccess = function setTradeAccess(level) {
    this._tradeAccess = level
},entities.User.prototype.getTradeAccess = function getTradeAccess() {
    return this._tradeAccess
},entities.User.prototype.hasTradeAccess = function hasTradeAccess() {
    return this._tradeAccess === enums.TradeAccessLevel.WHITELIST
},entities.User.prototype.canSwitchClubs = function canSwitchClubs() {
    return this.personas.length > 1 || this.getSelectedPersona().getValidClubs().length > 1
},utils.JS.inherits(UTUserRepository, UTHashTable),NamespaceManager.Register("services"),services.User = function () {
    function UTUserService() {
        UTObject.call(this), this._currentUserId = 0, this._repository = new UTUserRepository, this.maxAllowedAuctions = 30
    }

    return utils.JS.inherits(UTUserService, UTObject), UTUserService.prototype.reset = function reset() {
        this._repository.clear(), this._currentUserId = 0
    }, UTUserService.prototype.setCurrent = function setCurrent(t) {
        this._repository.set(t.id, t), this._currentUserId = t.id
    }, UTUserService.prototype.getUser = function getUser(id) {
        return utils.JS.isNumber(id) || (id = this._currentUserId), this._repository.get(id)
    }, UTUserService.prototype.requestCurrencies = function requestCurrencies() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return accessobjects.User.getCurrencies(s).observe(this, function _onRequestCurrenciesComplete(s, data) {
            s.unobserve(this);
            var o = this.getUser();
            data.success && (data.response.currencies.forEach(function (t) {
                o.setCurrency(t.type, t.amount)
            }, this), o.setNumUnopenedPacks(data.response.unopenedPacks)), i.success = data.success, i.status = data.status, i.data = {
                coins: o.getCurrency(enums.Currency.COINS),
                points: o.getCurrency(enums.Currency.POINTS),
                tokens: o.getCurrency(enums.Currency.DRAFT_TOKEN),
                packs: o.getNumUnopenedPacks()
            }, t.notify(i)
        }), t
    }, UTUserService.prototype.requestPileSizes = function requestPileSizes() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return accessobjects.User.getPileSizes(s).observe(this, function _onRequestPileSizesComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, data.success && data.response.pileSizes.forEach(function (t) {
                switch (t.key) {
                    case enums.ItemPileLimitKey.TRANSFER:
                        repositories.Item.setPileSize(enums.FUTItemPile.TRANSFER, t.value);
                        break;
                    case enums.ItemPileLimitKey.INBOX:
                        repositories.Item.setPileSize(enums.FUTItemPile.INBOX, t.value);
                        break;
                    case enums.ItemPileLimitKey.SQUADS:
                        services.Squad.setMaxSquads(t.value);
                        break;
                    case enums.ItemPileLimitKey.AUCTIONS:
                        this.maxAllowedAuctions = t.value
                }
            }), t.notify(i)
        }), t
    }, UTUserService.prototype.requestUserInfo = function requestUserInfo() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return accessobjects.User.getUserInfo(s).observe(this, function _onRequestUserInfoComplete(s, data) {
            if (s.unobserve(this), i.success = data.success, i.status = data.status, data.success) {
                var o = this.getUser();
                repositories.Item.add(data.response.activeItems), data.response.currencies.forEach(function (t) {
                    o.setCurrency(t.type, t.amount)
                }), o.setTradeAccess(data.response.tradeAccess), o.setNumUnopenedPacks(data.response.unopenedPacks)
            }
            t.notify(i)
        }), t
    }, UTUserService.prototype.requestMassInfo = function requestMassInfo() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return accessobjects.User.getMassInfo(s).observe(this, function _onRequestMassInfoComplete(s, data) {
            if (s.unobserve(this), i.success = data.success, i.status = data.status, i.data = {onboardingState: data.response.onboardingState}, data.success) {
                var o = this.getUser();
                repositories.Item.add(data.response.activeItems), repositories.Squad.set(o.selectedPersona, data.response.activeSquad), services.Squad.setActiveSquadId(data.response.activeSquad.getId()), data.response.currencies.forEach(function (t) {
                    o.setCurrency(t.type, t.amount)
                }), data.response.dailyGift && repositories.Message.setDailyGift(data.response.dailyGift), data.response.pileSizes.forEach(function (t) {
                    switch (t.key) {
                        case enums.ItemPileLimitKey.TRANSFER:
                            repositories.Item.setPileSize(enums.FUTItemPile.TRANSFER, t.value);
                            break;
                        case enums.ItemPileLimitKey.INBOX:
                            repositories.Item.setPileSize(enums.FUTItemPile.INBOX, t.value);
                            break;
                        case enums.ItemPileLimitKey.SQUADS:
                            services.Squad.setMaxSquads(t.value);
                            break;
                        case enums.ItemPileLimitKey.AUCTIONS:
                            this.maxAllowedAuctions = t.value
                    }
                }), gSettingsModel.setConfigs(data.response.settings), o.setTradeAccess(data.response.tradeAccess), repositories.Item.setUnassignedItems(data.response.unassignedItems), o.setNumUnopenedPacks(data.response.unopenedPacks), o.hasPlayerPicksPending = data.response.playerPicksPending
            }
            t.notify(i)
        }), t
    }, new UTUserService
}(),NamespaceManager.Register("services"),services.Item = function () {
    function UTItemService() {
    }

    return UTItemService.prototype.requestItemByDefId = function requestItemByDefId(t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse, o = services.Authentication;
        return accessobjects.Item.getItemDataByDefId(o, t).observe(this, function _onGetItemDataByDefIdComplete(t, data) {
            t.unobserve(this), s.success = data.success, s.status = data.status, s.data = {item: data.response.item}, i.notify(s)
        }), i
    }, UTItemService.prototype.requestItemsById = function requestItemsById(t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse, o = services.Authentication;
        return utils.Debug.Assert(Array.isArray(t) || utils.JS.isNumber(t), "Expected a numeric item ID or an array of numeric item IDs."), accessobjects.Item.getItemDataById(o, utils.JS.valToArray(t)).observe(this, function _onRequestItemsComplete(t, data) {
            t.unobserve(this), s.success = data.success, s.status = data.status, s.data = {items: data.response.items}, i.notify(s)
        }), i
    }, UTItemService.prototype.requestPendingPlayerPickItemSelection = function requestPendingPlayerPickItemSelection() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return accessobjects.Item.getItemsPendingSelection(s).observe(this, function _onRequestPendingPlayerPickItemSelectionComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, i.data = {items: data.response.items}, i.data.items.forEach(function (t) {
                t.contract = 7
            }, this), t.notify(i)
        }), t
    }, UTItemService.prototype.requestTransferItems = function requestTransferItems() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication
        ;
        return repositories.Item.isDirty(enums.FUTItemPile.TRANSFER) ? accessobjects.Item.getTransferPile(s).observe(this, function _onGetTransferPileComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, i.data = {items: data.response.items}, data.success && (repositories.Item.setTransferItems(data.response.items), repositories.Item.setCacheTimestamp(enums.FUTItemPile.TRANSFER, Date.now(), data.maxAge > 0 ? data.maxAge : null)), t.notify(i)
        }) : (i.success = !0, i.status = enums.HTTPStatusCode.NOT_MODIFIED, i.data = {items: repositories.Item.getTransferItems()}, t.notify(i)), t
    }, UTItemService.prototype.requestUnassignedItems = function requestUnassignedItems() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return repositories.Item.isDirty(enums.FUTItemPile.PURCHASED) ? accessobjects.Item.getUnassignedPile(s).observe(this, function _onGetUnassignedComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, i.data = {items: data.response.items}, data.success && (repositories.Item.setUnassignedItems(data.response.items), repositories.Item.setCacheTimestamp(enums.FUTItemPile.PURCHASED, Date.now(), data.maxAge > 0 ? data.maxAge : null)), t.notify(i)
        }) : (i.success = !0, i.status = enums.HTTPStatusCode.NOT_MODIFIED, i.data = {items: repositories.Item.getUnassignedItems()}, t.notify(i)), t
    }, UTItemService.prototype.requestWatchedItems = function requestWatchedItems() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return repositories.Item.isDirty(enums.FUTItemPile.INBOX) ? accessobjects.Item.getWatchPile(s).observe(this, function _onGetWatchPileComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, i.data = {items: data.response.items}, data.success && (repositories.Item.setWatchedItems(data.response.items), repositories.Item.setCacheTimestamp(enums.FUTItemPile.INBOX, Date.now(), data.maxAge > 0 ? data.maxAge : null)), t.notify(i)
        }) : (i.success = !0, i.status = enums.HTTPStatusCode.NOT_MODIFIED, i.data = {items: repositories.Item.getWatchedItems()}, t.notify(i)), t
    }, UTItemService.prototype.searchConceptItems = function searchConceptItems(t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse, o = services.Authentication;
        return accessobjects.Item.searchConceptItems(o, t).observe(this, function _onSearchConceptItemsComplete(t, data) {
            t.unobserve(this), s.success = data.success, s.status = data.status, s.data = {
                items: data.response.items,
                endOfList: data.response.endOfList
            }, i.notify(s)
        }), i
    }, UTItemService.prototype.confirmPlayerPickItemSelection = function confirmPlayerPickItemSelection(item) {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return accessobjects.Item.confirmPlayerPickItemSelection(s, item).observe(this, function _onConfirmPlayerPickItemSelectionComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, i.data = {items: data.response.items}, i.data.items.forEach(function (item) {
                repositories.Item.add(item)
            }, this), services.User.getUser().hasPlayerPicksPending = !1, t.notify(i)
        }), t
    }, UTItemService.prototype.move = function move(t, i) {
        function _onMoveSuccess(sender, t, m) {
            function _cleanupItem(item) {
                if (this._removeItems(item), o.data.itemIds.indexOf(item.id) >= 0) {
                    _ || i !== enums.FUTItemPile.CLUB && item.pile !== enums.FUTItemPile.CLUB || (_ = !0);
                    var t = utils.JS.find(u, function (d) {
                        return item.duplicateId === d.id
                    });
                    t && (o.data.clubDuplicates.push(t), repositories.Item.add(t)), item.clearAuction(), i === enums.FUTItemPile.CLUB ? this._replaceItemInConceptSquads(item) : item.pile === enums.FUTItemPile.CLUB && repositories.Squad.removeItemsFromSquads(item), item.pile = i, repositories.Item.add(item)
                } else p.length > 0 && i === enums.FUTItemPile.TRANSFER && (_ = !0)
            }

            sender.clearListenersByScope(this);
            var _ = !1;
            o.data.itemIds = m.reduce(function (t, response) {
                return response.itemData.forEach(function (i) {
                    i.success && t.push(i.id)
                }), t
            }, []), h.forEach(_cleanupItem, this), p.forEach(_cleanupItem, this), _ && repositories.Item.setDirty(), l.forEach(function (data) {
                data.duplicates.forEach(function (duplicate) {
                    duplicate.duplicateId = data.item
                })
            }), o.success = !0, s.notify(o), getDefaultDispatcher().notify(enums.Notification.ITEM_MOVE, this, o.data)
        }

        function _onMoveFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                o.status = error.getCode(), s.notify(o)
            }.bind(this))
        }

        function _runMoveDelegate() {
            if (0 === h.length && 0 === p.length) return s.notify(o), s;
            var t = [];
            h.length > 0 && t.push(new communication.MoveItemDelegate(h, i, !1)), p.length > 0 && t.push(new communication.MoveItemDelegate(p, i, !0));
            var l = new utils.DelegateChain(t, !0);
            l.addListener(utils.DelegateChain.SUCCESS, this, _onMoveSuccess), l.addListener(utils.DelegateChain.FAIL, this, _onMoveFail), l.execute()
        }

        var s = new UTObservable, o = new transferobjects.ServiceResponse, l = new UTHashTable({}), u = [], h = [],
            p = [];
        if (o.data = {
                itemIds: [],
                clubDuplicates: []
            }, (t = utils.JS.valToArray(t)).length < 1) return utils.Debug.Assert(!1, "[services.Item::move] Expected at least one item."), o.success = !0, s.notify(o), s;
        if (repositories.Item.isPileFull(i)) {
            var m = i === enums.FUTItemPile.TRANSFER ? utils.PopupManager.Alerts.TRANSFER_LIST_FULL : utils.PopupManager.Alerts.DESTINATION_FULL;
            return utils.PopupManager.ShowAlert(m, function () {
                s.notify(o)
            }), s
        }
        if (t.forEach(function (item) {
                if (i !== enums.FUTItemPile.TRANSFER || !item.untradeable) {
                    if (i === enums.FUTItemPile.CLUB && !item.isConsumable()) {
                        if (l.has(item.resourceId)) return void l.get(item.resourceId).duplicates.push(item);
                        l.set(item.resourceId, {item: item.id, duplicates: []})
                    }
                    item.isClubConsumable() ? p.push(item) : h.push(item)
                }
            }), i === enums.FUTItemPile.CLUB) {
            var _ = "", length = h.length, g = h.reduce(function (t, item) {
                return item.isDuplicate() && t.push(item.duplicateId), t
            }, []);
            g.length > 0 ? this.requestItemsById(g).observe(this, function (t, response) {
                t.unobserve(this), response.success ? (response.data.items.forEach(function (d) {
                    for (var t = length, i = []; t-- > 0;) {
                        var s = h[t];
                        s.duplicateId === d.id && (d.untradeable || d.isInjured() || d.isSuspended() ? 1 === length && (_ = d.untradeable ? "popup.error.tradepile.untradeableduplicate" : "popup.error.item.InjuredOrSuspended") : (d.duplicateId = s.id, d.pile = s.pile, u.push(d), i.push(s)))
                    }
                    h = i
                }), utils.JS.isEmpty(_) ? _runMoveDelegate.call(this) : (services.Notification.queue([services.Localization.localize(_), enums.UINotificationType.NEGATIVE]), s.notify(o))) : (services.Notification.queue([services.Localization.localize("popup.error.activesquad.SwapPlayerFailed"), enums.UINotificationType.NEGATIVE]), o.status = response.status, s.notify(o))
            }) : _runMoveDelegate.call(this)
        } else _runMoveDelegate.call(this);
        return s
    }, UTItemService.prototype.relistExpiredAuctions = function relistExpiredAuctions() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return accessobjects.Item.relistExpiredAuctions(s).observe(this, function _onRelistAllComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, data.success ? repositories.Item.setDirty(enums.FUTItemPile.TRANSFER) : data.status === enums.HTTPStatusCode.LOCKED_TRANSFER_MARKET && services.User.getUser().setTradeAccess(enums.TradeAccessLevel.BLACKLIST), t.notify(i)
        }), t
    }, UTItemService.prototype.clearSoldItems = function clearSoldItems(item) {
        function _onClearSoldSuccess(sender) {
            sender.clearListenersByScope(this), i.success = !0, item ? (this._removeItems(item), i.data.itemIds = [item.id], t.notify(i), getDefaultDispatcher().notify(enums.Notification.ITEM_CLEARSOLD, this, i.data)) : (repositories.Item.setDirty(enums.FUTItemPile.TRANSFER), this.requestTransferItems().observe(this, function (o, response) {
                o.unobserve(this);
                var l = s.reduce(function (t, item) {
                    return !!utils.JS.find(response.data.items, function (a) {
                        return item.compareTo(a)
                    }) || t.push(item), t
                }, []);
                i.data.itemIds = l.map(function (item) {
                    return item.id
                }), t.notify(i), getDefaultDispatcher().notify(enums.Notification.ITEM_CLEARSOLD, this, i.data)
            }))
        }

        function _onClearSoldFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                i.status = error.getCode(), t.notify(i)
            }.bind(this))
        }

        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = []
        ;
        if (i.data = {itemIds: []}, item) {
            utils.Debug.Assert(item.getAuctionData().isValid(), "Expected a valid auction.");
            var o = new communication.RemoveSoldItemDelegate(item.getAuctionData().tradeId);
            o.addListener(communication.BaseDelegate.SUCCESS, this, _onClearSoldSuccess), o.addListener(communication.BaseDelegate.FAIL, this, _onClearSoldFail), o.useClickShield(!0), o.send()
        } else this.requestTransferItems().observe(this, function (t, response) {
            t.unobserve(this), s = response.data.items;
            var i = new communication.RemoveSoldItemDelegate;
            i.addListener(communication.BaseDelegate.SUCCESS, this, _onClearSoldSuccess), i.addListener(communication.BaseDelegate.FAIL, this, _onClearSoldFail), i.useClickShield(!0), i.send()
        });
        return t
    }, UTItemService.prototype.discard = function discard(t) {
        function _onDiscardComplete(s, data) {
            if (s.unobserve(this), o.success = data.success, o.status = data.status, o.data.itemIds = data.response.itemIds || [], i.notify(o), data.success) {
                data.response.totalCredits && services.User.getUser().setCurrency(enums.Currency.COINS, data.response.totalCredits);
                var l = [];
                Array.isArray(t) ? l = t.filter(function (item) {
                    return item.pile === enums.FUTItemPile.CLUB
                }) : t.pile === enums.FUTItemPile.CLUB && l.push(t), l.length > 0 && repositories.Squad.removeItemsFromSquads(l), this._removeItems(t), getDefaultDispatcher().notify(enums.Notification.ITEM_DISCARD, this, o.data)
            }
        }

        var i = new UTObservable, s = services.Authentication, o = new transferobjects.ServiceResponse;
        return o.data = {itemIds: []}, Array.isArray(t) && 0 === (t = t.filter(function (item) {
            return item.isDiscardable()
        })).length ? (o.status = enums.HTTPStatusCode.BAD_REQUEST, i.notify(o), i) : (!Array.isArray(t) && t.isClubConsumable() ? accessobjects.Item.discardByResourceId(s, t).observe(this, _onDiscardComplete) : accessobjects.Item.discardByItemId(s, t).observe(this, _onDiscardComplete), i)
    }, UTItemService.prototype.combineLoans = function combineLoans(item) {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return item.isDuplicateLoanPlayer() ? accessobjects.Item.discardByItemId(s, item).observe(this, function _onCombineComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, i.data = {itemIds: data.response.itemIds || []}, t.notify(i), data.success && (this.requestItemsById(item.duplicateId).observe(this, function (t, response) {
                response.data.items.length > 0 && repositories.Item.update(response.data.items[0])
            }), this._removeItems(item), getDefaultDispatcher().notify(enums.Notification.ITEM_DISCARD, this, i.data))
        }) : (utils.Debug.Assert(!1, "Attempted to combine loans from a an item that isn't a duplicate loaner."), i.success = !1, i.status = enums.HTTPStatusCode.BAD_REQUEST, t.notify(i)), t
    }, UTItemService.prototype.redeem = function redeem(item) {
        var t = new UTObservable, i = new transferobjects.ServiceResponse, s = services.Authentication;
        return i.data = {itemIds: []}, item.isMiscItem() ? (accessobjects.Item.redeemUnlockable(s, item).observe(this, function _onRedeemComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, data.success && (services.Objectives.update(data.response.objectiveUpdates), this._removeItems(item), item.isFreeCoins() ? services.User.requestCurrencies() : item.isFreePack() ? services.User.getUser().incrementNumUnopenedPacks() : item.isDraftToken() ? services.User.requestCurrencies() : item.isPlayerPickItem() && (services.User.getUser().hasPlayerPicksPending = !0, data.response.playerPicks.forEach(function (t) {
                t.contract = 7
            }, this)), i.data.itemIds = data.response.itemIds, i.data.isCoins = item.isFreeCoins(), i.data.isPack = item.isFreePack(), i.data.isDraftToken = item.isDraftToken(), i.data.isPlayerPickItem = item.isPlayerPickItem(), i.data.playerPicks = data.response.playerPicks), t.notify(i), data.success && getDefaultDispatcher().notify(enums.Notification.ITEM_REDEEM, this, i.data)
        }), t) : (i.status = enums.HTTPStatusCode.BAD_REQUEST, t.notify(i), t)
    }, UTItemService.prototype.list = function list(item, t, i, duration) {
        function _onListItemComplete(t, data) {
            t.unobserve(this), o.success = data.success, o.status = data.status, data.success ? (o.data.itemIds.push(u),
                item.isStack() || item.id !== u ? (s.notify(o), getDefaultDispatcher().notify(enums.Notification.ITEM_LIST, this, o.data)) : (item.getAuctionData().tradeId = data.response.auctionIds[0], this.refreshAuctions(item).observe(this, function (t, response) {
                    t.unobserve(this), s.notify(o), getDefaultDispatcher().notify(enums.Notification.ITEM_LIST, this, o.data)
                }))) : (data.status === enums.HTTPStatusCode.LOCKED_TRANSFER_MARKET && services.User.getUser().setTradeAccess(enums.TradeAccessLevel.BLACKLIST), s.notify(o))
        }

        function _runListDelegate(id) {
            accessobjects.Item.listItem(l, id, t, i, duration).observe(this, _onListItemComplete)
        }

        var s = new UTObservable, o = new transferobjects.ServiceResponse, l = services.Authentication, u = 0;
        return o.data = {itemIds: []}, item.pile !== enums.FUTItemPile.TRANSFER ? this.move(item, enums.FUTItemPile.TRANSFER).observe(this, function (t, response) {
            t.unobserve(this), response.success && response.data.itemIds.length > 0 ? (u = response.data.itemIds[0], _runListDelegate.call(this, u)) : (o.status = response.status, s.notify(o))
        }) : (u = item.id, _runListDelegate.call(this, u)), s
    }, UTItemService.prototype.requestMarketData = function requestMarketData(t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse, o = services.Authentication, l = [];
        if (s.data = {itemIds: []}, 0 === (l = Array.isArray(t) ? t.reduce(function (t, item) {
                var i = item.getAuctionData(),
                    s = !i.isValid() || i.isClosedTrade() && !i.tradeOwner || i.isExpired() && i.tradeOwner,
                    o = item.isValid() && !item.concept && !item.untradeable;
                return s && o && t.push(item), t
            }, []) : [t]).length) s.success = !0, s.status = enums.HTTPStatusCode.NOT_MODIFIED, i.notify(s); else {
            var u = l.map(function (item) {
                return item.id
            });
            accessobjects.Item.getItemMarketDataById(o, u).observe(this, function _onGetItemMarketDataByIdComplete(t, data) {
                t.unobserve(this), s.success = data.success, s.status = data.status, data.success ? (gSettingsModel.enableService(models.SettingsModel.MARKET_DATA_ENABLED), data.response.marketData.forEach(function (t) {
                    var item = utils.JS.find(l, function (i) {
                        return i.id === t.itemId
                    });
                    s.data.itemIds.push(t.itemId), item && item.setItemPriceLimits(t.priceLimits)
                }), s.data.itemIds = data.response.marketData.map(function (d) {
                    return d.itemId
                })) : data.status === enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR && gSettingsModel.isMarketDataEnabled() && gSettingsModel.disableService(models.SettingsModel.MARKET_DATA_ENABLED), i.notify(s)
            })
        }
        return i
    }, UTItemService.prototype.refreshAuctions = function refreshAuctions(t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse, o = services.Authentication,
            l = utils.JS.valToArray(t);
        return s.data = {itemIds: []}, 0 === (l = l.filter(function (item) {
            return item.getAuctionData().isValid()
        })).length ? (s.status = enums.HTTPStatusCode.BAD_REQUEST, i.notify(s), i) : (accessobjects.Item.getAuctionData(o, l).observe(this, function _onGetAuctionDataComplete(t, data) {
            if (t.unobserve(this), s.success = data.success, s.status = data.status, data.success) {
                var o = services.User.getUser();
                data.response.currencies.forEach(function (t) {
                    o.setCurrency(t.type, t.amount)
                }), l.forEach(function (item) {
                    var t = item.getAuctionData(), i = utils.JS.find(data.response.items, function (a) {
                        return a.getAuctionData().compareTo(t)
                    });
                    i && (t.update(i.getAuctionData()), 0 !== i.id && (item.id = i.id), item.duplicateId = i.duplicateId, t.isClosedTrade() && t.isHighestBid() ? item.pile = enums.FUTItemPile.INBOX : t.isBought() && (item.pile = enums.FUTItemPile.PURCHASED)), s.data.itemIds.push(item.id)
                }, this)
            } else data.status === enums.HTTPStatusCode.LOCKED_TRANSFER_MARKET && services.User.getUser().setTradeAccess(enums.TradeAccessLevel.BLACKLIST);
            i.notify(s)
        }), i)
    }, UTItemService.prototype.applyTo = function applyTo(t, i) {
        function _onApplyComplete(l, data) {
            l.unobserve(this), o.success = data.success, o.status = data.status, data.success && (services.Objectives.update(data.response.objectiveUpdates), data.response.items.forEach(function (item) {
                var t = utils.JS.find(i, function (c) {
                    return c.id === item.id
                });
                if (t) {
                    if (t.contract = item.contract, t.leagueId = item.leagueId, t.isPlayer()) {
                        t.fitness = item.fitness, t.injuryGames = item.injuryGames, t.injuryType = item.injuryType, t.playStyle = item.playStyle,
                            t.preferredPosition = item.preferredPosition;
                        var s = item.getAppliedTrainingItem();
                        s && t.setTrainingItem(s)
                    }
                    repositories.Item.update(t), t.onDataUpdated.notify(t)
                }
                o.data.itemIds.push(item.id)
            }, this), this._removeItems(t), getDefaultDispatcher().notify(enums.Notification.ITEM_APPLY, this, o.data)), s.notify(o)
        }

        function _performApply() {
            if (!((i = Array.isArray(i) ? i.filter(t.canApplyTo, t) : t.canApplyTo(i) ? [i] : []).length > 0)) return utils.Debug.Assert(!1, "Unable to apply item."), void s.notify(o);
            utils.Debug.Assert(t.isTeamFitness() || 1 === i.length, "Cannot apply single-use consumables to multiple items. Will only apply to one."), !t.isTeamFitness() && i.length > 1 && (i = i.slice(0, 1)), accessobjects.Item.applyConsumableTo(l, t, i).observe(this, _onApplyComplete)
        }

        var s = new UTObservable, o = new transferobjects.ServiceResponse, l = services.Authentication;
        return o.data = {itemIds: []}, t.isClubConsumable() ? _performApply.call(this) : this.move(t, enums.FUTItemPile.CLUB).observe(this, function (t, response) {
            t.unobserve(this), response.success ? _performApply.call(this) : (services.Notification.queue([services.Localization.localize("notification.item.unableToApplyConsumable"), enums.UINotificationType.NEGATIVE]), o.status = response.status, s.notify(o))
        }), s
    }, UTItemService.prototype.target = function target(t) {
        var i = new UTObservable, s = services.Authentication, o = new transferobjects.ServiceResponse, l = [];
        if (o.data = {itemIds: []}, Array.isArray(t)) l = t.filter(function (item) {
            var t = item.getAuctionData();
            return t.isValid() && !t.tradeOwner
        }); else {
            var u = t.getAuctionData();
            u.isValid() && !u.tradeOwner && l.push(t)
        }
        return 0 === l.length ? (utils.Debug.Assert(!1, "No valid auctions to watch."), i.notify(o), i) : (accessobjects.Item.watchItems(s, l).observe(this, function _onWatchComplete(t, data) {
            t.unobserve(this), o.success = data.success, o.status = data.status, data.success ? (o.data.itemIds = data.response.itemIds, l.forEach(function (item) {
                item.getAuctionData().watched = !0, repositories.Item.add(item)
            }), getDefaultDispatcher().notify(enums.Notification.ITEM_WATCH, this, o.data)) : data.status === enums.HTTPStatusCode.LOCKED_TRANSFER_MARKET && services.User.getUser().setTradeAccess(enums.TradeAccessLevel.BLACKLIST), i.notify(o)
        }), i)
    }, UTItemService.prototype.untarget = function untarget(t) {
        var i = new UTObservable, s = services.Authentication, o = new transferobjects.ServiceResponse, l = [];
        return o.data = {itemIds: []}, Array.isArray(t) ? l = t.filter(function (item) {
            return item.getAuctionData().watched
        }) : t.getAuctionData().watched && l.push(t), 0 === l.length ? (utils.Debug.Assert(!1, "No watched auctions to unwatch."), i.notify(o), i) : (accessobjects.Item.unwatchItems(s, l).observe(this, function _onUnwatchComplete(t, data) {
            t.unobserve(this), o.success = data.success, o.status = data.status, data.success ? (repositories.Item.setDirty(enums.FUTItemPile.INBOX), o.data.itemIds = data.response.itemIds, l.forEach(function (item) {
                this._removeItems(item), item.getAuctionData().watched = !1
            }, this), getDefaultDispatcher().notify(enums.Notification.ITEM_UNWATCH, this, o.data)) : data.status === enums.HTTPStatusCode.LOCKED_TRANSFER_MARKET && services.User.getUser().setTradeAccess(enums.TradeAccessLevel.BLACKLIST), i.notify(o)
        }), i)
    }, UTItemService.prototype.activate = function activate(item, t) {
        function _onActivateComplete(t, data) {
            var o, l;
            if (t.unobserve(this), s.success = data.success, data.success) l = (o = services.User.getUser().getSelectedPersona()) ? o.getCurrentClub() : null, services.Notification.queue([services.Localization.localize("notification.item.setAsActive"), enums.UINotificationType.NEUTRAL]), repositories.Item.setActiveItem(item), l && item.isBadge() && l.setAssetId(item.getStaticData().assetId), s.status = enums.HTTPStatusCode.OK, s.data.itemIds.push(item.id), getDefaultDispatcher().notify(enums.Notification.ITEM_ACTIVATE, this, s.data); else if (services.Notification.queue([services.Localization.localize("infopanel.label.makeActive"), enums.UINotificationType.NEGATIVE]), data.error) {
                if (s.status = data.error.getCode(), s.status !== enums.HTTPStatusCode.PERMISSION_DENIED) return void NetworkErrorManager.handle(data.error, !1, function () {
                    i.notify(s)
                });
                services.Notification.queue([services.Localization.localize("popup.error.NoSuchCardTitle"), enums.UINotificationType.NEGATIVE])
            }
            i.notify(s)
        }

        var i = new UTObservable, s = new transferobjects.ServiceResponse;
        return s.data = {itemIds: []}, item.pile !== enums.FUTItemPile.CLUB ? this.move(item, enums.FUTItemPile.CLUB).observe(this, function (o, response) {
            o.unobserve(this), response.success ? item.activate(t).observe(this, _onActivateComplete) : (services.Notification.queue([services.Localization.localize("infopanel.label.makeActive"), enums.UINotificationType.NEGATIVE]), s.status = response.status, i.notify(s))
        }) : item.activate(t).observe(this, _onActivateComplete), i
    }, UTItemService.prototype.bid = function bid(item, t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse, o = services.Authentication;
        return s.data = {itemIds: []}, accessobjects.Item.bid(o, item, t).observe(this, function _onBidComplete(t, data) {
            t.unobserve(this);
            var o = item.getAuctionData();
            if (s.success = data.success, s.status = data.status, data.success) {
                var l = o.watched;
                services.Objectives.update(data.response.objectiveUpdates), item.update(data.response.items[0]), l && o.isBought() && repositories.Item.setDirty(enums.FUTItemPile.INBOX);
                var u = services.User.getUser();
                data.response.currencies.forEach(function (t) {
                    u.setCurrency(t.type, t.amount)
                }), s.data.itemIds = [item.id], repositories.Item.add(item), getDefaultDispatcher().notify(enums.Notification.ITEM_BID, this, s.data)
            } else o.setStale(!0), data.status === enums.HTTPStatusCode.LOCKED_TRANSFER_MARKET ? services.User.getUser().setTradeAccess(enums.TradeAccessLevel.BLACKLIST) : data.status === enums.HTTPStatusCode.PERMISSION_DENIED && TelemetryManager.trackEvent(TelemetryManager.Sections.AUCTIONS, TelemetryManager.Categories.ERROR, "(" + data.status + ") Unable to bid.");
            i.notify(s)
        }), i
    }, UTItemService.prototype._replaceItemInConceptSquads = function _replaceItemInConceptSquads(item) {
        item.isPlayer() && repositories.Squad.getSquads().observe(this, function (t, data) {
            var i = repositories.SBC.getCachedSets().reduce(function (t, set) {
                return set.challenges.length > 0 && set.challenges.forEach(function (i) {
                    i.squad && t.push(i.squad)
                }, this), t
            }, []);
            data.concat(i).forEach(function (t) {
                var index = t.containsDreamItem(item);
                index >= 0 && t.addItemToSlot(index, item)
            }, this)
        })
    }, UTItemService.prototype._removeItems = function _removeItems(t) {
        function _checkForConsumables(item) {
            item.isClubConsumable() && item.decreaseStackCount()
        }

        Array.isArray(t) ? t.forEach(function (t) {
            _checkForConsumables.call(this, t)
        }, this) : _checkForConsumables.call(this, t), repositories.Item.remove(t)
    }, new UTItemService
}(),utils.JS.inherits(UTLeaderboardOptionDTO, UTObject),utils.JS.inherits(UTLeaderboardEntryDTO, UTObject),utils.JS.inherits(UTLeaderboardPermutationDTO, UTObject),NamespaceManager.Register("accessobjects"),accessobjects.Leaderboards = function () {
    function UTLeaderboardsDAO() {
        UTObject.call(this), this._authDelegate = null, Object.defineProperty(this, "_authDelegate", {
            writable: !0,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTLeaderboardsDAO, UTObject), UTLeaderboardsDAO.prototype.setAuthDelegate = function setAuthDelegate(t) {
        t && t.conforms(interfaces.AuthDelegate) && (this._authDelegate = t)
    }, UTLeaderboardsDAO.prototype._triggerUnauthorizedResponse = function _triggerUnauthorizedResponse(t) {
        var i = new transferobjects.FUTHttpResponse;
        i.status = enums.HTTPStatusCode.UNAUTHORIZED, t.notify(i)
    }, UTLeaderboardsDAO.prototype.getOptions = function getOptions() {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t;
        var i = new UTUtasHttpRequest(this._authDelegate);
        return i.setPath("/ut/game/" + GAME_NAME + "/leaderboards/options"), i.observe(this, function _onGetOptionsComplete(i, data) {
            i.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response),
                selection = new UTLeaderboardPermutationDTO;
            utils.JS.assignPropertyValues(data, s), data.success && o && utils.JS.isObject(data.response.selection) && (selection.category = data.response.selection.category, selection.period = data.response.selection.period,
                selection.view = data.response.selection.view), s.response = {
                options: o && data.response.options.length > 0 ? utils.JS.flattenArray(data.response.options.map(function (t) {
                    var i = [];
                    return t[t.id].forEach(function (s) {
                        var o = new UTLeaderboardOptionDTO(s);
                        o.groupId = t.id, i.push(o)
                    }, this), i
                })) : [], selection: selection
            }, t.notify(s)
        }), i.send(), t
    }, UTLeaderboardsDAO.prototype.getLeaderboardByPermutation = function getLeaderboardByPermutation(t) {
        var i = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(i), i;
        var s = new UTUtasHttpRequest(this._authDelegate);
        return s.setPath("/ut/game/" + GAME_NAME + "/leaderboards/period/" + t.period + "/category/" + t.category + "/view/" + t.view), s.observe(this, function _onGetLeaderboardComplete(s, data) {
            s.unobserve(this);
            var o = new transferobjects.FUTHttpResponse, l = utils.JS.isObject(data.response);
            utils.JS.assignPropertyValues(data, o), o.response = {
                entries: l && Array.isArray(data.response.entries) && data.response.entries.length > 0 ? data.response.entries.map(function (i) {
                    var s = new UTLeaderboardEntryDTO(i);
                    return s.category = t.category, s
                }) : []
            }, i.notify(o)
        }), s.send(), i
    }, UTLeaderboardsDAO.prototype.getUserStatsByPeriod = function getUserStatsByPeriod(t) {
        var i = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(i), i;
        var s = new UTUtasHttpRequest(this._authDelegate), o = this._authDelegate.getCurrentUser().getSelectedPersona(),
            l = o.id;
        return s.setPath("/ut/game/" + GAME_NAME + "/leaderboards/period/" + t + "/user/" + l), s.observe(this, function _onGetUserStatsComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            if (s.success = data.success, s.status = data.status, s.response = {entries: []}, s.success && Array.isArray(data.response.category)) {
                var l = o.getCurrentClub();
                s.response.entries = data.response.category.map(function (result) {
                    return new UTLeaderboardEntryDTO({
                        badge: l.assetId,
                        category: result.id,
                        clubName: l.name,
                        est: l.established,
                        persona: o.name,
                        rank: 0,
                        score: {value: result.score.value},
                        teamId: 0
                    })
                })
            }
            i.notify(s)
        }), s.send(), i
    }, new UTLeaderboardsDAO
}(),utils.JS.inherits(UTLeaderboardEntryRepository, UTHashTable),UTLeaderboardEntryRepository.prototype.reset = function reset() {
    this.clear(), this._expiryTimestamps.clear()
},UTLeaderboardEntryRepository.prototype.setEntriesByPermutation = function setEntriesByPermutation(t, entries) {
    var key = this._generateUniqueIdFromPermutation(t);
    this.remove(key), this.set(key, entries)
},UTLeaderboardEntryRepository.prototype.getEntriesByPermutation = function getEntriesByPermutation(t) {
    var key = this._generateUniqueIdFromPermutation(t), entries = this.get(key);
    return Array.isArray(entries) ? entries : []
},UTLeaderboardEntryRepository.prototype.isEmpty = function isEmpty(t) {
    if (utils.JS.isValid(t)) {
        var key = this._generateUniqueIdFromPermutation(t), entries = this.get(key);
        return !Array.isArray(entries) || entries.length < 1
    }
    return this.values().length < 1
},UTLeaderboardEntryRepository.prototype.isCacheExpired = function isCacheExpired(t) {
    var key = this._generateUniqueIdFromPermutation(t);
    return (this._expiryTimestamps.get(key) || 0) < Date.now()
},UTLeaderboardEntryRepository.prototype.setCacheTimestamp = function setCacheTimestamp(t, timestamp, i) {
    var key = this._generateUniqueIdFromPermutation(t);
    this._expiryTimestamps.set(key, timestamp + (utils.JS.isNumber(i) ? i * MS_PER_SECOND : 3e5))
},UTLeaderboardEntryRepository.prototype._generateUniqueIdFromPermutation = function _generateUniqueIdFromPermutation(t) {
    return t.category + ":" + t.view + ":" + t.period
},NamespaceManager.Register("services"),services.Leaderboards = function () {
    function UTLeaderboardsService() {
        UTObject.call(this), this._leaderboardEntries = new UTLeaderboardEntryRepository, Object.defineProperty(this, "_leaderboardEntries", {
            writable: !1,
            enumerable: !1
        }), this._userEntries = new UTLeaderboardEntryRepository, Object.defineProperty(this, "_userEntries", {
            writable: !1,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTLeaderboardsService, UTObject), UTLeaderboardsService.prototype.requestOptions = function requestOptions() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse
        ;
        return accessobjects.Leaderboards.getOptions().observe(this, function _onGetOptionsComplete(i, data) {
            i.unobserve(this), t.status = data.status, t.success = data.success, t.data = {
                options: data.response.options,
                selection: data.response.selection
            }, event.notify(t)
        }), event
    }, UTLeaderboardsService.prototype.requestLeaderboardByPermutation = function requestLeaderboardByPermutation(t) {
        var event = new UTObservable, i = new transferobjects.ServiceResponse;
        return this._leaderboardEntries.isEmpty(t) || this._leaderboardEntries.isCacheExpired(t) ? (accessobjects.Leaderboards.getLeaderboardByPermutation(t).observe(this, function _onGetLeaderboardComplete(s, data) {
            s.unobserve(this), i.status = data.status, i.success = data.success, i.data = {entries: []}, data.success && Array.isArray(data.response.entries) && (i.data.entries = data.response.entries.sort(function (a, b) {
                return utils.JS.sortCompare(a.rank, b.rank)
            }), this._leaderboardEntries.setEntriesByPermutation(t, i.data.entries), this._leaderboardEntries.setCacheTimestamp(t, Date.now())), event.notify(i)
        }), event) : (i.success = !0, i.status = enums.HTTPStatusCode.NOT_MODIFIED, i.data = {entries: this._leaderboardEntries.getEntriesByPermutation(t)}, event.notify(i), event)
    }, UTLeaderboardsService.prototype.requestUserStatsByPermutation = function requestUserStatsByPermutation(t) {
        var event = new UTObservable, i = new transferobjects.ServiceResponse;
        if (!this._userEntries.isEmpty(t) && !this._userEntries.isCacheExpired(t)) {
            var entries = this._userEntries.getEntriesByPermutation(t);
            return i.success = !0, i.status = enums.HTTPStatusCode.NOT_MODIFIED, i.data = {
                entries: entries,
                current: utils.JS.find(entries, function (i) {
                    return i.category === t.category
                })
            }, event.notify(i), event
        }
        return accessobjects.Leaderboards.getUserStatsByPeriod(t.period).observe(this, function _onGetUserStatsComplete(s, data) {
            s.unobserve(this), i.status = data.status, i.success = data.success, i.data = {
                entries: [],
                current: null
            }, data.success && Array.isArray(data.response.entries) && (i.data.entries = data.response.entries, i.data.current = utils.JS.find(data.response.entries, function (i) {
                return i.category === t.category
            }), this._userEntries.setEntriesByPermutation(t, data.response.entries), this._userEntries.setCacheTimestamp(t, Date.now(), data.maxAge > 0 ? data.maxAge : null)), event.notify(i)
        }), event
    }, new UTLeaderboardsService
}(),NamespaceManager.Register("valueobjects"),valueobjects.Locale = function UTLocaleVO(region, language, name) {
    this.language = language.toLowerCase() || enums.Language.UNKNOWN, Object.defineProperty(this, "language", {
        writable: !1,
        enumerable: !0
    }), this.region = region.toUpperCase() || enums.Region.UNKNOWN, Object.defineProperty(this, "region", {
        writable: !1,
        enumerable: !0
    }), this.name = name || "", Object.defineProperty(this, "name", {writable: !1, enumerable: !0})
},valueobjects.Locale.prototype.equals = function equals(t) {
    return this.language === t.language && this.region === t.region
},valueobjects.Locale.prototype.toString = function toString() {
    return this.language + "_" + this.region
},valueobjects.Locale.prototype.toBCPString = function toBCPString() {
    return this.language + "-" + this.region
},valueobjects.Locale.prototype.isValid = function isValid() {
    return this.language !== enums.Language.UNKNOWN && this.region !== enums.Region.UNKNOWN
},utils.JS.inherits(UTLocaleFactory, UTObject),UTLocaleFactory.prototype._convertLanguageToSupportedLanguage = function _convertLanguageToSupportedLanguage(language) {
    switch (language) {
        case enums.Language.FRENCH:
            return enums.Language.FRENCH;
        case enums.Language.ITALIAN:
            return enums.Language.ITALIAN;
        case enums.Language.GERMAN:
            return enums.Language.GERMAN;
        case enums.Language.SPANISH:
            return enums.Language.SPANISH;
        case enums.Language.DUTCH:
            return enums.Language.DUTCH;
        case enums.Language.PORTUGUESE:
            return enums.Language.PORTUGUESE;
        case enums.Language.POLISH:
            return enums.Language.POLISH;
        case enums.Language.ARABIC:
            return enums.Language.ARABIC;
        case enums.Language.RUSSIAN:
            return enums.Language.RUSSIAN;
        case enums.Language.TURKISH:
            return enums.Language.TURKISH;
        default:
            return enums.Language.ENGLISH
    }
},
UTLocaleFactory.prototype._convertRegionToSupportedRegion = function _convertRegionToSupportedRegion(region) {
    switch (region) {
        case enums.Region.FRANCE:
            return enums.Region.FRANCE;
        case enums.Region.ITALY:
            return enums.Region.ITALY;
        case enums.Region.GERMANY:
            return enums.Region.GERMANY;
        case enums.Region.SPAIN:
        case enums.Region.MEXICO:
            return enums.Region.SPAIN;
        case enums.Region.NETHERLANDS:
            return enums.Region.NETHERLANDS;
        case enums.Region.BRAZIL:
            return enums.Region.BRAZIL;
        case enums.Region.POLAND:
            return enums.Region.POLAND;
        case enums.Region.SAUDI_ARABIA:
            return enums.Region.SAUDI_ARABIA;
        case enums.Region.RUSSIA:
            return enums.Region.RUSSIA;
        case enums.Region.TURKEY:
            return enums.Region.TURKEY;
        default:
            return enums.Region.USA
    }
},UTLocaleFactory.prototype._getLanguageFromRegion = function _getLanguageFromRegion(region) {
    switch (region) {
        case enums.Region.USA:
            return enums.Language.ENGLISH;
        case enums.Region.FRANCE:
            return enums.Language.FRENCH;
        case enums.Region.ITALY:
            return enums.Language.ITALIAN;
        case enums.Region.GERMANY:
            return enums.Language.GERMAN;
        case enums.Region.SPAIN:
        case enums.Region.MEXICO:
            return enums.Language.SPANISH;
        case enums.Region.NETHERLANDS:
            return enums.Language.DUTCH;
        case enums.Region.BRAZIL:
            return enums.Language.PORTUGUESE;
        case enums.Region.POLAND:
            return enums.Language.POLISH;
        case enums.Region.SAUDI_ARABIA:
            return enums.Language.ARABIC;
        case enums.Region.RUSSIA:
            return enums.Language.RUSSIAN;
        case enums.Region.TURKEY:
            return enums.Language.TURKISH;
        default:
            return enums.Language.ENGLISH
    }
},UTLocaleFactory.prototype._getRegionFromLanguage = function _getRegionFromLanguage(language) {
    switch (language) {
        case enums.Language.ENGLISH:
            return enums.Region.USA;
        case enums.Language.FRENCH:
            return enums.Region.FRANCE;
        case enums.Language.ITALIAN:
            return enums.Region.ITALY;
        case enums.Language.GERMAN:
            return enums.Region.GERMANY;
        case enums.Language.SPANISH:
            return enums.Region.SPAIN;
        case enums.Language.DUTCH:
            return enums.Region.NETHERLANDS;
        case enums.Language.PORTUGUESE:
            return enums.Region.BRAZIL;
        case enums.Language.POLISH:
            return enums.Region.POLAND;
        case enums.Language.ARABIC:
            return enums.Region.SAUDI_ARABIA;
        case enums.Language.RUSSIAN:
            return enums.Region.RUSSIA;
        case enums.Language.TURKISH:
            return enums.Region.TURKEY;
        default:
            return enums.Region.USA
    }
},UTLocaleFactory.prototype._getLanguageNameFromLanguage = function _getLanguageNameFromLanguage(language) {
    switch (language) {
        case enums.Language.ENGLISH:
            return "English";
        case enums.Language.FRENCH:
            return "FranÃ§ais";
        case enums.Language.ITALIAN:
            return "Italiano";
        case enums.Language.GERMAN:
            return "Deutsch";
        case enums.Language.SPANISH:
            return "EspaÃ±ol";
        case enums.Language.DUTCH:
            return "Nederlands";
        case enums.Language.PORTUGUESE:
            return "PortuguÃªs do Brasil";
        case enums.Language.POLISH:
            return "Polski";
        case enums.Language.ARABIC:
            return "Ø§Ù„Ø¹ÙŽØ±ÙŽØ¨ÙÙŠÙŽÙ‘Ø©";
        case enums.Language.RUSSIAN:
            return "Ñ€ÑƒÑÑÐºÐ¸Ð¹ ÑÐ·Ñ‹Ðº";
        case enums.Language.TURKISH:
            return "TÃ¼rkÃ§e";
        default:
            return ""
    }
},UTLocaleFactory.prototype.createLocaleFromLanguage = function createLocaleFromLanguage(language) {
    language = this._convertLanguageToSupportedLanguage(language.toLowerCase());
    var region = this._getRegionFromLanguage(language), t = this._getLanguageNameFromLanguage(language);
    return new valueobjects.Locale(region, language, t)
},UTLocaleFactory.prototype.createLocaleFromRegion = function createLocaleFromRegion(region) {
    region = this._convertRegionToSupportedRegion(region.toUpperCase());
    var language = this._getLanguageFromRegion(region), t = this._getLanguageNameFromLanguage(language);
    return new valueobjects.Locale(region, language, t)
},utils.JS.inherits(UTLocalizationRepository, UTHashTable),NamespaceManager.Register("services"),services.Localization = function () {
    function UTLocalizationService() {
        UTObject.call(this), this.storeLocLoaded = !1, this.localizationEnabled = !0, this._factory = new UTLocaleFactory, this._repository = new UTLocalizationRepository, Object.defineProperty(this, "_repository", {
            writable: !1,
            enumerable: !1
        }), this._locale = this._factory.createLocaleFromLanguage(enums.Language.ENGLISH),
            Object.defineProperty(this, "_locale", {
                writable: !0,
                enumerable: !1
            }), this._supportedLanguages = [enums.Language.ENGLISH, enums.Language.FRENCH, enums.Language.ITALIAN, enums.Language.GERMAN, enums.Language.SPANISH, enums.Language.DUTCH, enums.Language.PORTUGUESE, enums.Language.ARABIC, enums.Language.TURKISH, enums.Language.POLISH, enums.Language.RUSSIAN], Object.defineProperty(this, "_supportedLanguages", {
            writable: !1,
            enumerable: !1
        }), this._rtlLanguages = [enums.Language.ARABIC], Object.defineProperty(this, "_rtlLanguages", {
            writable: !1,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTLocalizationService, UTObject), UTLocalizationService.prototype.setLocale = function setLocale(locale) {
        this._locale = locale
    }, UTLocalizationService.prototype.setLocaleFromString = function setLocaleFromString(locale) {
        var t = locale.split("_");
        this.setLocaleFromLanguage(t[0])
    }, UTLocalizationService.prototype.setLocaleFromRegion = function setLocaleFromRegion(region) {
        this._locale = this._factory.createLocaleFromRegion(region)
    }, UTLocalizationService.prototype.setLocaleFromLanguage = function setLocaleFromLanguage(language) {
        this._locale = this._factory.createLocaleFromLanguage(language)
    }, UTLocalizationService.prototype.getLocale = function getLocale() {
        return this._locale
    }, UTLocalizationService.prototype.getSupportedLocales = function getSupportedLocales() {
        return [this._factory.createLocaleFromLanguage(enums.Language.ENGLISH), this._factory.createLocaleFromLanguage(enums.Language.FRENCH), this._factory.createLocaleFromLanguage(enums.Language.ITALIAN), this._factory.createLocaleFromLanguage(enums.Language.GERMAN), this._factory.createLocaleFromLanguage(enums.Language.SPANISH), this._factory.createLocaleFromLanguage(enums.Language.DUTCH), this._factory.createLocaleFromLanguage(enums.Language.PORTUGUESE), this._factory.createLocaleFromLanguage(enums.Language.POLISH), this._factory.createLocaleFromLanguage(enums.Language.ARABIC), this._factory.createLocaleFromLanguage(enums.Language.RUSSIAN), this._factory.createLocaleFromLanguage(enums.Language.TURKISH)]
    }, UTLocalizationService.prototype.isRTL = function isRTL() {
        return this._rtlLanguages.indexOf(this._locale.language) >= 0
    }, UTLocalizationService.prototype.isLanguageSupported = function isLanguageSupported(language) {
        return this._supportedLanguages.indexOf(language) >= 0
    }, UTLocalizationService.prototype.addLocalizationStrings = function addLocalizationStrings(data) {
        var key;
        for (key in data) data.hasOwnProperty(key) && this._repository.set(key, data[key])
    }, UTLocalizationService.prototype.localize = function localize(key, t) {
        var i = this._repository.get(key);
        return i ? (Array.isArray(t) && t.length > 0 && t.forEach(function (t, s) {
            i = i.replace("%" + (s + 1).toString(), t.toString())
        }), i) : i = "*" + key
    }, UTLocalizationService.prototype.localizeNumber = function localizeNumber(t) {
        return this._locale.language === enums.Language.ARABIC ? t.toLocaleString(enums.Language.ENGLISH + "-" + enums.Region.USA) : t.toLocaleString(this._locale.toBCPString())
    }, UTLocalizationService.prototype.localizeHeight = function localizeHeight(t) {
        return this._locale.region === enums.Region.USA ? utils.TextUtils.centimetersToFeet(t) : t + " cm"
    }, UTLocalizationService.prototype.localizeDate = function localizeDate(t) {
        var i = utils.TextUtils.formatToTwoDigits(t.getMonth() + 1), s = utils.TextUtils.formatToTwoDigits(t.getDate()),
            o = t.getFullYear().toString();
        return this.localize("date.mmddyyyy", [i, s, o])
    }, UTLocalizationService.prototype.localizeDateTime = function localizeDateTime(t) {
        var i = this._locale.language === enums.Language.ENGLISH, s = t.getHours(),
            o = utils.TextUtils.formatToTwoDigits(t.getMinutes()), l = i ? (s % 12 || 12).toString() : s.toString(),
            u = t.getDate().toString(), h = this.localize(MONTH_NAMES[t.getMonth()]), p = t.getFullYear().toString(),
            m = "";
        return i && (m = s >= 12 ? "pm" : "am"), this.localize("date.ddmmmyyyyhhmm", [u, h, p, l, o, m])
    }, UTLocalizationService.prototype.localizeDateTimeGMT = function localizeDateTimeGMT(t) {
        var i = t.getUTCHours(), s = utils.TextUtils.formatToTwoDigits(t.getUTCMinutes()),
            o = t.getUTCDate().toString(), l = this.localize(MONTH_NAMES[t.getUTCMonth()]),
            u = t.getUTCFullYear().toString(), h = this._locale.language === enums.Language.ENGLISH,
            p = h ? (i % 12 || 12).toString() : i.toString(), m = "";
        return h && (m = i >= 12 ? "pm" : "am"), this.localize("date.ddmmmyyyyhhmm", [o, l, u, p, s, m])
    }, UTLocalizationService.prototype.localizeEstablishedDate = function localizeEstablishedDate(t) {
        return function _FUTFounder(t) {
            return t.valueOf() < new Date(2009, 4, 1).valueOf()
        }(t) ? this.localize("controlbar.FUTFounder") : this.localize("controlbar.clubinfo.established", [function _localizeMonthYear(t) {
            var i = t.getMonth(), s = t.getFullYear().toString();
            return this.localize("date.mmyy", [this.localize(MONTH_NAMES[i]), s])
        }.call(this, t)])
    }, UTLocalizationService.prototype.localizeTimeRemaining = function localizeTimeRemaining(t) {
        utils.Debug.Assert(t >= 0, "Expected parameter to be a positive integer.");
        var i = Math.floor(t / SECONDS_PER_DAY), s = Math.floor(t / SECONDS_PER_HOUR),
            o = Math.floor(t / SECONDS_PER_MINUTE),
            l = Math.floor(t - (i * SECONDS_PER_DAY + s * SECONDS_PER_HOUR + o * SECONDS_PER_MINUTE));
        return i > 0 ? (s = Math.floor((t - i * SECONDS_PER_DAY) / SECONDS_PER_HOUR), this.localize("timespan.dayshours", [this.localizeNumber(i), s])) : s > 0 ? (o = Math.floor((t - s * SECONDS_PER_HOUR) / SECONDS_PER_MINUTE), this.localize("timespan.hoursminutes", [s, o])) : o > 0 ? this.localize("timespan.minutesseconds", [o, l]) : 1 === l ? "1 " + this.localize("timespan.second") : this.localize("timespan.seconds", [l])
    }, UTLocalizationService.prototype.localizePromoTimeRemaining = function localizePromoTimeRemaining(t) {
        if (utils.Debug.Assert(t >= 0, "Expected parameter to be a positive integer."), t < 0) return this.localize("timespan.listview.seconds");
        var i = Math.floor(t / SECONDS_PER_DAY), s = Math.floor(t / SECONDS_PER_HOUR),
            o = Math.floor(t / SECONDS_PER_MINUTE);
        return i > 0 ? (s = Math.floor((t - i * SECONDS_PER_DAY) / SECONDS_PER_HOUR), this.localize("timespan.dayshours", [i, s])) : s > 0 ? (o = Math.floor((t - s * SECONDS_PER_HOUR) / SECONDS_PER_MINUTE), this.localize("timespan.hoursminutes", [s, o])) : o > 0 ? 1 === o ? "1 " + this.localize("timespan.minute") : this.localize("timespan.minutes", [o]) : this.localize("timespan.listview.seconds")
    }, UTLocalizationService.prototype.localizeAuctionTimeRemaining = function localizeAuctionTimeRemaining(t) {
        utils.Debug.Assert(t >= 0, "Expected parameter to be a positive integer.");
        var i = Math.floor(t / SECONDS_PER_DAY), s = Math.floor(t / SECONDS_PER_HOUR),
            o = Math.floor(t / SECONDS_PER_MINUTE);
        return t = Math.floor(t - (i * SECONDS_PER_DAY + s * SECONDS_PER_HOUR + o * SECONDS_PER_MINUTE)), i > 0 ? 1 === i ? "1 " + this.localize("timespan.day") : this.localize("timespan.days", [i]) : s > 0 ? 1 === s ? "1 " + this.localize("timespan.hour") : this.localize("timespan.hours", [s]) : o > 0 ? 1 === o ? "1 " + this.localize("timespan.minute") : this.localize("timespan.minutes", [o]) : t > 30 ? this.localize("timespan.listview.seconds") : t > 15 ? this.localize("timespan.listview.underseconds", [30]) : t > 5 ? this.localize("timespan.listview.underseconds", [15]) : this.localize("timespan.listview.underseconds", [5])
    }, UTLocalizationService.prototype.addObfuscatedLocalizationStrings = function addObfuscatedLocalizationStrings(data) {
        function b64DecodeUnicode(t) {
            return decodeURIComponent(atob(t).split("").map(function (c) {
                return "%" + ("00" + c.charCodeAt(0).toString(16)).slice(-2)
            }).join(""))
        }

        var key;
        for (key in data) if (data.hasOwnProperty(key)) {
            var t = b64DecodeUnicode(data[key]);
            key = b64DecodeUnicode(key), this._repository.set(key, t)
        }
    }, UTLocalizationService.prototype.requestLocalization = function requestLocalization() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse;
        return accessobjects.Configuration.getLocalization(this._locale).observe(this, function _onGetLocalizationComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, data.success && this.addObfuscatedLocalizationStrings(data.response), t.notify(i)
        }), t
    }, UTLocalizationService.prototype.requestStoreLocalization = function requestStoreLocalization() {
        function _convertStoreLocXMLToKeyValuePairs(t) {
            return DOMKit.HTMLCollectionToArray(t.getElementsByTagName("trans-unit")).reduce(function (result, t) {
                var i = t.attributes.resname;
                if (i && utils.JS.isValid(i.value)) {
                    var s = t.getElementsByTagName("source")[0];
                    result.push({key: i.value, value: s.textContent})
                }
                return result
            }, [])
        }

        var t = new UTObservable, i = new transferobjects.ServiceResponse;
        return accessobjects.Configuration.getStoreLocalization().observe(this, function _onGetStoreLocalizationComplete(s, data) {
            s.unobserve(this), i.success = data.success, i.status = data.status, data.success && (_convertStoreLocXMLToKeyValuePairs(data.response).forEach(function (t) {
                this._repository.set(t.key, t.value)
            }, this), this.storeLocLoaded = !0), t.notify(i)
        }), t
    }, new UTLocalizationService
}(),NamespaceManager.Register("transferobjects"),transferobjects.Notification = function () {
    return function NotificationDTO(message, type) {
        this.message = message, Object.defineProperty(this, "message", {writable: !1}), this.type = type, Object.defineProperty(this, "type", {writable: !1})
    }
}(),NamespaceManager.Register("services"),services.Notification = function () {
    function pushNotification() {
        if (this._queue.length > 0) {
            t || (t = setInterval(pushNotification.bind(this), 2e3));
            var i = this._queue.shift();
            this.display.notify(i)
        } else 0 === this._queue.length && (t = clearInterval(t))
    }

    function NotificationService() {
        this.display = new UTObservable, Object.freeze(this.display), this._queue = [], Object.defineProperty(this, "_queue", {
            writable: !1,
            enumerable: !1
        })
    }

    var t;
    return NotificationService.prototype.clearAll = function clearAll() {
        t = clearInterval(t), this._queue.length = 0
    }, NotificationService.prototype.queue = function queue(i) {
        Array.prototype.slice.call(arguments).forEach(function (data) {
            if (Array.isArray(data)) {
                var t = new transferobjects.Notification(data[0], data[1]);
                this._queue.push(t)
            } else data instanceof transferobjects.Notification && this._queue.push(data)
        }, this), t || pushNotification.call(this)
    }, new NotificationService
}(),NamespaceManager.Register("entities"),entities.Objective = function (data) {
    this.id = data.objectiveId, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.name = data.name, Object.defineProperty(this, "name", {
        writable: !1,
        enumerable: !0
    }), this.header = data.header, Object.defineProperty(this, "header", {
        writable: !1,
        enumerable: !0
    }), this.description = data.description, Object.defineProperty(this, "description", {
        writable: !1,
        enumerable: !0
    }), this.shortDescription = data.shortDescription, Object.defineProperty(this, "shortDescription", {
        writable: !1,
        enumerable: !0
    }), this.imageBase = data.imageBase, Object.defineProperty(this, "imageBase", {
        writable: !1,
        enumerable: !0
    }), this.gameArea = data.gameArea, Object.defineProperty(this, "gameArea", {writable: !1, enumerable: !0});
    var t;
    Object.defineProperty(this, "link", {
        get: function () {
            return t
        }, set: function (i) {
            i = i.toLowerCase();
            var key;
            for (key in enums.GoToLink) if (enums.GoToLink.hasOwnProperty(key) && enums.GoToLink[key] === i) return void(t = i);
            utils.Debug.Assert(!1, "Invalid assignment to entities.Objective -> link")
        }
    }), this.link = data.takeMeThereLink, this.difficulty = data.difficulty, Object.defineProperty(this, "difficulty", {
        writable: !1,
        enumerable: !0
    });
    var i;
    Object.defineProperty(this, "type", {
        get: function () {
            return i
        }, set: function (t) {
            var key;
            for (key in enums.Objectives.Type) if (enums.Objectives.Type.hasOwnProperty(key) && enums.Objectives.Type[key] === t) return void(i = t);
            utils.Debug.Assert(!1, "Invalid assignment to entities.Objective -> type")
        }
    }), this.type = data.type, this.requiresReset = data.requiresReset, Object.defineProperty(this, "requiresReset", {
        writable: !1,
        enumerable: !0
    }), this.isWeb = data.isWeb, Object.defineProperty(this, "isWeb", {
        writable: !1,
        enumerable: !0
    }), this.startTime = data.startTime, Object.defineProperty(this, "startTime", {
        writable: !1,
        enumerable: !0
    }), this.lastUpdateTime = data.lastUpdateTime, Object.defineProperty(this, "lastUpdateTime", {
        writable: !1,
        enumerable: !0
    }), this.expiryTime = data.expiryTime + 10, Object.defineProperty(this, "expiryTime", {
        writable: !1,
        enumerable: !0
    }), this.slot = data.slot, Object.defineProperty(this, "slot", {writable: !1, enumerable: !0});
    var s
    ;Object.defineProperty(this, "state", {
        get: function () {
            return s
        }, set: function (t) {
            var key;
            for (key in enums.Objectives.State) if (enums.Objectives.State.hasOwnProperty(key) && enums.Objectives.State[key] === t) return void(s = t);
            utils.Debug.Assert(!1, "Invalid assignment to entities.Objective -> state")
        }
    }), this.state = data.state, this.currentProgress = data.currentProgress, Object.defineProperty(this, "currentProgress", {
        writable: !0,
        enumerable: !0
    }), this.multiplier = data.multiplier, Object.defineProperty(this, "multiplier", {
        writable: !1,
        enumerable: !0
    }), this.isDaily = this.type === enums.Objectives.Type.DAILY, Object.defineProperty(this, "isDaily", {
        writable: !1,
        enumerable: !0
    }), this.isWeekly = this.type === enums.Objectives.Type.WEEKLY, Object.defineProperty(this, "isWeekly", {
        writable: !1,
        enumerable: !0
    })
},entities.Objective.prototype.markAsCompleted = function markAsCompleted() {
    this.state = enums.Objectives.State.COMPLETED
},entities.Objective.prototype.markAsRedeemed = function markAsRedeemed() {
    this.state = enums.Objectives.State.REDEEMED
},entities.Objective.prototype.isInvalid = function isInvalid() {
    return this.state === enums.Objectives.State.INVALID
},entities.Objective.prototype.isInProgress = function isInProgress() {
    return this.state === enums.Objectives.State.IN_PROGRESS
},entities.Objective.prototype.isUnclaimed = function isUnclaimed() {
    return this.state === enums.Objectives.State.COMPLETED
},entities.Objective.prototype.isRedeemed = function isRedeemed() {
    return this.state === enums.Objectives.State.REDEEMED
},entities.Objective.prototype.isCompleted = function isCompleted() {
    return this.isUnclaimed() || this.isRedeemed()
},entities.Objective.prototype.hasWebLink = function hasWebLink() {
    return this.link === enums.GoToLink.AUCTION_SEARCH || this.link === enums.GoToLink.SBC || this.link === enums.GoToLink.SQUAD
},entities.Objective.prototype.getImageIdentifier = function getImageIdentifier() {
    return utils.JS.isEmpty(this.imageBase) ? this.gameArea : this.imageBase
},NamespaceManager.Register("factories"),factories.Objective = function () {
    function ObjectiveFactory() {
    }

    return ObjectiveFactory.prototype.createObjectivesFromPayload = function createObjectivesFromPayload(data) {
        var t = [];
        return Array.isArray(data.dailyObjectives) && (t = this.createObjectivesFromObjArray(data.dailyObjectives)), Array.isArray(data.weeklyObjectives) && (t = this.createObjectivesFromObjArray(data.weeklyObjectives)), t
    }, ObjectiveFactory.prototype.createObjectivesFromObjArray = function createObjectivesFromObjArray(data) {
        return data && Array.isArray(data) ? data.map(function (t) {
            return this.createObjectiveFromObjData(t)
        }, this) : []
    }, ObjectiveFactory.prototype.createObjectiveFromObjData = function createObjectiveFromObjData(data) {
        return new entities.Objective(data)
    }, new ObjectiveFactory
}(),transferobjects.ObjectiveReward = function (data) {
    transferobjects.Reward.call(this, data), this.setId = data.setId, Object.defineProperty(this, "setId", {
        writable: !1,
        enumerable: !0
    }), this.assetId = data.assetId, Object.defineProperty(this, "assetId", {writable: !1, enumerable: !0})
},utils.JS.inherits(transferobjects.ObjectiveReward, transferobjects.Reward),NamespaceManager.Register("accessobjects"),accessobjects.Objectives = function () {
    function UTObjectivesDAO() {
        UTObject.call(this), this.UTAS_REQUEST_PATH = "/ut/game/" + GAME_NAME + "/", Object.defineProperty(this, "UTAS_REQUEST_PATH", {
            writable: !1,
            enumerable: !0
        })
    }

    return utils.JS.inherits(UTObjectivesDAO, UTObject), UTObjectivesDAO.prototype.getObjectives = function getObjectives(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "user/dynamicobjectives"), s.setUrlVariables({scope: "all"}), s.observe(this, function _onGetObjectivesComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response),
                response = o ? data.response : null;
            s.response = {}, s.response.dailyAutoClaimed = !!o && response.dailyRewardsAutoClaimed, s.response.weeklyAutoClaimed = !!o && response.weeklyRewardsAutoClaimed, s.response.dailyObjectives = o ? factories.Objective.createObjectivesFromObjArray(response.dailyObjectives) : [],
                s.response.weeklyObjectives = o ? factories.Objective.createObjectivesFromObjArray(response.weeklyObjectives) : [], s.status = data.status, s.success = data.success, i.notify(s)
        }), s.send(), i
    }, UTObjectivesDAO.prototype.claimById = function claimById(t, id) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "user/dynamicobjectives/claim/" + id), s.setRequestType(enums.HTTPRequestMethod.POST), s.observe(this, function _onClaimByIdComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response),
                response = o ? data.response : null;
            s.response = {}, s.response.awards = o && id === response.objectiveId ? response.awards.map(function (t) {
                return new transferobjects.ObjectiveReward(t)
            }, this) : [], s.status = data.status, s.success = data.success, i.notify(s)
        }), s.send(), i
    }, UTObjectivesDAO.prototype.claimAll = function claimAll(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "user/dynamicobjectives/claim/all"), s.setRequestType(enums.HTTPRequestMethod.POST), s.observe(this, function _onClaimAllComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response),
                response = o ? data.response : null;
            s.response = {}, s.response.awards = o ? response.awards.map(function (t) {
                return new transferobjects.ObjectiveReward(t)
            }, this) : [], s.status = data.status, s.success = data.success, i.notify(s)
        }), s.send(), i
    }, new UTObjectivesDAO
}(),NamespaceManager.Register("repositories"),repositories.Objectives = function ObjectivesRepository() {
    this._objectives = new UTHashTable({}), Object.defineProperty(this, "_objectives", {
        writable: !1,
        enumerable: !0
    }), this._cacheExpiration = 0, Object.defineProperty(this, "_cacheExpiration", {writable: !0, enumerable: !0})
},repositories.Objectives.prototype.reset = function reset() {
    this._objectives.clear(), this._cacheExpiration = 0
},repositories.Objectives.prototype.setCacheTimestamp = function setCacheTimestamp(timestamp) {
    this._cacheExpiration = timestamp
},repositories.Objectives.prototype.isDirty = function isDirty() {
    return 0 === this._cacheExpiration || this._cacheExpiration < Math.round(Date.now() / 1e3)
},repositories.Objectives.prototype.getObjectives = function getObjectives() {
    return this._objectives.values()
},repositories.Objectives.prototype.getObjectiveById = function getObjectiveById(id) {
    return this._objectives.get(id)
},repositories.Objectives.prototype.storeObjectives = function storeObjectives(t) {
    Array.isArray(t) ? t.forEach(function (t) {
        this._objectives.set(t.id, t)
    }, this) : this._objectives.set(t.id, t)
},NamespaceManager.Register("services"),services.Objectives = function () {
    function ObjectivesService() {
        this._repository = new repositories.Objectives
    }

    return ObjectivesService.prototype.reset = function reset() {
        this._repository.reset()
    }, ObjectivesService.prototype.getObjectives = function getObjectives() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return t.data = {
            objectives: [],
            autoClaimedRewards: !1
        }, gSettingsModel.isObjectivesEnabled() ? this._repository.isDirty() ? (accessobjects.Objectives.getObjectives(services.Authentication).observe(this, function _onObjectivesRetrieved(i, s) {
            if (i.unobserve(this), t.success = s.success, t.status = s.status, t.success) {
                var o = s.response.dailyObjectives, l = s.response.weeklyObjectives,
                    u = s.response.dailyAutoClaimed || s.response.weeklyAutoClaimed, h = o.concat(l),
                    p = Math.round(Date.now() / 1e3) + 3600, m = o.length > 0 ? Math.min(p, o[0].expiryTime) : p,
                    _ = l.length > 0 ? Math.min(p, l[0].expiryTime) : p, g = Math.min(m, _);
                this._repository.reset(), this._repository.setCacheTimestamp(Math.max(g, Date.now() / 1e3 + 30)), this._repository.storeObjectives(h), t.data.objectives = h, t.data.autoClaimedRewards = u
            } else this._repository.setCacheTimestamp(Date.now() / 1e3 + 30), t.status === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.OBJECTIVES_ENABLED), services.Notification.queue([services.Localization.localize("notification.objectives.loadFailed"), enums.UINotificationType.NEGATIVE]);
            event.notify(t)
        }), event) : (t.success = !0,
            t.status = enums.HTTPStatusCode.OK, t.data.objectives = this._repository.getObjectives(), event.notify(t), event) : (t.status = enums.HTTPStatusCode.SERVICE_IS_DISABLED, event.notify(t), event)
    }, ObjectivesService.prototype.claimById = function claimById(id) {
        function _onObjectiveClaimed(s, o) {
            s.unobserve(this), i.success = o.success, i.status = o.status, o.success ? (t.markAsRedeemed(), i.data = {awards: o.response.awards}) : (i.status === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.OBJECTIVES_ENABLED), services.Notification.queue([services.Localization.localize("notification.objectives.claimFailed", [t.name]), enums.UINotificationType.NEGATIVE])), event.notify(i)
        }

        var t, event = new UTObservable, i = new transferobjects.ServiceResponse;
        return this.getObjectives().observe(this, function (i) {
            i.unobserve(this), (t = this._repository.getObjectiveById(id)) && accessobjects.Objectives.claimById(services.Authentication, t.id).observe(this, _onObjectiveClaimed)
        }), event
    }, ObjectivesService.prototype.claimAll = function claimAll() {
        function _onObjectivesClaimed(i, s) {
            i.unobserve(this);
            var o = new transferobjects.ServiceResponse;
            o.success = s.success, o.status = s.status, o.success ? (t.forEach(function (t) {
                t.isUnclaimed() && t.markAsRedeemed()
            }), o.data = {awards: s.response.awards}) : (o.status === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.OBJECTIVES_ENABLED), services.Notification.queue([services.Localization.localize("notification.objectives.claimAllFailed"), enums.UINotificationType.NEGATIVE])), event.notify(o)
        }

        var t, event = new UTObservable;
        return this.getObjectives().observe(this, function (i, s) {
            i.unobserve(this), s.success ? (t = s.data.objectives, accessobjects.Objectives.claimAll(services.Authentication).observe(this, _onObjectivesClaimed)) : event.notify(s)
        }), event
    }, ObjectivesService.prototype.update = function update(t) {
        this.getObjectives().observe(this, function _onObjectivesLoaded(i) {
            i.unobserve(this);
            var s = getDefaultDispatcher();
            t.completedDailyObjectives.concat(t.completedWeeklyObjectives).forEach(function (id) {
                var t = this._repository.getObjectiveById(id);
                t.isDaily && services.PIN.sendData(enums.PIN.EVENT.MILESTONE, {
                    moment: PIN_MILESTONE_EVT_MOMENT,
                    mode: PIN_MILESTONE_EVT_MODE,
                    type: enums.PIN.MILESTONE_EVT_TYPE.OBJECTIVES,
                    mstid: enums.PIN.MILESTONE_EVT_ID.DAILY_OBJECTIVE + t.id
                }), t.markAsCompleted(), s.notify(enums.Notification.OBJECTIVE_COMPLETE, this, {objective: t})
            }, this), t.progressOnWeeklyObjectives.forEach(function (t) {
                var i = this._repository.getObjectiveById(t.objectiveId);
                i && (i.currentProgress = t.progressCount), s.notify(enums.Notification.OBJECTIVE_PROGRESS, this, {objective: i})
            }, this), (t.newDailyObjectives || t.newWeeklyObjectives) && this.reset()
        })
    }, ObjectivesService.prototype.handlePayload = function handlePayload(data) {
        this.update(new transferobjects.ObjectiveUpdates(data))
    }, new ObjectivesService
}(),NamespaceManager.Register("accessobjects"),accessobjects.Onboarding = function () {
    function UTOnboardingDAO() {
        UTObject.call(this), this.UTAS_REQUEST_PATH = "/ut/game/" + GAME_NAME + "/", Object.defineProperty(this, "UTAS_REQUEST_PATH", {
            writable: !1,
            enumerable: !0
        })
    }

    return utils.JS.inherits(UTOnboardingDAO, UTObject), UTOnboardingDAO.prototype.getHistorical = function getHistorical(t) {
        function _mapToRewardDTO(t) {
            return new transferobjects.LoyaltyReward(t)
        }

        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "user/historical"), s.observe(this, function _onGetHistoricalComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {
                name: data.success ? data.response.clubName : "",
                abbr: data.success ? data.response.clubAbbr : "",
                rewards: data.success && data.response.returningUserRewards ? data.response.returningUserRewards.map(_mapToRewardDTO) : []
            }, i.notify(s)
        }), s.send(), i
    }, UTOnboardingDAO.prototype.createClub = function createClub(t, i, s) {
        var o = new UTObservable, l = new UTUtasHttpRequest(t);
        return l.setPath(this.UTAS_REQUEST_PATH + "user"),
            l.setRequestType(enums.HTTPRequestMethod.POST), l.setRequestBody({
            clubName: i,
            clubAbbr: s,
            purchased: !0
        }), l.observe(this, function _onCreateClubComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse, s = utils.JS.isObject(data.response);
            i.success = data.success, i.status = data.status, i.response = {
                login: s ? data.response.login : {},
                starterPack: s ? data.response.starterPack : []
            }, i.maxAge = data.maxAge, i.retryAfter = data.retryAfter, o.notify(data)
        }), l.send(), o
    }, UTOnboardingDAO.prototype.getState = function getState(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "clientdata/onboarding"), s.observe(this, function _onGetStateComplete(t, data) {
            t.unobserve(this), i.notify(data)
        }), s.send(), i
    }, UTOnboardingDAO.prototype.setState = function setState(t, state) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(+this.UTAS_REQUEST_PATH + "clientdata/onboarding"), s.setRequestType(enums.HTTPRequestMethod.PUT), s.setRequestBody({
            entries: [{
                key: 0,
                value: state
            }]
        }), s.observe(this, function _onSetStateComplete(t, data) {
            t.unobserve(this), i.notify(data)
        }), s.send(), i
    }, UTOnboardingDAO.prototype.selectCountry = function selectCountry(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return o.setPath(this.UTAS_REQUEST_PATH + "user/action/ONBOARDING_COUNTRY_" + i + "_SELECTED"), o.setRequestType(enums.HTTPRequestMethod.POST), o.observe(this, function _onSelectCountryComplete(t, data) {
            t.unobserve(this);
            var o = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, o), o.response = {countryId: i}, s.notify(o)
        }), o.send(), s
    }, UTOnboardingDAO.prototype.getBadges = function getBadges(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "onboarding/badges"), s.observe(this, function _onGetBadgesComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {badges: data.success ? factories.Item.generateItemsFromItemData(data.response.badgeItemDataList) : []}, i.notify(s)
        }), s.send(), i
    }, UTOnboardingDAO.prototype.selectBadge = function selectBadge(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return o.setPath(this.UTAS_REQUEST_PATH + "onboarding/badge/" + i), o.setRequestType(enums.HTTPRequestMethod.POST), o.observe(this, function _onSelectBadgeComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i), i.response = {badgeId: data.success ? data.response.badgeId : 0}, s.notify(i)
        }), o.send(), s
    }, UTOnboardingDAO.prototype.getKits = function getKits(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "onboarding/kits"), s.observe(this, function _onGetKitsComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, s), s.response = {
                homeKits: data.success ? factories.Item.generateItemsFromItemData(data.response.homeItemDataList) : [],
                awayKits: data.success ? factories.Item.generateItemsFromItemData(data.response.awayItemDataList) : []
            }, i.notify(s)
        }), s.send(), i
    }, UTOnboardingDAO.prototype.selectKits = function selectKits(t, i, s) {
        var o = new UTObservable, l = new UTUtasHttpRequest(t);
        return l.setPath(this.UTAS_REQUEST_PATH + "onboarding/kits"), l.setRequestType(enums.HTTPRequestMethod.POST), l.setRequestBody({
            homeKitId: i,
            awayKitId: s
        }), l.observe(this, function _onSelectKitsComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse;
            utils.JS.assignPropertyValues(data, i), i.response = {
                awayKitId: data.success ? data.response.awayKitId : 0,
                homeKitId: data.success ? data.response.homeKitId : 0
            }, o.notify(i)
        }), l.send(), o
    }, UTOnboardingDAO.prototype.getLoanPlayers = function getLoanPlayers(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "loan/players"), s.observe(this, function _onGetLoanPlayersComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response);
            s.success = data.success, s.status = data.status, s.response = {
                items: o ? data.response.loans.map(function (t) {
                    return factories.Item.createItem(t.itemData)
                }) : []
            }, s.maxAge = data.maxAge, s.retryAfter = data.retryAfter, i.notify(s)
        }), s.send(), i
    }, UTOnboardingDAO.prototype.grantLoanPlayer = function grantLoanPlayer(t, i) {
        var s = new UTObservable, o = new UTUtasHttpRequest(t);
        return o.setPath(this.UTAS_REQUEST_PATH + "loan/player/" + i.toString()), o.setRequestType(enums.HTTPRequestMethod.PUT), o.observe(this, function _onGrantLoanPlayerComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response);
            i.success = data.success, i.status = data.status, i.response = {item: o ? factories.Item.createItem(data.response) : null}, i.maxAge = data.maxAge, i.retryAfter = data.retryAfter, s.notify(i)
        }), o.send(), s
    }, new UTOnboardingDAO
}(),NamespaceManager.Register("services"),services.Onboarding = function () {
    function UTOnboardingService() {
        UTObject.call(this)
    }

    return utils.JS.inherits(UTOnboardingService, UTObject), UTOnboardingService.prototype.getCountries = function getCountries() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse;
        return i.success = !0, i.status = enums.HTTPStatusCode.OK, i.data = {countries: [enums.Country.ENGLAND, enums.Country.BRAZIL, enums.Country.FRANCE, enums.Country.ARGENTINA, enums.Country.GERMANY, enums.Country.ITALY, enums.Country.SPAIN, enums.Country.PORTUGAL, enums.Country.NETHERLANDS]}, t.notify(i), t
    }, UTOnboardingService.prototype.selectCountry = function selectCountry(id) {
        var t = new UTObservable, i = services.Authentication, s = new transferobjects.ServiceResponse,
            index = utils.FUTData.mapNationIdToOnboardingCountryId(id);
        return 0 === index ? (utils.Debug.Assert(!1, "Encountered an unsupported nation ID."), s.success = !1, s.status = enums.HTTPStatusCode.BAD_REQUEST, t.notify(s)) : accessobjects.Onboarding.selectCountry(i, index).observe(this, function _onSelectCountryComplete(i, o) {
            i.unobserve(this), s.success = o.success, s.status = o.status, s.data = {countryId: o.response.countryId}, t.notify(s)
        }), t
    }, UTOnboardingService.prototype.getBadges = function getBadges() {
        var t = new UTObservable, i = services.Authentication;
        return accessobjects.Onboarding.getBadges(i).observe(this, function _onGetBadgesComplete(i, s) {
            i.unobserve(this);
            var o = new transferobjects.ServiceResponse;
            o.success = s.success, o.status = s.status, o.data = {badges: s.response.badges || []}, t.notify(o)
        }), t
    }, UTOnboardingService.prototype.selectBadge = function selectBadge(t) {
        var i = new UTObservable, s = services.Authentication, o = new transferobjects.ServiceResponse;
        return t.isBadge() ? accessobjects.Onboarding.selectBadge(s, t.getDefId()).observe(this, function _onSelectBadgeComplete(s, l) {
            s.unobserve(this), l.success && (t.state = enums.ItemState.ACTIVE_BADGE, t.pile = enums.FUTItemPile.CLUB, repositories.Item.add(t)), o.success = l.success, o.status = l.status, o.data = {badgeId: l.response.badgeId}, i.notify(o)
        }) : (utils.Debug.Assert(!1, "Expected a badge item when selecting a badge."), o.success = !1, o.status = enums.HTTPStatusCode.BAD_REQUEST, i.notify(o)), i
    }, UTOnboardingService.prototype.getKits = function getKits() {
        var t = new UTObservable, i = services.Authentication;
        return accessobjects.Onboarding.getKits(i).observe(this, function _onGetKitsComplete(i, s) {
            i.unobserve(this);
            var o = new transferobjects.ServiceResponse;
            o.success = s.success, o.status = s.status, o.data = {
                homeKits: s.response.homeKits || [],
                awayKits: s.response.awayKits || []
            }, t.notify(o)
        }), t
    }, UTOnboardingService.prototype.selectKits = function selectKits(t, i) {
        var s = new UTObservable, o = services.Authentication, l = new transferobjects.ServiceResponse;
        return t.isKit() && i.isKit() ? accessobjects.Onboarding.selectKits(o, t.getDefId(), i.getDefId()).observe(this, function _onSelectKitsComplete(o, u) {
            o.unobserve(this), u.success && (t.state = enums.ItemState.ACTIVE_HOME_KIT, t.pile = enums.FUTItemPile.CLUB, i.state = enums.ItemState.ACTIVE_AWAY_KIT, i.pile = enums.FUTItemPile.CLUB, repositories.Item.add([t, i])), l.success = u.success, l.status = u.status, l.data = {
                awayKitId: u.response.awayKitId,
                homeKitId: u.response.homeKitId
            }, s.notify(l)
        }) : (utils.Debug.Assert(t.isKit(), "Expected a kit item when selecting a home kit."), utils.Debug.Assert(i.isKit(), "Expected a kit item when selecting an away kit."), l.success = !1, l.status = enums.HTTPStatusCode.BAD_REQUEST, s.notify(l)), s
    }, UTOnboardingService.prototype.getLoanPlayers = function getLoanPlayers() {
        var t = new UTObservable, i = services.Authentication, s = new transferobjects.ServiceResponse;
        return accessobjects.Onboarding.getLoanPlayers(i).observe(this, function _onGetLoanPlayersComplete(i, o) {
            i.unobserve(this), s.data = {items: o.response.items || []}, s.success = o.success, s.status = o.status, t.notify(s)
        }), t
    }, UTOnboardingService.prototype.grantLoanPlayer = function grantLoanPlayer(item) {
        var t = new UTObservable, i = services.Authentication, s = new transferobjects.ServiceResponse;
        return item.isLoaned() ? accessobjects.Onboarding.grantLoanPlayer(i, item.getDefId()).observe(this, function _onGrantLoanPlayerComplete(i, o) {
            i.unobserve(this), s.data = {item: o.response.item || null}, s.success = o.success, s.status = o.status, t.notify(s)
        }) : (s.success = !1, s.status = enums.HTTPStatusCode.BAD_REQUEST, t.notify(s)), t
    }, UTOnboardingService.prototype.createClub = function createClub() {
        function _onCreateClubComplete(i, response) {
            i.unobserve(this), s.success = response.success, s.status = response.status, response.success && (s.data = response.data), t.notify(s)
        }

        var t = new UTObservable, i = services.Authentication, s = new transferobjects.ServiceResponse;
        return accessobjects.Onboarding.getHistorical(i).observe(this, function _onGetHistoricalComplete(o, l) {
            if (o.unobserve(this), l.success) {
                var data = l.response, u = i.getCurrentUser().getSelectedPersona();
                u.setLoyaltyRewards(data.rewards), u.createClub(i, data.name, data.abbr).observe(this, _onCreateClubComplete)
            } else s.success = l.success, s.status = l.status, t.notify(s)
        }), t
    }, new UTOnboardingService
}(),NamespaceManager.Register("accessobjects"),accessobjects.PIN = function () {
    function UTPINTelemetryDAO() {
        UTObject.call(this)
    }

    return utils.JS.inherits(UTPINTelemetryDAO, UTObject), UTPINTelemetryDAO.prototype.sendEvents = function sendEvents(t, version, locale, platform, i, s) {
        var o = new UTHttpRequest, l = new UTObservable,
            u = {networkAccess: navigator.connection && "wifi" !== navigator.connection.type ? "G" : "W"};
        utils.JS.isEmpty(i) || (u.service_plat = i);
        var h = !utils.JS.isEmpty(t), p = {
            custom: u,
            et: "client",
            events: s.map(function (t) {
                return t.params
            }),
            gid: 0,
            is_sess: h,
            loc: locale.toString(),
            plat: platform,
            rel: gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RELEASE_TYPE),
            taxv: "1.1",
            tid: enums.SKU.FUT,
            tidt: "easku",
            ts_post: (new Date).toISOString(),
            v: version
        };
        return h && (p.sid = t), o.setUrl(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_PIN_URL)), o.setRequestType(enums.HTTPRequestMethod.POST), o.setRequestHeader("x-ea-game-id", getSellId()), o.setRequestHeader("x-ea-game-id-type", "easku"), o.setRequestHeader("x-ea-taxv", "1.1"), o.setRequestBody(p), o.observe(this, function _onSendEventComplete(t, data) {
            t.unobserve(this), l.notify(data)
        }), o.send(), l
    }, new UTPINTelemetryDAO
}(),NamespaceManager.Register("transferobjects"),transferobjects.PINEvent = function PINEventDTO(name, step, t, i, s, o) {
    this.params = o || {};
    this.params.core = {
        s: step,
        pidt: "persona",
        pid: i.toString(),
        didm: void 0,
        ts_event: (new Date).toISOString(),
        en: name
    }, t > 0 && (this.params.core.pidm = {nucleus: t}), utils.JS.isEmpty(s) || (this.params.core.dob = s.slice(0, -3))
},NamespaceManager.Register("services"),services.PIN = function () {
    function PINService() {
        UTObject.call(this), this._enabled = !1, this._batchEnabled = !1, this._batchSize = 10, this._batchFrequency = 500, this._maxRetryCount = 1, this._retryFrequency = 300, this._stepCounter = 0, this._retryCounter = 0, this._bootStartCounter = 0, this._batch = [], this._batchInterval = 0, this._timeoutTimestamp = 0
    }

    return utils.JS.inherits(PINService, UTObject), PINService.prototype.setConfigs = function setConfigs(t) {
        t && (this._enabled = t[enums.PIN.CONFIG.ENABLED] || !1, this._batchSize = t[enums.PIN.CONFIG.BATCH_SIZE] || 10, this._batchFrequency = t[enums.PIN.CONFIG.BATCH_FREQUENCY] || 500, this._batchEnabled = t[enums.PIN.CONFIG.BATCH_ENABLED] || !1,
            this._maxRetryCount = t[enums.PIN.CONFIG.RETRY_TIMES] || 1, this._retryFrequency = t[enums.PIN.CONFIG.RETRY_FREQUENCY] || 300)
    }, PINService.prototype.isEnabled = function isEnabled() {
        return this.isEnabledByConfig() && this.isEnabledByUser()
    }, PINService.prototype.isEnabledByConfig = function isEnabledByConfig() {
        return this._enabled
    }, PINService.prototype.isEnabledByUser = function isEnabledByUser() {
        return gUserSettingsModel.getUsageSharingEnabled()
    }, PINService.prototype.isTimedOut = function isTimedOut() {
        return Date.now() < this._timeoutTimestamp
    }, PINService.prototype._addEventsToBatch = function _addEventsToBatch(t) {
        Array.isArray(t) ? this._batch = this._batch.concat(t) : this._batch.push(t)
    }, PINService.prototype.sendData = function sendData(type, t, i) {
        var s = services.User.getUser(), o = s ? s.getSelectedPersona() : null, l = s ? s.id : 0,
            u = o ? o.id : "unknown", h = s ? s.dateOfBirth : "";
        type === enums.PIN.EVENT.BOOT_START && (t.source = this._bootStartCounter + "-" + t.source, this._bootStartCounter++), this.sendEvent(new transferobjects.PINEvent(type, this._stepCounter, l, u, h, t), i)
    }, PINService.prototype.sendEvent = function sendEvent(event, t) {
        this.isEnabledByConfig() && (t = !!t, (this.isEnabledByUser() || t) && (this._stepCounter++, t ? this._sendEvents([event]) : (this._addEventsToBatch(event), this._batchInterval < 1 && (this._batchInterval = setInterval(this._processBatch.bind(this), this._batchFrequency)))))
    }, PINService.prototype._processBatch = function _processBatch() {
        if (!this.isTimedOut() && hasConnection()) {
            var t = this._batch.splice(0, this._batchEnabled ? this._batchSize : 1);
            this._sendEvents(t), 0 === this._batch.length && (clearInterval(this._batchInterval), this._batchInterval = 0)
        }
    }, PINService.prototype._sendEvents = function _sendEvents(t) {
        if (hasConnection()) {
            if (t.length > 0) {
                var version = getAppVersion();
                isChrome() || (version += "." + gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_CHANGELIST));
                "web";
                var locale = services.Localization.getLocale(),
                    i = services.Authentication.getSession(enums.AuthEnvironment.UTAS), s = services.User.getUser(),
                    o = s ? s.getSelectedPersona() : null, l = o ? o.platform.toLowerCase() : "unknown";
                accessobjects.PIN.sendEvents(i.id, version, locale, "web", l, t).observe(this, function _onProcessBatchComplete(i, data) {
                    i.unobserve(this), data.success ? this._retryCounter = 0 : data.status === enums.HTTPStatusCode.UNKNOWN || data.status === enums.HTTPStatusCode.SERVER_ERROR || data.status === enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR ? this._retryCounter < this._maxRetryCount ? (this._retryCounter++, this._sendEvents(t)) : (this._timeoutTimestamp = Date.now() + 6e4, this._addEventsToBatch(t), utils.Debug.Assert(!1, "PIN retry max has been reached. Disabling PIN service for 1 minute.")) : this._addEventsToBatch(t)
                })
            }
        } else this._addEventsToBatch(t)
    }, PINService.prototype.sendDisconnectEvent = function sendDisconnectEvent(sessionId) {
        this.sendData(enums.PIN.EVENT.ERROR, {
            sid: sessionId || services.Authentication.getSession(enums.AuthEnvironment.UTAS).id,
            type: "disconnect",
            errid: enums.PIN.ERROR_EVT_ERRID.CONNECTION,
            server_type: "utas"
        })
    }, new PINService
}(),NamespaceManager.Register("entities"),entities.CategoryAward = function (data) {
    this.id = data.id || data.categoryId, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.awards = data.awards ? data.awards.map(function (t) {
        return new transferobjects.Reward(t)
    }) : []
},NamespaceManager.Register("accessobjects"),accessobjects.Rivals = function () {
    function UTRivalsDAO() {
        UTObject.call(this), this._authDelegate = null, Object.defineProperty(this, "_authDelegate", {
            writable: !0,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTRivalsDAO, UTObject), UTRivalsDAO.prototype.setAuthDelegate = function setAuthDelegate(t) {
        t && t.conforms(interfaces.AuthDelegate) && (this._authDelegate = t)
    }, UTRivalsDAO.prototype._triggerUnauthorizedResponse = function _triggerUnauthorizedResponse(t) {
        var i = new transferobjects.FUTHttpResponse;
        i.status = enums.HTTPStatusCode.UNAUTHORIZED, t.notify(i)
    }, UTRivalsDAO.prototype.getPrizeDetails = function getPrizeDetails() {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t
            ;
        var i = new UTUtasHttpRequest(this._authDelegate);
        return i.setPath("/ut/game/" + GAME_NAME + "/rivals/user/prizeDetails"), i.observe(this, function _onGetPrizeDetailsComplete(i, data) {
            i.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            s.response = {unclaimedRewards: []}, utils.JS.isObject(data.response) && Object.keys(data.response).length > 0 && data.response.prizes.prizeTiers.forEach(function (t) {
                t.categoryAwardsList.forEach(function (t) {
                    s.response.unclaimedRewards.push(new entities.CategoryAward(t))
                })
            }), s.status = data.status, s.success = data.success, t.notify(s)
        }), i.send(), t
    }, UTRivalsDAO.prototype.claimById = function claimById(t) {
        var i = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(i), i;
        var s = new UTUtasHttpRequest(this._authDelegate);
        return s.setRequestType(enums.HTTPRequestMethod.PUT), s.setPath("/ut/game/" + GAME_NAME + "/rivals/reward/" + t), s.observe(this, function _onClaimRewardsComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            s.status = data.status, s.success = data.success, s.response = {rewards: []}, utils.JS.isObject(data.response) && Object.keys(data.response).length > 0 && (data.response.awardedPrizes ? data.response.awardedPrizes.forEach(function (t) {
                s.response.rewards.push(new transferobjects.Reward(t))
            }) : (s.status = enums.HTTPStatusCode.BAD_REQUEST, s.success = !1)), i.notify(s)
        }), s.send(), i
    }, new UTRivalsDAO
}(),NamespaceManager.Register("repositories"),repositories.RivalRewards = function () {
    function UTRivalRewardsRepository(t) {
        this._rewards = new UTHashTable({}), Object.defineProperty(this, "_rewards", {
            writable: !1,
            enumerable: !1
        }), this._expiryTimestamp = 0, utils.JS.isValid(t) && this.add(t)
    }

    return UTRivalRewardsRepository.prototype.add = function add(t) {
        Array.isArray(t) ? t.forEach(function (t) {
            this._rewards.set(t.id, t)
        }) : this._rewards.set(t.id, t)
    }, UTRivalRewardsRepository.prototype.get = function get(t) {
        return this._rewards.get(t).awards
    }, UTRivalRewardsRepository.prototype.values = function values() {
        return this._rewards.values()
    }, UTRivalRewardsRepository.prototype.isEmpty = function isEmpty() {
        return this._rewards.length < 1
    }, UTRivalRewardsRepository.prototype.isCacheExpired = function isCacheExpired() {
        return this._expiryTimestamp < Date.now()
    }, UTRivalRewardsRepository.prototype.reset = function reset() {
        this._rewards.clear(), this._expiryTimestamp = 0
    }, UTRivalRewardsRepository.prototype.setCacheTimestamp = function setCacheTimestamp(timestamp, t) {
        this._expiryTimestamp = timestamp + (utils.JS.isNumber(t) ? t * MS_PER_SECOND : 36e5)
    }, new UTRivalRewardsRepository
}(),NamespaceManager.Register("services"),services.Rivals = function () {
    function RivalsService() {
    }

    return RivalsService.prototype.reset = function reset() {
        repositories.RivalRewards.reset()
    }, RivalsService.prototype.getRewardsInfo = function getRewardsInfo() {
        var t = new UTObservable, i = new transferobjects.ServiceResponse;
        return i.data = {unclaimedRewards: []}, repositories.RivalRewards.isEmpty() || repositories.RivalRewards.isCacheExpired() ? (accessobjects.Rivals.getPrizeDetails().observe(this, function _onGetRewardsInfoComplete(s, o) {
            s.unobserve(this), i.success = o.success, i.status = o.status, i.success && (o.response.unclaimedRewards.forEach(function (t) {
                i.data.unclaimedRewards.push(t), repositories.RivalRewards.add(t)
            }), repositories.RivalRewards.setCacheTimestamp(Date.now(), o.maxAge > 0 ? o.maxAge : null)), t.notify(i)
        }), t) : (i.success = !0, i.status = enums.HTTPStatusCode.OK, i.data.unclaimedRewards = repositories.RivalRewards.values(), t.notify(i), t)
    }, RivalsService.prototype.claimById = function claimById(t) {
        var i = new UTObservable, s = new transferobjects.ServiceResponse;
        return accessobjects.Rivals.claimById(t).observe(this, function _onClaimByIdComplete(t, o) {
            t.unobserve(this), s.success = o.success, s.status = o.status, s.data = {rewards: o.response.rewards}, s.success ? this.reset() : services.Notification.queue([services.Localization.localize("notification.rivals.claimFailed"), enums.UINotificationType.NEGATIVE]), i.notify(s)
        }), i
    }, new RivalsService
}(),NamespaceManager.Register("accessobjects"),accessobjects.Squad = function () {
    function UTSquadDAO() {
        UTObject.call(this), this._authDelegate = null, Object.defineProperty(this, "_authDelegate", {
            writable: !0,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTSquadDAO, UTObject), UTSquadDAO.prototype.setAuthDelegate = function setAuthDelegate(t) {
        t && t.conforms(interfaces.AuthDelegate) && (this._authDelegate = t)
    }, UTSquadDAO.prototype._triggerUnauthorizedResponse = function _triggerUnauthorizedResponse(t) {
        var i = new transferobjects.FUTHttpResponse;
        i.status = enums.HTTPStatusCode.UNAUTHORIZED, t.notify(i)
    }, UTSquadDAO.prototype.create = function create(name, t, i, s) {
        var o = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(o), o;
        var l = new UTUtasHttpRequest(this._authDelegate), u = {squadName: name, formation: t};
        return Array.isArray(i) && i.length > 0 && (u.players = i.map(function (item, t) {
            var i = s || item.concept;
            return {
                index: t,
                itemData: item && item.isValid() ? {id: i ? item.getMaskedResourceId() : item.id, dream: i} : {
                    id: 0,
                    dream: !1
                }
            }
        })), l.setPath("/ut/game/" + GAME_NAME + "/squad"), l.setRequestBody(u), l.setRequestType(enums.HTTPRequestMethod.POST), l.observe(this, function _onCreateSquadComplete(t, data) {
            t.unobserve(this);
            var i = new transferobjects.FUTHttpResponse, s = utils.JS.isObject(data.response);
            utils.JS.assignPropertyValues(data, i), i.response = {squad: s ? factories.Squad.createSquad(data.response) : null}, o.notify(i)
        }), l.send(), o
    }, UTSquadDAO.prototype.rename = function rename(id, name) {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t;
        var i = new UTUtasHttpRequest(this._authDelegate), s = {id: id, squadName: name};
        return i.setPath("/ut/game/" + GAME_NAME + "/squad/" + id.toString()), i.setRequestBody(s), i.setRequestType(enums.HTTPRequestMethod.PUT), i.observe(this, function _onRenameSquadComplete(i, data) {
            i.unobserve(this), t.notify(data)
        }), i.send(), t
    }, UTSquadDAO.prototype.copy = function copy(id, name) {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t;
        var i = new UTUtasHttpRequest(this._authDelegate), s = {srcId: id, dstSquadName: name};
        return i.setPath("/ut/game/" + GAME_NAME + "/squad/clone"), i.setRequestBody(s), i.setRequestType(enums.HTTPRequestMethod.POST), i.observe(this, function _onCopySquadComplete(i, data) {
            i.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response);
            utils.JS.assignPropertyValues(data, s), s.response = {squad: o ? factories.Squad.createSquad(data.response) : null}, t.notify(s)
        }), i.send(), t
    }, new UTSquadDAO
}(),communication.CreateShowOffSquadDelegate = function (t) {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "showoff/" + t, enums.HTTPRequestMethod.POST, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setData({squadId: t})
},utils.JS.inherits(communication.CreateShowOffSquadDelegate, communication.BaseFUTDelegate),communication.DeleteShowOffSquadDelegate = function (t) {
    communication.BaseFUTDelegate.call(this), this.setURLVariables({id: t}), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "showoffdelete", enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.EMPTY, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.DeleteShowOffSquadDelegate, communication.BaseFUTDelegate),communication.SquadDeleteDelegate = function (t) {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "squad/" + t.toString(), enums.HTTPRequestMethod.DELETE, models.CommunicationModel.RESPONSE.EMPTY, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.SquadDeleteDelegate, communication.BaseFUTDelegate),NamespaceManager.Register("services"),services.Squad = function () {
    function UTSquadService() {
        UTObject.call(this)
    }

    return utils.JS.inherits(UTSquadService, UTObject), UTSquadService.prototype.reset = function reset() {
        repositories.Squad.reset()
    }, UTSquadService.prototype.getMaxSquads = function getMaxSquads() {
        return repositories.Squad.MAX_SQUADS
    }, UTSquadService.prototype.setMaxSquads = function setMaxSquads(t) {
        repositories.Squad.MAX_SQUADS = t
    },
        UTSquadService.prototype.getActiveSquadId = function getActiveSquadId() {
            return repositories.Squad.getActiveSquadId()
        }, UTSquadService.prototype.setActiveSquadId = function setActiveSquadId(id) {
        repositories.Squad.setActiveSquadId(id)
    }, UTSquadService.prototype.create = function create(name, t, i, s) {
        var event = new UTObservable, o = new transferobjects.ServiceResponse;
        return accessobjects.Squad.create(name, t, i, s).observe(this, function _onSquadCreateComplete(t, data) {
            if (t.unobserve(this), o.status = data.status, o.success = data.success, o.data = {squad: data.response.squad}, data.success) {
                var i = services.User.getUser().selectedPersona, s = data.response.squad;
                repositories.Squad.set(i, s), s.setCacheTimestamp(0), getDefaultDispatcher().notify(enums.Notification.SQUAD_CREATE, this, o.data)
            }
            event.notify(o)
        }), event
    }, UTSquadService.prototype.copy = function copy(id, name) {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return accessobjects.Squad.copy(id, name).observe(this, function _onSquadCopyComplete(i, data) {
            if (i.unobserve(this), t.status = data.status, t.success = data.success, t.data = {squad: data.response.squad}, data.success) {
                var s = services.User.getUser().selectedPersona, o = data.response.squad;
                repositories.Squad.set(s, o), o.setCacheTimestamp(0), getDefaultDispatcher().notify(enums.Notification.SQUAD_CREATE, this, t.data)
            }
            event.notify(t)
        }), event
    }, UTSquadService.prototype.duplicate = function duplicate(t) {
        function _onCreateDuplicateComplete(t, data) {
            t.unobserve(this), event.notify(data)
        }

        var event = new UTObservable;
        return repositories.Squad.getSquads().observe(this, function (i, data) {
            i.unobserve(this);
            var s = t.getPlayers().map(function (t) {
                return t.getItem()
            }), name = t.getName();
            name = utils.TextUtils.squadNameExists(name, data) ? utils.TextUtils.createSquadNameCopy(name, data) : name, this.create(name, t.getFormation().getName(), s, !0).observe(this, _onCreateDuplicateComplete)
        }), event
    }, UTSquadService.prototype.rename = function rename(id, name) {
        function _onGetSquad(i, s) {
            i.unobserve(this), s.setName(name, []), t.data = {squad: s || null}, event.notify(t), getDefaultDispatcher().notify(enums.Notification.SQUAD_SAVE, s)
        }

        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return accessobjects.Squad.rename(id, name).observe(this, function _onSquadRenameComplete(i, data) {
            i.unobserve(this), t.status = data.status, t.success = data.success, data.success ? repositories.Squad.getSquadById(id).observe(this, _onGetSquad) : event.notify(t)
        }), event
    }, UTSquadService.prototype.remove = function remove(id) {
        var event = new UTObservable, t = {success: !1, id: id, error: null},
            i = new communication.SquadDeleteDelegate(id);
        return i.addListener(communication.BaseDelegate.SUCCESS, this, function _onRemoveSuccess(sender) {
            sender.clearListenersByScope(this);
            var i = services.User.getUser().selectedPersona;
            repositories.Squad.removeSquad(i, id), repositories.Squad.setDirty(), t.success = !0, event.notify(t), getDefaultDispatcher().notify(enums.Notification.SQUAD_DELETE, this, t)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function _onRemoveFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                t.error = error, event.notify(t)
            }.bind(this))
        }), i.useClickShield(!0), i.send(), event
    }, UTSquadService.prototype.addShowOff = function addShowOff(t) {
        function _onAddShowOffSuccess(sender, data) {
            sender.clearListenersByScope(this), repositories.Squad.getSquadById(t).observe(this, function (t, s) {
                if (t.unobserve(this), utils.JS.isValid(s)) {
                    var o = new transferobjects.ShowOffSquad(s, data);
                    repositories.Squad.addShowOffSquad(o), i.success = !0, i.url = o.url + ":" + services.User.getUser().getSelectedPersona().sku
                }
                event.notify(i)
            })
        }

        function _onAddShowOffFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                i.error = error, event.notify(i)
            }.bind(this))
        }

        function _createShowOff() {
            var i = new communication.CreateShowOffSquadDelegate(t);
            i.addListener(communication.BaseDelegate.SUCCESS, this, _onAddShowOffSuccess), i.addListener(communication.BaseDelegate.FAIL, this, _onAddShowOffFail), i.useClickShield(!0), i.send()
        }

        var event = new UTObservable, i = {success: !1, url: "", error: null};
        return repositories.Squad.getShowOffSquads().observe(this, function (t, data) {
            if (t.unobserve(this), data.success) if (repositories.Squad.isShowOffListFull()) {
                var keys = data.showOffSquads.map(function (t) {
                    return t.id
                });
                this.deleteShowOff(Math.min.apply(Math, keys)).observe(this, function (t, d) {
                    d.success && _createShowOff.call(this)
                })
            } else _createShowOff.call(this)
        }), event
    }, UTSquadService.prototype.deleteShowOff = function deleteShowOff(t) {
        var event = new UTObservable, i = {success: !1, error: null},
            s = new communication.DeleteShowOffSquadDelegate(t);
        return s.addListener(communication.BaseDelegate.SUCCESS, this, function _onDeleteShowOffSuccess(sender, data) {
            sender.clearListenersByScope(this), repositories.Squad.removeShowOffSquad(t), i.success = !0, event.notify(i)
        }), s.addListener(communication.BaseDelegate.FAIL, this, function _onDeleteShowOffFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                i.error = error, event.notify(i)
            }.bind(this))
        }), s.useClickShield(!0), s.send(), event
    }, UTSquadService.prototype.loadShowOffSquad = function loadShowOffSquad() {
        var event = new UTObservable, t = {success: !1, squad: null, error: null};
        return repositories.Squad.loadShowOffSquad().observe(this, function _onLoadShowOff(i, data) {
            i.unobserve(this), data.success ? (t.success = !0, t.showOffDTO = data.showOffDTO) : services.Notification.queue([services.Localization.localize("squads.showoff.error.load"), enums.UINotificationType.NEGATIVE]), event.notify(t)
        }), event
    }, UTSquadService.prototype.setActiveSquad = function setActiveSquad(id) {
        var event = new UTObservable, t = {success: !1, error: null};
        return repositories.Squad.getSquadById(id, -1).observe(this, function _onSetActiveComplete(i, s, error) {
            s ? (t.success = !0, this.setActiveSquadId(s.getId())) : error && (t.error = error), event.notify(t)
        }), event
    }, UTSquadService.prototype.requestSquadByType = function requestSquadByType(type) {
        function _onGetSquadComplete(i, s) {
            i.unobserve(this), s && (t.success = !0, t.status = enums.HTTPStatusCode.OK, t.data = {squad: s}), event.notify(t)
        }

        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return type === enums.UserSquadId.ACTIVE ? repositories.Squad.getSquadById(-1, -1).observe(this, _onGetSquadComplete) : type === enums.UserSquadId.GENERATIONS ? repositories.Squad.getGenerationsSquad(!0).observe(this, _onGetSquadComplete) : (t.status = enums.HTTPStatusCode.BAD_REQUEST, event.notify(t)), event
    }, new UTSquadService
}(),NamespaceManager.Register("transferobjects"),transferobjects.SquadBattlesEvent = function SquadBattlesEventDTO(data) {
    this.id = data.sqbtEventId, Object.defineProperty(this, "id", {writable: !1}), this.rank = data.rank, Object.defineProperty(this, "rank", {writable: !1}), this.score = data.score, Object.defineProperty(this, "score", {writable: !1}), this.tierLevel = data.userTierLevel, Object.defineProperty(this, "tierLevel", {writable: !1}), this.isPrizeAvailable = data.isPrizeAvailable, Object.defineProperty(this, "isPrizeAvailable", {writable: !1});
    var t = [];
    utils.JS.valToArray(data.prizeTiers).forEach(function (i) {
        i.awards.forEach(function (i) {
            t.push(new transferobjects.Reward(i))
        }, this)
    }, this), this.rewards = t, Object.defineProperty(this, "rewards", {writable: !1})
},NamespaceManager.Register("accessobjects"),accessobjects.SquadBattles = function () {
    function UTSquadBattlesDAO() {
        UTObject.call(this), this._authDelegate = null, Object.defineProperty(this, "_authDelegate", {
            writable: !0,
            enumerable: !1
        })
    }

    return utils.JS.inherits(UTSquadBattlesDAO, UTObject), UTSquadBattlesDAO.prototype.setAuthDelegate = function setAuthDelegate(t) {
        t && t.conforms(interfaces.AuthDelegate) && (this._authDelegate = t)
    }, UTSquadBattlesDAO.prototype._triggerUnauthorizedResponse = function _triggerUnauthorizedResponse(t) {
        var i = new transferobjects.FUTHttpResponse;
        i.status = enums.HTTPStatusCode.UNAUTHORIZED, t.notify(i)
    }, UTSquadBattlesDAO.prototype.getHub = function getHub() {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t;
        var i = new UTUtasHttpRequest(this._authDelegate)
        ;
        return i.setPath("/ut/game/" + GAME_NAME + "/sqbt/user/hub"), i.setUrlVariables({scope: "mini"}), i.observe(this, function _onGetSQBTHubComplete(i, data) {
            i.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            s.response = {event: utils.JS.isObject(data.response) ? new transferobjects.SquadBattlesEvent(data.response) : null}, s.status = data.status, s.success = data.success, t.notify(s)
        }), i.send(), t
    }, UTSquadBattlesDAO.prototype.claimRewards = function claimRewards() {
        var t = new UTObservable;
        if (!this._authDelegate) return this._triggerUnauthorizedResponse(t), t;
        var i = new UTUtasHttpRequest(this._authDelegate);
        return i.setPath("/ut/game/" + GAME_NAME + "/sqbt/user/prize"), i.setRequestType(enums.HTTPRequestMethod.POST), i.observe(this, function _onClaimComplete(i, data) {
            i.unobserve(this);
            var s = new transferobjects.FUTHttpResponse;
            s.response = {
                awards: [],
                allClaimed: !0
            }, utils.JS.isObject(data.response) && (data.response.awardedPrizes.forEach(function (t) {
                t.awards.forEach(function (t) {
                    s.response.awards.push(new transferobjects.Reward(t))
                }, this)
            }, this), s.response.allClaimed = 0 === data.response.prizesInError.length), s.status = data.status, s.success = data.success, t.notify(s)
        }), i.send(), t
    }, new UTSquadBattlesDAO
}(),NamespaceManager.Register("services"),services.SquadBattles = function () {
    function SquadBattlesService() {
        this._currentEvent = null
    }

    return SquadBattlesService.prototype.reset = function reset() {
        this._currentEvent = null
    }, SquadBattlesService.prototype.requestCurrentEvent = function requestCurrentEvent() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return t.data = {event: {}}, utils.JS.isValid(this._currentEvent) ? (t.success = !0, t.status = enums.HTTPStatusCode.OK, t.data.event = this._currentEvent, event.notify(t), event) : (accessobjects.SquadBattles.getHub().observe(this, function _onSQBTStateRetrieved(i, s) {
            i.unobserve(this), t.success = s.success, t.status = s.status, t.data = s.response, this._currentEvent = t.data.event, event.notify(t)
        }), event)
    }, SquadBattlesService.prototype.claimRewards = function claimRewards() {
        var event = new UTObservable, t = new transferobjects.ServiceResponse;
        return accessobjects.SquadBattles.claimRewards().observe(this, function _onClaimRewardsComplete(i, s) {
            i.unobserve(this), t.success = s.success, t.status = s.status, t.data = {
                awards: s.response.awards,
                allClaimed: s.response.allClaimed
            }, s.success ? t.data.allClaimed ? this.reset() : services.Notification.queue([services.Localization.localize("notification.sqbt.claimAllFailed"), enums.UINotificationType.NEGATIVE]) : services.Notification.queue([services.Localization.localize("notification.sqbt.claimFailed"), enums.UINotificationType.NEGATIVE]), event.notify(t)
        }), event
    }, new SquadBattlesService
}(),NamespaceManager.Register("services"),services.URL = function () {
    function URLService() {
    }

    var t = new UTHashTable({}), i = "";
    return URLService.prototype.registerDeepLinkID = function registerDeepLinkID(id, i) {
        t.set(id, i)
    }, URLService.prototype.findValidDeepLinkID = function findValidDeepLinkID(t) {
        return utils.JS.find(t, function (t) {
            return this._isValidDeepLinkID(t)
        }.bind(this)) || enums.DeepLinkSections.NONE
    }, URLService.prototype._isValidDeepLinkID = function _isValidDeepLinkID(id) {
        return t.has(id)
    }, URLService.prototype.setDeepLinkURL = function setDeepLinkURL(t, s) {
        if (!utils.JS.isEmpty(t)) {
            var url = decodeURIComponent(t).trim();
            0 !== url.indexOf("easfc://") && (url = "easfc://fut/" + t, s && (url += "/" + s)), i = url
        }
    }, URLService.prototype.getDeepLinkURL = function getDeepLinkURL() {
        return i
    }, URLService.prototype.clearDeepLinkURL = function clearDeepLinkURL() {
        i = ""
    }, URLService.prototype.hasDeepLinkURL = function hasDeepLinkURL() {
        return !utils.JS.isEmpty(i)
    }, URLService.prototype.processDeepLinkURL = function processDeepLinkURL() {
        if (!this.hasDeepLinkURL()) return !1;
        var t = this.process(this.getDeepLinkURL());
        return t && this.clearDeepLinkURL(), t
    }, URLService.prototype.process = function process(url) {
        if (0 === (url = decodeURIComponent(url).trim()).indexOf("easfc://")) {
            if (!this._checkAuth()) return !1;
            var i = url.substr("easfc://".length).split("/").filter(function (t) {
                    return "" !== t
                }), s = i.shift(), tag = i.shift()
            ;
            if ("fut" !== s || !this._isValidDeepLinkID(tag)) return utils.Debug.Assert(!1, "[services.URL::process] Unable to process unknown deep link: " + url), !1;
            t.get(tag)(i)
        } else {
            if (0 !== url.indexOf("https://") && 0 !== url.indexOf("http://")) return utils.Debug.Assert(!1, "[services.URL::process] Unable to process unknown or unsupported URL structure: " + url), !1;
            window.open(url, "_system")
        }
        return !0
    }, URLService.prototype._checkAuth = function _checkAuth() {
        var t = services.Authentication.getFUTAuthState();
        if (!services.User.getUser().getSelectedPersona().hasFUT || t !== enums.FUTAuthState.COMPLETE) {
            if (t !== enums.FUTAuthState.SERVER_DOWN) switch (t) {
                case enums.FUTAuthState.CONCURRENT_SESSION:
                    getAppMain().getRootViewController().showLoggedOnConsoleView();
                    break;
                case enums.FUTAuthState.NEW_TRIAL_USER:
                    getAppMain().getRootViewController().showGettingStartedView(enums.GettingStartedTypes.FIFA);
                    break;
                default:
                    getAppMain().getRootViewController().showGettingStartedView(enums.GettingStartedTypes.FUT)
            }
            return !1
        }
        return !0
    }, new URLService
}(),NamespaceManager.Register("valueobjects"),valueobjects.NetworkErrorVO = function (code, level, title, message) {
    this._code = code, this._level = level, this._title = title, this._message = message
},valueobjects.NetworkErrorVO.prototype.getMessage = function () {
    return this._message
},valueobjects.NetworkErrorVO.prototype.getTitle = function () {
    return this._title
},valueobjects.NetworkErrorVO.prototype.getCode = function () {
    return this._code
},valueobjects.NetworkErrorVO.prototype.getErrorLevel = function () {
    return this._level
},valueobjects.NetworkErrorVO.prototype.isCritical = function () {
    return this._level === enums.NetworkErrorLevel.CRITICAL
},valueobjects.NetworkErrorVO.prototype.isImportant = function () {
    return this._level === enums.NetworkErrorLevel.IMPORTANT
},valueobjects.NetworkErrorVO.prototype.isUnimportant = function () {
    return this._level === enums.NetworkErrorLevel.UNIMPORTANT
},valueobjects.NetworkErrorVO.prototype.isCodeValid = function () {
    return this._code > 0
};
var NetworkErrorManager = {};
NetworkErrorManager.NUM_INTERNAL_SERVER_ERRORS = 0, NetworkErrorManager.checkCriticalStatus = function checkCriticalStatus(status) {
    return status === enums.HTTPStatusCode.NOT_FOUND || status === enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE || status === enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE_LEGACY || status === enums.HTTPStatusCode.ACCOUNT_BANNED || status === enums.HTTPStatusCode.INVALID_COOKIE || status === enums.HTTPStatusCode.CAPTCHA_REQUIRED || status === enums.HTTPStatusCode.FUN_CAPTCHA_REQUIRED || status === enums.HTTPStatusCode.UNAUTHORIZED || status === enums.HTTPStatusCode.UNRECOVERABLE_ERROR || status === enums.HTTPStatusCode.SERVER_ERROR
}, NetworkErrorManager.generateDefaultStatusMessage = function generateDefaultStatusMessage(status) {
    switch (status) {
        case enums.HTTPStatusCode.NOT_FOUND:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.CRITICAL, "popup.error.serviceNotFoundTitle", "popup.error.serviceNotFound");
        case enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE:
        case enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE_LEGACY:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.CRITICAL, "signedontoanotherdevice.title", "rpcErrorResponses.general.CARDHOUSE_ERR_ALREADY_LOGGEDIN_ON_CONSOLE");
        case enums.HTTPStatusCode.ACCOUNT_BANNED:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.CRITICAL, "error.banneduser.header", "error.banneduser.body");
        case enums.HTTPStatusCode.INVALID_COOKIE:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.CRITICAL, "popup.error.invalidcookieTitle", "popup.error.invalidcookie");
        case enums.HTTPStatusCode.CAPTCHA_REQUIRED:
        case enums.HTTPStatusCode.FUN_CAPTCHA_REQUIRED:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.CRITICAL, "popup.error.captcharequiredTitle", "popup.error.captcharequired");
        case enums.HTTPStatusCode.NO_CONTENT:
        case enums.HTTPStatusCode.BAD_REQUEST:
        case enums.HTTPStatusCode.UT_BAD_REQUEST:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.invalidrequestTitle", "popup.error.invalidrequest");
        case enums.HTTPStatusCode.PROFANITY:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.profanityTitle", "popup.error.profanity");
        case enums.HTTPStatusCode.NO_CARD_EXISTS:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.NoSuchCardTitle", "popup.error.NoSuchCard");
        case enums.HTTPStatusCode.SERVER_ERROR:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.CRITICAL, "popup.error.serverdownTitle", "popup.error.serverdown");
        case enums.HTTPStatusCode.SERVICE_IS_DISABLED:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.ServiceIsDisabledTitle", "popup.error.ServiceIsDisabled");
        case enums.HTTPStatusCode.RATE_LIMIT:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.RateLimitHeader", "popup.error.RateLimitBody");
        case enums.HTTPStatusCode.UNAUTHORIZED:
        case enums.HTTPStatusCode.UNRECOVERABLE_ERROR:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.CRITICAL, "popup.error.cannotcontinueTitle", "popup.error.cannotcontinue");
        case enums.HTTPStatusCode.NO_INTERNET_CONNECTION:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.NoInternetConnectionTitle", "popup.error.NoInternetConnection");
        case enums.HTTPStatusCode.REQUEST_TIME_OUT:
        case enums.HTTPStatusCode.NETWORK_ERROR:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.networkerrorTitle", "popup.error.networkerrorNotCritical");
        case enums.HTTPStatusCode.SOME_ITEMS_NOT_FREE:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.activesquad.itemsNotFreeTitle", "popup.error.activesquad.itemsNotFreeMsg");
        default:
            return new valueobjects.NetworkErrorVO(status, enums.NetworkErrorLevel.UNIMPORTANT, "popup.title.genericError", "popup.body.genericError")
    }
}, NetworkErrorManager.handleStatus = function handleStatus(status) {
    NetworkErrorManager.handle(NetworkErrorManager.generateDefaultStatusMessage(status))
}, NetworkErrorManager.handle = function handle(t, i, s) {
    t.isCritical() && (gClickShield.reset(), s = gAuthenticationModel.errorLogout.bind(gAuthenticationModel), services.PIN.sendData(enums.PIN.EVENT.ERROR, {
        sid: services.Authentication.getSession(enums.AuthEnvironment.UTAS).id,
        type: "disconnect",
        errid: enums.PIN.ERROR_EVT_ERRID.SERVER,
        server_type: "utas"
    })), !t.isUnimportant() || t.isUnimportant() && !i ? utils.PopupManager.displayNetworkError(t, s) : utils.JS.isFunction(s) && s()
}, NetworkErrorManager.trackServerError = function trackServerError() {
    if (NetworkErrorManager.NUM_INTERNAL_SERVER_ERRORS++, NetworkErrorManager.NUM_INTERNAL_SERVER_ERRORS >= gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_MAX_CONSECUTIVE_500_ERRORS)) {
        NetworkErrorManager.NUM_INTERNAL_SERVER_ERRORS = 0;
        var t = new valueobjects.NetworkErrorVO(enums.HTTPStatusCode.SERVER_ERROR, enums.NetworkErrorLevel.CRITICAL, "popup.error.cannotcontinueTitle", "popup.error.cannotcontinue");
        return NetworkErrorManager.handle(t, !1), !0
    }
    return !1
}, NamespaceManager.Register("utils"), utils.GoogleAnalytics = function () {
    window.ga("create", "UA-24487626-18")
}, utils.GoogleAnalytics.prototype.trackPage = function (url) {
    window.ga("send", "pageview", "/" + encodeURIComponent(url))
}, utils.GoogleAnalytics.prototype.trackEvent = function (category, action, screen, value) {
    window.ga("send", "event", category, action, screen, value)
}, utils.GoogleAnalytics.prototype.isEnabled = function (t) {
    var i = gConfigurationModel.getConfigObject(models.ConfigurationModel.KEY_ANALYTICS);
    return !!(utils.JS.isValid(i) && i.enabled && i.sectionEnabled[t] && gUserSettingsModel.getUsageSharingEnabled())
};
var TelemetryManager = {};
TelemetryManager.Sections = {
    LOGIN: "LOGIN",
    MOBILE_START: "MOBILE_START",
    HOME: "HOME",
    SQUADS: "SQUADS",
    STORE: "STORE",
    OBJECTIVES: "OBJECTIVES",
    ONBOARDING: "ONBOARDING",
    SBC: "SBC",
    TOTW: "TOTW",
    CLUB: "CLUB",
    AUCTIONS: "AUCTIONS",
    LEADERBOARDS: "LEADERBOARDS",
    MISC: "MISC"
}, TelemetryManager.Categories = {
    BUTTON_PRESS: "buttonpress",
    CAPTCHA: "captcha",
    FILTER: "filter",
    MARKET_STATUS: "marketstatus",
    OBJECTIVE_REWARDS_CLAIMED: "objectiverewardsclaimed",
    PATCH_FAIL: "patchfail",
    PLAYER_PICKS: "playerpicks",
    PN: "pn",
    SQUAD_BUILDING: "squadbuilding",
    ERROR: "error"
};
var googleAnalytics = new utils.GoogleAnalytics;
TelemetryManager.trackPage = function (t, url) {
    googleAnalytics.isEnabled(t) && (utils.JS.isString(url) ? googleAnalytics.trackPage(url) : utils.Debug.Assert(!1, "Invalid parameters set for TelemetryManager.trackPage"))
}, TelemetryManager.trackEvent = function (t, category, action, screen, value) {
    googleAnalytics.isEnabled(t) && (utils.JS.isString(category) && utils.JS.isString(action) ? (utils.JS.isString(screen) || (utils.Debug.Assert(!utils.JS.isValid(screen), "Invalid variable type for screen in TelemetryManager.trackEvent"), screen = ""), utils.JS.isNumber(value) || (utils.Debug.Assert(!utils.JS.isValid(value), "Invalid variable type for value in TelemetryManager.trackEvent"), value = 0), googleAnalytics.trackEvent(category, action, screen, value)) : utils.Debug.Assert(!1, "Invalid parameters set for TelemetryManager.trackEvent"))
}, NamespaceManager.Register("interfaces"), interfaces.View = function () {
}, interfaces.View.prototype.getRoot = function () {
}, interfaces.View.prototype.destroyGeneratedElements = function () {
}, interfaces.View.prototype.destroy = function () {
}, utils.JS.inherits(FUIView, UTResponder), FUIView.prototype._generate = function _generate() {
}, FUIView.prototype.getRoot = function getRoot() {
}, FUIView.prototype.getRootElement = function getRootElement() {
}, FUIView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
}, FUIView.prototype.destroy = function destroy() {
    this.dealloc()
}, FUIView.prototype.dealloc = function dealloc() {
    this.superclass(), this.removeSubviews(), this.removeFromSuperview(), this.destroyGeneratedElements()
}, FUIView.prototype.getSuperview = function getSuperview() {
    return this._superview
}, FUIView.prototype.getSubviews = function getSubviews() {
    return this._subviews.map(function (t) {
        return t.view
    })
}, FUIView.prototype.removeSubviews = function removeSubviews(animate) {
    for (var t = this._subviews.length; t-- > 0;) this._subviews[0].view.removeFromSuperview(animate)
}, FUIView.prototype.addSubview = function addSubview(view, t) {
    utils.Debug.Assert(view.conforms && view.conforms(FUIView), "Expected parameter to be of type FUIView."), view.willAddToSuperview(this);
    var root = this.getRootElement();
    t && root.contains(t) || (t = root), this._subviews.push({
        view: view,
        container: t
    }), view._superview = this, view.setEventDelegate(this), view.didAddToSuperview()
}, FUIView.prototype.willAddToSuperview = function willAddToSuperview(view) {
}, FUIView.prototype.didAddToSuperview = function didAddToSuperview() {
}, FUIView.prototype.removeFromSuperview = function removeFromSuperview(animate, t) {
    function _completeRemoveFromSuperview() {
        this._remove();
        var index = 0;
        utils.JS.find(this._superview._subviews, function (t, i) {
            return t.view === this && (index = i, !0)
        }.bind(this)), this.removeEventDelegate(this._superview), this._superview._subviews.splice(index, 1), this._superview.didRemoveSubview(this), this._superview = null, utils.JS.isFunction(t) && t()
    }

    this._superview && (this._superview.willRemoveSubview(this), animate ? this.perform(enums.UIAnimation.FADE_OUT, _completeRemoveFromSuperview.bind(this)) : _completeRemoveFromSuperview.call(this))
}, FUIView.prototype.willRemoveSubview = function willRemoveSubview(view) {
}, FUIView.prototype.didRemoveSubview = function didRemoveSubview(view) {
}, FUIView.prototype.layoutSubviews = function layoutSubviews() {
    this._subviews.forEach(function (t) {
        t.container.appendChild(t.view.getRootElement())
    }, this)
}, FUIView.prototype.isSubview = function isSubview(view) {
    return this === view || !!this._superview && this._superview.isSubview(view)
}, FUIView.prototype._setInteractionStateFlag = function _setInteractionStateFlag(t) {
    return t = !!t, this._interactionState !== t && (this._interactionState = t, !0)
},
    FUIView.prototype.setInteractionState = function setInteractionState(t) {
        this._setInteractionStateFlag(t) && (this._interactionState ? this._startHandlingEvents(this.getRootElement()) : this._stopHandlingEvents())
    }, FUIView.prototype.isInteractionEnabled = function isInteractionEnabled() {
    return this._interactionState
}, FUIView.prototype.getBoundingClientRect = function getBoundingClientRect() {
    return this.getRootElement().getBoundingClientRect()
}, FUIView.prototype.perform = function perform(t, i) {
    var s = utils.JS.isFunction(i), o = this.getRootElement();
    o ? this._isAnimating && s ? i() : this._isAnimating || (this._isAnimating = !0, this._addListener(enums.Event.ANIMATIONEND, o, function _onAnimateComplete(e) {
        this._removeListenersByNS("viewAnimate-" + t), this.removeClass(t), this._isAnimating = !1, s && i()
    }.bind(this), "viewAnimate-" + t), this.addClass(t)) : s && i()
}, FUIView.prototype.show = function show() {
    var t = this.getRootElement();
    "none" === t.style.display && (t.style.display = "none" !== this._defaultDisplay ? this._defaultDisplay : "block")
}, FUIView.prototype.hide = function hide() {
    var t = this.getRootElement(), display = t.style.display;
    "none" !== display && (this._defaultDisplay = display, t.style.display = "none")
}, FUIView.prototype.setDisplay = function setDisplay(t) {
    t = !!t, this.getRootElement().style.display = t ? "" : "none"
}, FUIView.prototype.setVisibility = function setVisibility(t) {
    t = !!t, this.getRootElement().style.visibility = t ? "" : "hidden"
}, FUIView.prototype.addClass = function addClass(t) {
    var root = this.getRootElement();
    utils.JS.isValid(root) && DOMKit.addClass(root, t)
}, FUIView.prototype.removeClass = function removeClass(t) {
    var root = this.getRootElement();
    utils.JS.isValid(root) && DOMKit.removeClass(root, t)
}, FUIView.prototype.toggleClass = function toggleClass(t, i) {
    var root = this.getRootElement();
    utils.JS.isValid(root) && DOMKit.toggleClass(root, t, i)
}, FUIView.prototype.hasClass = function hasClass(className) {
    var root = this.getRootElement();
    return !!utils.JS.isValid(root) && DOMKit.hasClass(root, className)
}, FUIView.prototype._remove = function _remove() {
    var root = this.getRootElement();
    utils.JS.isValid(root) && DOMKit.remove(root)
}, NamespaceManager.Register("components"), components.ClickShield = function ClickShieldView() {
    FUIView.call(this), this._shieldCounter = {
        FULL: 0,
        LOADING: 0,
        INTERACTION: 0
    }, this.dismissed = new UTObservable, Object.defineProperty(this, "dismissed", {writable: !1}), this._generate(), this._update(), this._startHandlingEvents(this.getRootElement())
}, utils.JS.inherits(components.ClickShield, FUIView), components.ClickShield.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.setAttribute("id", "ClickShield"), this.__loaderIcon = document.createElement("img"), this.__loaderIcon.setAttribute("src", "images/loader.gif"), this.__loaderIcon.classList.add("loaderIcon"), t.appendChild(this.__loaderIcon), this.__root = t, this._generated = !0
    }
}, components.ClickShield.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__loaderIcon = null
}, components.ClickShield.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, components.ClickShield.prototype.getRootElement = function getRootElement() {
    return this.__root
}, components.ClickShield.SHIELD = {
    NONE: 0,
    FULL: 1,
    LOADING: 2,
    INTERACTION: 4
}, components.ClickShield.prototype.dealloc = function dealloc() {
    this._stopHandlingEvents(), this.reset(), this.superclass()
}, components.ClickShield.prototype.reset = function reset() {
    this._shieldCounter.FULL = 0, this._shieldCounter.LOADING = 0, this._shieldCounter.INTERACTION = 0, this._update()
}, components.ClickShield.prototype.showShield = function (t) {
    if (t !== components.ClickShield.SHIELD.NONE) {
        switch (t) {
            case components.ClickShield.SHIELD.FULL:
                ++this._shieldCounter.FULL;
                break;
            case components.ClickShield.SHIELD.LOADING:
                ++this._shieldCounter.LOADING;
                break;
            case components.ClickShield.SHIELD.INTERACTION:
                ++this._shieldCounter.INTERACTION
        }
        this._update()
    }
}, components.ClickShield.prototype.hideShield = function (t) {
    if (t !== components.ClickShield.SHIELD.NONE) {
        switch (t) {
            case components.ClickShield.SHIELD.FULL:
                utils.Debug.Assert(this._shieldCounter.FULL - 1 >= 0, "Hiding full shield when counter is 0."), this._shieldCounter.FULL >= 1 && --this._shieldCounter.FULL;
                break;
            case components.ClickShield.SHIELD.LOADING:
                utils.Debug.Assert(this._shieldCounter.LOADING - 1 >= 0, "Hiding loading shield when counter is 0."), this._shieldCounter.LOADING >= 1 && --this._shieldCounter.LOADING;
                break;
            case components.ClickShield.SHIELD.INTERACTION:
                utils.Debug.Assert(this._shieldCounter.INTERACTION - 1 >= 0, "Hiding interaction shield when counter is 0."), this._shieldCounter.INTERACTION >= 1 && --this._shieldCounter.INTERACTION
        }
        this._update(), this.isShowing() || this.dismissed.notify()
    }
}, components.ClickShield.prototype.isShowing = function isShowing() {
    return this._shieldCounter.FULL > 0 || this._shieldCounter.LOADING > 0 || this._shieldCounter.INTERACTION > 0
}, components.ClickShield.prototype.isInteractionShieldShowing = function isInteractionShieldShowing() {
    return this._shieldCounter.INTERACTION > 0
}, components.ClickShield.prototype._update = function _update() {
    DOMKit.toggleDisplayStyle(this.__loaderIcon, this._shieldCounter.LOADING > 0);
    var t = this._shieldCounter.INTERACTION > 0 && !(this._shieldCounter.LOADING > 0 || this._shieldCounter.FULL > 0);
    this.setDisplay(this.isShowing()), this.toggleClass("interaction", t)
}, components.ClickShield.prototype._touchStarted = function _touchStarted(e) {
    this.superclass(), e.preventDefault()
}, components.ClickShield.prototype._touchMoved = function _touchMoved(e) {
    this.superclass(), hideKeyboard()
}, components.ClickShield.prototype._tapDetected = function _tapDetected(e) {
    this.superclass(), hideKeyboard()
};
var gClickShield = new components.ClickShield;
communication.TOTWHistoryDelegate = function (start, count) {
    communication.BaseFUTDelegate.call(this), this._start = start, this._count = count
}, utils.JS.inherits(communication.TOTWHistoryDelegate, communication.BaseFUTDelegate), communication.TOTWHistoryDelegate.prototype.execute = function () {
    var t = {};
    t.start = this._start, t.count = this._count, this.setURLVariables(t), this.useClickShield(!0);
    var url = communication.BaseFUTDelegate.REQUEST_ROOT + "totw";
    this.setRequest(url, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.send()
}, communication.TOTWHistoryDelegate.prototype.onSuccess = function (t) {
    if (gSettingsModel.enableService(models.SettingsModel.TOTW_HISTORY_ENABLED), !utils.JS.isValid(t.user)) return gTOTWHistoryModel.hasNext(t.hasNext || !1), gTOTWHistoryModel.hasPrevious(t.hasPrevious || !1), void this.dispatch(communication.BaseDelegate.SUCCESS);
    var i = [];
    t.user.forEach(function (t) {
        t.squadList.forEach(function (data) {
            var t = factories.Squad.createSquad(data);
            t.isValidForTOTW() && (t.setTOTW(!0), i.push(t))
        })
    }), gTOTWHistoryModel.hasNext(t.hasNext), gTOTWHistoryModel.hasPrevious(t.hasPrevious), gTOTWHistoryModel.updateData(i), this.dispatch(communication.BaseDelegate.SUCCESS)
}, communication.TOTWHistoryDelegate.prototype.onFail = function (errorCode) {
    errorCode === enums.HTTPStatusCode.SERVICE_IS_DISABLED && (gSettingsModel.disableService(models.SettingsModel.TOTW_HISTORY_ENABLED), gTOTWHistoryModel.hasNext(!1), gTOTWHistoryModel.hasPrevious(!1)), communication.TOTWHistoryDelegate.superClass_.onFail.call(this, errorCode)
}, communication.TeamsConfigDelegate = function () {
    communication.BaseDelegate.call(this)
}, utils.JS.inherits(communication.TeamsConfigDelegate, communication.BaseDelegate), communication.TeamsConfigDelegate.prototype.execute = function () {
    var url = utils.AssetLocator.getStaticTeamConfigURI();
    utils.ResourceManager.RequestResource(url, this.onResourceCached.bind(this), this.onResourceCacheFailed.bind(this))
}, communication.TeamsConfigDelegate.prototype.onResourceCached = function (value) {
    this.setRequest(value.path, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setCache(isWeb()), this.send()
}, communication.TeamsConfigDelegate.prototype.onResourceCacheFailed = function () {
    this.onFail(enums.HTTPStatusCode.UNRECOVERABLE_ERROR)
},
    communication.TeamsConfigDelegate.prototype.onSuccess = function (t) {
        communication.TeamsConfigDelegate.parseTeamConfig(t), communication.TeamsConfigDelegate.superClass_.onSuccess.call(this, t)
    }, communication.TeamsConfigDelegate.parseTeamConfig = function (t) {
    t.Years.forEach(function (t) {
        var i = utils.TextUtils.getYearFromString(t.Year);
        repositories.TeamConfig.addTeams(t.Teams, i), t.InternationalTeams && repositories.TeamConfig.addTeams(t.InternationalTeams, i), t.LegendsTeams && repositories.TeamConfig.addTeams(t.LegendsTeams, i, !0), repositories.TeamConfig.addLeagues(t.Leagues, i), t.LegendsLeagues && repositories.TeamConfig.addLeagues(t.LegendsLeagues, i, !0), repositories.TeamConfig.addNations(t.Nations, i)
    }, this)
}, communication.StaticPlayerDataDelegate = function () {
    function StaticPlayerDataDelegate() {
        communication.BaseDelegate.call(this)
    }

    function onCacheSuccess(value) {
        this.setRequest(value.path, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setCache(isWeb()), StaticPlayerDataDelegate.superClass_.send.call(this)
    }

    function onCacheFail() {
        this.onFail(enums.HTTPStatusCode.NOT_FOUND)
    }

    return utils.JS.inherits(StaticPlayerDataDelegate, communication.BaseDelegate), StaticPlayerDataDelegate.prototype.send = function () {
        utils.ResourceManager.RequestResource(utils.AssetLocator.getPlayerSearchFileURI(), onCacheSuccess.bind(this), onCacheFail.bind(this))
    }, StaticPlayerDataDelegate
}(), communication.PlayerMetaDataDelegate = function () {
    function PlayerMetaDataDelegate() {
        communication.BaseDelegate.call(this)
    }

    function onCacheSuccess(value) {
        this.setRequest(value.path, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setCache(isWeb()), PlayerMetaDataDelegate.superClass_.send.call(this)
    }

    function onCacheFail() {
        this.onFail(enums.HTTPStatusCode.NOT_FOUND)
    }

    return utils.JS.inherits(PlayerMetaDataDelegate, communication.BaseDelegate), PlayerMetaDataDelegate.prototype.send = function () {
        utils.ResourceManager.RequestResource(utils.AssetLocator.getPlayerMetaFileURI(), onCacheSuccess.bind(this), onCacheFail.bind(this))
    }, PlayerMetaDataDelegate
}(), communication.PlayerIconDataDelegate = function () {
    function PlayerIconDataDelegate() {
        communication.BaseDelegate.call(this)
    }

    function onCacheSuccess(value) {
        this.setRequest(value.path, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setCache(isWeb()), PlayerIconDataDelegate.superClass_.send.call(this)
    }

    function onCacheFail() {
        this.onFail(enums.HTTPStatusCode.NOT_FOUND)
    }

    return utils.JS.inherits(PlayerIconDataDelegate, communication.BaseDelegate), PlayerIconDataDelegate.prototype.send = function () {
        utils.ResourceManager.RequestResource(utils.AssetLocator.getPlayerIconFileURI(), onCacheSuccess.bind(this), onCacheFail.bind(this))
    }, PlayerIconDataDelegate
}(), communication.PlaceholderAssetsDelegate = function () {
    communication.BaseDelegate.call(this)
}, utils.JS.inherits(communication.PlaceholderAssetsDelegate, communication.BaseDelegate), communication.PlaceholderAssetsDelegate.prototype.send = function send() {
    utils.ResourceManager.RequestResource(utils.AssetLocator.getStaticPlaceholderAssetConfigURI(), function _onCacheSuccess(value) {
        this.setRequest(value.path, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setCache(isWeb()), communication.PlaceholderAssetsDelegate.superClass_.send.call(this)
    }.bind(this), function _onCacheFail() {
        this.onFail(enums.HTTPStatusCode.UNRECOVERABLE_ERROR)
    }.bind(this))
}, communication.PlaceholderAssetsDelegate.prototype.onSuccess = function (t) {
    utils.AssetLocator.PLACEHOLDER_LOOKUP = t, communication.PlaceholderAssetsDelegate.superClass_.onSuccess.call(this, t)
}, communication.SquadDataDelegate = function () {
    communication.BaseDelegate.call(this)
}, utils.JS.inherits(communication.SquadDataDelegate, communication.BaseDelegate), communication.SquadDataDelegate.prototype.send = function send() {
    utils.ResourceManager.RequestResource(utils.AssetLocator.getSquadDataURI(utils.TextUtils.getYearString(enums.Year.ASSET)), function _onCacheSuccess(value) {
        this.setRequest(value.path, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setCache(isWeb()), communication.SquadDataDelegate.superClass_.send.call(this)
    }.bind(this), function _onCacheFail() {
        this.onFail(enums.HTTPStatusCode.UNRECOVERABLE_ERROR)
    }.bind(this))
}, communication.SquadDataDelegate.prototype.onSuccess = function (t) {
    repositories.Squad.setSquadDataLookup(t), repositories.PlayStyle.setPlayStyles(t.styleAttribMods), communication.SquadDataDelegate.superClass_.onSuccess.call(this, t)
}, communication.GetMTXTransactionDelegate = function () {
    communication.BaseFUTDelegate.call(this), this._url = "/ut/v4/game/" + GAME_NAME + "/store/transaction", this._requestType = enums.HTTPRequestMethod.PUT, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON, this._data = {}
}, utils.JS.inherits(communication.GetMTXTransactionDelegate, communication.BaseFUTDelegate), communication.GetMTXTransactionDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.NOT_ENOUGH_CREDIT:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.auctionInsufficientCoinsTitle", "popup.error.auctionInsufficientCoins");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
}, communication.FunCaptchaHealthCheckDelegate = function () {
    communication.BaseDelegate.call(this), this.setRequest("https://funcaptcha.com/fc/healthcheck/", enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON)
}, utils.JS.inherits(communication.FunCaptchaHealthCheckDelegate, communication.BaseDelegate), utils.JS.inherits(UTCareerEntryDTO, UTObject), utils.JS.inherits(UTLegendsBioDTO, UTObject), utils.JS.inherits(UTPlayerMetaDataDTO, UTObject), NamespaceManager.Register("repositories"), repositories.PlayerMeta = function () {
    function PlayerMetaRepository() {
    }

    var t = new UTHashTable({});
    return PlayerMetaRepository.prototype.setData = function setData(data) {
        this.clearData();
        var index;
        for (index in data) if (data.hasOwnProperty(index)) {
            var i = new UTPlayerMetaDataDTO(parseInt(index, 10), data[index]);
            t.set(i.id, i)
        }
    }, PlayerMetaRepository.prototype.get = function get(i) {
        return t.get(i)
    }, PlayerMetaRepository.prototype.clearData = function clearData() {
        t.clear()
    }, new PlayerMetaRepository
}(), utils.JS.inherits(UTPlayerIconDataDTO, UTObject), NamespaceManager.Register("repositories"), repositories.PlayerIcon = function () {
    function PlayerIconRepository() {
    }

    var t = new UTHashTable({});
    return PlayerIconRepository.prototype.reset = function reset() {
        t.clear()
    }, PlayerIconRepository.prototype.setData = function setData(data) {
        this.reset(), data.forEach(function _storeIconEntry(i) {
            var s = new UTPlayerIconDataDTO(i);
            t.set(s.playerId, s)
        })
    }, PlayerIconRepository.prototype.get = function get(i) {
        return t.get(i)
    }, new PlayerIconRepository
}(), NamespaceManager.Register("viewmodels"), viewmodels.OnboardingState = function OnboardingStateViewmodel() {
    UTObject.call(this), this._countryId = 0, this._homeKitId = 0, this._awayKitId = 0, this._badgeId = 0, this._loanerDefId = 0
}, utils.JS.inherits(viewmodels.OnboardingState, UTObject), viewmodels.OnboardingState.prototype.getCountryId = function getCountryId() {
    return this._countryId
}, viewmodels.OnboardingState.prototype.setCountryId = function setCountryId(id) {
    this._countryId = id
}, viewmodels.OnboardingState.prototype.getHomeKitId = function getHomeKitId() {
    return this._homeKitId
}, viewmodels.OnboardingState.prototype.setHomeKitId = function setHomeKitId(id) {
    this._homeKitId = id
}, viewmodels.OnboardingState.prototype.hasHomeKit = function hasHomeKit() {
    return 0 !== this._homeKitId
}, viewmodels.OnboardingState.prototype.getAwayKitId = function getAwayKitId() {
    return this._awayKitId
}, viewmodels.OnboardingState.prototype.setAwayKitId = function setAwayKitId(id) {
    this._awayKitId = id
}, viewmodels.OnboardingState.prototype.hasAwayKit = function hasAwayKit() {
    return 0 !== this._awayKitId
}, viewmodels.OnboardingState.prototype.getBadgeId = function getBadgeId() {
    return this._badgeId
}, viewmodels.OnboardingState.prototype.setBadgeId = function setBadgeId(id) {
    this._badgeId = id
}, viewmodels.OnboardingState.prototype.hasBadge = function hasBadge() {
    return 0 !== this._badgeId
}, viewmodels.OnboardingState.prototype.getLoanerDefId = function getLoanerDefId() {
    return this._loanerDefId
}, viewmodels.OnboardingState.prototype.setLoanerDefId = function setLoanerDefId(id) {
    this._loanerDefId = id
}, viewmodels.OnboardingState.prototype.hasLoaner = function hasLoaner() {
    return 0 !== this._loanerDefId
}, viewmodels.OnboardingState.prototype.isComplete = function isComplete() {
    return this.hasBadge()
}, NamespaceManager.Register("models"), models.LoginModel = function UTLoginModel() {
    this._currentLoginStep = 0, Object.defineProperty(this, "_currentLoginStep", {
        writable: !0,
        enumerable: !1
    }), this._isRunning = !1, Object.defineProperty(this, "_isRunning", {
        writable: !0,
        enumerable: !1
    }), this._onboardingState = null, Object.defineProperty(this, "_onboardingState", {writable: !0, enumerable: !1})
}, models.LoginModel.LOGIN_STEP = {
    EXTENDED_LOC: 0,
    PERSONA_LIST: 1,
    FUT_AUTH: 2,
    RUN_PRE_BOOT_SEQUENCE: 3,
    RUN_BOOT_SEQUENCE: 4,
    HOME_SCREEN: 5
}, models.LoginModel.prototype.login = function login(resume) {
    utils.Debug.Assert(!this._isRunning, "[LOGIN] Attempted to login when a login/logout request is already running."), this._isRunning || (gClickShield.showShield(components.ClickShield.SHIELD.LOADING), this._isRunning = !0, resume || (this._currentLoginStep = 0), this._runCurrentStep())
}, models.LoginModel.prototype._runNextStep = function _runNextStep() {
    this._currentLoginStep++, this._runCurrentStep()
}, models.LoginModel.prototype._runCurrentStep = function _runCurrentStep() {
    switch (this._currentLoginStep) {
        case models.LoginModel.LOGIN_STEP.EXTENDED_LOC:
            this._getExtendedLocFile();
            break;
        case models.LoginModel.LOGIN_STEP.PERSONA_LIST:
            this._getFUTPersonaList();
            break;
        case models.LoginModel.LOGIN_STEP.FUT_AUTH:
            this._authenticateWithFUT();
            break;
        case models.LoginModel.LOGIN_STEP.RUN_PRE_BOOT_SEQUENCE:
            this._runPreBootStaticDataChain();
            break;
        case models.LoginModel.LOGIN_STEP.RUN_BOOT_SEQUENCE:
            this._runInitialMassBoot();
            break;
        case models.LoginModel.LOGIN_STEP.HOME_SCREEN:
            this._gotoHomeScreen();
            break;
        default:
            utils.Debug.Assert(!1, "[models.LoginModel] Invalid or unsupported bootflow step requested."), this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
    }
}, models.LoginModel.prototype._getExtendedLocFile = function _getExtendedLocFile() {
    accessobjects.Configuration.getDynamicLocalization().observe(this, function _onGetDynamicLocComplete(t, data) {
        t.unobserve(this), data.success ? (services.Localization.addLocalizationStrings(data.response), this._runNextStep()) : (this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING))
    })
}, models.LoginModel.prototype._getFUTPersonaList = function _getFUTPersonaList() {
    services.Authentication.requestPersonas().observe(this, function _onRequestPersonasComplete(t, response) {
        var i = getAppMain().getRootViewController();
        if (!NetworkErrorManager.checkCriticalStatus(response.status) && response.data.numPersonas < 1) this._isRunning = !1, i.showGettingStartedView(enums.GettingStartedTypes.FIFA), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING); else if (response.success) {
            var s = response.data.selectedPersona;
            if (s.isSwitch) this._isRunning = !1, i.showGettingStartedView(enums.GettingStartedTypes.PLATFORM_SWITCH), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING); else if (s.isGen3) this._isRunning = !1, i.showGettingStartedView(enums.GettingStartedTypes.PLATFORM_GEN3),
                gClickShield.hideShield(components.ClickShield.SHIELD.LOADING); else if (s.state === enums.UserState.RETURNING_USER_EXPIRED) this._isRunning = !1, i.showGettingStartedView(enums.GettingStartedTypes.WEBSTART_OVER), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING); else if (s.isReturningUser || s.hasFullAccess) this._runNextStep(); else {
                var o;
                o = s.isFreeTrial ? enums.GettingStartedTypes.FREE_TRIAL : s.isAccessTrial ? enums.GettingStartedTypes.ACCESS_TRIAL : enums.GettingStartedTypes.FUT, this._isRunning = !1, i.showGettingStartedView(o), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
            }
        } else this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
    })
}, models.LoginModel.prototype._authenticateWithFUT = function _authenticateWithFUT() {
    services.Authentication.authenticate(enums.AuthEnvironment.UTAS).observe(this, function _onAuthComplete(t, response) {
        response.data.environment === enums.AuthEnvironment.UTAS && (t.unobserve(this), response.success ? (services.PIN.sendData(enums.PIN.EVENT.LOGIN, {
            type: "utas",
            status: enums.PIN.LOGIN_EVT_STATUS.SUCCESS,
            userid: services.User.getUser().getSelectedPersona().id.toString()
        }), this._runNextStep()) : this._handleAuthenticationFailure(response.status))
    })
}, models.LoginModel.prototype._handleAuthenticationFailure = function _handleAuthenticationFailure(t) {
    switch (services.PIN.sendData(enums.PIN.EVENT.LOGIN, {
        type: "utas",
        status: enums.PIN.LOGIN_EVT_STATUS.FAIL,
        status_code: t.toString()
    }), t) {
        case enums.HTTPStatusCode.NO_INTERNET_CONNECTION:
            this._isRunning = !1, utils.PopupManager.showNoInternetConnectionPopup(), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING);
            break;
        case enums.HTTPStatusCode.INVALID_CREDENTIALS:
            this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING);
            break;
        case enums.HTTPStatusCode.ACCOUNT_BANNED:
            this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ACCOUNT_BANNED, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING);
            break;
        case enums.HTTPStatusCode.UPDATE_REQUIRED:
            utils.PopupManager.ShowConfirmation(utils.PopupManager.Confirmations.UPDATE_FUT, null, this.onUpdateFUTOK.bind(this), this.onUpdateFUTCancel.bind(this));
            break;
        case enums.HTTPStatusCode.DID_CREATE_EXCEEDED:
            this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.DID_CREATE_EXCEEDED, this.logout.bind(this));
            break;
        case enums.HTTPStatusCode.DID_LOGIN_EXCEEDED:
            this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.DID_LOGIN_EXCEEDED, this.logout.bind(this));
            break;
        case enums.HTTPStatusCode.DEVICE_SUSPENDED:
            this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.DEVICE_SUSPENDED, this.logout.bind(this));
            break;
        case enums.HTTPStatusCode.GEOIP_BLACKLISTED:
            this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.GEOIP_BLACKLISTED, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING);
            break;
        case enums.HTTPStatusCode.LOGGED_IN_ON_CONSOLE:
            this._isRunning = !1;
            var i = getAppMain().getRootViewController();
            i.showLoggedOnConsoleView() || i.getPresentedViewController().getView().setInteractionState(!0), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING);
            break;
        default:
            this._currentLoginStep = models.LoginModel.LOGIN_STEP.HOME_SCREEN, this._runCurrentStep()
    }
}, models.LoginModel.prototype.onUpdateFUTOK = function onUpdateFUTOK() {
    isChrome() ? this.onUpdateFUTCancel() : window.plugins.utilities.showStoreAppPage(this.onForceUpdateSuccess.bind(this), this.onUpdateFUTCancel.bind(this))
}, models.LoginModel.prototype.onForceUpdateSuccess = function onForceUpdateSuccess() {
    this._isRunning = !1, this.logout(), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
}, models.LoginModel.prototype.onUpdateFUTCancel = function onUpdateFUTCancel() {
    this._isRunning = !1, this.logout(),
        gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
}, models.LoginModel.prototype._runPreBootStaticDataChain = function _runPreBootStaticDataChain() {
    function _runStaticDataDelegateChain() {
        var t = new communication.TeamsConfigDelegate;
        t.setImportant(!0);
        var i = new communication.StaticPlayerDataDelegate;
        i.addListener(communication.BaseDelegate.SUCCESS, this, this._onStaticDataSuccess), i.addListener(communication.BaseDelegate.FAIL, this, this._onStaticDataFail), i.setImportant(!0);
        var s = new communication.PlayerMetaDataDelegate;
        s.addListener(communication.BaseDelegate.SUCCESS, this, this._onPlayerMetaDataSuccess), s.addListener(communication.BaseDelegate.FAIL, this, this._onPlayerMetaDataFail), s.setImportant(!0);
        var o = new communication.PlayerIconDataDelegate;
        o.addListener(communication.BaseDelegate.SUCCESS, this, this._onPlayerIconDataSuccess), o.addListener(communication.BaseDelegate.FAIL, this, this._onPlayerIconDataFail), o.setImportant(!0);
        var l = new communication.PlaceholderAssetsDelegate;
        l.setImportant(!0);
        var u = new communication.SquadDataDelegate;
        u.setImportant(!0);
        var h = [t, i, s, l, u, o], p = new utils.DelegateChain(h, !1);
        p.addListener(utils.DelegateChain.SUCCESS, this, this._onRunPreBootStaticDataChainSuccess), p.addListener(utils.DelegateChain.FAIL, this, this._onRunPreBootStaticDataChainFail), p.execute()
    }

    function _onStaticDataRequestFail() {
        this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
    }

    function _onRequestStoreLocalizationComplete(t, response) {
        t.unobserve(this), response.success ? _runStaticDataDelegateChain.call(this) : _onStaticDataRequestFail.call(this)
    }

    services.Configuration.loadRarityData().observe(this, function _onGetRarityComplete(t, data) {
        t.unobserve(this), data.success ? services.Localization.requestStoreLocalization().observe(this, _onRequestStoreLocalizationComplete) : _onStaticDataRequestFail.call(this)
    })
}, models.LoginModel.prototype._onStaticDataSuccess = function _onStaticDataSuccess(sender, response) {
    sender.clearListenersByScope(this);
    var t = [].concat(response.Players).concat(response.LegendsPlayers);
    repositories.Item.setStaticData(t)
}, models.LoginModel.prototype._onStaticDataFail = function _onStaticDataFail(sender) {
    sender.clearListenersByScope(this)
}, models.LoginModel.prototype._onPlayerMetaDataSuccess = function _onPlayerMetaDataSuccess(sender, response) {
    sender.clearListenersByScope(this), repositories.PlayerMeta.setData(response)
}, models.LoginModel.prototype._onPlayerMetaDataFail = function _onPlayerMetaDataFail(sender) {
    sender.clearListenersByScope(this)
}, models.LoginModel.prototype._onPlayerIconDataSuccess = function _onPlayerIconDataSuccess(sender, response) {
    sender.clearListenersByScope(this), repositories.PlayerIcon.setData(response)
}, models.LoginModel.prototype._onPlayerIconDataFail = function _onPlayerIconDataFail(sender) {
    sender.clearListenersByScope(this)
}, models.LoginModel.prototype._onRunPreBootStaticDataChainSuccess = function _onRunPreBootStaticDataChainSuccess(sender) {
    sender.clearListenersByScope(this), services.User.getUser().getSelectedPersona().isEligibleForMobileStart ? (this._isRunning = !1, this._currentLoginStep++, this._loadOnboardingFlow(), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)) : this._runNextStep()
}, models.LoginModel.prototype._onRunPreBootStaticDataChainFail = function _onRunPreBootStaticDataChainFail(sender, error, t) {
    sender.clearListenersByScope(this), this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
}, models.LoginModel.prototype._runInitialMassBoot = function _runInitialMassBoot() {
    var t = new communication.TOTWHistoryDelegate(0, 90);
    t.setImportant(!1), t.execute(), services.User.requestMassInfo().observe(this, this._onRequestMassInfoComplete)
}, models.LoginModel.prototype._onRequestMassInfoComplete = function _onRequestMassInfoComplete(t, response) {
    if (t.unobserve(this),
            response.success) {
        var i = services.User.getUser().getSelectedPersona();
        if (this._setOnboardingState(response.data.onboardingState), i.isPC) {
            var s = new communication.GetMTXTransactionDelegate;
            s.addListener(communication.BaseDelegate.SUCCESS, this, this._onGetMTXSuccess), s.addListener(communication.BaseDelegate.FAIL, this, this._onGetMTXFail), s.send()
        } else gSettingsModel.setUnrecoveredFIFAPointsTransaction(!1), this._runNextStep()
    } else response.status === enums.HTTPStatusCode.FUN_CAPTCHA_REQUIRED ? this._fcHealthCheck().observe(this, this._onHealthCheckComplete) : response.status === enums.HTTPStatusCode.CAPTCHA_REQUIRED ? (this._isRunning = !1, getAppMain().getRootViewController().showCaptchaView(), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)) : (this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING))
}, models.LoginModel.prototype._setOnboardingState = function _setOnboardingState(state) {
    state.hasOnboarding && (this._onboardingState = new viewmodels.OnboardingState, this._onboardingState.setLoanerDefId(state.loanDefId), this._onboardingState.setHomeKitId(state.homeKitId), this._onboardingState.setAwayKitId(state.awayKitId), this._onboardingState.setBadgeId(state.badgeId), this._onboardingState.setCountryId(state.nationId))
}, models.LoginModel.prototype._loadOnboardingFlow = function _loadOnboardingFlow(state) {
    var t = getAppMain().getRootViewController();
    state && !state.hasLoaner() ? repositories.Squad.getSquadById(0).observe(this, function _onGetSquadComplete(i, s) {
        i.unobserve(this), utils.Debug.Assert(utils.JS.isValid(s), "Failed to load starter squad"), t.showOnboardingView(state, s)
    }) : t.showOnboardingView(state)
}, models.LoginModel.prototype._onGetMTXSuccess = function _onGetMTXSuccess(sender, data) {
    sender.clearListenersByScope(this), gSettingsModel.setUnrecoveredFIFAPointsTransaction(!1), this._runNextStep()
}, models.LoginModel.prototype._onGetMTXFail = function _onGetMTXFail(sender, error) {
    if (sender.clearListenersByScope(this), gSettingsModel.setUnrecoveredFIFAPointsTransaction(!0), gSettingsModel.isServiceAvailable(models.SettingsModel.FIFA_POINTS_ENABLED)) {
        var t = new valueobjects.NetworkErrorVO(enums.HTTPStatusCode.FIFA_POINTS_FAILED, enums.NetworkErrorLevel.UNIMPORTANT, "popup.error.ServiceIsDisabledTitle", "popup.error.mobile.invalidTransactionState");
        utils.PopupManager.displayNetworkError(t)
    }
    this._runNextStep()
}, models.LoginModel.prototype._gotoHomeScreen = function _gotoHomeScreen() {
    this._isRunning = !1, services.Authentication.getSession(enums.AuthEnvironment.UTAS).state === enums.AuthenticationState.STATE_AUTHENTICATION_FAILED ? utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.SERVER_DOWN, this.logout.bind(this)) : this._onboardingState && !this._onboardingState.isComplete() ? (this._loadOnboardingFlow(this._onboardingState), this._onboardingState = null) : (controllers.SettingsUpdaterController.startTimer(), getAppMain().getRootViewController().showGameView()), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
}, models.LoginModel.prototype.logout = function logout(reason) {
    utils.Debug.Assert(!this._isRunning, "[LOGIN] Attempted to logout when a login/logout request is already running."), this._isRunning || (this._isRunning = !0, gClickShield.showShield(components.ClickShield.SHIELD.LOADING), utils.JS.isEmpty(reason) && (reason = enums.PIN.LOGOUT_EVT_END_REASON.NORMAL), services.PIN.sendData(enums.PIN.EVENT.LOGOUT, {
        type: "utas",
        end_reason: reason
    }), services.Authentication.unauthenticate(enums.AuthEnvironment.UTAS).observe(this, function _onUtasLogoutComplete(t, response) {
        t.unobserve(this), eadp.identity.logout(this._completeLogout.bind(this))
    }))
}, models.LoginModel.prototype._completeLogout = function _completeLogout() {
    gClickShield.hideShield(components.ClickShield.SHIELD.LOADING), this._resetApp(), this._isRunning = !1
}, models.LoginModel.prototype.switchPersona = function switchPersona(t) {
    services.User.getUser().selectedPersona = t.id, this._resetModels()
    ;var i = services.Authentication.getSession(enums.AuthEnvironment.UTAS);
    if (t.isSwitch) getAppMain().getRootViewController().showGettingStartedView(enums.GettingStartedTypes.PLATFORM_SWITCH); else if (t.isGen3) getAppMain().getRootViewController().showGettingStartedView(enums.GettingStartedTypes.PLATFORM_GEN3); else if (t.hasFUT) {
        var s = services.Authentication.getServerShardBySKU(t.sku);
        i.protocol = s.protocol, i.hostname = s.hostname, this._currentLoginStep = models.LoginModel.LOGIN_STEP.FUT_AUTH, this.login(!0)
    } else i.state = enums.AuthenticationState.STATE_AUTHENTICATION_FAILED, i.status = enums.HTTPStatusCode.NO_USER, this._currentLoginStep = models.LoginModel.LOGIN_STEP.HOME_SCREEN, this.login(!0)
}, models.LoginModel.prototype._resetApp = function _resetApp() {
    controllers.SettingsUpdaterController.clearTimer(), this._resetModels(), services.Authentication.reset(), services.User.reset(), gUserSettingsModel.clearUserKey();
    var t = getAppMain().getRootViewController();
    t.showLoginView() || t.getPresentedViewController().getView().enableLoginButton(!0)
}, models.LoginModel.prototype._resetModels = function _resetModels() {
    gStaffStatsModel.reset(), gTOTWHistoryModel.reset(), repositories.Item.reset(), repositories.Message.reset(), repositories.Rarity.reset(), repositories.SBC.reset(), repositories.Squad.reset(), repositories.TeamConfig.reset(), services.Champions.reset(), services.Objectives.reset(), services.Rivals.reset(), services.SquadBattles.reset()
}, models.LoginModel.prototype._onHealthCheckComplete = function _onHealthCheckComplete(t, i) {
    t.unobserve(this), this._isRunning = !1, i ? (getAppMain().getRootViewController().showFunCaptchaView(), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)) : this._handleFunCaptchaOutage()
}, models.LoginModel.prototype._handleFunCaptchaOutage = function _handleFunCaptchaOutage() {
    var t = new communication.FunCaptchaValidateDelegate("");
    t.addListener(communication.BaseDelegate.SUCCESS, this, function _onCaptchaValidateSuccess(sender) {
        sender.clearListenersByScope(this), this.login(!0), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
    }), t.addListener(communication.BaseDelegate.FAIL, this, function _onCaptchaValidateFail(sender, error) {
        sender.clearListenersByScope(this), error._code === enums.HTTPStatusCode.CAPTCHA_REQUIRED ? getAppMain().getRootViewController().showCaptchaView() : this.logout(), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
    }), t.send()
}, models.LoginModel.prototype._fcHealthCheck = function _fcHealthCheck() {
    var event = new UTObservable, t = new communication.FunCaptchaHealthCheckDelegate;
    return t.addListener(communication.BaseDelegate.SUCCESS, this, function _onFcHealthCheckSuccess(sender, response) {
        sender.clearListenersByScope(this), event.notify(response.status || !1)
    }), t.addListener(communication.BaseDelegate.FAIL, this, function _onFCHealthCheckFail(sender, error) {
        sender.clearListenersByScope(this), event.notify(!1)
    }), t.send(), event
}, NamespaceManager.Register("models"), models.AuthenticationModel = function () {
    this._loginModel = null
}, models.AuthenticationModel.prototype.setLoginModel = function setLoginModel(t) {
    this._loginModel = t
}, models.AuthenticationModel.prototype.login = function login(resume) {
    utils.Debug.Assert(utils.JS.isValid(this._loginModel), "[AuthenticationModel] Login model hasn't been defined."), this._loginModel.login(resume)
}, models.AuthenticationModel.prototype._logout = function _logout(reason) {
    utils.Debug.Assert(utils.JS.isValid(this._loginModel), "[AuthenticationModel] Login model hasn't been defined."), this._loginModel.logout(reason)
}, models.AuthenticationModel.prototype.logout = function logout() {
    this._logout(enums.PIN.LOGOUT_EVT_END_REASON.NORMAL)
}, models.AuthenticationModel.prototype.errorLogout = function errorLogout() {
    this._logout(enums.PIN.LOGOUT_EVT_END_REASON.ERROR)
}, models.AuthenticationModel.prototype.switchPersona = function switchPersona(t) {
    utils.Debug.Assert(utils.JS.isValid(this._loginModel), "[AuthenticationModel] Login model hasn't been defined."), this._loginModel.switchPersona(t)
}
;var gAuthenticationModel = new models.AuthenticationModel;
NamespaceManager.Register("views.popups"), views.popups.LiveMessage = function LiveMessage() {
    FUIView.call(this), this._isRendered = !1, this._generate()
}, utils.JS.inherits(views.popups.LiveMessage, FUIView), views.popups.LiveMessage.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("ut-livemessage"), t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container"), this.__contentContainer = document.createElement("div"), this.__contentContainer.classList.add("ut-content");
        var i = document.createElement("div");
        i.classList.add("ut-livemessage-container"), this.__header = document.createElement("header"), this.__header.classList.add("ut-livemessage-header");
        var s = document.createElement("div");
        s.classList.add("ut-livemessage-header--meta"), this._date = new components.TextField, this._date.getRootElement().classList.add("ut-livemessage-header--date"), s.appendChild(this._date.getRootElement()), this._numMessages = new components.TextField, this._numMessages.getRootElement().classList.add("ut-livemessage-header--counter"), s.appendChild(this._numMessages.getRootElement()), this.__header.appendChild(s), this.__title = document.createElement("h1"), this.__header.appendChild(this.__title), this.__subtitle = document.createElement("h2"), this.__header.appendChild(this.__subtitle), this.__info = document.createElement("h3"), this.__header.appendChild(this.__info), i.appendChild(this.__header);
        var o = document.createElement("div");
        o.classList.add("ut-livemessage-content"), this._image = new components.ImageLoader, this._image.getRootElement().classList.add("ut-livemessage-content--image"), o.appendChild(this._image.getRootElement()), this.__content = document.createElement("div"), this.__content.classList.add("ut-livemessage-content--body"), o.appendChild(this.__content), i.appendChild(o);
        var l = document.createElement("div");
        l.classList.add("ut-livemessage-footer"), this._continueBtn = new views.buttons.DefaultButton, this._continueBtn.getRootElement().classList.add("call-to-action"), l.appendChild(this._continueBtn.getRootElement()), i.appendChild(l), this.__contentContainer.appendChild(i), t.appendChild(this.__contentContainer), this.__root = t, this._generated = !0
    }
}, views.popups.LiveMessage.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__contentContainer = null, this.__header = null, this._date.destroy(), this._numMessages.destroy(), this.__title = null, this.__subtitle = null, this.__info = null, this._image.destroy(), this.__content = null, this._continueBtn.destroy()
}, views.popups.LiveMessage.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, views.popups.LiveMessage.prototype.getRootElement = function getRootElement() {
    return this.__root
}, views.popups.LiveMessage.prototype.init = function init() {
    this.superclass(), this._continueBtn.init(), this._continueBtn.setText(services.Localization.localize("common.dialog.continue")), this.setInteractionState(!0)
}, views.popups.LiveMessage.prototype.setInteractionState = function setInteractionState(t) {
    this._setInteractionStateFlag(t), this._continueBtn.setInteractionState(t)
}, views.popups.LiveMessage.prototype._renderHeader = function _renderHeader(t, i) {
    var title = t.textFields.get(enums.ArubaTextFieldType.TITLE),
        s = t.textFields.get(enums.ArubaTextFieldType.SUBTITLE), info = t.textFields.get(enums.ArubaTextFieldType.INFO),
        o = utils.JS.isValid(title), l = utils.JS.isValid(s), u = utils.JS.isValid(info), h = u ? info.colour : "";
    this.__title.textContent = o ? title.text : "", this.__title.style.color = o ? title.colour : "", this.__subtitle.textContent = l ? s.text : "", this.__subtitle.style.color = l ? s.colour : "", this.__info.textContent = u ? info.text : "", this.__info.style.backgroundColor = h, this.__info.style.color = utils.JS.isEmpty(h) ? "" : "#fff", this._numMessages.setText(i)
}, views.popups.LiveMessage.prototype._renderImages = function _renderImages(t, i) {
    this._image.setExternalResource(t, !0).observe(this, this._imageLoad),
        this.__contentContainer.style.backgroundImage = utils.JS.isEmpty(i) ? "" : "url(" + i + ")"
}, views.popups.LiveMessage.prototype._imageLoad = function _imageLoad(t, i, s, path) {
    t.unobserve(this), i || s.setLocalResource("images/liveMessageDefault.png")
}, views.popups.LiveMessage.prototype.renderContent = function renderContent(body) {
    this.__content.innerHTML = body.text, this.__content.style.color = body.colour
}, views.popups.LiveMessage.prototype.render = function render(t, i) {
    var body = t.textFields.get(enums.ArubaTextFieldType.BODY), s = t.images.get(enums.ArubaImageType.BODY) || "",
        o = t.images.get(enums.ArubaImageType.BACKGROUND) || "";
    this._isRendered ? ($(this.__header).fadeOut(200, function () {
        this._renderHeader(t, i), $(this.__header).fadeIn(200)
    }.bind(this)), $(this.__content).fadeOut(200, function () {
        this.renderContent(body), $(this.__content).fadeIn(200)
    }.bind(this)), this._image.getRoot().fadeOut(200, function () {
        this._renderImages(s, o), this._image.getRoot().fadeIn(200)
    }.bind(this))) : (this._renderHeader(t, i), this._renderImages(s, o), this.renderContent(body), this._isRendered = !0)
}, views.popups.LiveMessage.prototype.getContinueButton = function getContinueButton() {
    return this._continueBtn
}, utils.JS.inherits(FUITargetActionView, FUIView), FUITargetActionView.prototype.dealloc = function dealloc() {
    this.superclass(), this._targets && (this._targets.clear(), this._targets = null)
}, FUITargetActionView.prototype.addTarget = function addTarget(target, action, event) {
    this.getActions(target, event).indexOf(action) >= 0 || (this._targets.has(event) ? this._targets.get(event).push(Object.freeze({
        target: target,
        action: action
    })) : this._targets.set(event, [Object.freeze({target: target, action: action})]))
}, FUITargetActionView.prototype.removeTarget = function removeTarget(target, action, event) {
    if (this._targets.has(event)) {
        var t = this._targets.get(event).filter(function (t) {
            return !(t.target === target && t.action === action)
        });
        this._targets.set(event, t)
    }
}, FUITargetActionView.prototype.getActions = function getActions(target, event) {
    var t = [], i = this._targets.get(event);
    return i && (t = i.reduce(function (t, i) {
        return i.target === target && t.push(i.action), t
    }, [])), t
}, FUITargetActionView.prototype._triggerActions = function _triggerActions(event, data) {
    data = data || null, this._targets.has(event) && this._targets.get(event).forEach(function (t) {
        t.action.call(t.target, this, event, data)
    }, this)
}, utils.JS.inherits(FUIControl, FUITargetActionView), FUIControl.prototype.blur = function blur() {
    var root = this.getRootElement();
    root === document.activeElement && root.blur()
}, FUIControl.prototype.focus = function focus() {
    var root = this.getRootElement();
    root !== document.activeElement && root.focus()
}, FUIControl.prototype.addTarget = function addTarget(target, action, event) {
    var t = this._evaluateEventString(event);
    utils.Debug.Assert(t, "Invalid assignment; expected enums.Event.<string>"), t && this.superclass(target, action, event)
}, FUIControl.prototype.removeTarget = function removeTarget(target, action, event) {
    var t = this._evaluateEventString(event);
    utils.Debug.Assert(t, "Invalid assignment; expected enums.Event.<string>"), t && this.superclass(target, action, event)
}, FUIControl.prototype.getActions = function getActions(target, event) {
    var t = this._evaluateEventString(event);
    return utils.Debug.Assert(t, "Invalid assignment; expected enums.Event.<string>"), t ? this.superclass(target, event) : []
}, FUIControl.prototype._triggerActions = function _triggerActions(event, data) {
    var t = this._evaluateEventString(event);
    utils.Debug.Assert(t, "Invalid assignment; expected enums.Event.<string>"), t && this.superclass(event, data)
}, FUIControl.prototype._evaluateEventString = function _evaluateEventString(t) {
    var i;
    for (i in enums.Event) if (enums.Event.hasOwnProperty(i) && t === enums.Event[i]) return !0;
    return !1
}, utils.JS.inherits(FUIButton, FUIControl), FUIButton.prototype.init = function init() {
    this.superclass(), this.setInteractionState(!0)
}, FUIButton.prototype.setInteractionState = function setInteractionState(t) {
    var i = this._interactionState;
    this.superclass(t), this._interactionState !== i && (this.getRootElement().disabled = !this._interactionState,
        this.toggleClass(enums.UIButtonState.DISABLED, !this._interactionState), this._interactionState || this.removeClass([enums.UIButtonState.ACTIVE, enums.UIButtonState.HOVER].join(" ")))
}, FUIButton.prototype.setText = function setText(text) {
    this.getRootElement().textContent = text
}, FUIButton.prototype._touchStarted = function _touchStarted(e) {
    this.superclass(e), this.addClass(enums.UIButtonState.ACTIVE)
}, FUIButton.prototype._touchMoved = function _touchMoved(e) {
    this.superclass(e), this.removeClass(enums.UIButtonState.ACTIVE)
}, FUIButton.prototype._touchEnded = function _touchEnded(e) {
    this.superclass(e), this.removeClass(enums.UIButtonState.ACTIVE)
}, FUIButton.prototype._touchCancelled = function _touchCancelled(e) {
    this.superclass(e), this.removeClass(enums.UIButtonState.ACTIVE)
}, FUIButton.prototype._mouseLeave = function _mouseLeave(e) {
    this.superclass(e), this.removeClass(enums.UIButtonState.ACTIVE), this.removeClass(enums.UIButtonState.HOVER)
}, FUIButton.prototype._mouseEnter = function _mouseEnter(e) {
    this.superclass(e), this.addClass(enums.UIButtonState.HOVER)
}, FUIButton.prototype._tapDetected = function _tapDetected(e) {
    this.superclass(e), this._triggerActions(enums.Event.TAP)
}, NamespaceManager.Register("views.buttons"), views.buttons.FlatButton = function FUIFlatButton() {
    FUIButton.call(this), this._generate()
}, utils.JS.inherits(views.buttons.FlatButton, FUIButton), views.buttons.FlatButton.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("button");
        t.classList.add("flat"), this.__root = t, this._generated = !0
    }
}, views.buttons.FlatButton.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
}, views.buttons.FlatButton.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, views.buttons.FlatButton.prototype.getRootElement = function getRootElement() {
    return this.__root
}, NamespaceManager.Register("views.popups"), views.popups.Dialog = function UTDialogPopupView() {
    FUIView.call(this), this._optionBtns = [], this._generate()
}, utils.JS.inherits(views.popups.Dialog, FUIView), views.popups.Dialog.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("section");
        t.classList.add("Dialog");
        var i = document.createElement("header");
        this.__title = document.createElement("h1"), this.__title.classList.add("dialog-title"), i.appendChild(this.__title), t.appendChild(i);
        var s = document.createElement("div");
        s.classList.add("dialog-body"), this.__msg = document.createElement("p"), this.__msg.classList.add("dialog-msg"), s.appendChild(this.__msg), this.__btnContainer = document.createElement("footer"), this.__btnContainer.classList.add("dialog-footer"), s.appendChild(this.__btnContainer), t.appendChild(s), this.__root = t, this._generated = !0
    }
}, views.popups.Dialog.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__title = null, this.__msg = null, this.__btnContainer = null
}, views.popups.Dialog.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, views.popups.Dialog.prototype.getRootElement = function getRootElement() {
    return this.__root
}, views.popups.Dialog.prototype.dealloc = function dealloc() {
    this._optionBtns.forEach(function (t) {
        t.dealloc()
    }), this._optionBtns = [], this.superclass()
}, views.popups.Dialog.prototype.render = function render(t, title, type, i) {
    var message = utils.JS.isValid(i) ? services.Localization.localize(t, i) : services.Localization.localize(t);
    this.__msg.textContent = message, this.__title.textContent = services.Localization.localize(title), this.addClass(type), this.layoutSubviews()
}, views.popups.Dialog.prototype.createOption = function createOption(label) {
    var t = new views.buttons.FlatButton;
    return t.setText(label), t.init(), this._optionBtns.push(t), this.addSubview(t, this.__btnContainer), t
}, utils.JS.inherits(UTModalContainerView, FUITargetActionView), UTModalContainerView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("view-modal-container"), this.__root = t,
            this._generated = !0
    }
}, UTModalContainerView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
}, UTModalContainerView.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, UTModalContainerView.prototype.getRootElement = function getRootElement() {
    return this.__root
}, UTModalContainerView.Event = {SHIELDPRESS: "UTModalContainerView.Event.SHIELDPRESS"}, UTModalContainerView.prototype.init = function init() {
    this.superclass(), this.setInteractionState(!0)
}, UTModalContainerView.prototype._touchMoved = function _touchMoved(e) {
    this.getRootElement().contains(e.target) ? this.superclass() : (e.preventDefault(), e.stopPropagation())
}, UTModalContainerView.prototype._tapDetected = function _tapDetected(e) {
    e.target === this.getRootElement() ? this._triggerActions(UTModalContainerView.Event.SHIELDPRESS) : this.superclass()
}, utils.JS.inherits(UTPresentationController, UTObject), UTPresentationController.prototype.initWithViewControllers = function initWithViewControllers(t, i) {
    this.initialized || (utils.Debug.Assert(utils.JS.isValid(t) && t.isSubClass(FUIViewController), "Presented object expected to be a view controller."), utils.Debug.Assert(utils.JS.isValid(i) && i.isSubClass(FUIViewController), "Presenting object expected to be a view controller."), this._presentedViewController = t, this._presentingViewController = i, this.init())
}, UTPresentationController.prototype.dealloc = function dealloc() {
    this.superclass(), this._presentedView = null, this._presentedViewController = null, this._presentingViewController = null, this._isPresenting = !1
}, UTPresentationController.prototype.getPresentedViewController = function getPresentedViewController() {
    return this._presentedViewController
}, UTPresentationController.prototype._insertView = function _insertView(view, t) {
    this._presentedView = view, this._presentedView.getSuperview() !== t && (t.addSubview(this._presentedView), t.layoutSubviews())
}, UTPresentationController.prototype._presentInFullScreen = function _presentInFullScreen() {
    var t = this._presentedViewController.getView(), i = t.getRootElement();
    i.style.position = "fixed", i.style.top = "0", i.style.left = "0", i.style.right = "0", i.style.bottom = "0", i.style.zIndex = "10", this._insertView(t, getAppMain().getRootViewController().getView())
}, UTPresentationController.prototype._presentInContainerContext = function _presentInContainerContext() {
    var t = this._presentedViewController.getView(), i = t.getRootElement();
    i.style.position = "absolute", i.style.top = "0", i.style.left = "0", i.style.right = "0", i.style.bottom = "0", i.style.zIndex = "10", this._insertView(t, this._presentingViewController.getView())
}, UTPresentationController.prototype._presentInFormModal = function _presentInFormModal() {
    var t = new UTModalContainerView;
    t.init(), t.addClass("form-modal"), t.addSubview(this._presentedViewController.getView()), t.layoutSubviews(), t.addTarget(this._presentingViewController, function (sender, event, data) {
        this.dismissViewController(!0)
    }, UTModalContainerView.Event.SHIELDPRESS), this._insertView(t, getAppMain().getRootViewController().getView())
}, UTPresentationController.prototype._presentInPageModal = function _presentInPageModal() {
    var t = new UTModalContainerView;
    t.init(), t.addClass("page-modal"), t.addSubview(this._presentedViewController.getView()), t.layoutSubviews(), t.addTarget(this._presentingViewController, function (sender, event, data) {
        this.dismissViewController(!0)
    }, UTModalContainerView.Event.SHIELDPRESS), this._insertView(t, getAppMain().getRootViewController().getView())
}, UTPresentationController.prototype.present = function present(t, i) {
    function _completePresentation() {
        this.presentationDidEnd(), this._presentingViewController.didPresent(this._presentedViewController), utils.JS.isFunction(i) && i()
    }

    if (!this._isPresenting) {
        switch (this._isPresenting = !0, this._presentingViewController.willPresent(this._presentedViewController), this.presentationWillBegin(), this._presentingViewController.addChildViewController(this._presentedViewController), this._presentedViewController.viewWillAppear(),
            this._presentedViewController.modalDisplayStyle) {
            case enums.UIModalDisplayStyles.FULLSCREEN:
                this._presentInFullScreen();
                break;
            case enums.UIModalDisplayStyles.FILL:
                this._presentInContainerContext();
                break;
            case enums.UIModalDisplayStyles.FORM:
                this._presentInFormModal();
                break;
            case enums.UIModalDisplayStyles.PAGE:
                this._presentInPageModal();
                break;
            default:
                utils.Debug.Assert(!1, "View controller does not have a supported modal display style.")
        }
        this._presentedViewController.viewDidAppear(), t ? this._presentedViewController.getView().perform(enums.UIAnimation.FADE_IN, _completePresentation.bind(this)) : _completePresentation.call(this)
    }
}, UTPresentationController.prototype.dismiss = function dismiss(t, i) {
    this._isPresenting && (this._presentingViewController.willDismiss(this._presentedViewController), this.dismissalWillBegin(), this._presentedViewController.viewWillDisappear(), this._presentedView.removeFromSuperview(t, function _completeDismissal() {
        this._presentedView.isSubClass(UTModalContainerView) ? this._presentedView.dealloc() : this._presentedView.getRootElement().removeAttribute("style"), this._presentingViewController.viewDidDisappear(), this.dismissalDidEnd(), this._presentingViewController.didDismiss(this._presentedViewController), this._presentedView = null, this._isPresenting = !1, this._presentingViewController.removeChildViewController(this._presentedViewController), utils.JS.isFunction(i) && i()
    }.bind(this)))
}, UTPresentationController.prototype.presentationWillBegin = function presentationWillBegin() {
}, UTPresentationController.prototype.presentationDidEnd = function presentationDidEnd() {
}, UTPresentationController.prototype.dismissalWillBegin = function dismissalWillBegin() {
}, UTPresentationController.prototype.dismissalDidEnd = function dismissalDidEnd() {
}, utils.JS.inherits(FUIViewController, UTResponder), FUIViewController.prototype.init = function init() {
    this.initialized || (this.superclass(), this.initialized = !0)
}, FUIViewController.prototype.dealloc = function dealloc() {
    this.tabBarItem && (this.tabBarItem = null), this._presentationController && this.dismissViewController(), this.removeFromParentViewController(), this._childViewControllers.forEach(function (c) {
        c.willMove(this), c._parentViewController = null, c.didMove(this)
    }, this), this._childViewControllers = [], this._view && (this._view.dealloc(), this._view = null), this.superclass()
}, FUIViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return null
}, FUIViewController.prototype.getParentViewController = function getParentViewController() {
    return this._parentViewController
}, FUIViewController.prototype.getNavigationController = function getNavigationController() {
    for (var t = this.getParentViewController(); null !== t;) {
        if (t.isSubClass(FUINavigationController)) return t;
        t = t.getParentViewController()
    }
    return null
}, FUIViewController.prototype.getRootNavigationController = function getRootNavigationController() {
    for (var t = this.getNavigationController(), i = null; null !== t;) i = t, t = t.getNavigationController();
    return i
}, FUIViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return null
}, FUIViewController.prototype._loadView = function _loadView() {
    if (!this.hasLoaded) {
        var view = this._getViewInstanceFromData();
        view && (this._view = view, this._view.setEventDelegate(this), this._view.init())
    }
}, FUIViewController.prototype.getView = function getView() {
    return this._view || (this.isLoading = !0, this._loadView(), this.isLoading = !1, this.viewDidLoad()), this.hasLoaded || this.isLoading || (this.hasLoaded = !0), this._view
}, FUIViewController.prototype.setView = function setView(view) {
    if (view !== this._view) {
        if (this._view) {
            var t = this._view;
            t.removeFromSuperview(), t.dealloc()
        }
        this._view = view
    }
}, FUIViewController.prototype.isViewDisplayed = function isViewDisplayed() {
    function _checkIfInElement(t, i) {
        var parent = t.parentNode;
        return !!parent && (parent === i || _checkIfInElement(parent, i))
    }

    var view = this.getView();
    return !!view && _checkIfInElement(view.getRootElement(), document.getElementsByTagName("body")[0])
},
    FUIViewController.prototype._getPresentationControllerInstance = function _getPresentationControllerInstance() {
        return new UTPresentationController
    }, FUIViewController.prototype.addChildViewController = function addChildViewController(t) {
    t.willMove(this), this._childViewControllers.push(t), t._parentViewController = this, t.setEventDelegate(this), t.didMove(this)
}, FUIViewController.prototype.removeChildViewController = function removeChildViewController(t) {
    var index = this._childViewControllers.indexOf(t);
    if (index >= 0) {
        t.willMove(this);
        var view = this.getView(), i = t.getView();
        view && i && i.isSubview(view) && i.removeFromSuperview(), t.removeEventDelegate(this), t._parentViewController === this && (t._parentViewController = null), this._childViewControllers.splice(index, 1), t.didMove(this)
    }
}, FUIViewController.prototype.removeFromParentViewController = function removeFromParentViewController() {
    var parent = this.getParentViewController();
    parent && parent.removeChildViewController(this)
}, FUIViewController.prototype.presentViewController = function presentViewController(t, i, s) {
    function _performPresentation() {
        this._presentationController = this._getPresentationControllerInstance(), this._presentationController.initWithViewControllers(t, this), this._presentationController.present(!!i, s)
    }

    this._presentationController && this._presentationController.getPresentedViewController() === t || (this._presentationController ? this.dismissViewController(!!i, _performPresentation.bind(this)) : _performPresentation.call(this))
}, FUIViewController.prototype.dismissViewController = function dismissViewController(t, i) {
    utils.Debug.Assert(utils.JS.isValid(this._presentationController), "Attempted to perform a dismiss when no view controller is being presented."), this._presentationController && this._presentationController.dismiss(!!t, function _completeDismiss() {
        this._presentationController.dealloc(), this._presentationController = null, utils.JS.isFunction(i) && i()
    }.bind(this))
}, FUIViewController.prototype.decorateLinks = function decorateLinks(t) {
    DOMKit.findElements(t, "a").forEach(function (anchor) {
        "a" !== anchor.nodeName && "A" !== anchor.nodeName || (anchor.addEventListener(enums.Event.TOUCHEND, this._linkHandler, !1), anchor.addEventListener(enums.Event.CLICK, this._linkHandler, !1))
    }, this)
}, FUIViewController.prototype.stripLinks = function stripLinks(t) {
    DOMKit.findElements(t, "a").forEach(function (anchor) {
        "a" !== anchor.nodeName && "A" !== anchor.nodeName || (anchor.removeEventListener(enums.Event.TOUCHEND, this._linkHandler, !1), anchor.removeEventListener(enums.Event.CLICK, this._linkHandler, !1))
    }, this)
},FUIViewController.prototype._linkHandler = function _linkHandler(e) {
    e.preventDefault();
    var t = this.attributes.href || null, i = null;
    if (t) return i = isWeb() ? "_blank" : "_system", window.open(t.value, i)
},FUIViewController.prototype.getPresentedViewController = function getPresentedViewController() {
    return this._presentationController ? this._presentationController.getPresentedViewController() : null
},FUIViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return ""
},FUIViewController.prototype.getToolbarItems = function getToolbarItems() {
    return this.getNavigationController().getToolbarItems()
},FUIViewController.prototype.getNavigationItem = function getNavigationItem() {
    return null
},FUIViewController.prototype.willMove = function willMove(t) {
},FUIViewController.prototype.didMove = function didMove(t) {
},FUIViewController.prototype.willPresent = function willPresent(t) {
},FUIViewController.prototype.didPresent = function didPresent(t) {
},FUIViewController.prototype.willDismiss = function willDismiss(t) {
},FUIViewController.prototype.didDismiss = function didDismiss(t) {
},FUIViewController.prototype.viewDidLoad = function viewDidLoad() {
},FUIViewController.prototype.viewWillAppear = function viewWillAppear() {
},FUIViewController.prototype.viewWillDisappear = function viewWillDisappear() {
},FUIViewController.prototype.viewDidAppear = function viewDidAppear() {
    var t = this._getTelemetryId();
    utils.JS.isString(t) && services.PIN.sendData(enums.PIN.EVENT.PAGE_VIEW, {
        type: PIN_PAGEVIEW_EVT_TYPE, pgid: t
    })
},FUIViewController.prototype.viewDidDisappear = function viewDidDisappear() {
},NamespaceManager.Register("interfaces"),interfaces.KeyboardEventDelegate = function () {
},interfaces.KeyboardEventDelegate.prototype.handleKeyUpEvent = function (e) {
},NamespaceManager.Register("controllers.views.popups"),controllers.views.popups.BasePopup = function BasePopup() {
    FUIViewController.call(this), this.onExit = new UTObservable, Object.defineProperty(this, "onExit", {writable: !1})
},utils.JS.inherits(controllers.views.popups.BasePopup, FUIViewController),controllers.views.popups.BasePopup.prototype.init = function init() {
    this.superclass(), getKeyboardEventController().registerDelegate(this, UTKeyboardEventController.PRIORITY.POPUP)
},controllers.views.popups.BasePopup.prototype.dealloc = function dealloc() {
    this.onExit.dealloc(), this.onExit = null, getKeyboardEventController().unregisterDelegate(this, UTKeyboardEventController.PRIORITY.POPUP), this.superclass()
},controllers.views.popups.BasePopup.prototype.onBackButton = function onBackButton() {
    return this.closePopup(), !1
},controllers.views.popups.BasePopup.prototype.closePopup = function closePopup() {
    this.onExit.notify()
},controllers.views.popups.BasePopup.prototype.handleKeyUpEvent = function handleKeyUpEvent(e) {
    e.key !== enums.KeyboardKey.ESCAPE && e.key !== enums.KeyboardKey.MS_ESCAPE || this.onExit.notify(enums.UIDialogOptions.CANCEL)
},controllers.views.popups.Dialog = function UTDialogPopupViewController(t, title, type, i, options) {
    controllers.views.popups.BasePopup.call(this), this._msg = t, this._title = title, this._options = utils.JS.valToArray(options), this._messageParameters = i || [], this._type = utils.JS.isValid(type) ? type : enums.UIDialogTypes.MESSAGE
},utils.JS.inherits(controllers.views.popups.Dialog, controllers.views.popups.BasePopup),controllers.views.popups.Dialog.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.popups.Dialog
},controllers.views.popups.Dialog.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var view = this.getView();
    this._options.forEach(function (t, i) {
        view.createOption(utils.PopupManager.getLocalizedDialogOption(t)).addTarget(this, this._eOptionSelected.bind(this, t), enums.Event.TAP)
    }, this), view.render(this._msg, this._title, this._type, this._messageParameters)
},controllers.views.popups.Dialog.prototype.handleKeyUpEvent = function handleKeyUpEvent(e) {
    this._options.length < 1 || (e.key === enums.KeyboardKey.ESCAPE || e.key === enums.KeyboardKey.MS_ESCAPE ? this.onExit.notify(utils.JS.isNumber(this._options[0]) ? this._options[0] : enums.UIDialogOptions.CANCEL) : e.key === enums.KeyboardKey.ENTER && this.onExit.notify(utils.JS.isNumber(this._options[1]) ? this._options[1] : enums.UIDialogOptions.OK))
},controllers.views.popups.Dialog.prototype._eOptionSelected = function _eOptionSelected(t) {
    this.onExit.notify(t)
},NamespaceManager.Register("utils"),utils.PopupManager = {},utils.PopupManager.displayingNativePopup = !1,utils.PopupManager.ShowAlert = function showAlert(t, i, s) {
    var o = new controllers.views.popups.Dialog(t.message, t.title, enums.UIDialogTypes.ALERT, s, t.buttonLabels.slice(0, 1));
    o.init(), gPopupClickShield.setActivePopup(o), o.onExit.observe(this, function (t, data) {
        i && i()
    })
},utils.PopupManager.displayNetworkError = function (t, i) {
    var alert = new UTPopupDTO(t.getTitle(), t.getMessage(), [enums.UIDialogOptions.OK]);
    utils.PopupManager.ShowAlert(alert, i)
},utils.PopupManager.ShowConfirmation = function showConfirmation(t, i, s, o) {
    utils.JS.isFunction(o) || (o = function () {
    });
    var l = new controllers.views.popups.Dialog(t.message, t.title, enums.UIDialogTypes.MESSAGE, i, t.buttonLabels);
    l.init(), gPopupClickShield.setActivePopup(l), l.onExit.observe(this, function (t, data) {
        data !== enums.UIDialogOptions.CANCEL && data !== enums.UIDialogOptions.NO && s ? s() : o && o()
    })
},utils.PopupManager.showNoInternetConnectionPopup = function showNoInternetConnectionPopup() {
    utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.NO_INTERNET_CONNECTION, gAuthenticationModel.errorLogout.bind(gAuthenticationModel))
},
utils.PopupManager.getLocalizedDialogOption = function getLocalizedDialogOption(t) {
    var key = "";
    switch (t) {
        case enums.UIDialogOptions.RETRY:
            key = "easfcdown.retry";
            break;
        case enums.UIDialogOptions.OK:
            key = "common.dialog.ok";
            break;
        case enums.UIDialogOptions.CANCEL:
            key = "common.dialog.cancel";
            break;
        case enums.UIDialogOptions.YES:
            key = "popup.yes";
            break;
        case enums.UIDialogOptions.NO:
            key = "popup.no";
            break;
        case enums.UIDialogOptions.SIGN_OUT:
            key = "more.signout.button";
            break;
        case enums.UIDialogOptions.TAKE_ME:
            key = "popup.takeMeThere"
    }
    return services.Localization.localize(key)
},utils.PopupManager.Alerts = {},utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE = new UTPopupDTO("popup.originUnavailableTitle", "popup.originUnavailable", [enums.UIDialogOptions.RETRY]),utils.PopupManager.Alerts.ACCOUNT_BANNED = new UTPopupDTO("error.banneduser.header", "error.banneduser.body", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.BID_TOO_LOW = new UTPopupDTO("popup.errorLowBidTitle", "popup.bidTooLow", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.CANT_UNWATCH_ACTIVE_BID = new UTPopupDTO("popup.cantUnwatchCardPlayerBidTitle", "popup.cantUnwatchCardPlayerBidText", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.BID_VALUE_CHANGED = new UTPopupDTO("list.bid.valueschanged.title", "list.bid.valueschanged.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.BUY_VALUE_CHANGED = new UTPopupDTO("list.buy.valueschanged.title", "list.buy.valueschanged.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.WATCH_LIST_FULL = new UTPopupDTO("popup.watchlist.full.title", "popup.watchlist.full.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.TRANSFER_LIST_FULL = new UTPopupDTO("popup.error.tradetoken.SellItemTradePileFullTitle", "popup.error.tradetoken.SellItemTradePileFull", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DESTINATION_FULL = new UTPopupDTO("popup.error.tradetoken.DestinationFullTitle", "popup.error.item.DestinationFull", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DUPLICATE_SQUAD_NAME = new UTPopupDTO("popup.error.duplicateSquadNameTitle", "popup.error.duplicateSquadName", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.SQUADS_FULL = new UTPopupDTO("popup.error.squadsFullTitle", "popup.error.squadsFull", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.CANNOT_COPY_SQUAD = new UTPopupDTO("popup.cannotcopysquad.title", "popup.cannotcopysquad.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.CANNOT_DELETE_SQUAD = new UTPopupDTO("popup.cannotdeletesquad.title", "popup.cannotdeletesquad.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.CANNOT_RELIST_ALL = new UTPopupDTO("popup.error.relistall.title", "popup.error.relistall", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.RATE_LIMIT = new UTPopupDTO("popup.error.RateLimitHeader", "popup.error.RateLimitBody", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DID_CREATE_EXCEEDED = new UTPopupDTO("popup.error.DID.CreateExceededHeader", "popup.error.DID.CreateExceededBody", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DID_LOGIN_EXCEEDED = new UTPopupDTO("popup.error.DID.LoginExceededHeader", "popup.error.DID.LoginExceededBody", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DEVICE_SUSPENDED = new UTPopupDTO("popup.error.DeviceSuspendedHeader", "popup.error.DeviceSuspendedBody", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.GEOIP_BLACKLISTED = new UTPopupDTO("popup.error.geoipblacklist.title", "popup.error.geoipblacklist", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.NO_INTERNET_CONNECTION = new UTPopupDTO("popup.error.NoInternetConnectionTitle", "popup.error.NoInternetConnection", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.LOW_MEMORY = new UTPopupDTO("popup.warningLowMemoryTitle", "popup.warningLowMemory", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.SERVER_DOWN = new UTPopupDTO("popup.error.serverdownTitle", "popup.error.serverdown", [enums.UIDialogOptions.OK]),
utils.PopupManager.Alerts.CONCURRENT_LOGIN = new UTPopupDTO("popup.error.concurrentLoginTitle", "popup.error.concurrentLogin", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DUPLICATE_ITEM = new UTPopupDTO("popup.error.item.DuplicatedItemTypeTitle", "popup.error.squadManagement.DuplicateItem", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.STORE_INSUFFICIENT_COINS = new UTPopupDTO("popup.error.storeInsufficientCoinsTitle", "popup.error.storeInsufficientCoins", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.STORE_INSUFFICIENT_POINTS = new UTPopupDTO("popup.error.insufficientfifapointsTitle", "popup.error.insufficientfifapoints", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.CANNOT_QUICKSELL_ALL = new UTPopupDTO("popup.error.itemDiscard.InvalidStateTitle", "tooltip.newitems.cannotquicksellall", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.SERVICE_IS_DISABLED = new UTPopupDTO("popup.error.ServiceIsDisabledTitle", "popup.error.ServiceIsDisabled", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.ALL_NEED_TO_BE_CLAIMED = new UTPopupDTO("popup.error.autoassign.cannotAutoAssign", "popup.error.autoassign.allFreePack", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.REAUTH_FAIL = new UTPopupDTO("popup.error.cannotcontinueTitle", "popup.error.cannotcontinue", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.CANNOT_TRADE_UNTRADEABLE = new UTPopupDTO("infopanel.context.untradeable", "popup.error.item.untradeable", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.UNTRADEABLE_DUPLICATE = new UTPopupDTO("infopanel.context.untradeable", "popup.error.tradepile.untradeableduplicate", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.HIT_MAX_LISTING = new UTPopupDTO("popup.error.list.forbidden.title", "popup.error.list.forbidden.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.INJURED_OR_SUSPENDED = new UTPopupDTO("popup.error.item.PermissionDeniedTitle", "popup.error.item.InjuredOrSuspended", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.TRADING_DISABLED = new UTPopupDTO("tile.disabled.transfersunavailable", "popup.error.auctioninfo.tradingdisabled", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DRAFT_INSUFFICIENT_TOKENS = new UTPopupDTO("popup.error.storeInsufficientTokensTitle", "draft.popup.insufficientTokens", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DRAFT_INSUFFICIENT_COINS = new UTPopupDTO("popup.error.storeInsufficientCoinsTitle", "draft.popup.insufficientCoins", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DRAFT_INSUFFICIENT_POINTS = new UTPopupDTO("popup.error.insufficientfifapointsTitle", "draft.popup.insufficientFifapoints", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.DRAFT_SQUAD_CHANGES = new UTPopupDTO("draft.popup.draftSquadChanges.title", "draft.popup.draftSquadChanges.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.SBC_GRACE_PERIOD = new UTPopupDTO("popup.sbcgraceperiod.title", "popup.sbcgraceperiod.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.SBC_INELIGIBLE_SQUAD = new UTPopupDTO("popup.sbcineligiblesquad.title", "popup.sbcineligiblesquad.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.SBC_UNTRADEABLE_NOT_ALLOWED = new UTPopupDTO("popup.sbcineligiblesquad.title", "popup.sbcUntradeableNotAllowed.message", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.SQUAD_BUILDER_NO_RESULTS = new UTPopupDTO("popup.title.noSquadBuilderResults", "popup.error.squad.builder.noresults", [enums.UIDialogOptions.OK]),utils.PopupManager.Alerts.ONBOARDING_INTRO = new UTPopupDTO("onboarding.popup.loanswap.title", "onboarding.popup.loanswap.body", [enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations = {},utils.PopupManager.Confirmations.CONFIRM_COPY_SQUAD = new UTPopupDTO("manage.copy.message.title", "manage.copy.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),
utils.PopupManager.Confirmations.CONFIRM_RELIST_ALL = new UTPopupDTO("popup.tradepile.relistAllTitle", "popup.tradepile.relistAllText", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.CONFIRM_RELIST_ALL_PB = new UTPopupDTO("popup.tradepile.relistAllTitle", "popup.tradepile.relistAllPriceBandingText", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.BID_WHEN_HIGHEST_BIDDER = new UTPopupDTO("popup.confirmHighestBidderTitle", "popup.confirmHighestBidder", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.CONFIRM_BID = new UTPopupDTO("popup.bidConfirmationTitle", "popup.bidConfirmationText", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.CONFIRM_BUY_NOW = new UTPopupDTO("popup.buyNowConfirmationTitle", "popup.buyNowConfirmationText", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.UNASSIGNED_ENTITLEMENT = new UTPopupDTO("popup.error.unassignedItemsEntitlementTitle", "popup.error.fifacredits.unassignedItemsEntitlement", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.TAKE_ME]),utils.PopupManager.Confirmations.NEW_ITEMS_FULL = new UTPopupDTO("popup.newItemsFullTitle", "popup.newItemsFullText", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.TAKE_ME]),utils.PopupManager.Confirmations.CONFIRM_DISCARD = new UTPopupDTO("infopanel.label.discard", "popup.confirmItemDiscard", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.CONFIRM_DISCARD_ALL = new UTPopupDTO("infopanel.label.discardall", "popup.confirmDiscardAll", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.TRANSFER_PLAYER = new UTPopupDTO("infopanel.button.transfer", "popup.squads.transfer.player", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.REMOVE_PLAYER = new UTPopupDTO("infopanel.button.remove", "popup.squads.remove.player", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.REMOVE_MANAGER = new UTPopupDTO("infopanel.button.remove", "popup.squads.remove.manager", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SAVE_SQUAD_RESUME = new UTPopupDTO("savesquad.title", "savesquad.resumemessage", [enums.UIDialogOptions.NO, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.DELETE_SQUAD = new UTPopupDTO("popup.deletesquad.title", "popup.deletesquad.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.MAKE_SQUAD_CONCEPT = new UTPopupDTO("popup.makesquadconcept.title", "popup.makesquadconcept.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SBC_CONCEPT_SQUAD = new UTPopupDTO("popup.sbcconceptsquad.title", "popup.sbcconceptsquad.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.PERSISTENT_SIGNON = new UTPopupDTO("more.persistent.on.title", "more.persistent.on.body", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.UPDATE_FUT = new UTPopupDTO("popup.updateFUTTitle", "popup.update.FUTText", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.ENABLE_USAGE_SHARING = new UTPopupDTO("more.usagesharing.title", "more.usagesharing.enablebody", [enums.UIDialogOptions.NO, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.DISABLE_USAGE_SHARING = new UTPopupDTO("more.usagesharing.title", "more.usagesharing.disablebody", [enums.UIDialogOptions.NO, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.OPEN_PACK = new UTPopupDTO("store.confirmation.questionopenTitle", "store.confirmation.questionopen", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),
utils.PopupManager.Confirmations.BUY_PACK = new UTPopupDTO("store.confirmation.questionTitle", "popup.confirmPurchase", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.BUY_PACK_FIFAPOINTS = new UTPopupDTO("store.confirmation.questionTitle", "popup.confirmPointsPurchase", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SEND_ALL_TO_CLUB = new UTPopupDTO("infopanel.label.storeAllInClub", "popup.confirmSendToClubAll", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SEND_ALL_TO_TRANSFER_LIST = new UTPopupDTO("popup.confirmation.sendAllToTransferListTitle", "popup.confirmation.sendAllToTransferList", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SEND_TO_CLUB = new UTPopupDTO("infopanel.label.club", "popup.confirmSendToClub", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SEND_TO_TRANSFER_LIST = new UTPopupDTO("infopanel.label.sendTradePile", "popup.confirmSendToTransferList", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.APPLY_CONSUMABLE = new UTPopupDTO("panel.applyitem.button", "popup.confirmApplyConsumable", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SPEND_DRAFT_TOKEN = new UTPopupDTO("draft.popup.useToken.title", "draft.popup.useToken.message", [enums.UIDialogOptions.NO, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.DRAFT_PAY_WITH_POINTS = new UTPopupDTO("draft.popup.usePoints.title", "draft.popup.usePoints.message", [enums.UIDialogOptions.NO, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.DRAFT_PAY_WITH_COINS = new UTPopupDTO("draft.popup.useCoins.title", "draft.popup.useCoins.message", [enums.UIDialogOptions.NO, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.CONFIRM_AUTOFILL = new UTPopupDTO("draft.popup.confirmAutofill.title", "draft.popup.confirmAutofill.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.CONFIRM_FORMATION = new UTPopupDTO("draft.popup.confirmFormation.title", "draft.popup.confirmFormation.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.CONFIRM_CAPTAIN = new UTPopupDTO("draft.popup.confirmCaptain.title", "draft.popup.confirmCaptain.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.CONFIRM_DIFFICULTY = new UTPopupDTO("draft.popup.confirmDifficulty.title", "draft.popup.confirmDifficulty.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SUBMIT_CHALLENGE = new UTPopupDTO("sbc.overlay.btn.submitChallenge", "sbc.popup.submitChallenge.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.SEND_REPORT = new UTPopupDTO("popup.confirmSendReportTitle", "popup.confirmSendReport", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.CANCEL_MESSAGE = new UTPopupDTO("popup.cancelMessage.title", "popup.cancelMessage", [enums.UIDialogOptions.NO, enums.UIDialogOptions.YES]),utils.PopupManager.Confirmations.SIGN_OUT = new UTPopupDTO("more.signout.title", "more.signout.body", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.SIGN_OUT]),utils.PopupManager.Confirmations.CHANGE_PERSONA = new UTPopupDTO("personaselector.title", "personaselector.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.CLEAR_SQUAD = new UTPopupDTO("clearSquad.title", "clearSquad.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),utils.PopupManager.Confirmations.EXIT_APP = new UTPopupDTO("popup.exitapp.title", "popup.exitapp.message", [enums.UIDialogOptions.CANCEL, enums.UIDialogOptions.OK]),NamespaceManager.Register("models"),models.SettingsModel = function () {
    this._configs = new UTHashTable({}), this._hasUnrecoveredFIFAPointsTransaction = !1,
        this._supportedServices = [models.SettingsModel.STORE_ENABLED, models.SettingsModel.COIN_ENABLED, models.SettingsModel.FIFA_POINTS_ENABLED, models.SettingsModel.TRADING_ENABLED, models.SettingsModel.PACK_ODDS_ENABLED, models.SettingsModel.MTX_ENABLED, models.SettingsModel.OBJECTIVES_ENABLED, models.SettingsModel.SBC_ENABLED, models.SettingsModel.TOTW_HISTORY_ENABLED, models.SettingsModel.LIVE_MESSAGING_ENABLED, models.SettingsModel.CONCEPT_SQUAD_LOYALTY_BONUS_ENABLED, models.SettingsModel.LEADERBOARDS_ENABLED], this._configsRetrieved = !1
},models.SettingsModel.prototype.getSupportedServices = function () {
    return this._supportedServices
},models.SettingsModel.prototype.getConfigs = function () {
    return this._configs.keys().map(function (key, t) {
        return {k: key, v: this.getConfigsByKey(key)}
    }, this)
},models.SettingsModel.prototype.getConfigsByKey = function (key) {
    return this._configs.get(key)
},models.SettingsModel.prototype.setConfigsByKey = function (key, value) {
    this._configs.set(key, value)
},models.SettingsModel.prototype.setConfigs = function (t) {
    t.forEach(function (t) {
        this.setConfigsByKey(t.type, t.value)
    }, this), this._configsRetrieved = !0
},models.SettingsModel.prototype.checkConfigsRetrieved = function () {
    return this._configsRetrieved
},models.SettingsModel.prototype.isUpdateRequired = function () {
    if (this._configs.length < 1) return !0;
    var t, keys = this._configs.keys();
    for (t = 0; t < keys.length; t++) {
        var i = keys[t];
        if (!this._configs.get(i) && this.isServiceSupported(i)) return !0
    }
    return !1
},models.SettingsModel.prototype.isServiceSupported = function (t) {
    return this._supportedServices.indexOf(t) >= 0
},models.SettingsModel.prototype.isServiceAvailable = function (t) {
    var i = this.getConfigsByKey(t);
    return !0 === i || 1 === i || null === i
},models.SettingsModel.prototype.enableService = function (t) {
    this.setConfigsByKey(t, !0)
},models.SettingsModel.prototype.disableService = function (t) {
    this.setConfigsByKey(t, !1)
},models.SettingsModel.prototype.isTradingEnabled = function isTradingEnabled() {
    return this.isServiceAvailable(models.SettingsModel.TRADING_ENABLED)
},models.SettingsModel.prototype.isPackOddsEnabled = function isPackOddsEnabled() {
    return this.isServiceAvailable(models.SettingsModel.PACK_ODDS_ENABLED)
},models.SettingsModel.prototype.isMarketDataEnabled = function isMarketDataEnabled() {
    return this.isServiceAvailable(models.SettingsModel.MARKET_DATA_ENABLED)
},models.SettingsModel.prototype.isObjectivesEnabled = function isObjectivesEnabled() {
    return this.isServiceAvailable(models.SettingsModel.OBJECTIVES_ENABLED)
},models.SettingsModel.prototype.isDailyObjectivesEnabled = function isDailyObjectivesEnabled() {
    return this.isServiceAvailable(models.SettingsModel.DAILY_OBJECTIVES_ENABLED)
},models.SettingsModel.prototype.isWeeklyObjectivesEnabled = function isWeeklyObjectivesEnabled() {
    return this.isServiceAvailable(models.SettingsModel.WEEKLY_OBJECTIVES_ENABLED)
},models.SettingsModel.prototype.isTOTWHistoryEnabled = function isTOTWHistoryEnabled() {
    return this.isServiceAvailable(models.SettingsModel.TOTW_HISTORY_ENABLED)
},models.SettingsModel.prototype.isSBCEnabled = function isSBCEnabled() {
    return this.isServiceAvailable(models.SettingsModel.SBC_ENABLED)
},models.SettingsModel.prototype.isLegacyYearIdEnabled = function isLegacyYearIdEnabled() {
    return !this._configs.has(models.SettingsModel.LEGACY_YEAR_ENABLED) || 1 === parseInt(this._configs.get(models.SettingsModel.LEGACY_YEAR_ENABLED), 10)
},models.SettingsModel.prototype.isSquadRatingFloatCalculationEnabled = function isSquadRatingFloatCalculationEnabled() {
    return this.isServiceAvailable(models.SettingsModel.FLOAT_SQUAD_RATING_CALCULATION_ENABLED)
},models.SettingsModel.prototype.isCoinsEnabled = function isCoinsEnabled() {
    return this.isServiceAvailable(models.SettingsModel.COIN_ENABLED)
},models.SettingsModel.prototype.isFIFAPointsEnabled = function isFIFAPointsEnabled() {
    var t = services.User.getUser(),
        i = !t || !t.getSelectedPersona().isPC || this.isServiceAvailable(models.SettingsModel.MTX_ENABLED);
    return !this._hasUnrecoveredFIFAPointsTransaction && this.isServiceAvailable(models.SettingsModel.FIFA_POINTS_ENABLED) && i
},
models.SettingsModel.prototype.setUnrecoveredFIFAPointsTransaction = function setUnrecoveredFIFAPointsTransaction(t) {
    this._hasUnrecoveredFIFAPointsTransaction = t
},models.SettingsModel.STORE_ENABLED = "storeEnabled",models.SettingsModel.COIN_ENABLED = "coinEnabled",models.SettingsModel.FIFA_POINTS_ENABLED = "fifaPointsEnabled",models.SettingsModel.TRADING_ENABLED = "tradingEnabled",models.SettingsModel.MTX_ENABLED = "mtxEnabled",models.SettingsModel.MARKET_DATA_ENABLED = "marketDataEnabled",models.SettingsModel.PACK_ODDS_ENABLED = "enableShowPackOdds",models.SettingsModel.CHAMPIONS_ENABLED = "enableFUTChampions",models.SettingsModel.OBJECTIVES_ENABLED = "enableDynamicObjectives",models.SettingsModel.DAILY_OBJECTIVES_ENABLED = "enableDailyDynamicObjectives",models.SettingsModel.WEEKLY_OBJECTIVES_ENABLED = "enableWeeklyDynamicObjectives",models.SettingsModel.SBC_ENABLED = "enableSquadBuildingSetsFeature",models.SettingsModel.SBC_ALLOW_UNTRADEABLE = "allowUntradeableForSquadBuildingSets",models.SettingsModel.SBC_GRACE_PERIOD_MINUTES = "squadBuildingSetsGracePeriodMinutes",models.SettingsModel.TOTW_HISTORY_ENABLED = "totwHistoryEnabled",models.SettingsModel.LIVE_MESSAGING_ENABLED = "enableLiveMessaging",models.SettingsModel.LEGACY_YEAR_ENABLED = "enableLegacyYearInfoInItemResourceId",models.SettingsModel.FLOAT_SQUAD_RATING_CALCULATION_ENABLED = "enableFloatPointSquadRating",models.SettingsModel.CONCEPT_SQUAD_LOYALTY_BONUS_ENABLED = "enableLoyaltyBonusForConceptPlayers",models.SettingsModel.LEADERBOARDS_ENABLED = "enableLeaderboards";
var gSettingsModel = new models.SettingsModel;
NamespaceManager.Register("models"), models.BaseModel = function () {
    utils.EventDispatcher.call(this), this._dirty = !0, this._timestamp = 0
}, utils.JS.inherits(models.BaseModel, utils.EventDispatcher), models.BaseModel.EVENT = {DATA_UPDATED: "models.BaseModel.EVENT.DATA_UPDATED"}, models.BaseModel.prototype.isDirty = function (t) {
    return utils.JS.isBoolean(t) ? (this._dirty = t, this._dirty && this.dispatch(models.BaseModel.EVENT.DATA_UPDATED)) : this.checkDataExpiry(), this._dirty
}, models.BaseModel.prototype.getTimestamp = function () {
    return this._timestamp
}, models.BaseModel.prototype.setTimestamp = function () {
    this._timestamp = (new Date).getTime()
}, models.BaseModel.prototype.init = function () {
}, models.BaseModel.prototype.destroy = function () {
}, models.BaseModel.prototype.reset = function () {
}, models.BaseModel.prototype.checkDataExpiry = function () {
}, NamespaceManager.Register("utils"), utils.Iterator = function (t, i) {
    utils.EventDispatcher.call(this), this._dataCollection = t, this._itemsPerPage = i, this._currentIndex = 0, this.swipeDirection = utils.Iterator.SWIPE_DIRECTION.NONE
}, utils.JS.inherits(utils.Iterator, utils.EventDispatcher), utils.Iterator.prototype.data = function () {
    return this._dataCollection
}, utils.Iterator.prototype.getNumItems = function () {
    return this._dataCollection.length
}, utils.Iterator.prototype.setData = function (value, dispatchEvent) {
    this._dataCollection = value, !0 === dispatchEvent && (this.swipeDirection === utils.Iterator.SWIPE_DIRECTION.RIGHT ? (this._currentIndex = this._currentIndex--, this.swipeRight()) : this.swipeDirection === utils.Iterator.SWIPE_DIRECTION.LEFT ? (this._currentIndex++, this.swipeLeft()) : (this._currentIndex > value.length - 1 && (this._currentIndex = value.length - 1), this.dispatch(utils.Iterator.DATA_UPDATED, ""))), this.swipeDirection = utils.Iterator.SWIPE_DIRECTION.NONE
}, utils.Iterator.prototype.first = function () {
    return this._dataCollection.length > 0 ? (this._currentIndex = 0, this._dataCollection[0]) : null
}, utils.Iterator.prototype.getFirstIndexOfPage = function (page) {
    return (page - 1) * this._itemsPerPage
}, utils.Iterator.prototype.hasNextPage = function () {
    return this.getCurrentPage() < this.getMaxPage()
}, utils.Iterator.prototype.hasPrevPage = function () {
    return this.getCurrentPage() > 1
}, utils.Iterator.prototype.hasNext = function () {
    return this._currentIndex < this._dataCollection.length - 1
}, utils.Iterator.prototype.hasPrev = function () {
    return this._currentIndex > 0
}, utils.Iterator.prototype.current = function () {
    return this._dataCollection.length > 0 ? (this._currentIndex >= this._dataCollection.length && (this._currentIndex = this._dataCollection.length - 1), this._dataCollection[this._currentIndex]) : null
}, utils.Iterator.prototype.next = function (remove) {
    var t = this.current(), data = null;
    return this.hasNext() && (data = this._dataCollection[++this._currentIndex], remove && this.removeFromData(t)), this.swipeLeft(), data
}, utils.Iterator.prototype.prev = function (remove) {
    var t = this.current(), data = null;
    return this.hasPrev() && (data = this._dataCollection[--this._currentIndex], remove && this.removeFromData(t)), this.swipeRight(), data
}, utils.Iterator.prototype.removeFromData = function (data) {
    var t = this._dataCollection.indexOf(data), i = this.current();
    -1 !== t && this._dataCollection.splice(t, 1), this.seek(i)
}, utils.Iterator.prototype.goToIndex = function (index) {
    var data = null;
    return utils.JS.isValid(index) && (this.setCurrentIndex(index), data = this._dataCollection[index]), this.dispatch(utils.Iterator.DATA_UPDATED), data
}, utils.Iterator.prototype.seek = function (data) {
    var t, i = this._dataCollection.length, s = !1;
    if ("function" != typeof data.compareTo) throw new Error("Iterator elements must implement a 'compareTo' function!");
    for (t = 0; t < i; ++t) {
        if ("function" != typeof this._dataCollection[t].compareTo) throw new Error("Iterator elements must implement a 'compareTo' function!");
        if (data.compareTo(this._dataCollection[t])) {
            this._currentIndex = t, s = !0;
            break
        }
    }
    return s && this.dispatch(utils.Iterator.DATA_UPDATED), s
}, utils.Iterator.prototype.setCurrentIndex = function (value) {
    this._currentIndex = value
}, utils.Iterator.prototype.getCurrentIndex = function () {
    return this._currentIndex
}, utils.Iterator.prototype.getCurrentPage = function () {
    var t = this.getCurrentIndex() + 1;
    return Math.ceil(t / this._itemsPerPage)
}, utils.Iterator.prototype.getMaxPage = function () {
    var t = this.data().length;
    return Math.ceil(t / this._itemsPerPage)
}, utils.Iterator.prototype.setSwipeDirection = function (dir) {
    this.swipeDirection = dir
}, utils.Iterator.prototype.swipeLeft = function () {
    this._swipe(utils.Iterator.SWIPE_LEFT)
}, utils.Iterator.prototype.swipeRight = function () {
    this._swipe(utils.Iterator.SWIPE_RIGHT)
}, utils.Iterator.prototype._swipe = function (d) {
    this.dispatch(utils.Iterator.DATA_UPDATED, d)
}, utils.Iterator.DATA_UPDATED = "DATA_UPDATED", utils.Iterator.SWIPE_LEFT = "Left", utils.Iterator.SWIPE_RIGHT = "Right", utils.Iterator.SWIPE_DIRECTION = {
    NONE: 0,
    LEFT: 1,
    RIGHT: 2
}, models.TOTWHistoryModel = function () {
    models.BaseModel.call(this), this._hasNext = !1, this._hasPrevious = !1, this._squadHistoryPreview = null, this._iterator = new utils.Iterator([], models.TOTWHistoryModel.SQUADS_PER_PAGE)
}, utils.JS.inherits(models.TOTWHistoryModel, models.BaseModel), models.TOTWHistoryModel.SQUADS_PER_PAGE = 15, models.TOTWHistoryModel.GENERAL_REFRESH_INTERVAL = 36e5, models.TOTWHistoryModel.SERVICE_DOWN_REFRESH_INTERVAL = 3e5, models.TOTWHistoryModel.EVENT_SQUAD_SELECTED = "models.TOTWHistoryModel.EVENT_SQUAD_SELECTED", models.TOTWHistoryModel.prototype.reset = function () {
    this.setSelectedSquad(null), this.isDirty(!0), this.getIterator().setData([], !1)
}, models.TOTWHistoryModel.prototype.checkDataExpiry = function () {
    var timestamp = this.getTimestamp();
    (new Date).getTime() > timestamp + (gSettingsModel.isTOTWHistoryEnabled() ? models.TOTWHistoryModel.GENERAL_REFRESH_INTERVAL : models.TOTWHistoryModel.SERVICE_DOWN_REFRESH_INTERVAL) && (this._dirty = !0)
}, models.TOTWHistoryModel.prototype.getIterator = function () {
    return this._iterator
}, models.TOTWHistoryModel.prototype.hasNext = function (t) {
    return utils.JS.isBoolean(t) && (this._hasNext = t), this._hasNext
}, models.TOTWHistoryModel.prototype.hasPrevious = function (t) {
    return utils.JS.isBoolean(t) && (this._hasPrevious = t), this._hasPrevious
}, models.TOTWHistoryModel.prototype.hasValidTOTW = function hasValidTOTW() {
    return this._iterator.getNumItems() > 0
}, models.TOTWHistoryModel.prototype.updateData = function (data) {
    !this.isDirty() || this.getIterator().getCurrentPage() > 1 ? data = this.getIterator().data().concat(data) : this.getIterator().setCurrentIndex(0), this.getIterator().setData(data, !1), this.setTimestamp(),
        this.isDirty(!1), this.dispatch(models.BaseModel.EVENT.DATA_UPDATED)
}, models.TOTWHistoryModel.prototype.setToDefaultSquad = function () {
    this._squadHistoryPreview = this._iterator.first()
}, models.TOTWHistoryModel.prototype.getSelectedSquad = function () {
    return this._squadHistoryPreview || this._iterator.first()
}, models.TOTWHistoryModel.prototype.setSelectedSquad = function (t) {
    this.getSelectedSquad() !== t && (this._squadHistoryPreview = t, this.dispatch(models.TOTWHistoryModel.EVENT_SQUAD_SELECTED))
};
var gTOTWHistoryModel = new models.TOTWHistoryModel;
utils.JS.inherits(UTKeyboardEventController, UTObject), UTKeyboardEventController.PRIORITY = {
    POPUP: 0,
    ACTIVE_ELEMENT: 1,
    VIEW: 2
}, UTKeyboardEventController.prototype.init = function init() {
    this.superclass(), isWeb() && (this._eventDelegates.set(UTKeyboardEventController.PRIORITY.POPUP, []), this._eventDelegates.set(UTKeyboardEventController.PRIORITY.ACTIVE_ELEMENT, []), this._eventDelegates.set(UTKeyboardEventController.PRIORITY.VIEW, []), document.addEventListener(enums.Event.KEYUP, this._keyupHandler, !1))
}, UTKeyboardEventController.prototype.dealloc = function dealloc() {
    this.superclass(), isWeb() && document.removeEventListener(enums.Event.KEYUP, this._keyupHandler, !1)
}, UTKeyboardEventController.prototype.registerDelegate = function registerDelegate(t, i) {
    if (isWeb()) {
        var s = t.conforms(interfaces.KeyboardEventDelegate);
        if (utils.Debug.Assert(s, "Expected an object that conforms to the KeyboardEventDelegate interface"), s) {
            var o = this._eventDelegates.get(i);
            o && o.indexOf(t) < 0 && o.push(t)
        }
    }
}, UTKeyboardEventController.prototype.unregisterDelegate = function unregisterDelegate(t, i) {
    if (isWeb()) {
        var s = this._eventDelegates.get(i);
        if (s) {
            var index = s.indexOf(t);
            index >= 0 && s.splice(index, 1)
        }
    }
}, UTKeyboardEventController.prototype._eHandleKeyUpEvent = function _eHandleKeyUpEvent(e) {
    var t = this._eventDelegates.get(UTKeyboardEventController.PRIORITY.POPUP),
        i = this._eventDelegates.get(UTKeyboardEventController.PRIORITY.ACTIVE_ELEMENT),
        s = this._eventDelegates.get(UTKeyboardEventController.PRIORITY.VIEW);
    t && t.length > 0 ? t.forEach(function (c) {
        c.handleKeyUpEvent(e)
    }) : i && i.length > 0 ? i.forEach(function (c) {
        c.handleKeyUpEvent(e)
    }) : s && s.length > 0 && s.forEach(function (c) {
        c.handleKeyUpEvent(e)
    })
}, communication.SettingsDelegate = function () {
    communication.BaseFUTDelegate.call(this)
}, utils.JS.inherits(communication.SettingsDelegate, communication.BaseFUTDelegate), communication.SettingsDelegate.prototype.execute = function () {
    var url = communication.BaseFUTDelegate.REQUEST_ROOT + "settings";
    this.setRequest(url, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.send()
}, communication.SettingsDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.PERMISSION_DENIED:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.item.PermissionDeniedTitle", "popup.error.item.PermissionDenied");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
}, NamespaceManager.Register("controllers"), controllers.SettingsUpdaterController = {}, controllers.SettingsUpdaterController._delegate = null, controllers.SettingsUpdaterController._timer = null, controllers.SettingsUpdaterController.startTimer = function () {
    controllers.SettingsUpdaterController.clearTimer(), controllers.SettingsUpdaterController._timer = setInterval(function () {
        controllers.SettingsUpdaterController.update()
    }, gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_SETTINGS_REFRESH_INTERVAL)), controllers.SettingsUpdaterController.update()
}, controllers.SettingsUpdaterController.clearTimer = function () {
    utils.JS.isValid(controllers.SettingsUpdaterController._timer) && clearInterval(controllers.SettingsUpdaterController._timer)
}, controllers.SettingsUpdaterController.update = function () {
    gSettingsModel.checkConfigsRetrieved() && !gSettingsModel.isUpdateRequired() || null !== controllers.SettingsUpdaterController._delegate || (controllers.SettingsUpdaterController._delegate = new communication.SettingsDelegate, controllers.SettingsUpdaterController._delegate.addListener(communication.BaseDelegate.SUCCESS, controllers.SettingsUpdaterController, controllers.SettingsUpdaterController.onUpdateComplete), controllers.SettingsUpdaterController._delegate.addListener(communication.BaseDelegate.FAIL, controllers.SettingsUpdaterController, controllers.SettingsUpdaterController.onUpdateFailed), controllers.SettingsUpdaterController._delegate.execute())
}, controllers.SettingsUpdaterController.onUpdateComplete = function (sender, data) {
    gSettingsModel.setConfigs(data.configs), controllers.SettingsUpdaterController._delegate.clearListenersByScope(controllers.SettingsUpdaterController), controllers.SettingsUpdaterController._delegate = null
}, controllers.SettingsUpdaterController.onUpdateFailed = function (sender) {
    controllers.SettingsUpdaterController._delegate.clearListenersByScope(controllers.SettingsUpdaterController), controllers.SettingsUpdaterController._delegate = null
}, NamespaceManager.Register("controllers.views.popups"), controllers.views.popups.LiveMessage = function LiveMessage(t) {
    controllers.views.popups.BasePopup.call(this), this._viewmodel = new UTIterator(t), this._countdownTimer = null
}, utils.JS.inherits(controllers.views.popups.LiveMessage, controllers.views.popups.BasePopup), controllers.views.popups.LiveMessage.prototype.init = function init() {
    this.superclass(), this.getView().getContinueButton().addTarget(this, this._onContinue, enums.Event.TAP)
}, controllers.views.popups.LiveMessage.prototype.dealloc = function dealloc() {
    this._viewmodel = null, this._stopCountdownTimer(), this.superclass()
}, controllers.views.popups.LiveMessage.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.popups.LiveMessage
}, controllers.views.popups.LiveMessage.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var view = this.getView(), message = this._viewmodel.current();
    view.render(message, this._viewmodel.getIndex() + 1 + "/" + this._viewmodel.length), message.hasCountdownKeys() && this._startCountdownTimer(message), this._startButtonCountdown(1e3 * message.durationInSec)
}, controllers.views.popups.LiveMessage.prototype.onBackButton = function onBackButton() {
    return !1
}, controllers.views.popups.LiveMessage.prototype._startCountdownTimer = function _startCountdownTimer(t) {
    if (!this._countdownTimer) {
        var text = t.textFields.get(enums.ArubaTextFieldType.BODY).text;
        this._updateCountdownTimer(text, t.countdownKeys, t.countdownTimestamps), this._countdownTimer = new utils.UTTimer(1e3, this._updateCountdownTimer.bind(this, text, t.countdownKeys, t.countdownTimestamps)), this._countdownTimer.start()
    }
}, controllers.views.popups.LiveMessage.prototype._stopCountdownTimer = function _stopCountdownTimer() {
    this._countdownTimer && (this._countdownTimer.reset(), this._countdownTimer = null)
}, controllers.views.popups.LiveMessage.prototype._updateCountdownTimer = function _updateCountdownTimer(text, keys, t) {
    t.forEach(function (time, t) {
        var i = Math.max(0, Math.round(time - Date.now() / 1e3));
        text = text.replace(keys[t], services.Localization.localizeTimeRemaining(i)), this.getView().renderContent(text)
    }.bind(this))
}, controllers.views.popups.LiveMessage.prototype._startButtonCountdown = function _startButtonCountdown(duration) {
    var view = this.getView();
    view.setInteractionState(!1), setTimeout(function () {
        view.setInteractionState(!0)
    }.bind(this), duration)
}, controllers.views.popups.LiveMessage.prototype._continue = function _continue() {
    var message = this._viewmodel.current();
    if (message.hasCountdownKeys() && this._stopCountdownTimer(), repositories.Message.markAsRead(message), this._viewmodel.endOfList) this.closePopup(); else {
        var t = this._viewmodel.next();
        t.hasCountdownKeys() && this._startCountdownTimer(t), this.getView().render(t, this._viewmodel.getIndex() + 1 + "/" + this._viewmodel.length), this._startButtonCountdown(1e3 * t.durationInSec)
    }
}, controllers.views.popups.LiveMessage.prototype.handleKeyUpEvent = function handleKeyUpEvent(e) {
    !this.getView().isInteractionEnabled() || e.key !== enums.KeyboardKey.ESCAPE && e.key !== enums.KeyboardKey.MS_ESCAPE && e.key !== enums.KeyboardKey.ENTER || this._continue()
}, controllers.views.popups.LiveMessage.prototype._onContinue = function _onContinue(sender, e) {
    this._continue()
}, components.PopupClickShield = function () {
    this._queue = [], Object.defineProperty(this, "_queue", {writable: !1}), this._activePopup = null, Object.defineProperty(this, "_activePopup", {writable: !0}), this._generate()
}, components.PopupClickShield.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("ut-click-shield"), this.__root = t, this._generated = !0
    }
}, components.PopupClickShield.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
}, components.PopupClickShield.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, components.PopupClickShield.prototype.getRootElement = function getRootElement() {
    return this.__root
}, components.PopupClickShield.prototype.init = function init() {
    var root = this.getRoot();
    getAppBody().prepend(root), root.on("scrollstart scrollstop swipeleft swiperight", function (e) {
        e.stopImmediatePropagation(), e.preventDefault()
    })
}, components.PopupClickShield.prototype.destroy = function destroy() {
    this.reset(), this.destroyGeneratedElements()
}, components.PopupClickShield.prototype.onRequestBack = function onRequestBack() {
    return !utils.JS.isValid(this._queue[0]) || this._queue[0].onBackButton()
}, components.PopupClickShield.prototype.setActivePopup = function setActivePopup(t) {
    this._queue.push(t), t.onExit.observe(this, this.onActivePopupIsDone), 1 === this._queue.length && (this._activePopup = t, this.displayPopup(this._activePopup))
}, components.PopupClickShield.prototype.displayPopup = function displayPopup(t) {
    var view = t.getView();
    this.showShield(), this.getRootElement().appendChild(view.getRootElement()), t.initialized || t.init(), t.viewWillAppear(), t.viewDidAppear()
}, components.PopupClickShield.prototype.onActivePopupIsDone = function onActivePopupIsDone() {
    this.closeActivePopup()
}, components.PopupClickShield.prototype._removeActivePopup = function removeActivePopup() {
    var t = this._activePopup;
    t.viewWillDisappear();
    var i = t.getView().getRootElement();
    i.parentNode.removeChild(i), t.viewDidDisappear()
}, components.PopupClickShield.prototype.closeActivePopup = function closeActivePopup() {
    var t = this._activePopup;
    this.hideShield(), this._queue.shift(), this._removeActivePopup(), t.dealloc();
    var i = this._queue[0];
    this._activePopup = utils.JS.isValid(i) ? i : null, this._activePopup && requestAnimationFrame(function () {
        this.displayPopup(this._activePopup)
    }.bind(this))
}, components.PopupClickShield.prototype.reset = function () {
    this._queue.length > 0 && this._queue.forEach(function (t) {
        t.dealloc()
    }), this._queue.length = 0, this.hideShield()
}, components.PopupClickShield.prototype.showShield = function () {
    this.getRoot().addClass("ut-click-shield-displayed")
}, components.PopupClickShield.prototype.hideShield = function () {
    this.getRoot().removeClass("ut-click-shield-displayed")
}, components.PopupClickShield.prototype.displayLiveMessages = function () {
    function onLiveMessagesRead(s) {
        t && services.User.getUser().requestCurrencies(), i && repositories.Item.setDirty(enums.FUTItemPile.PURCHASED)
    }

    var t = !1, i = !1;
    repositories.Message.getLiveMessages().observe(this, function onLiveMessagesRetrieved(s, response) {
        if (s.unobserve(this), response.messages.length > 0) {
            t = response.promoCoins, i = response.promoItems;
            var o = new controllers.views.popups.LiveMessage(response.messages);
            o.onExit.observe(this, onLiveMessagesRead), this.setActivePopup(o)
        }
    })
};
var gPopupClickShield = new components.PopupClickShield;
NamespaceManager.Register("utils"), utils.AssetLocator = {}, utils.AssetLocator.PLACEHOLDER_LOOKUP = null, utils.AssetLocator.IMAGE_TYPE_BADGE_LEGACY_1 = "clubbadges/web/", utils.AssetLocator.IMAGE_TYPE_BADGE_LEGACY_2 = "clubs/", utils.AssetLocator.IMAGE_TYPE_BADGE_DARK = "clubs/dark/",
    utils.AssetLocator.IMAGE_TYPE_BADGE_LIGHT = "clubs/normal/", utils.AssetLocator.IMAGE_TYPE_LEAGUE_DARK = "leagueLogos/dark/", utils.AssetLocator.IMAGE_TYPE_LEAGUE_LIGHT = "leagueLogos/light/", utils.AssetLocator.IMAGE_TYPE_BALL = "balls/", utils.AssetLocator.IMAGE_TYPE_BOOST_COIN = "boost/coin/", utils.AssetLocator.IMAGE_TYPE_BOOST_PACK = "boost/pack/", utils.AssetLocator.IMAGE_TYPE_DRAFT_TOKEN = "boost/draft/token/", utils.AssetLocator.IMAGE_TYPE_PLAYER_PICK_ITEM = "boost/draft/item/", utils.AssetLocator.IMAGE_TYPE_CONTRACT = "contract/", utils.AssetLocator.IMAGE_TYPE_FLAG_LEGACY = "cardflags/web/", utils.AssetLocator.IMAGE_TYPE_FLAG = "flags/card/", utils.AssetLocator.IMAGE_TYPE_FLAG_FULL = "flags/list/", utils.AssetLocator.IMAGE_TYPE_HEALING_FITNESS = "healing/fitness/", utils.AssetLocator.IMAGE_TYPE_HEALING_INJURY = "healing/injury/", utils.AssetLocator.IMAGE_TYPE_KIT_HOME = "kits/home/", utils.AssetLocator.IMAGE_TYPE_KIT_AWAY = "kits/away/", utils.AssetLocator.IMAGE_TYPE_KIT_THIRD = "kits/third/", utils.AssetLocator.IMAGE_TYPE_PORTRAIT_LEGACY = "players/web/", utils.AssetLocator.IMAGE_TYPE_PORTRAIT = "portraits/", utils.AssetLocator.IMAGE_TYPE_DYNAMIC_PORTRAIT = "single/", utils.AssetLocator.IMAGE_TYPE_FORMATION = "formations/", utils.AssetLocator.IMAGE_TYPE_STADIUM_FULL = "stadiums/", utils.AssetLocator.IMAGE_TYPE_TRAINING_GKATTRIB = "training/gkattrib/", utils.AssetLocator.IMAGE_TYPE_TRAINING_PLAYERATTRIB = "training/playerattrib/", utils.AssetLocator.IMAGE_TYPE_TRAINING_POSITION = "training/position/", utils.AssetLocator.IMAGE_TYPE_TRAINING_LEAGUEMOD = "managerleague/", utils.AssetLocator.IMAGE_TYPE_TRAINING_PLAYSTYLE = "chemistrystyles/", utils.AssetLocator.IMAGE_TYPE_PACKS_BACKGROUND = "/fut/packs/images/companion/packs_backgrounds_", utils.AssetLocator.IMAGE_TYPE_PACKS_FOREGROUND = "/fut/packs/images/companion/packs_foregrounds_", utils.AssetLocator.IMAGE_TYPE_SBC_CHALLENGES = "/fut/sbc/companion/challenges/images/", utils.AssetLocator.IMAGE_TYPE_OBJECTIVES_CUSTOM = "/fut/dynamicObjectives/gen4/infoIcons/", utils.AssetLocator.IMAGE_TYPE_OBJECTIVES_GAMEAREA = "/fut/objectives/companion/images/", utils.AssetLocator.IMAGE_TYPE_SBC_SETS = "/fut/sbc/companion/sets/images/", utils.AssetLocator.IMAGE_TYPE_MOBILESTART_LOYALTYREWARD = "/fut/mobilestart/images/LoyaltyTier", utils.AssetLocator.IMAGE_TYPE_GENERATIONS_SHELL = "shells/", utils.AssetLocator.FILTER = {
    YEAR: "images/SearchFilters/generations/",
    CLUB: "clubs/normal/",
    FORMATION: "images/SearchFilters/formation/",
    LEAGUE: "leagueLogos/light/",
    LEVEL: "images/SearchFilters/level/",
    NATION: "flags/list/",
    POSITION: "positions/",
    PLAYSTYLE: "chemistrystyles/",
    TYPE: "type/"
}, utils.AssetLocator.FILE_TYPE_JPG = ".jpg", utils.AssetLocator.FILE_TYPE_PNG = ".png", utils.AssetLocator.HI_RES_POSTFIX = "%402x", utils.AssetLocator.ASSET_ID_DEFAULT = 0, utils.AssetLocator.ASSET_ID_PLAYER = 0, utils.AssetLocator.ASSET_ID_MANAGER = 1, utils.AssetLocator.ASSET_ID_TEAM = 1, utils.AssetLocator.ASSET_ID_BRONZE_PACK = 0, utils.AssetLocator.ASSET_ID_SILVER_PACK = 1, utils.AssetLocator.ASSET_ID_GOLD_PACK = 2, utils.AssetLocator.CONFIG_FILE_ROOT = "/fut/config/companion/", utils.AssetLocator.DYNAMIC_UPDATES_ROOT = "/fut/dynamicupdates/companion/", utils.AssetLocator.IMAGE_ROOT = "/fut/items/images/", utils.AssetLocator.MOBILE_IMAGE_ROOT = utils.AssetLocator.IMAGE_ROOT + "mobile/", utils.AssetLocator.DYMAMIC_IMAGE_ROOT = "/fut/playerheads/mobile/", utils.AssetLocator.ASSET_GUIDS = {}, utils.AssetLocator.ASSET_GUIDS[enums.Year.YEAR_2014] = "C74DDF38-0B11-49b0-B199-2E2A11D1CC13", utils.AssetLocator.ASSET_GUIDS[enums.Year.YEAR_2015] = "8D941B48-51BB-4B87-960A-06A61A62EBC0", utils.AssetLocator.ASSET_GUIDS[enums.Year.YEAR_2016] = "B488919F-23B5-497F-9FC0-CACFB38863D0", utils.AssetLocator.ASSET_GUIDS[enums.Year.YEAR_2017] = "CC8267B6-0817-4842-BB6A-A20F88B05418", utils.AssetLocator.ASSET_GUIDS[enums.Year.YEAR_2018] = "B1BA185F-AD7C-4128-8A64-746DE4EC5A82", utils.AssetLocator.ASSET_GUIDS[enums.Year.YEAR_2019] = "7D49A6B1-760B-4491-B10C-167FBC81D58A", utils.AssetLocator.getGUIDForYear = function (t) {
    return utils.AssetLocator.ASSET_GUIDS[t] ? utils.AssetLocator.ASSET_GUIDS[t] + "/" : ""
},
    utils.AssetLocator.getSmallImage = function (type, t, i) {
        return t = utils.JS.isNumber(t) && t <= enums.Year.ASSET ? t : enums.Year.ASSET, i = utils.JS.isNumber(i) && i >= 0 ? i : 0, type += "small/", utils.AssetLocator._getImageURI(type, t, i, utils.AssetLocator.FILE_TYPE_PNG)
    }, utils.AssetLocator.getImage = function (type, t, i, s) {
    t = utils.JS.isNumber(t) && t <= enums.Year.ASSET ? t : enums.Year.ASSET, i = utils.JS.isNumber(i) && i >= 0 ? i : 0, s = utils.JS.isNumber(s) ? s : 0;
    var path = "";
    switch (type) {
        case utils.AssetLocator.IMAGE_TYPE_BALL:
        case utils.AssetLocator.IMAGE_TYPE_BOOST_COIN:
        case utils.AssetLocator.IMAGE_TYPE_BOOST_PACK:
        case utils.AssetLocator.IMAGE_TYPE_DRAFT_TOKEN:
        case utils.AssetLocator.IMAGE_TYPE_PLAYER_PICK_ITEM:
        case utils.AssetLocator.IMAGE_TYPE_FORMATION:
        case utils.AssetLocator.IMAGE_TYPE_CONTRACT:
        case utils.AssetLocator.IMAGE_TYPE_HEALING_FITNESS:
        case utils.AssetLocator.IMAGE_TYPE_HEALING_INJURY:
        case utils.AssetLocator.IMAGE_TYPE_TRAINING_GKATTRIB:
        case utils.AssetLocator.IMAGE_TYPE_TRAINING_PLAYERATTRIB:
        case utils.AssetLocator.IMAGE_TYPE_TRAINING_POSITION:
        case utils.AssetLocator.IMAGE_TYPE_TRAINING_LEAGUEMOD:
        case utils.AssetLocator.IMAGE_TYPE_TRAINING_PLAYSTYLE:
        case utils.AssetLocator.IMAGE_TYPE_LEAGUE_DARK:
        case utils.AssetLocator.IMAGE_TYPE_LEAGUE_LIGHT:
        case utils.AssetLocator.IMAGE_TYPE_STADIUM_FULL:
            path = utils.AssetLocator._getImageURI(type, t, i, utils.AssetLocator.FILE_TYPE_PNG);
            break;
        case utils.AssetLocator.IMAGE_TYPE_PORTRAIT:
        case utils.AssetLocator.IMAGE_TYPE_DYNAMIC_PORTRAIT:
            path = utils.AssetLocator._getPortraitURI(type, t, i);
            break;
        case utils.AssetLocator.IMAGE_TYPE_FLAG:
        case utils.AssetLocator.IMAGE_TYPE_FLAG_FULL:
            path = utils.AssetLocator._getFlagImageURI(type, t, i);
            break;
        case utils.AssetLocator.IMAGE_TYPE_BADGE_DARK:
        case utils.AssetLocator.IMAGE_TYPE_BADGE_LIGHT:
            path = utils.AssetLocator._getBadgeImageURI(type, t, i);
            break;
        case utils.AssetLocator.IMAGE_TYPE_KIT_HOME:
        case utils.AssetLocator.IMAGE_TYPE_KIT_AWAY:
        case utils.AssetLocator.IMAGE_TYPE_KIT_THIRD:
            path = utils.AssetLocator._getKitImageURI(type, t, i, s);
            break;
        case utils.AssetLocator.IMAGE_TYPE_PACKS_BACKGROUND:
            path = utils.AssetLocator.getPackBackgroundImageURI(type, t, s);
            break;
        case utils.AssetLocator.IMAGE_TYPE_PACKS_FOREGROUND:
            path = utils.AssetLocator.getPackForegroundImageURI(type, t, i, s);
            break;
        case utils.AssetLocator.IMAGE_TYPE_MOBILESTART_LOYALTYREWARD:
            path = utils.AssetLocator.getMobileStartLoyaltyImageURI(type, t, i);
            break;
        default:
            utils.Debug.Assert(!1, "[AssetLocator.js] getImage() | Reached default case: " + type)
    }
    return path
}, utils.AssetLocator._getImageURI = function (type, t, i, s, o) {
    return o = utils.JS.isEmpty(o) ? utils.AssetLocator.MOBILE_IMAGE_ROOT : o, gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(t) + utils.TextUtils.getYearString(t) + o + type + i + s
}, utils.AssetLocator._getPortraitURI = function (type, t, i) {
    var s = utils.AssetLocator.MOBILE_IMAGE_ROOT, o = i;
    return type === utils.AssetLocator.IMAGE_TYPE_DYNAMIC_PORTRAIT ? (o = "p" + o, s = utils.AssetLocator.DYMAMIC_IMAGE_ROOT) : t <= enums.Year.YEAR_2011 && (type = utils.AssetLocator.IMAGE_TYPE_PORTRAIT_LEGACY, s = utils.AssetLocator.IMAGE_ROOT), utils.AssetLocator._getImageURI(type, t, o, utils.AssetLocator.FILE_TYPE_PNG, s)
}, utils.AssetLocator._getFlagImageURI = function (type, t, i) {
    var s = utils.AssetLocator.MOBILE_IMAGE_ROOT, o = i, l = utils.AssetLocator.FILE_TYPE_PNG;
    return t <= enums.Year.YEAR_2011 && (s = utils.AssetLocator.IMAGE_ROOT, type = utils.AssetLocator.IMAGE_TYPE_FLAG_LEGACY, t === enums.Year.YEAR_2010 && (o = "fccCardFlags_" + i, l = utils.AssetLocator.FILE_TYPE_JPG)), utils.AssetLocator._getImageURI(type, t, o, l, s)
}, utils.AssetLocator._getBadgeImageURI = function (type, t, i) {
    var s = utils.AssetLocator.MOBILE_IMAGE_ROOT, o = i;
    return t <= enums.Year.YEAR_2015 && (type = utils.AssetLocator.IMAGE_TYPE_BADGE_LEGACY_2, t <= enums.Year.YEAR_2011 && (s = utils.AssetLocator.IMAGE_ROOT, type = utils.AssetLocator.IMAGE_TYPE_BADGE_LEGACY_1, o = "s" + i)), utils.AssetLocator._getImageURI(type, t, o, utils.AssetLocator.FILE_TYPE_PNG, s)
}, utils.AssetLocator._getKitImageURI = function (type, t, i, s) {
    var o = utils.TextUtils.getYearString(t),
        l = utils.AssetLocator.getGUIDForYear(t) + o + utils.AssetLocator.MOBILE_IMAGE_ROOT + type,
        u = repositories.TeamConfig.getTeam(i, t), h = function _getKitTypeId() {
            return type === utils.AssetLocator.IMAGE_TYPE_KIT_HOME ? 0 : type === utils.AssetLocator.IMAGE_TYPE_KIT_AWAY ? 1 : 3
        }();
    if (null === u) return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + l + "j" + h + "_" + i + "_" + s + utils.AssetLocator.FILE_TYPE_PNG;
    var p = utils.JS.find(u.kits, function (t) {
        return t.type === h && t.year === s
    }), m = "", region = services.Localization.getLocale().region;
    return p && p.localized && (region === enums.Region.FRANCE ? m = "6" : region !== enums.Region.RUSSIA && region !== enums.Region.NETHERLANDS && region !== enums.Region.BRAZIL && region !== enums.Region.POLAND && region !== enums.Region.SAUDI_ARABIA && region !== enums.Region.TURKEY || (m = "4")), gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + l + "j" + m + h + "_" + i + "_" + s + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator._getConfigFilePath = function () {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + utils.AssetLocator.CONFIG_FILE_ROOT
}, utils.AssetLocator._getDynamicUpdateFilePath = function () {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + utils.AssetLocator.DYNAMIC_UPDATES_ROOT
}, utils.AssetLocator.getStaticTeamConfigURI = function () {
    var value = utils.AssetLocator._getConfigFilePath() + "teamconfig.json";
    return isWeb() && (value += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION)), value
}, utils.AssetLocator.getGenerationsStaticTeamConfigURI = function () {
    var value = utils.AssetLocator._getConfigFilePath() + "generations.json";
    return isWeb() && (value += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION)), value
}, utils.AssetLocator.getStaticPlaceholderAssetConfigURI = function () {
    var value = utils.AssetLocator._getConfigFilePath() + "missing_images.json";
    return isWeb() && (value += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION)), value
}, utils.AssetLocator.getDreamSquadTemplateURI = function () {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + "/fut/packs/dreamsquad/dreamsquadpacklist.json"
}, utils.AssetLocator.getPlayerSearchFileURI = function () {
    var value = gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + "/fut/items/web/players.json";
    return isWeb() && (value += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION)), value
}, utils.AssetLocator.getPlayerMetaFileURI = function () {
    var value = gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + "/fut/items/web/players_meta.json";
    return isWeb() && (value += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION)), value
}, utils.AssetLocator.getPlayerIconFileURI = function () {
    var value = gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + "/fut/items/web/players_icons.json";
    return isWeb() && (value += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION)), value
}, utils.AssetLocator.getRemoteConfigFileURI = function () {
    return utils.AssetLocator._getConfigFilePath() + "remoteConfig.json"
}, utils.AssetLocator.getGBUDJSONURI = function () {
    return utils.AssetLocator._getConfigFilePath() + "gbud.json"
}, utils.AssetLocator.getExtendedLocFileURI = function () {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + "/fut/loc/companion/futweb/cdn/" + services.Localization.getLocale().toString() + ".json"
}, utils.AssetLocator.getRarityURI = function () {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + "/fut/items/images/backgrounds/itemBGs/futitemraritytunables.json"
}, utils.AssetLocator.getStoreLocFileURI = function () {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + "/fut/packs/loc/storepackdescriptions." + services.Localization.getLocale().toString().toLowerCase() + ".xml"
}, utils.AssetLocator.getSquadDataURI = function (t) {
    var uri = utils.AssetLocator._getConfigFilePath() + "squadData.json";
    return isWeb() && (uri += "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION)), uri
}, utils.AssetLocator.getDynamicResourceUri = function (platform, version, filename) {
    return utils.AssetLocator._getDynamicUpdateFilePath() + platform + "/" + version + "/" + filename
}, utils.AssetLocator.getStaticItemDataURI = function (t, i) {
    i = i <= enums.Year.ASSET ? i : enums.Year.ASSET;
    var s = utils.TextUtils.getYearString(i);
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(i) + s + "/fut/items/web/" + t + ".json"
}, utils.AssetLocator.getLicenseLogoURI = function (lang) {
    return "images/logo/FIFAlicense" + (lang === enums.Language.FRENCH ? "FRE" : "ENG") + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getFUTProductLogoURI = function (lang, product) {
    var t = lang === enums.Language.FRENCH ? "FRE" : "ENG";
    return "images/logo/futProductLogo" + (utils.JS.isValid(product) ? product : enums.Product.COMPANION) + t + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getFUTProductColorLogoURI = function (lang, product) {
    var t = lang === enums.Language.FRENCH ? "FRE" : "ENG";
    return "images/logo/futProductLogoColor" + (utils.JS.isValid(product) ? product : enums.Product.COMPANION) + t + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getFUTProductMinLogoURI = function (lang, product) {
    var t = lang === enums.Language.FRENCH ? "FRE" : "ENG";
    return "images/logo/futProductLogoMin" + (utils.JS.isValid(product) ? product : enums.Product.COMPANION) + t + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getPackBackgroundImageURI = function (type, t, i) {
    return utils.AssetLocator.getPackImageURI(type, t, i.toString())
}, utils.AssetLocator.getPackForegroundImageURI = function (type, t, i, s) {
    var path = i + "_" + s;
    return utils.AssetLocator.getPackImageURI(type, t, path)
}, utils.AssetLocator.getPackImageURI = function (type, t, path) {
    var i = utils.TextUtils.getYearString(t), s = utils.AssetLocator.getGUIDForYear(t) + i + type + path;
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + s + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getMobileStartLoyaltyImageURI = function (type, t, i) {
    var s = utils.TextUtils.getYearString(t), o = utils.AssetLocator.getGUIDForYear(t) + s + type + i;
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + o + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getSBCImageURI = function (type, t, i) {
    t = utils.JS.isNumber(t) && t <= enums.Year.ASSET ? t : enums.Year.ASSET;
    var s = utils.TextUtils.getYearString(t), fileName = "sbc_";
    return type === utils.AssetLocator.IMAGE_TYPE_SBC_CHALLENGES ? fileName += "challenge_image_" + i : fileName += "set_image_" + i, gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(t) + s + type + fileName + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getSBCRewardPreviewImageURI = function (t, i) {
    t = utils.JS.isNumber(t) && t <= enums.Year.ASSET ? t : enums.Year.ASSET;
    var s = utils.TextUtils.getYearString(t), fileName = "sbc_set_pickpack_image_" + i,
        type = utils.AssetLocator.IMAGE_TYPE_SBC_SETS;
    return isPhone() && (fileName += "_mobile"), gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(t) + s + type + fileName + utils.AssetLocator.FILE_TYPE_PNG
}, utils.AssetLocator.getObjectiveImageURL = function (identifier, t) {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + utils.AssetLocator.getObjectiveImageURN(identifier, t)
}, utils.AssetLocator.getObjectiveImageURN = function (identifier, t) {
    t = utils.JS.isNumber(t) && t <= enums.Year.ASSET ? t : enums.Year.ASSET;
    var i = utils.TextUtils.getYearString(t),
        fileName = (utils.JS.isNumber(identifier) ? utils.AssetLocator.IMAGE_TYPE_OBJECTIVES_GAMEAREA + "objective_" : utils.AssetLocator.IMAGE_TYPE_OBJECTIVES_CUSTOM) + identifier;
    return -1 === identifier.toString().indexOf(utils.AssetLocator.FILE_TYPE_PNG) && (fileName += utils.AssetLocator.FILE_TYPE_PNG), gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(t) + i + fileName
},utils.AssetLocator.getGenerationsShellURL = function (t, i, s, o) {
    var l = utils.TextUtils.getYearString(enums.Year.ASSET);
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + (utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + l + utils.AssetLocator.MOBILE_IMAGE_ROOT + utils.AssetLocator.IMAGE_TYPE_GENERATIONS_SHELL + utils.TextUtils.getYearString(s)) + ((o ? "/p_" : "/small_") + t + (utils.JS.isEmpty(i) ? "" : "_" + i)) + utils.AssetLocator.FILE_TYPE_PNG
},utils.AssetLocator.getLocalShellURL = function (t, i, s, o) {
    var l;
    switch (o) {
        case enums.ItemViewType.SMALL:
            l = "s";
            break;
        case enums.ItemViewType.LARGE:
            l = "e"
    }
    return "images/Items/" + s + "/" + ("cards_bg_" + l + "_1_" + t + "_" + i) + utils.AssetLocator.FILE_TYPE_PNG
},utils.AssetLocator.getShellURL = function (t, i, s, o) {
    var l, u;
    switch (t) {
        case enums.ItemViewType.SMALL:
            l = "s", u = "small/";
            break;
        case enums.ItemViewType.LARGE:
            l = "e", u = "large/"
    }
    var filename = "cards_bg_" + l + "_" + i.toString() + "_" + s + "_" + o + ".png";
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(enums.Year.ASSET) + utils.TextUtils.getYearString(enums.Year.ASSET) + utils.AssetLocator.IMAGE_ROOT + "backgrounds/itemCompanionBGs/" + u + filename
},utils.AssetLocator.getFilterImage = function (type, value, t) {
    var fileName = "", i = enums.Year.ASSET < enums.Year.YEAR_2017 ? enums.Year.YEAR_2017 : enums.Year.ASSET,
        path = gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_STATIC_DATA_ROOT) + utils.AssetLocator.getGUIDForYear(i) + utils.TextUtils.getYearString(i) + utils.AssetLocator.MOBILE_IMAGE_ROOT + type;
    switch (utils.JS.isValid(t) && (path += t + "/"), type) {
        case utils.AssetLocator.FILTER.LEVEL:
            return fileName = value + utils.AssetLocator.FILE_TYPE_PNG, type + fileName;
        case utils.AssetLocator.FILTER.YEAR:
        case utils.AssetLocator.FILTER.FORMATION:
            return fileName = value + utils.AssetLocator.FILE_TYPE_PNG, type + fileName;
        case utils.AssetLocator.FILTER.CLUB:
        case utils.AssetLocator.FILTER.NATION:
        case utils.AssetLocator.FILTER.LEAGUE:
        case utils.AssetLocator.FILTER.PLAYSTYLE:
        case utils.AssetLocator.FILTER.POSITION:
        case utils.AssetLocator.FILTER.TYPE:
            fileName = value + utils.AssetLocator.FILE_TYPE_PNG
    }
    return path + fileName
},utils.AssetLocator.hasPlaceholder = function hasPlaceholder(type, key, t, i) {
    return !(t !== enums.Year.ASSET || (key += utils.JS.isString(i) ? "_" + i : "", !utils.JS.isValid(utils.AssetLocator.PLACEHOLDER_LOOKUP[type]) || !utils.JS.isValid(utils.AssetLocator.PLACEHOLDER_LOOKUP[type][key]))) && utils.AssetLocator.PLACEHOLDER_LOOKUP[type][key]
},utils.AssetLocator.hasPlaceholderKit = function (path, t) {
    var i = utils.TextUtils.basename(path)
    ;
    return i = i.replace("@2x", "").replace("%402x", "").replace(".png", ""), utils.AssetLocator.hasPlaceholder(enums.PlaceholderAssetKey.KITS, i, t)
},NamespaceManager.Register("utils"),utils.DelegateChain = function (t, i, s) {
    utils.EventDispatcher.call(this), this._stopOnError = i, this._delegateArray = t, this._responseArray = [], this._currentIndex = 0, this._clickShieldType = s || components.ClickShield.SHIELD.NONE, this._isCritical = !1, this._isCancelled = !1, this._isRunning = !1
},utils.JS.inherits(utils.DelegateChain, utils.EventDispatcher),utils.DelegateChain.SUCCESS = "utils.DelegateChain.SUCCESS",utils.DelegateChain.FAIL = "utils.DelegateChain.FAIL",utils.DelegateChain.CANCEL = "utils.DelegateChain.CANCEL",utils.DelegateChain.prototype.isCancelled = function isCancelled() {
    return this._isCancelled
},utils.DelegateChain.prototype.isCritical = function isCritical() {
    return this._isCritical
},utils.DelegateChain.prototype.execute = function execute() {
    this.send()
},utils.DelegateChain.prototype.send = function send() {
    if (this._isRunning) throw new Error("[DelegateChain::execute] Delegate chain is already running.");
    if (this._delegateArray.length < 1) throw new Error("[DelegateChain::execute] Delegate array cannot be empty.");
    this._isRunning = !0, gClickShield.showShield(this._clickShieldType), this._currentIndex = 0, this.setupNextChainDelegate(this._delegateArray[this._currentIndex])
},utils.DelegateChain.prototype.cancel = function cancel() {
    this._isCancelled = !0, this.clearRemainingListeners(), this._delegateArray.slice(this._currentIndex, this._delegateArray.length).forEach(function (t) {
        t.cancel()
    }), gClickShield.hideShield(this._clickShieldType), this.dispatch(utils.DelegateChain.CANCEL), this._isRunning = !1
},utils.DelegateChain.prototype.setupNextChainDelegate = function setupNextChainDelegate(t) {
    t.addListener(communication.BaseDelegate.SUCCESS, this, this.onDelegateComplete), t.addListener(communication.BaseDelegate.FAIL, this, this.onDelegateFail), t.execute()
},utils.DelegateChain.prototype.onDelegateFail = function onDelegateFail(sender, error) {
    sender.clearListenersByScope(this), this._isCritical = sender.isImportant(), sender.isImportant() || this._stopOnError || this.isCancelled() ? (gClickShield.hideShield(this._clickShieldType), this.clearRemainingListeners(), this.dispatch(utils.DelegateChain.FAIL, error, sender), this._isRunning = !1) : this.onDelegateComplete(sender, null)
},utils.DelegateChain.prototype.onDelegateComplete = function onDelegateComplete(sender, data) {
    sender.clearListenersByScope(this), this._responseArray[this._currentIndex] = data, ++this._currentIndex < this._delegateArray.length ? this.setupNextChainDelegate(this._delegateArray[this._currentIndex]) : (gClickShield.hideShield(this._clickShieldType), this.dispatch(utils.DelegateChain.SUCCESS, this._delegateArray, this._responseArray), this._isRunning = !1)
},utils.DelegateChain.prototype.clearRemainingListeners = function clearRemainingListeners() {
    this._delegateArray.slice(this._currentIndex, this._delegateArray.length).forEach(function (t) {
        t.clearListenersByScope(this)
    })
},NamespaceManager.Register("utils"),utils.ImagePreloader = function ImagePreloader() {
    UTObject.call(this), this._preloadedImages = new UTHashTable({})
},utils.JS.inherits(utils.ImagePreloader, UTObject),utils.ImagePreloader.prototype.dealloc = function dealloc() {
    this._preloadedImages.clear(), this._preloadedImages = null
},utils.ImagePreloader.prototype.preloadImages = function preloadImages(images) {
    function imgLoaded(e) {
        --s <= 0 && i.notify(), e.target.removeEventListener("load", imgLoaded, !1)
    }

    images = utils.JS.valToArray(images);
    var t = null, i = new UTObservable, s = images.length;
    return images.forEach(function (src) {
        this._preloadedImages.has(src) ? s-- : ((t = new Image).addEventListener("load", imgLoaded, !1), t.src = src, this._preloadedImages.set(src, t))
    }, this), i
},NamespaceManager.Register("utils"),utils.UTTimer = function UTTimer(interval, t, i) {
    UTObject.call(this), this._workFunc = utils.JS.isFunction(t) ? t : null, this._interval = utils.JS.isNumber(interval) && interval > 0 ? interval : 1e3, this._errorFunc = utils.JS.isFunction(i) ? i : null, this._expected = 0,
        this._timeout = 0, this._resetFlag = !1
},utils.JS.inherits(utils.UTTimer, UTObject),utils.UTTimer.prototype.dealloc = function dealloc() {
    this.reset()
},utils.UTTimer.prototype.reset = function reset() {
    this.stop(), this._workFunc = null, this._errorFunc = null, this._interval = 0, this._expected = 0, this._timeout = 0, this._resetFlag = !0
},utils.UTTimer.prototype.setInterval = function setInterval(t) {
    utils.Debug.Assert(utils.JS.isNumber(t) && t > 0, "Expected a number greater than 0."), this._interval = t
},utils.UTTimer.prototype.setWorkFunc = function setWorkFunc(t) {
    utils.Debug.Assert(utils.JS.isFunction(t), "Expected a function."), this._workFunc = utils.JS.isFunction(t) ? t : null
},utils.UTTimer.prototype.setErrorFunc = function setErrorFunc(t) {
    utils.Debug.Assert(utils.JS.isFunction(t), "Expected a function."), this._errorFunc = utils.JS.isFunction(t) ? t : null
},utils.UTTimer.prototype.start = function start() {
    this._resetFlag = !1, this._expected = Date.now() + this._interval, this._timeout = setTimeout(this._step.bind(this), this._interval)
},utils.UTTimer.prototype.stop = function stop() {
    clearTimeout(this._timeout)
},utils.UTTimer.prototype._step = function _step() {
    if (this._resetFlag) this.stop(); else {
        var t = Date.now() - this._expected;
        t > this._interval && this._errorFunc && this._errorFunc.call(), this._workFunc && this._workFunc.call(), this._expected += this._interval, this._timeout = setTimeout(this._step.bind(this), Math.max(0, this._interval - t))
    }
},NamespaceManager.Register("utils"),utils.TEA = {},utils.TEA.encrypt = function (t, password) {
    if (0 === t.length) return "";
    var i = utils.TEA.strToLongs(Utf8.encode(t));
    i.length <= 1 && (i[1] = 0);
    for (var s, e, o = utils.TEA.strToLongs(Utf8.encode(password).slice(0, 16)), n = i.length, z = i[n - 1], y = i[0], l = Math.floor(6 + 52 / n), u = 0; l-- > 0;) {
        e = (u += 2654435769) >>> 2 & 3;
        var h = 0;
        for (h = 0; h < n; h++) s = (z >>> 5 ^ (y = i[(h + 1) % n]) << 2) + (y >>> 3 ^ z << 4) ^ (u ^ y) + (o[3 & h ^ e] ^ z), z = i[h] += s
    }
    var ciphertext = utils.TEA.longsToStr(i);
    return Base64.encode(ciphertext)
},utils.TEA.decrypt = function (ciphertext, password) {
    if (0 === ciphertext.length) return "";
    for (var t, e, i = utils.TEA.strToLongs(Base64.decode(ciphertext)), s = utils.TEA.strToLongs(Utf8.encode(password).slice(0, 16)), n = i.length, z = i[n - 1], y = i[0], o = 2654435769 * Math.floor(6 + 52 / n); 0 !== o;) {
        e = o >>> 2 & 3;
        var l = n - 1;
        for (l = n - 1; l >= 0; l--) t = ((z = i[l > 0 ? l - 1 : n - 1]) >>> 5 ^ y << 2) + (y >>> 3 ^ z << 4) ^ (o ^ y) + (s[3 & l ^ e] ^ z), y = i[l] -= t;
        o -= 2654435769
    }
    var u = utils.TEA.longsToStr(i);
    return u = u.replace(/\0+$/, ""), Utf8.decode(u)
},utils.TEA.strToLongs = function (t) {
    var i = [], s = 0;
    for (s = 0; s < Math.ceil(t.length / 4); s++) i[s] = t.charCodeAt(4 * s) + (t.charCodeAt(4 * s + 1) << 8) + (t.charCodeAt(4 * s + 2) << 16) + (t.charCodeAt(4 * s + 3) << 24);
    return i
},utils.TEA.longsToStr = function (t) {
    var a = new Array(t.length), i = 0;
    for (i = 0; i < t.length; i++) a[i] = String.fromCharCode(255 & t[i], t[i] >>> 8 & 255, t[i] >>> 16 & 255, t[i] >>> 24 & 255);
    return a.join("")
};
var Base64 = {};
Base64.code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", Base64.encode = function (t) {
    var i, s, o, l, u, c, h, p, e = [], pad = "", m = Base64.code;
    if (h = t, (c = h.length % 3) > 0) for (; c++ < 3;) pad += "=", h += "\0";
    for (c = 0; c < h.length; c += 3) s = (i = h.charCodeAt(c) << 16 | h.charCodeAt(c + 1) << 8 | h.charCodeAt(c + 2)) >> 18 & 63, o = i >> 12 & 63, l = i >> 6 & 63, u = 63 & i, e[c / 3] = m.charAt(s) + m.charAt(o) + m.charAt(l) + m.charAt(u);
    return p = e.join(""), p = p.slice(0, p.length - pad.length) + pad
}, Base64.decode = function (t) {
    var i, s, o, l, u, h, p, d = [], m = Base64.code;
    p = t;
    var c = 0;
    for (c = 0; c < p.length; c += 4) i = (h = m.indexOf(p.charAt(c)) << 18 | m.indexOf(p.charAt(c + 1)) << 12 | (l = m.indexOf(p.charAt(c + 2))) << 6 | (u = m.indexOf(p.charAt(c + 3)))) >>> 16 & 255, s = h >>> 8 & 255, o = 255 & h, d[c / 4] = String.fromCharCode(i, s, o), 64 === u && (d[c / 4] = String.fromCharCode(i, s)), 64 === l && (d[c / 4] = String.fromCharCode(i));
    return d.join("")
};
var Utf8 = {};
Utf8.encode = function (t) {
    var i = (t = t.toString()).replace(/[\u0080-\u07ff]/g, function (c) {
        var t = c.charCodeAt(0);
        return String.fromCharCode(192 | t >> 6, 128 | 63 & t)
    });
    return i = i.replace(/[\u0800-\uffff]/g, function (c) {
        var t = c.charCodeAt(0);
        return String.fromCharCode(224 | t >> 12, 128 | t >> 6 & 63, 128 | 63 & t)
    })
}, Utf8.decode = function (t) {
    var i = (t = t.toString()).replace(/[\u00e0-\u00ef][\u0080-\u00bf][\u0080-\u00bf]/g, function (c) {
        var t = (15 & c.charCodeAt(0)) << 12 | (63 & c.charCodeAt(1)) << 6 | 63 & c.charCodeAt(2);
        return String.fromCharCode(t)
    });
    return i = i.replace(/[\u00c0-\u00df][\u0080-\u00bf]/g, function (c) {
        var t = (31 & c.charCodeAt(0)) << 6 | 63 & c.charCodeAt(1);
        return String.fromCharCode(t)
    })
}, utils.TEA.KEY = "2d1dc222-1fff-412f-9752-0deb5508c4ac", NamespaceManager.Register("models"), models.UserSettingsModel = function UTUserSettingsModel() {
}, models.UserSettingsModel.prototype.setItem = function setItem(key, value) {
    utils.JS.isValid(value) ? (value = utils.TEA.encrypt(value.toString(), utils.TEA.KEY), getStorage().setItem(key, value)) : utils.Debug.Assert(!1, "Cannot store nil value for key: " + key)
}, models.UserSettingsModel.prototype.getItem = function getItem(key, defaultValue) {
    var value = getStorage().getItem(key);
    return utils.JS.isValid(value) ? utils.TEA.decrypt(value, utils.TEA.KEY) : defaultValue
}, models.UserSettingsModel.prototype.removeItem = function removeItem(key) {
    getStorage().removeItem(key)
}, models.UserSettingsModel.prototype.setUserItem = function setUserItem(key, value) {
    this.setItem(this._createUserKey(key), value)
}, models.UserSettingsModel.prototype.getUserItem = function getUserItem(key, defaultValue) {
    var value = this.getItem(this._createUserKey(key), defaultValue);
    return utils.JS.isValid(value) ? value.toString() : defaultValue
}, models.UserSettingsModel.prototype.removeUserItem = function removeUserItem(key) {
    this.removeItem(this._createUserKey(key))
}, models.UserSettingsModel.prototype.checkUserItemBool = function checkUserItemBool(key, t) {
    var i = this._parseBool(this.getUserItem(key, "false"));
    return utils.JS.isBoolean(t) && (t ? this.setUserItem(key, !0) : this.removeUserItem(key)), i
}, models.UserSettingsModel.prototype.getUserKeyEncrypted = function getUserKeyEncrypted() {
    var value = this.getItem(models.UserSettingsModel.KEY, "");
    return utils.JS.isValid(value) ? value.toString() : ""
}, models.UserSettingsModel.prototype.getUserKey = function getUserKey() {
    var value = this.getItem(models.UserSettingsModel.KEY, ""), t = utils.JS.isValid(value);
    return utils.Debug.Assert(t, "cannot decrypt empty value: " + value), t ? utils.TEA.decrypt(value, utils.TEA.KEY) : ""
}, models.UserSettingsModel.prototype.setUserKey = function setUserKey(value) {
    var t = utils.JS.isValid(value);
    value = value.toString().toLowerCase(), utils.Debug.Assert(t, "cannot encrypt empty value: " + value), t && this.getUserKey() !== value && (value = utils.TEA.encrypt(value, utils.TEA.KEY), this.setItem(models.UserSettingsModel.KEY, value))
}, models.UserSettingsModel.prototype.clearUserKey = function clearUserKey() {
    this.removeItem(models.UserSettingsModel.KEY)
}, models.UserSettingsModel.prototype.setUsageSharingEnabled = function setUsageSharingEnabled(value) {
    this.setUserItem(models.UserSettingsModel.USAGE_SHARING, value)
}, models.UserSettingsModel.prototype.getUsageSharingEnabled = function getUsageSharingEnabled() {
    return this._parseBool(this.getUserItem(models.UserSettingsModel.USAGE_SHARING, "true"))
}, models.UserSettingsModel.prototype.setAssetsVersion = function setAssetsVersion(value) {
    getStorage().setItem(models.UserSettingsModel.ASSETS_VERSION, parseInt(value, 10))
}, models.UserSettingsModel.prototype.getAssetsVersion = function getAssetsVersion() {
    var t = getStorage().getItem(models.UserSettingsModel.ASSETS_VERSION);
    return utils.JS.isValid(t) ? parseInt(t, 10) : 0
}, models.UserSettingsModel.prototype.setLocalStorageVersion = function setLocalStorageVersion(value) {
    getStorage().setItem(models.UserSettingsModel.LOCALSTORAGEVERSION, value)
}, models.UserSettingsModel.prototype.getLocalStorageVersion = function getLocalStorageVersion() {
    var t = getStorage().getItem(models.UserSettingsModel.LOCALSTORAGEVERSION);
    return utils.JS.isValid(t) ? parseInt(t, 10) : 0
}, models.UserSettingsModel.prototype.checkLocalStorageVersion = function checkLocalStorageVersion() {
    var t = gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_LOCAL_STORAGE_VERSION),
        i = this.getLocalStorageVersion(), s = 0;
    for (s = ++i; s <= t; s++) {
        try {
            this._upgradeLocalStorageVersion(s)
        } catch (t) {
            this._clearLocalStorage()
        }
        this.setLocalStorageVersion(s)
    }
},
    models.UserSettingsModel.prototype._upgradeLocalStorageVersion = function _upgradeLocalStorageVersion(version) {
        switch (version) {
            case 1:
                var t = getStorage(), i = 0, s = t.length, o = [];
                for (i = 0; i < s; i++) {
                    var l = t.key(i), u = {key: l, val: t[l]};
                    o.push(u), u = null
                }
                for (this._clearLocalStorage(), i = 0; i < o.length; i++) {
                    var h, newValue, key = o[i].key, value = o[i].val, p = [];
                    h = (p = key.split(":")).length > 1 ? utils.TEA.encrypt(p[0], utils.TEA.KEY) + ":" + p[1] : key, newValue = key === models.UserSettingsModel.KEY ? utils.TEA.encrypt(utils.TEA.encrypt(value.toString(), utils.TEA.KEY), utils.TEA.KEY) : utils.TEA.encrypt(value.toString(), utils.TEA.KEY), t.setItem(h, newValue)
                }
                o = null;
                break;
            default:
                throw"wrong localStorage version number!"
        }
    }, models.UserSettingsModel.prototype._clearLocalStorage = function _clearLocalStorage() {
    var t = getStorage();
    t instanceof UTStorageAlternative || t.clear()
}, models.UserSettingsModel.prototype._createUserKey = function _createUserKey(t) {
    return this.getUserKeyEncrypted() + ":" + t
}, models.UserSettingsModel.prototype._parseBool = function _parseBool(t) {
    return "true" === t.toLowerCase()
}, models.UserSettingsModel.KEY = "EMAIL_KEY", models.UserSettingsModel.SELECTED_PLATFORM_ID = "SELECTED_PLATFORM_ID", models.UserSettingsModel.SELECTED_PERSONA_ID = "SELECTED_PERSONA_ID", models.UserSettingsModel.SECURITY_TOKEN = "SECURITY_TOKEN", models.UserSettingsModel.ASSETS_VERSION = "AssetsVersion", models.UserSettingsModel.LOCALSTORAGEVERSION = "LocalStorageVersion", models.UserSettingsModel.USAGE_SHARING = "usagesharing", models.UserSettingsModel.BOOTFLOW_POPUP = "BOOTFLOW_POPUP", models.UserSettingsModel.DRAFT_SQUAD_CHANGES = "DRAFT_SQUAD_CHANGES";
var gUserSettingsModel = new models.UserSettingsModel;
NamespaceManager.Register("models"), models.StaffStatsModel = function () {
    this._isDirty = !0, this._playerAttribBoosts = [0, 0, 0, 0, 0, 0], this._gkAttribBoosts = [0, 0, 0, 0, 0, 0], this._healthAttribBoosts = [0, 0, 0, 0, 0, 0, 0, 0, 0], this._contractBoost = 0
}, models.StaffStatsModel.prototype.reset = function () {
    this._isDirty = !0, this._playerAttribBoosts = [0, 0, 0, 0, 0, 0], this._gkAttribBoosts = [0, 0, 0, 0, 0, 0], this._healthAttribBoosts = [0, 0, 0, 0, 0, 0, 0, 0, 0], this._contractBoost = 0
}, models.StaffStatsModel.prototype.isDirty = function () {
    return this._isDirty
}, models.StaffStatsModel.prototype.setDirtyFlag = function (value) {
    this._isDirty = value
}, models.StaffStatsModel.prototype.getPlayerAttribBoost = function (index) {
    return index >= 0 && index < this._playerAttribBoosts.length ? this._playerAttribBoosts[index] : 0
}, models.StaffStatsModel.prototype.getGKAttribBoost = function (index) {
    return index >= 0 && index < this._gkAttribBoosts.length ? this._gkAttribBoosts[index] : 0
}, models.StaffStatsModel.prototype.getHealthAttribBoost = function (index) {
    return index >= 0 && index < this._healthAttribBoosts.length ? this._healthAttribBoosts[index] : 0
}, models.StaffStatsModel.prototype.getPlayerAttribBoosts = function () {
    return this._playerAttribBoosts
}, models.StaffStatsModel.prototype.setPlayerAttribBoosts = function (value) {
    this._playerAttribBoosts = value
}, models.StaffStatsModel.prototype.getGKAttribBoosts = function () {
    return this._gkAttribBoosts
}, models.StaffStatsModel.prototype.setGKAttribBoosts = function (value) {
    this._gkAttribBoosts = value
}, models.StaffStatsModel.prototype.getHealthAttribBoosts = function () {
    return this._healthAttribBoosts
}, models.StaffStatsModel.prototype.setHealthAttribBoosts = function (value) {
    this._healthAttribBoosts = value
}, models.StaffStatsModel.prototype.setContractBoost = function (value) {
    this._contractBoost = value
}, models.StaffStatsModel.prototype.getContractBoost = function () {
    return this._contractBoost
};
var gStaffStatsModel = new models.StaffStatsModel;
utils.JS.inherits(ClientUpdate, utils.EventDispatcher), ClientUpdate.prototype.disablePolling = function disablePolling() {
    gConfigurationModel.unsubscribePoller(this)
}, ClientUpdate.prototype.onAppPaused = function onAppPaused() {
    this.disablePolling()
}, ClientUpdate.prototype.onAppOffline = function onAppOffline() {
    this.disablePolling()
}, ClientUpdate.prototype.pollForUpdates = function pollForUpdates(t) {
    var update = gConfigurationModel.getConfigObject(models.ConfigurationModel.KEY_UPDATE)
    ;
    if (utils.JS.isObject(update) && update[ClientUpdate.POLLING_FREQUENCY] && utils.JS.isNumber(update[ClientUpdate.POLLING_FREQUENCY])) {
        var i = update[ClientUpdate.POLLING_FREQUENCY];
        i = i > ClientUpdate.MIN_POLLING_FREQUENCY ? i : ClientUpdate.MIN_POLLING_FREQUENCY, i *= 1e3, gConfigurationModel.subscribePoller(this, i, function () {
            this.hasUpdate() && t()
        }.bind(this))
    }
}, ClientUpdate.prototype.hasUpdate = function hasUpdate() {
    return !1
}, ClientUpdate.POLLING_FREQUENCY = "f", ClientUpdate.MIN_POLLING_FREQUENCY = 60, utils.JS.inherits(WebClientUpdate, ClientUpdate), WebClientUpdate.prototype.hasUpdate = function hasUpdate() {
    return !!(this._hasRequiredClientVersion() && this._getCurrentClientVersion() < this._getRequiredClientVersion())
}, WebClientUpdate.prototype.updateClient = function updateClient() {
    setTimeout(function () {
        var search = utils.HTTP.removeURLParameter(window.location.search, "cl"),
            href = window.location.origin + window.location.pathname;
        window.top.location = href + (search.length > 0 ? "&" : "?") + "cl=" + this._getRequiredClientVersion()
    }.bind(this), 1e3)
}, WebClientUpdate.prototype._getCurrentClientVersion = function _getCurrentClientVersion() {
    return gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_CHANGELIST)
}, WebClientUpdate.prototype._getRequiredClientVersion = function _getRequiredClientVersion() {
    var update = gConfigurationModel.getConfigObject(models.ConfigurationModel.KEY_UPDATE);
    return utils.JS.isObject(update) && update[this._platform] && utils.JS.isNumber(update[this._platform]) ? update[this._platform] : 0
}, WebClientUpdate.prototype._hasRequiredClientVersion = function _hasRequiredClientVersion() {
    var update = gConfigurationModel.getConfigObject(models.ConfigurationModel.KEY_UPDATE);
    return !!(utils.JS.isObject(update) && update[this._platform] && utils.JS.isNumber(update[this._platform]))
}, WebClientUpdate.prototype.getAppliedPatch = function getAppliedPatch() {
    return null
};
var gClientUpdate = new WebClientUpdate;
NamespaceManager.Register("transferobjects"), transferobjects.DataProviderEntry = function UTDataProviderEntryDTO(id, value, label) {
    this.id = id, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.value = value, Object.defineProperty(this, "value", {
        writable: !1,
        enumerable: !0
    }), this.label = label, Object.defineProperty(this, "label", {writable: !1, enumerable: !0})
}, NamespaceManager.Register("factories"), factories.DataProvider = function () {
    function DataProviderFactory() {
    }

    return DataProviderFactory.prototype.getSearchPileDP = function getSearchPileDP() {
        return [new transferobjects.DataProviderEntry(0, enums.ItemSearchFeature.CLUB, services.Localization.localize("search.searchmode.club")), new transferobjects.DataProviderEntry(1, enums.ItemSearchFeature.CONCEPT, services.Localization.localize("search.searchmode.database"))]
    }, DataProviderFactory.prototype.getClubTypeDP = function getClubTypeDP() {
        return [new transferobjects.DataProviderEntry(0, enums.SearchCategory.KIT, services.Localization.localize("clubtype.kit")), new transferobjects.DataProviderEntry(1, enums.SearchCategory.STADIUM, services.Localization.localize("search.filters.stadiums")), new transferobjects.DataProviderEntry(2, enums.SearchCategory.BALL, services.Localization.localize("search.filters.balls")), new transferobjects.DataProviderEntry(3, enums.SearchCategory.BADGE, services.Localization.localize("clubtype.badge"))]
    }, DataProviderFactory.prototype.getTeamDP = function getTeamDP(t) {
        function _generateDataRow(t) {
            return new transferobjects.DataProviderEntry(t.id, t.id.toString(), t.name)
        }

        var i = repositories.TeamConfig.getTeamsByYear(enums.Year.ASSET), s = [];
        return (s = utils.JS.isNumber(t) && t >= 0 ? i.reduce(function (i, s) {
            return t === s.league && i.push(_generateDataRow(s)), i
        }, []) : i.map(_generateDataRow)).unshift(new transferobjects.DataProviderEntry(-1, "-1", services.Localization.localize("roles.defaultRole"))), s
    }, DataProviderFactory.prototype.getLeagueDP = function getLeagueDP(t) {
        var i, s = repositories.TeamConfig.getLeaguesByYear(enums.Year.ASSET), o = [], l = [], u = [], h = [],
            p = ["ENG 1", "ENG 2", "ENG 3", "ENG 4", "FRA 1", "FRA 2", "ITA 1", "ITA 2", "GER 1", "GER 2", "GER 3", "ESP 1", "ESP 2"],
            m = {};
        for (i = 0; i < p.length; i++) m[p[i]] = i;
        var _, g = ["AUT 1", "CZE 1"], S = {};
        for (_ = 0; _ < g.length; _++) S[g[_]] = _;
        return s.forEach(function (t) {
            p.indexOf(t.abbreviation) >= 0 ? l.push(t) : g.indexOf(t.abbreviation) >= 0 ? u.push(t) : h.push(t)
        }), l.sort(function (a, b) {
            return m[a.abbreviation] - m[b.abbreviation]
        }), u.sort(function (a, b) {
            return S[a.abbreviation] - S[b.abbreviation]
        }), s = l.concat(h).concat(u), (o = t ? s.reduce(function (t, i) {
            return 2150 !== i.id && t.push(new transferobjects.DataProviderEntry(i.id, i.id.toString(), i.name + " (" + i.abbreviation + ")")), t
        }, []) : s.map(function (t) {
            return new transferobjects.DataProviderEntry(t.id, t.id.toString(), t.name + " (" + t.abbreviation + ")")
        })).unshift(new transferobjects.DataProviderEntry(-1, "-1", services.Localization.localize("roles.defaultRole"))), o
    }, DataProviderFactory.prototype.getNationDP = function getNationDP(t) {
        t || (t = enums.Year.ASSET);
        var i = TOP_NINE_NATIONS.map(function (id) {
            return new transferobjects.DataProviderEntry(id, id.toString(), utils.FUTLocalization.getNationNameById(id))
        }), s = repositories.TeamConfig.getNationsByYear(t).map(function (n) {
            return new transferobjects.DataProviderEntry(n.id, n.id.toString(), n.name)
        });
        return [new transferobjects.DataProviderEntry(-1, -1, services.Localization.localize("roles.defaultRole"))].concat(i, s)
    }, DataProviderFactory.prototype.getPositionModifierDP = function getPositionModifierDP() {
        return [new transferobjects.DataProviderEntry(-1, "any", services.Localization.localize("roles.defaultRole")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_LWB_LB, "LWB-LB", services.Localization.localize("posmods.lwbtolb")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_LB_LWB, "LB-LWB", services.Localization.localize("posmods.lbtolwb")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_RWB_RB, "RWB-RB", services.Localization.localize("posmods.rwbtorb")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_RB_RWB, "RB-RWB", services.Localization.localize("posmods.rbtorwb")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_LM_LW, "LM-LW", services.Localization.localize("posmods.lmtolw")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_LW_LM, "LW-LM", services.Localization.localize("posmods.lwtolm")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_RM_RW, "RM-RW", services.Localization.localize("posmods.rmtorw")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_RW_RM, "RW-RM", services.Localization.localize("posmods.rwtorm")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_LW_LF, "LW-LF", services.Localization.localize("posmods.lwtolf")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_LF_LW, "LF-LW", services.Localization.localize("posmods.lftolw")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_RW_RF, "RW-RF", services.Localization.localize("posmods.rwtorf")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_RF_RW, "RF-RW", services.Localization.localize("posmods.rftorw")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_CM_CAM, "CM-CAM", services.Localization.localize("posmods.cmtocam")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_CAM_CM, "CAM-CM", services.Localization.localize("posmods.camtocm")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_CM_CDM, "CM-CDM", services.Localization.localize("posmods.cmtocdm")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_CDM_CM, "CDM-CM", services.Localization.localize("posmods.cdmtocm")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_CAM_CF, "CAM-CF", services.Localization.localize("posmods.camtocf")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_CF_CAM, "CF-CAM", services.Localization.localize("posmods.cftocam")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_CF_ST, "CF-ST", services.Localization.localize("posmods.cftost")), new transferobjects.DataProviderEntry(enums.ItemSubType.TRAINING_PLAYER_POS_ST_CF, "ST-CF", services.Localization.localize("posmods.sttocf"))]
    }, DataProviderFactory.prototype.getPlayerPositionDP = function getPlayerPositionDP(t) {
        var i = [];
        return PLAYER_ZONE_LOOKUP.forEach(function (s) {
            (t && "any" !== s.value || !t && "noGK" !== s.value) && i.push(new transferobjects.DataProviderEntry(s.id, s.value, services.Localization.localize(s.label)))
        }), SEARCHABLE_POSITIONS.forEach(function (t) {
            var s = repositories.Squad.getPosition(t);
            i.push(new transferobjects.DataProviderEntry(s.getId(), s.getTypeName(), utils.FUTLocalization.getLocalizedPositionStringById(s.getTypeId())))
        }), i
    }, DataProviderFactory.prototype.getPlayStyleDP = function getPlayStyleDP(t) {
        function _generatePlayStyleDPObject(t) {
            return new transferobjects.DataProviderEntry(t, t, services.Localization.localize("playstyles.2019.playstyle" + t))
        }

        var i = [new transferobjects.DataProviderEntry(-1, -1, services.Localization.localize("roles.defaultRole"))]
        ;
        return utils.JS.isBoolean(t) && t || (i = i.concat([_generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_1), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_2), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_3), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_4), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_5), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_6), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_7), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_8), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_9), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_10), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_11), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_12), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_13), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_14), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_15), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_16), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_17), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_18), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_19)])), utils.JS.isBoolean(t) && !t || (i = i.concat([_generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_1), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_2), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_3), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_4), _generatePlayStyleDPObject(enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_5)])), i
    }, DataProviderFactory.prototype.getItemYearDP = function getItemYearDP() {
        return [new transferobjects.DataProviderEntry(0, utils.TextUtils.getYearString(enums.Year.YEAR_2019), services.Localization.localize("search.fut.2019")), new transferobjects.DataProviderEntry(1, utils.TextUtils.getYearString(enums.Year.YEAR_2018), services.Localization.localize("search.fut.2018")), new transferobjects.DataProviderEntry(2, utils.TextUtils.getYearString(enums.Year.YEAR_2017), services.Localization.localize("search.fut.2017")), new transferobjects.DataProviderEntry(3, utils.TextUtils.getYearString(enums.Year.YEAR_2016), services.Localization.localize("search.fut.2016")), new transferobjects.DataProviderEntry(4, utils.TextUtils.getYearString(enums.Year.YEAR_2015), services.Localization.localize("search.fut.2015")), new transferobjects.DataProviderEntry(5, utils.TextUtils.getYearString(enums.Year.YEAR_2014), services.Localization.localize("search.fut.2014")), new transferobjects.DataProviderEntry(6, utils.TextUtils.getYearString(enums.Year.YEAR_2013), services.Localization.localize("search.fut.2013"))]
    }, DataProviderFactory.prototype.getItemLevelDP = function getItemLevelDP(t) {
        var i = [new transferobjects.DataProviderEntry(-1, enums.SearchLevel.ANY, services.Localization.localize("roles.defaultRole")), new transferobjects.DataProviderEntry(0, enums.SearchLevel.BRONZE, services.Localization.localize("search.cardLevels.cardLevel1")), new transferobjects.DataProviderEntry(1, enums.SearchLevel.SILVER, services.Localization.localize("search.cardLevels.cardLevel2")), new transferobjects.DataProviderEntry(2, enums.SearchLevel.GOLD, services.Localization.localize("search.cardLevels.cardLevel3"))];
        return t && i.push(new transferobjects.DataProviderEntry(3, enums.SearchLevel.SPECIAL, services.Localization.localize("search.cardLevels.cardLevel4"))), i
    }, DataProviderFactory.prototype.getFormationDP = function getFormationDP() {
        return repositories.Squad.getFormations().map(function (f) {
            return new transferobjects.DataProviderEntry(f.getId(), f.getName(), f.getDisplayName())
        })
    },
        DataProviderFactory.prototype.getStaffTypeDP = function getStaffTypeDP() {
            return [new transferobjects.DataProviderEntry(-1, enums.SearchCategory.ANY, services.Localization.localize("roles.defaultRole")), new transferobjects.DataProviderEntry(0, enums.SearchCategory.MANAGER, services.Localization.localize("roles.manager")), new transferobjects.DataProviderEntry(1, enums.SearchCategory.COACH_HEAD, services.Localization.localize("roles.headCoach")), new transferobjects.DataProviderEntry(2, enums.SearchCategory.COACH_GK, services.Localization.localize("roles.GKCoach")), new transferobjects.DataProviderEntry(3, enums.SearchCategory.COACH_FITNESS, services.Localization.localize("roles.fitnessCoach")), new transferobjects.DataProviderEntry(4, enums.SearchCategory.PHYSIO, services.Localization.localize("roles.physio"))]
        }, DataProviderFactory.prototype.getConsumableTypeDP = function getConsumableTypeDP() {
        return [new transferobjects.DataProviderEntry(0, enums.SearchCategory.PLAYER_TRAINING, services.Localization.localize("trainingtype.playerTraining")), new transferobjects.DataProviderEntry(1, enums.SearchCategory.GK_TRAINING, services.Localization.localize("trainingtype.GKTraining")), new transferobjects.DataProviderEntry(2, enums.SearchCategory.POSITION, services.Localization.localize("trainingtype.position")), new transferobjects.DataProviderEntry(3, enums.SearchCategory.PLAYSTYLE, services.Localization.localize("trainingtype.playStyle")), new transferobjects.DataProviderEntry(4, enums.SearchCategory.MANAGER_LEAGUE, services.Localization.localize("trainingtype.managerLeague")), new transferobjects.DataProviderEntry(5, enums.SearchCategory.CONTRACT, services.Localization.localize("devtype.contract")), new transferobjects.DataProviderEntry(6, enums.SearchCategory.FITNESS, services.Localization.localize("devtype.fitness")), new transferobjects.DataProviderEntry(7, enums.SearchCategory.HEALING, services.Localization.localize("devtype.healing"))]
    }, DataProviderFactory.prototype.getSortTypeDP = function getSortTypeDP() {
        return [new transferobjects.DataProviderEntry(enums.SearchSortType.VALUE_DESC, enums.SearchSort.DESCENDING, services.Localization.localize("search.sort.highestValue")), new transferobjects.DataProviderEntry(enums.SearchSortType.VALUE_ASC, enums.SearchSort.ASCENDING, services.Localization.localize("search.sort.lowestValue")), new transferobjects.DataProviderEntry(enums.SearchSortType.RECENCY_DESC, enums.SearchSort.DESCENDING, services.Localization.localize("search.sort.mostRecent"))]
    }, new DataProviderFactory
}(), communication.ActivateClubItemDelegate = function (id, t) {
    communication.BaseFUTDelegate.call(this), utils.JS.isNumber(t) && this.setData({
        itemState: "active",
        activateSlotNumber: t
    }), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "item/" + id, enums.HTTPRequestMethod.PUT, models.CommunicationModel.RESPONSE.EMPTY, enums.HTTPContentType.JSON)
}, utils.JS.inherits(communication.ActivateClubItemDelegate, communication.BaseFUTDelegate), NamespaceManager.Register("entities"), entities.Auction = function UTAuctionEntity() {
    this.onDataUpdated = new UTObservable, Object.defineProperty(this, "onDataUpdated", {
        writable: !1,
        enumerable: !0
    }), this._bidState = enums.AuctionBidState.NONE, Object.defineProperty(this, "_bidState", {
        writable: !0,
        enumerable: !1
    }), this._stale = !1, this._tradeState = enums.AuctionTradeState.INACTIVE, Object.defineProperty(this, "_tradeState", {
        writable: !0,
        enumerable: !1
    }), this._watched = !1, Object.defineProperty(this, "_watched", {
        writable: !0,
        enumerable: !1
    }), this.bidState = enums.AuctionBidState.NONE, Object.defineProperty(this, "bidState", {
        get: this.getBidState,
        set: this.setBidState,
        enumerable: !0
    }), this.buyNowPrice = 0, this.currentBid = 0, this.expires = -1, this.isUpdating = !1, this.startingBid = 0, this.timestamp = 0, this.tradeId = "0", this.tradeOwner = !1, this.tradeState = enums.AuctionTradeState.INACTIVE, Object.defineProperty(this, "tradeState", {
        get: this.getTradeState,
        set: this.setTradeState,
        enumerable: !0
    }), this.watched = !1, Object.defineProperty(this, "watched", {
        get: this.getWatched,
        set: this.setWatched,
        enumerable: !0
    })
},
    entities.Auction.prototype.update = function update(data) {
        var t = !this.isClosedTrade() && data.isClosedTrade(), i = {};
        this.bidState !== data.bidState && (this.bidState = data.bidState, i.bidState = this.bidState), this.buyNowPrice !== data.buyNowPrice && (this.buyNowPrice = data.buyNowPrice, i.buyNowPrice = this.buyNowPrice), this.currentBid !== data.currentBid && (this.currentBid = data.currentBid, i.currentBid = this.currentBid), this.expires !== data.expires && (this.expires = data.expires, i.expires = this.expires), this.startingBid !== data.startingBid && (this.startingBid = data.startingBid, i.startingBid = this.startingBid), this.timestamp !== data.timestamp && (this.timestamp = data.timestamp, i.timestamp = this.timestamp), this.tradeId !== data.tradeId && (this.tradeId = data.tradeId, i.tradeId = this.tradeId), this.tradeOwner !== data.tradeOwner && (this.tradeOwner = data.tradeOwner, i.tradeOwner = this.tradeOwner), this.tradeState !== data.tradeState && (this.tradeState = data.tradeState, i.tradeState = this.tradeState), this._watched !== data.watched && (this._watched = data.watched, i.watched = this._watched), this.isWon() && (this._watched = !1, i.watched = this._watched), this.onDataUpdated.notify(i), this.isUpdating = !1, this.setStale(!1), t && getDefaultDispatcher().notify(enums.Notification.AUCTION_CLOSE, this)
    }, entities.Auction.prototype.getBidState = function getBidState() {
    return this._bidState
}, entities.Auction.prototype.setBidState = function setBidState(state) {
    if (state !== this._bidState) {
        var t;
        for (t in enums.AuctionBidState) if (enums.AuctionBidState.hasOwnProperty(t)) return this._bidState = state, void this.onDataUpdated.notify({bidState: this._bidState});
        utils.Debug.Assert(!1, "Invalid assignment; expected enums.AuctionBidState enum value.")
    }
}, entities.Auction.prototype.getTradeState = function getTradeState() {
    return this._tradeState
}, entities.Auction.prototype.setTradeState = function setTradeState(state) {
    if (state !== this._tradeState) {
        var t;
        for (t in enums.AuctionTradeState) if (enums.AuctionTradeState.hasOwnProperty(t)) return this._tradeState = state, void this.onDataUpdated.notify({tradeState: this._tradeState});
        utils.Debug.Assert(!1, "Invalid assignment; expected enums.AuctionTradeState enum value.")
    }
}, entities.Auction.prototype.getWatched = function getWatched() {
    return this._watched
}, entities.Auction.prototype.setWatched = function setWatched(t) {
    t = !!t, this._watched !== t && (this._watched = t, this.onDataUpdated.notify({watched: this._watched}))
}, entities.Auction.prototype.setStale = function setStale(t) {
    this._stale = !!t
}, entities.Auction.prototype.isStale = function isStale() {
    return this._stale
}, entities.Auction.prototype.isValid = function isValid() {
    return "0" !== this.tradeId && this.tradeState !== enums.AuctionTradeState.INVALID
}, entities.Auction.prototype.getAge = function getAge() {
    return Date.now() - this.timestamp
}, entities.Auction.prototype.getAgeInSeconds = function getAgeInSeconds() {
    return Math.round((Date.now() - this.timestamp) / 1e3)
}, entities.Auction.prototype.getSecondsRemaining = function getSecondsRemaining() {
    var t = this.getAgeInSeconds();
    return t < this.expires ? this.expires - t : 0
}, entities.Auction.prototype.isWon = function isWon() {
    return !this.tradeOwner && this.isClosedTrade() && (this.isHighestBid() || this.isBought())
}, entities.Auction.prototype.isSold = function isSold() {
    return this.tradeOwner && this.isClosedTrade()
}, entities.Auction.prototype.isSelling = function isSelling() {
    return this.tradeOwner && this.isActiveTrade()
}, entities.Auction.prototype.isPendingExpiry = function isPendingExpiry() {
    return this.isActiveTrade() && (this.expires <= 0 || this.getSecondsRemaining() <= 0)
}, entities.Auction.prototype.isBid = function isBid() {
    return this.bidState !== enums.AuctionBidState.NONE
}, entities.Auction.prototype.isBought = function isBought() {
    return this.bidState === enums.AuctionBidState.BUYNOW
}, entities.Auction.prototype.isOutbid = function isOutbid() {
    return this.bidState === enums.AuctionBidState.OUTBID
}, entities.Auction.prototype.isHighestBid = function isHighestBid() {
    return this.bidState === enums.AuctionBidState.HIGHEST
}, entities.Auction.prototype.isActiveTrade = function isActiveTrade() {
    return this.tradeState === enums.AuctionTradeState.ACTIVE
}, entities.Auction.prototype.isClosedTrade = function isClosedTrade() {
    return this.tradeState === enums.AuctionTradeState.CLOSED
}, entities.Auction.prototype.isExpired = function isExpired() {
    return this.tradeState === enums.AuctionTradeState.EXPIRED
}, entities.Auction.prototype.isInactive = function isInactive() {
    return this.tradeState === enums.AuctionTradeState.INACTIVE
}, entities.Auction.prototype.canWatch = function canWatch() {
    return !this._watched && this.isActiveTrade() && !this.isPendingExpiry()
}, entities.Auction.prototype.canBid = function canBid(value, t) {
    var i = !0;
    return !(value < this.startingBid || value <= this.currentBid) && (!(value > AUCTION_MAX_BID || this.buyNowPrice > 0 && value >= this.buyNowPrice) && (utils.JS.isNumber(t) && (i = t >= value), this.isActiveTrade() && !this.isPendingExpiry() && i))
}, entities.Auction.prototype.canBuy = function canBuy(t) {
    var i = !0;
    return utils.JS.isNumber(t) && (i = t >= (this.isHighestBid() ? this.buyNowPrice - this.currentBid : this.buyNowPrice)), this.isActiveTrade() && !this.isPendingExpiry() && i
}, entities.Auction.prototype.compareTo = function compareTo(t) {
    return this.isValid() && t.isValid() && this.tradeId === t.tradeId
}, NamespaceManager.Register("interfaces"), interfaces.ListItem = function IListItem() {
}, interfaces.ListItem.prototype.getItemData = function getItemData() {
}, interfaces.ListItem.prototype.getAuctionData = function getAuctionData() {
}, NamespaceManager.Register("transferobjects"), transferobjects.StaticItemData = function StaticItemDataDTO() {
    this.assetId = 0, this.assetType = "", this.assetYear = -1, this.amount = 0, this.name = enums.Localization.BLANK_STR, this.firstName = enums.Localization.BLANK_STR, this.lastName = enums.Localization.BLANK_STR, this.knownAs = enums.Localization.BLANK_STR, this.description = "", this.manufacturer = "", this.trainedAttribute = -1, this.trainPosFrom = "", this.trainPosTo = "", this.goldBoost = 0, this.silverBoost = 0, this.bronzeBoost = 0
}, transferobjects.StaticItemData.prototype.parseDynamicItemData = function (item, data) {
    this.amount = data.amount || 0
}, transferobjects.StaticItemData.prototype.generateNameData = function generateNameData(t, i, s) {
    this.firstName = t || enums.Localization.BLANK_STR, this.lastName = i || enums.Localization.BLANK_STR, this.knownAs = s || enums.Localization.BLANK_STR, this.name = this.knownAs === enums.Localization.BLANK_STR ? this.lastName : this.knownAs
}, transferobjects.StaticItemData.prototype.getFullName = function () {
    return this.knownAs === enums.Localization.BLANK_STR ? this.firstName + " " + this.lastName : this.knownAs
}, transferobjects.StaticItemData.prototype.hasLoanPackDescription = function () {
    return "FreeLoanPackDesc" === this.description
}, transferobjects.StaticPlayerItemData = function () {
    transferobjects.StaticItemData.call(this)
}, utils.JS.inherits(transferobjects.StaticPlayerItemData, transferobjects.StaticItemData), transferobjects.StaticPlayerItemData.prototype.parseDynamicItemData = function parseDynamicItemData(item, data) {
    transferobjects.StaticPlayerItemData.superClass_.parseDynamicItemData.call(this, item, data), this.generateNameData(data.firstName, data.lastName, data.knownAs)
}, transferobjects.StaticPlayerItemData.prototype.hasNameData = function hasNameData() {
    return this.firstName !== enums.Localization.BLANK_STR || this.lastName !== enums.Localization.BLANK_STR || this.knownAs !== enums.Localization.BLANK_STR
}, transferobjects.StaticManagerItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticManagerItemData, transferobjects.StaticItemData), transferobjects.StaticManagerItemData.prototype.parseDynamicItemData = function (item, data) {
    transferobjects.StaticManagerItemData.superClass_.parseDynamicItemData.call(this, item, data), this.firstName = data.firstName || enums.Localization.BLANK_STR, this.lastName = data.lastName || enums.Localization.BLANK_STR, this.knownAs = data.commonname || enums.Localization.BLANK_STR, (this.lastName === enums.Localization.BLANK_STR || utils.JS.isEmpty(this.lastName.trim())) && (this.knownAs = this.firstName), this.amount = data.negotiation || 0,
        this.firstName === enums.Localization.BLANK_STR && this.lastName === enums.Localization.BLANK_STR && this.knownAs === enums.Localization.BLANK_STR ? this.name = enums.Localization.BLANK_STR : this.name = this.knownAs === enums.Localization.BLANK_STR ? this.firstName.charAt(0) + ". " + this.lastName : this.knownAs
}, transferobjects.StaticStaffItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticStaffItemData, transferobjects.StaticItemData), transferobjects.StaticStaffItemData.prototype.parseDynamicItemData = function (item, data) {
    transferobjects.StaticStaffItemData.superClass_.parseDynamicItemData.call(this, item, data), this.firstName = data.firstName || enums.Localization.BLANK_STR, this.lastName = data.lastName || enums.Localization.BLANK_STR, this.name = this.firstName.trim() + ". " + this.lastName.trim(), this.trainedAttribute = parseInt(data.attribute, 10) || 0
}, transferobjects.StaticBadgeItemData = function () {
    transferobjects.StaticItemData.apply(this), this.name = services.Localization.localize("card.title.badge")
}, utils.JS.inherits(transferobjects.StaticBadgeItemData, transferobjects.StaticItemData), transferobjects.StaticBadgeItemData.prototype.parseDynamicItemData = function (item, data) {
    transferobjects.StaticBadgeItemData.superClass_.parseDynamicItemData.call(this, item, data), this.assetId = parseInt(data.assetId, 10) || 0
}, NamespaceManager.Register("valueobjects"), transferobjects.StaticKitItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticKitItemData, transferobjects.StaticItemData), transferobjects.StaticKitItemData.CATEGORY_KIT_HOME = 2, transferobjects.StaticKitItemData.CATEGORY_KIT_AWAY = 3, transferobjects.StaticKitItemData.CATEGORY_KIT_THIRD = 5, transferobjects.StaticKitItemData.prototype.parseDynamicItemData = function (item, data) {
    transferobjects.StaticKitItemData.superClass_.parseDynamicItemData.call(this, item, data);
    var category = parseInt(data.category, 10) || 0;
    this.assetYear = parseInt(data.year, 10) || 0, this.name = services.Localization.localize("clubtype.kit"), category === transferobjects.StaticKitItemData.CATEGORY_KIT_HOME ? (this.description = services.Localization.localize("card.desc.homekit"), this.assetType = utils.AssetLocator.IMAGE_TYPE_KIT_HOME) : category === transferobjects.StaticKitItemData.CATEGORY_KIT_AWAY ? (this.description = services.Localization.localize("card.desc.awaykit"), this.assetType = utils.AssetLocator.IMAGE_TYPE_KIT_AWAY) : (this.description = services.Localization.localize("card.desc.thirdkit"), this.assetType = utils.AssetLocator.IMAGE_TYPE_KIT_THIRD), this.assetYear > 0 && (this.description = services.Localization.localize("card.desc.classickit"))
}, transferobjects.StaticBallItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticBallItemData, transferobjects.StaticItemData), transferobjects.StaticBallItemData.prototype.parseDynamicItemData = function (item, data) {
    transferobjects.StaticBallItemData.superClass_.parseDynamicItemData.call(this, item, data), this.assetId = parseInt(data.assetId, 10) || 0, this.name = services.Localization.localize("club.edit.ballLabel"), this.description = data.name || "", this.manufacturer = data.manufacturer || ""
}, NamespaceManager.Register("valueobjects"), transferobjects.StaticStadiumItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticStadiumItemData, transferobjects.StaticItemData), transferobjects.StaticStadiumItemData.prototype.parseDynamicItemData = function (item, data) {
    transferobjects.StaticStadiumItemData.superClass_.parseDynamicItemData.call(this, item, data), this.name = services.Localization.localize("club.edit.stadiumLabel"), this.assetId = parseInt(data.stadiumid, 10) || 0, this.description = services.Localization.localize("global.stadiumFull." + utils.TextUtils.getYearString(item.getYear()) + ".stadium" + this.assetId)
}, transferobjects.StaticTrainingItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticTrainingItemData, transferobjects.StaticItemData),
    transferobjects.StaticTrainingItemData.prototype.parseDynamicItemData = function (item, data) {
        transferobjects.StaticTrainingItemData.superClass_.parseDynamicItemData.call(this, item, data);
        var t = item.subtype;
        if (item.isGKTraining()) switch (this.name = services.Localization.localize("card.desc.training.goalkeeper"), this.assetType = utils.AssetLocator.IMAGE_TYPE_TRAINING_GKATTRIB, t) {
            case enums.ItemSubType.TRAINING_GK_DIVING:
                this.assetId = 0, this.trainedAttribute = 0;
                break;
            case enums.ItemSubType.TRAINING_GK_HANDLING:
                this.assetId = 1, this.trainedAttribute = 1;
                break;
            case enums.ItemSubType.TRAINING_GK_KICKING:
                this.assetId = 2, this.trainedAttribute = 2;
                break;
            case enums.ItemSubType.TRAINING_GK_SPEED:
                this.assetId = 4, this.trainedAttribute = 4;
                break;
            case enums.ItemSubType.TRAINING_GK_POSITION:
                this.assetId = 5, this.trainedAttribute = 5;
                break;
            case enums.ItemSubType.TRAINING_GK_REFLEX:
                this.assetId = 3, this.trainedAttribute = 3;
                break;
            case enums.ItemSubType.TRAINING_GK_ALL:
                this.assetId = 6, this.trainedAttribute = 6
        } else if (item.isPlayerTraining()) switch (this.name = services.Localization.localize("card.desc.contract.player"), this.assetType = utils.AssetLocator.IMAGE_TYPE_TRAINING_PLAYERATTRIB, t) {
            case enums.ItemSubType.TRAINING_PLAYER_PACE:
                this.assetId = 0, this.trainedAttribute = 0;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_SHOOTING:
                this.assetId = 1, this.trainedAttribute = 1;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_PASSING:
                this.assetId = 2, this.trainedAttribute = 2;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_DRIBBLING:
                this.assetId = 3, this.trainedAttribute = 3;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_HEADING:
                this.assetId = 5, this.trainedAttribute = 5;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_DEFEND:
                this.assetId = 4, this.trainedAttribute = 4;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_ALL:
                this.assetId = 6, this.trainedAttribute = 6
        } else if (item.isPlayerPositionModifier()) switch (this.name = services.Localization.localize("card.title.position"), this.assetId = utils.AssetLocator.ASSET_ID_PLAYER, this.assetType = utils.AssetLocator.IMAGE_TYPE_TRAINING_POSITION, t) {
            case enums.ItemSubType.TRAINING_PLAYER_POS_LWB_LB:
                this.trainPosFrom = enums.PlayerPositions.LWB, this.trainPosTo = enums.PlayerPositions.LB;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_LB_LWB:
                this.trainPosFrom = enums.PlayerPositions.LB, this.trainPosTo = enums.PlayerPositions.LWB;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_RWB_RB:
                this.trainPosFrom = enums.PlayerPositions.RWB, this.trainPosTo = enums.PlayerPositions.RB;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_RB_RWB:
                this.trainPosFrom = enums.PlayerPositions.RB, this.trainPosTo = enums.PlayerPositions.RWB;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_LM_LW:
                this.trainPosFrom = enums.PlayerPositions.LM, this.trainPosTo = enums.PlayerPositions.LW;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_RM_RW:
                this.trainPosFrom = enums.PlayerPositions.RM, this.trainPosTo = enums.PlayerPositions.RW;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_LW_LM:
                this.trainPosFrom = enums.PlayerPositions.LW, this.trainPosTo = enums.PlayerPositions.LM;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_RW_RM:
                this.trainPosFrom = enums.PlayerPositions.RW, this.trainPosTo = enums.PlayerPositions.RM;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_LW_LF:
                this.trainPosFrom = enums.PlayerPositions.LW, this.trainPosTo = enums.PlayerPositions.LF;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_RW_RF:
                this.trainPosFrom = enums.PlayerPositions.RW, this.trainPosTo = enums.PlayerPositions.RF;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_LF_LW:
                this.trainPosFrom = enums.PlayerPositions.LF, this.trainPosTo = enums.PlayerPositions.LW;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_RF_RW:
                this.trainPosFrom = enums.PlayerPositions.RF, this.trainPosTo = enums.PlayerPositions.RW;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_CM_CAM:
                this.trainPosFrom = enums.PlayerPositions.CM, this.trainPosTo = enums.PlayerPositions.CAM;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_CAM_CM:
                this.trainPosFrom = enums.PlayerPositions.CAM, this.trainPosTo = enums.PlayerPositions.CM;
                break
                    ;
            case enums.ItemSubType.TRAINING_PLAYER_POS_CDM_CM:
                this.trainPosFrom = enums.PlayerPositions.CDM, this.trainPosTo = enums.PlayerPositions.CM;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_CM_CDM:
                this.trainPosFrom = enums.PlayerPositions.CM, this.trainPosTo = enums.PlayerPositions.CDM;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_CAM_CF:
                this.trainPosFrom = enums.PlayerPositions.CAM, this.trainPosTo = enums.PlayerPositions.CF;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_CF_CAM:
                this.trainPosFrom = enums.PlayerPositions.CF, this.trainPosTo = enums.PlayerPositions.CAM;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_CF_ST:
                this.trainPosFrom = enums.PlayerPositions.CF, this.trainPosTo = enums.PlayerPositions.ST;
                break;
            case enums.ItemSubType.TRAINING_PLAYER_POS_ST_CF:
                this.trainPosFrom = enums.PlayerPositions.ST, this.trainPosTo = enums.PlayerPositions.CF
        } else item.isManagerLeagueModifier() ? (this.name = services.Localization.localize("card.title.leaguechange"), this.assetType = utils.AssetLocator.IMAGE_TYPE_TRAINING_LEAGUEMOD, item.leagueId = this.amount) : item.isStyleModifier() ? (this.name = services.Localization.localize("card.title.playstyle"), this.assetType = utils.AssetLocator.IMAGE_TYPE_TRAINING_PLAYSTYLE) : utils.Debug.Assert(!1, "Unknown item subtype: " + t)
    }, transferobjects.StaticHealingItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticHealingItemData, transferobjects.StaticItemData), transferobjects.StaticHealingItemData.prototype.parseDynamicItemData = function (item, data) {
    if (transferobjects.StaticHealingItemData.superClass_.parseDynamicItemData.call(this, item, data), item.isPlayerFitness()) this.name = services.Localization.localize("card.desc.contract.player"), this.assetType = utils.AssetLocator.IMAGE_TYPE_HEALING_FITNESS, this.assetId = utils.AssetLocator.ASSET_ID_PLAYER; else if (item.isTeamFitness()) this.name = services.Localization.localize("card.desc.healing.squad"), this.assetType = utils.AssetLocator.IMAGE_TYPE_HEALING_FITNESS, this.assetId = utils.AssetLocator.ASSET_ID_TEAM; else if (item.isInjuryHealing()) switch (this.name = services.Localization.localize("card.desc.contract.player"), this.assetType = utils.AssetLocator.IMAGE_TYPE_HEALING_INJURY, item.subtype) {
        case enums.ItemSubType.HEALING_HEAD:
            this.assetId = 0;
            break;
        case enums.ItemSubType.HEALING_SHOULDER:
            this.assetId = 1;
            break;
        case enums.ItemSubType.HEALING_ARM:
            this.assetId = 2;
            break;
        case enums.ItemSubType.HEALING_BACK:
            this.assetId = 3;
            break;
        case enums.ItemSubType.HEALING_HIP:
            this.assetId = 4;
            break;
        case enums.ItemSubType.HEALING_LEG:
            this.assetId = 5;
            break;
        case enums.ItemSubType.HEALING_FOOT:
            this.assetId = 6;
            break;
        case enums.ItemSubType.HEALING_ALL:
            this.assetId = 7
    } else utils.Debug.Assert(!1, "Unknown item subtype: " + item.subtype)
}, transferobjects.StaticContractItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticContractItemData, transferobjects.StaticItemData), transferobjects.StaticContractItemData.prototype.parseDynamicItemData = function (item, data) {
    transferobjects.StaticContractItemData.superClass_.parseDynamicItemData.call(this, item, data), this.assetType = utils.AssetLocator.IMAGE_TYPE_CONTRACT;
    var t = item.isManagerContract();
    this.assetId = t ? 1 : 0, this.name = services.Localization.localize(t ? "card.desc.contract.manager" : "card.desc.contract.player"), data.bronze && (this.bronzeBoost = parseInt(data.bronze, 10)), data.silver && (this.silverBoost = parseInt(data.silver, 10)), data.gold && (this.goldBoost = parseInt(data.gold, 10))
}, transferobjects.StaticMiscItemData = function () {
    transferobjects.StaticItemData.apply(this)
}, utils.JS.inherits(transferobjects.StaticMiscItemData, transferobjects.StaticItemData), transferobjects.StaticMiscItemData.prototype.parseDynamicItemData = function (item, data) {
    switch (transferobjects.StaticMiscItemData.superClass_.parseDynamicItemData.call(this, item, data), this.name = services.Localization.localize("card.title.unlock"), this.description = data.description || "", item.subtype) {
        case enums.ItemSubType.FREE_COINS:
            this.assetType = utils.AssetLocator.IMAGE_TYPE_BOOST_COIN, this.assetId = utils.AssetLocator.ASSET_ID_DEFAULT;
            break;
        case enums.ItemSubType.DRAFT_TOKEN:
            this.assetType = utils.AssetLocator.IMAGE_TYPE_DRAFT_TOKEN, this.assetId = utils.AssetLocator.ASSET_ID_DEFAULT;
            break;
        case enums.ItemSubType.PLAYER_PICK_ITEM:
            utils.JS.isEmpty(data.name) || (this.name = data.name), this.assetType = utils.AssetLocator.IMAGE_TYPE_PLAYER_PICK_ITEM, this.assetId = utils.AssetLocator.ASSET_ID_DEFAULT;
            break;
        case enums.ItemSubType.FREE_PACK:
            this.assetType = utils.AssetLocator.IMAGE_TYPE_BOOST_PACK, item.isBronzeRating() ? this.assetId = utils.AssetLocator.ASSET_ID_BRONZE_PACK : item.isSilverRating() ? this.assetId = utils.AssetLocator.ASSET_ID_SILVER_PACK : this.assetId = utils.AssetLocator.ASSET_ID_GOLD_PACK
    }
}, NamespaceManager.Register("entities"), entities.Item = function UTItemEntity(t) {
    var type = enums.ItemType.PLAYER;
    Object.defineProperty(this, "type", {
        set: function (t) {
            if (type !== t) {
                var i;
                for (i in enums.ItemType) if (enums.ItemType.hasOwnProperty(i)) return void(type = t)
            }
        }, get: function () {
            return type
        }, enumerable: !0
    });
    var i = enums.FUTItemPile.ANY;
    Object.defineProperty(this, "pile", {
        set: function (t) {
            if (i !== t) {
                var s;
                for (s in enums.FUTItemPile) if (enums.FUTItemPile.hasOwnProperty(s)) return void(i = t)
            }
        }, get: function () {
            return i
        }, enumerable: !0
    });
    var state = enums.ItemState.FREE;
    Object.defineProperty(this, "state", {
        set: function (t) {
            if (state !== t) {
                var i;
                for (i in enums.ItemState) if (enums.ItemState.hasOwnProperty(i)) return void(state = t)
            }
        }, get: function () {
            return state
        }, enumerable: !0
    }), this.onDataUpdated = new UTObservable, Object.defineProperty(this, "onDataUpdated", {
        writable: !1,
        enumerable: !0
    }), this.id = 0, this.resourceId = 0, this.iconId = 0, this.resourceGameYear = 0, this.type = utils.JS.isValid(t) ? t : enums.ItemType.PLAYER, this.subtype = 0, this.lastSalePrice = 0, this.discardValue = 0, this.state = enums.ItemState.FREE, this.untradeable = !0, this.untradeableCount = 0, this.concept = !1, this.contract = -1, this.teamId = -1, this.leagueId = -1, this.nationId = -1, this.loans = -1, this.fitness = -1, this.injuryType = enums.PlayerInjury.NONE, this.injuryGames = 0, this.preferredPosition = -1, this._attributes = [0, 0, 0, 0, 0, 0], this._lifetimeStats = [0, 0, 0, 0], this._stats = [0, 0, 0, 0], this.training = 0, this.suspensionGames = 0, this._auction = new entities.Auction, this.duplicateId = 0, this.duplicateItemLoans = -1, this.playStyle = 0, this.loyaltyBonus = 0, this.pile = enums.FUTItemPile.ANY, this.stackCount = 0, this.rareflag = entities.Item.Rarity.NONE, this.rating = 0, this.hasLevels = !1, this.owners = 0, this.timestamp = 0, this._itemPriceLimits = null, this._staticData = this._generateStaticData(), this._trainingItem = null, this._metaData = null
}, entities.Item.Rarity = {
    NONE: 0,
    RARE: 1,
    ICON: 12,
    CHAMPIONS_COMMON: 47,
    CHAMPIONS_RARE: 48,
    CHAMPIONS_MOTM: 49,
    CHAMPIONS_LIVE: 50,
    CHAMPIONS_SBC: 69,
    CHAMPIONS_TOTT: 70
}, Object.freeze(entities.Item.Rarity), entities.Item.prototype.activate = function activate(t) {
    var i, s = new UTObservable, o = {success: !1, error: null};
    return this.isClubItem() ? (this.isKit() ? (utils.Debug.Assert(utils.JS.isNumber(t), "Missing kit activation slot."), i = new communication.ActivateClubItemDelegate(this.id, t)) : i = new communication.ActivateClubItemDelegate(this.id), i.addListener(communication.BaseDelegate.SUCCESS, this, function _onActivateSuccess(sender) {
        if (sender.clearListenersByScope(this), this.clearAuction(), this.isBadge()) this.state = enums.ItemState.ACTIVE_BADGE; else if (this.isBall()) this.state = enums.ItemState.ACTIVE_BALL; else if (this.isKit()) switch (t) {
            case enums.KitActivationSlot.HOME:
                this.state = enums.ItemState.ACTIVE_HOME_KIT;
                break;
            case enums.KitActivationSlot.AWAY:
                this.state = enums.ItemState.ACTIVE_AWAY_KIT
        } else this.isStadium() && (this.state = enums.ItemState.ACTIVE_STADIUM);
        o.success = !0, s.notify(o)
    }), i.addListener(communication.BaseDelegate.FAIL, this, function _onActivateFail(sender, error) {
        sender.clearListenersByScope(this), o.error = error, s.notify(o)
    }), i.useClickShield(!0), i.send(), s) : (utils.Debug.Assert(!1, "Cannot activate non-club items."), s.notify(o), s)
}, entities.Item.prototype.loadStaticData = function loadStaticData() {
    var event = new UTObservable, t = {success: !1};
    if (this.isValid() && this.isPlayer() && 0 !== this.getMaskedResourceId() && this.getYear() < enums.Year.ASSET) {
        var i = new UTHttpRequest,
            url = gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RESOURCE_ROOT) + utils.AssetLocator.getStaticItemDataURI(this.getMaskedResourceId(), this.getYear()) + "?_=" + gConfigurationModel.getConfigNumber(models.ConfigurationModel.KEY_ASSETS_VERSION);
        i.setUrl(url), i.observe(this, function _onGetJsonComplete(i, s) {
            if (i.unobserve(this), utils.JS.isObject(s.response) && (utils.JS.isObject(s.response.Item) || utils.JS.isObject(s.response.Player))) {
                var data = s.response.Item || s.response.Player;
                this.getStaticData().generateNameData(data.FirstName, data.LastName, data.CommonName), data.NationId && (this.nationId = parseInt(data.NationId, 10)), data.LeagueId && (this.leagueId = parseInt(data.LeagueId, 10)), data.ClubId && (this.teamId = parseInt(data.ClubId, 10)), t.success = !0
            }
            event.notify(t)
        }), i.send()
    } else t.success = !0, event.notify(t);
    return event
}, entities.Item.prototype.clearAuction = function clearAuction() {
    this._auction = new entities.Auction
}, entities.Item.prototype._generateStaticData = function _generateStaticData() {
    var t;
    switch (this.type) {
        case enums.ItemType.PLAYER:
            t = new transferobjects.StaticPlayerItemData;
            break;
        case enums.ItemType.MANAGER:
            t = new transferobjects.StaticManagerItemData;
            break;
        case enums.ItemType.HEAD_COACH:
        case enums.ItemType.GK_COACH:
        case enums.ItemType.FITNESS_COACH:
        case enums.ItemType.PHYSIO:
            t = new transferobjects.StaticStaffItemData;
            break;
        case enums.ItemType.BADGE:
            t = new transferobjects.StaticBadgeItemData;
            break;
        case enums.ItemType.KIT:
            t = new transferobjects.StaticKitItemData;
            break;
        case enums.ItemType.BALL:
            t = new transferobjects.StaticBallItemData;
            break;
        case enums.ItemType.STADIUM:
            t = new transferobjects.StaticStadiumItemData;
            break;
        case enums.ItemType.TRAINING:
            t = new transferobjects.StaticTrainingItemData;
            break;
        case enums.ItemType.HEALTH:
            t = new transferobjects.StaticHealingItemData;
            break;
        case enums.ItemType.CONTRACT:
            t = new transferobjects.StaticContractItemData;
            break;
        case enums.ItemType.MISC:
            t = new transferobjects.StaticMiscItemData;
            break;
        default:
            this.type, t = new transferobjects.StaticItemData
    }
    return t
}, entities.Item.prototype.update = function update(item) {
    this.lastSalePrice = item.lastSalePrice, this.state = item.state, this.pile = item.pile, this.duplicateId = item.duplicateId, this.stackCount = item.stackCount, this.untradeableCount = item.untradeableCount, 0 !== item.id && this.getAuctionData().compareTo(item.getAuctionData()) && (this.id = item.id), (this.isPlayer() || this.isManager()) && (this.contract = item.contract, this.loans = item.loans), this.isPlayer() && (this.loyaltyBonus = item.loyaltyBonus, this.fitness = item.fitness, this.injuryType = item.injuryType, this.injuryGames = item.injuryGames, this.preferredPosition = item.preferredPosition, this.suspensionGames = item.suspensionGames, this.training = item.training, this.playStyle = item.playStyle), this.getAuctionData().update(item.getAuctionData())
}, entities.Item.prototype.isValid = function isValid() {
    return (0 !== this.id || 0 !== this.resourceId) && this.stackCount > 0
}, entities.Item.prototype.isStack = function isStack() {
    return this.stackCount > 1
}, entities.Item.prototype.isCustomBrick = function isCustomBrick() {
    return !1
}, entities.Item.prototype.getMaskedResourceId = function getMaskedResourceId() {
    return this.resourceId & enums.ItemMask.DATABASE
}, entities.Item.prototype.getDefId = function getDefId() {
    return gSettingsModel.isLegacyYearIdEnabled() ? this.resourceId & (enums.ItemMask.DATABASE | enums.ItemMask.REVISION) : this.resourceId & (enums.ItemMask.DATABASE | enums.ItemMask.FULL_REVISION)
}, entities.Item.prototype.getItemData = function getItemData() {
    return this
},entities.Item.prototype.getTier = function getTier() {
    return this.isValid() && this.hasQualityTiers() ? this.isBronzeRating() ? enums.ItemRatingTier.BRONZE : this.isSilverRating() ? enums.ItemRatingTier.SILVER : enums.ItemRatingTier.GOLD : enums.ItemRatingTier.NONE
},entities.Item.prototype.getBoostLevel = function getBoostLevel() {
    return this.hasTraining() ? this._trainingItem.getTier() : enums.ItemRatingTier.NONE
},entities.Item.prototype.getYear = function getYear() {
    return utils.TextUtils.getYearEnum(this.resourceGameYear)
},entities.Item.prototype.getSearchType = function getSearchType() {
    switch (this.type) {
        case enums.ItemType.PLAYER:
            return enums.SearchType.PLAYER;
        case enums.ItemType.MANAGER:
        case enums.ItemType.HEAD_COACH:
        case enums.ItemType.FITNESS_COACH:
        case enums.ItemType.GK_COACH:
        case enums.ItemType.PHYSIO:
            return enums.SearchType.STAFF;
        case enums.ItemType.BADGE:
        case enums.ItemType.KIT:
            return enums.SearchType.CLUB_INFO;
        case enums.ItemType.STADIUM:
            return enums.SearchType.STADIUM;
        case enums.ItemType.BALL:
            return enums.SearchType.BALL;
        case enums.ItemType.CONTRACT:
        case enums.ItemType.HEALTH:
            return enums.SearchType.CONSUMABLES_DEVELOPMENT;
        case enums.ItemType.TRAINING:
            return enums.SearchType.CONSUMABLES_TRAINING;
        default:
            return utils.Debug.Assert(!1, "[entities.Item::getSearchType] Unexpected item type. Defaulting to search type 'Any'."), enums.SearchType.ANY
    }
},entities.Item.prototype.isInjured = function isInjured() {
    return this.isPlayer() && this.injuryGames > 0
},entities.Item.prototype.hasTraining = function hasTraining() {
    return 0 !== this.training && utils.JS.isValid(this._trainingItem)
},entities.Item.prototype.getAppliedTrainingItem = function getAppliedTrainingItem() {
    return this._trainingItem
},entities.Item.prototype.isSuspended = function isSuspended() {
    return this.isPlayer() && this.suspensionGames > 0
},entities.Item.prototype.getStaticData = function getStaticData() {
    return this._staticData
},entities.Item.prototype.setStaticData = function setStaticData(data) {
    this._staticData = data
},entities.Item.prototype.setTrainingItem = function setTrainingItem(item) {
    utils.Debug.Assert(item.isTraining(), "Expected a training consumable item."), item.isTraining() && (this.training = item.id, this._trainingItem = item)
},entities.Item.prototype.getAuctionData = function getAuctionData() {
    return this._auction
},entities.Item.prototype.setAuctionData = function setAuctionData(value) {
    this._auction = value
},entities.Item.prototype.getMetaData = function getMetaData() {
    return this._metaData
},entities.Item.prototype.setMetaData = function setMetaData(data) {
    var t = data instanceof UTPlayerMetaDataDTO;
    utils.Debug.Assert(t, "Expected a PlayerMetaData DTO"), utils.Debug.Assert(this.isPlayer(), "Cannot assign player meta data to non-player items"), t && this.isPlayer() && (this._metaData = data)
},entities.Item.prototype.isDiscardable = function isDiscardable() {
    return this.isValid() && !this.isMiscItem()
},entities.Item.prototype.isMovable = function isMovable() {
    var t = !this.isDuplicate() && !this.isDuplicateLoanPlayer();
    return t = t && this.type !== enums.ItemType.MISC
},entities.Item.prototype.isDuplicate = function isDuplicate() {
    return !this.isConsumable() && this.duplicateId > 0
},entities.Item.prototype.isLoaned = function isLoaned() {
    return this.loans >= 0
},entities.Item.prototype.isPlayer = function isPlayer() {
    return this.type === enums.ItemType.PLAYER
},entities.Item.prototype.isChampionsLeagueItem = function isChampionsLeagueItem() {
    return (this.rareflag === entities.Item.Rarity.CHAMPIONS_COMMON || this.rareflag === entities.Item.Rarity.CHAMPIONS_RARE || this.rareflag === entities.Item.Rarity.CHAMPIONS_MOTM || this.rareflag === entities.Item.Rarity.CHAMPIONS_LIVE || this.rareflag === entities.Item.Rarity.CHAMPIONS_SBC || this.rareflag === entities.Item.Rarity.CHAMPIONS_TOTT) && this.isPlayer()
},entities.Item.prototype.isManager = function isManager() {
    return this.type === enums.ItemType.MANAGER
},entities.Item.prototype.isHeadCoach = function isHeadCoach() {
    return this.type === enums.ItemType.HEAD_COACH
},entities.Item.prototype.isFitnessCoach = function isFitnessCoach() {
    return this.type === enums.ItemType.FITNESS_COACH
},entities.Item.prototype.isGKCoach = function isGKCoach() {
    return this.type === enums.ItemType.GK_COACH
},entities.Item.prototype.isPhysio = function isPhysio() {
    return this.type === enums.ItemType.PHYSIO
},entities.Item.prototype.isCoach = function isCoach() {
    return this.isHeadCoach() || this.isFitnessCoach() || this.isGKCoach() || this.isPhysio()
},entities.Item.prototype.isStaff = function isStaff() {
    return this.isManager() || this.isCoach()
},entities.Item.prototype.isPlayerBanned = function isPlayerBanned() {
    return this.isValid() && this.isPlayer() && (this.isSuspended() || this.contract <= 0)
},entities.Item.prototype.isContractExpired = function isContractExpired() {
    return (this.isPlayer() || this.isManager()) && this.contract <= 0
},entities.Item.prototype.isDuplicateLoanPlayer = function isDuplicateLoanPlayer() {
    return this.isValid() && this.isPlayer() && this.isDuplicate() && this.isLoaned()
},entities.Item.prototype.getAttribute = function getAttribute(index, t) {
    var i = this._attributes[index] || 0;
    return this.hasTraining() && !t && (i = this._modifyAttribute(index, parseInt(i, 10))), i
},entities.Item.prototype.getAttributes = function getAttributes() {
    var attributes = this.isPlayer() ? this._attributes : [];
    return this.hasTraining() && (attributes = attributes.map(function (t, i) {
        return this._modifyAttribute(i, parseInt(t, 10))
    }, this)), attributes
},entities.Item.prototype.getStats = function getStats() {
    return this.isPlayer() ? this._stats : []
},entities.Item.prototype.getGamesPlayed = function getGamesPlayed() {
    return this.isPlayer() ? this._stats[0] : 0
},entities.Item.prototype.getGoals = function getGoals() {
    return this.isPlayer() ? this._stats[1] : 0
},entities.Item.prototype.getYellowCards = function getYellowCards() {
    return this.isPlayer() ? this._stats[2] : 0
},entities.Item.prototype.getRedCards = function getRedCards() {
    return this.isPlayer() ? this._stats[3] : 0
},entities.Item.prototype.getLifetimeStats = function getLifetimeStats() {
    return this.isPlayer() ? this._lifetimeStats : []
},entities.Item.prototype.getLoyaltyRequiredGames = function getLoyaltyRequiredGames() {
    return entities.Item.LOYALTY_REQUIRED_GAMES
},entities.Item.prototype.getTotalGamesPlayed = function getTotalGamesPlayed() {
    return this.isPlayer() ? this._lifetimeStats[0] : 0
},entities.Item.prototype.getTotalGoals = function getTotalGoals() {
    return this.isPlayer() ? this._lifetimeStats[1] : 0
},entities.Item.prototype.getTotalYellowCards = function getTotalYellowCards() {
    return this.isPlayer() ? this._lifetimeStats[2] : 0
},entities.Item.prototype.getTotalRedCards = function getTotalRedCards() {
    return this.isPlayer() ? this._lifetimeStats[3] : 0
},entities.Item.prototype.isAttributeBoosted = function isAttributeBoosted(index) {
    return this.hasTraining() && (this._trainingItem.isAllAttributeTraining() || this._trainingItem.getStaticData().trainedAttribute === index)
},entities.Item.prototype._modifyAttribute = function _modifyAttribute(index, value) {
    if (this.isAttributeBoosted(index)) {
        var t = this._trainingItem.getStaticData(), i = t.amount;
        return this._trainingItem.isPlayerTraining() ? i += Math.floor(gStaffStatsModel.getPlayerAttribBoost(index) * t.amount) : this._trainingItem.isGKTraining() && (i += Math.floor(gStaffStatsModel.getGKAttribBoost(index) * t.amount)), Math.min(value + i, 99)
    }
    return value
},entities.Item.prototype.isGK = function isGK() {
    return 0 === this.preferredPosition
},entities.Item.prototype.isContract = function isContract() {
    return this.type === enums.ItemType.CONTRACT
},entities.Item.prototype.isPlayerContract = function isPlayerContract() {
    return this.isContract() && this.subtype === enums.ItemSubType.CONTRACT_PLAYER
},entities.Item.prototype.isManagerContract = function isManagerContract() {
    return this.isContract() && this.subtype === enums.ItemSubType.CONTRACT_MANAGER
},entities.Item.prototype.isTraining = function isTraining() {
    return this.type === enums.ItemType.TRAINING
},entities.Item.prototype.isGKTraining = function isGKTraining() {
    return this.isTraining() && this.subtype >= enums.ItemSubType.TRAINING_GK_DIVING && this.subtype <= enums.ItemSubType.TRAINING_GK_ALL
},entities.Item.prototype.isPlayerTraining = function isPlayerTraining() {
    return this.isTraining() && this.subtype >= enums.ItemSubType.TRAINING_PLAYER_PACE && this.subtype <= enums.ItemSubType.TRAINING_PLAYER_ALL
},entities.Item.prototype.isAllAttributeTraining = function isAllAttributeTraining() {
    return this.isTraining() && (this.subtype === enums.ItemSubType.TRAINING_GK_ALL || this.subtype === enums.ItemSubType.TRAINING_PLAYER_ALL)
},entities.Item.prototype.isPlayerPositionModifier = function isPlayerPositionModifier() {
    return this.isTraining() && this.subtype >= enums.ItemSubType.TRAINING_PLAYER_POS_LWB_LB && this.subtype <= enums.ItemSubType.TRAINING_PLAYER_POS_ST_CF
},entities.Item.prototype.isStyleModifier = function isStyleModifier() {
    return this.isTraining() && this.subtype >= enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_1 && this.subtype <= enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_5
},entities.Item.prototype.isPlayerStyleModifier = function isPlayerStyleModifier() {
    return this.isTraining() && this.subtype >= enums.ItemSubType.TRAINING_PLAYERSTYLE_GENERAL_1 && this.subtype < enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_1
},entities.Item.prototype.isGKStyleModifier = function isGKStyleModifier() {
    return this.isTraining() && this.subtype >= enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_1 && this.subtype <= enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_5
},entities.Item.prototype.isManagerLeagueModifier = function isManagerLeagueModifier() {
    return this.isTraining() && this.subtype >= enums.ItemSubType.MANAGERLEAGUE_DENMARK && this.subtype <= enums.ItemSubType.MANAGERLEAGUE_RUSSIA
},entities.Item.prototype.isManagerConsumable = function isManagerConsumable() {
    return this.isManagerLeagueModifier() || this.isManagerContract()
},entities.Item.prototype.isHealth = function isHealth() {
    return this.type === enums.ItemType.HEALTH
},entities.Item.prototype.isInjuryHealing = function isInjuryHealing() {
    return this.isHealth() && this.subtype >= enums.ItemSubType.HEALING_HEAD && this.subtype <= enums.ItemSubType.HEALING_ALL
},entities.Item.prototype.isFitness = function isFitness() {
    return this.isHealth() && (this.subtype === enums.ItemSubType.FITNESS_PLAYER || this.subtype === enums.ItemSubType.FITNESS_TEAM)
},entities.Item.prototype.isPlayerFitness = function isPlayerFitness() {
    return this.isHealth() && this.subtype === enums.ItemSubType.FITNESS_PLAYER
},entities.Item.prototype.isTeamFitness = function isTeamFitness() {
    return this.isHealth() && this.subtype === enums.ItemSubType.FITNESS_TEAM
},entities.Item.prototype.isConsumable = function isConsumable() {
    return this.isContract() || this.isTraining() || this.isHealth()
},entities.Item.prototype.isClubConsumable = function isClubConsumable() {
    return this.isConsumable() && this.pile === enums.FUTItemPile.CLUB
},entities.Item.prototype.isBadge = function isBadge() {
    return this.type === enums.ItemType.BADGE
},entities.Item.prototype.isBall = function isBall() {
    return this.type === enums.ItemType.BALL
},entities.Item.prototype.isKit = function isKit() {
    return this.type === enums.ItemType.KIT
},entities.Item.prototype.isStadium = function isStadium() {
    return this.type === enums.ItemType.STADIUM
},entities.Item.prototype.isClubItem = function isClubItem() {
    return this.isBadge() || this.isBall() || this.isKit() || this.isStadium()
},entities.Item.prototype.isActiveBall = function isActiveBall() {
    return this.isBall() && this.state === enums.ItemState.ACTIVE_BALL
},entities.Item.prototype.isActiveBadge = function isActiveBadge() {
    return this.isBadge() && this.state === enums.ItemState.ACTIVE_BADGE
},entities.Item.prototype.isActiveAwayKit = function isActiveAwayKit() {
    return this.isKit() && this.state === enums.ItemState.ACTIVE_AWAY_KIT
},entities.Item.prototype.isActiveHomeKit = function isActiveHomeKit() {
    return this.isKit() && this.state === enums.ItemState.ACTIVE_HOME_KIT
},entities.Item.prototype.isActiveStadium = function isActiveStadium() {
    return this.isStadium() && this.state === enums.ItemState.ACTIVE_STADIUM
},entities.Item.prototype.isActiveClubItem = function isActiveClubItem() {
    return this.isActiveBall() || this.isActiveBadge() || this.isActiveAwayKit() || this.isActiveHomeKit() || this.isActiveStadium()
},entities.Item.prototype.isMiscItem = function isMiscItem() {
    return this.type === enums.ItemType.MISC
},entities.Item.prototype.isFreeCoins = function isFreeCoins() {
    return this.isMiscItem() && this.subtype === enums.ItemSubType.FREE_COINS
},
entities.Item.prototype.isFreePack = function isFreePack() {
    return this.isMiscItem() && this.subtype === enums.ItemSubType.FREE_PACK
},entities.Item.prototype.isDraftToken = function isDraftToken() {
    return this.isMiscItem() && this.subtype === enums.ItemSubType.DRAFT_TOKEN
},entities.Item.prototype.isPlayerPickItem = function isPlayerPickItem() {
    return this.isMiscItem() && this.subtype === enums.ItemSubType.PLAYER_PICK_ITEM
},entities.Item.prototype.isCharityItem = function isCharityItem() {
    return this.getMaskedResourceId() === entities.Item.DANNY_MILLER_CHARITY_ID || this.getMaskedResourceId() === entities.Item.KENTON_CHARITY_ID
},entities.Item.prototype.isCommon = function isCommon() {
    return this.rareflag === entities.Item.Rarity.NONE
},entities.Item.prototype.isRare = function isRare() {
    return this.rareflag === entities.Item.Rarity.RARE
},entities.Item.prototype.isSpecial = function isSpecial() {
    return !this.isCommon() && !this.isRare()
},entities.Item.prototype.isLegend = function isLegend() {
    return this.rareflag === entities.Item.Rarity.ICON
},entities.Item.isStoryMode = function isStoryMode(id) {
    return this.isAlex(id) || this.isJim(id) || this.isDanny(id)
},entities.Item.isAlex = function isAlex(id) {
    return id >= ALEX_HUNTER_MIN_ID && id <= ALEX_HUNTER_MAX_ID
},entities.Item.isJim = function isJim(id) {
    return id >= JIM_HUNTER_MIN_ID && id <= JIM_HUNTER_MAX_ID
},entities.Item.isDanny = function isDanny(id) {
    return id >= DANNY_WILLIAMS_MIN_ID && id <= DANNY_WILLIAMS_MAX_ID
},entities.Item.prototype.hasQualityTiers = function hasQualityTiers() {
    return this.hasLevels
},entities.Item.prototype.isBronzeRating = function isBronzeRating() {
    return this.rating <= 64
},entities.Item.prototype.isSilverRating = function isSilverRating() {
    return this.rating <= 74 && this.rating > 64
},entities.Item.prototype.isGoldRating = function isGoldRating() {
    return this.rating > 74
},entities.Item.prototype.prefersDefensePosition = function prefersDefensePosition() {
    return this.isPlayer() && this.preferredPosition >= enums.PlayerPositionsAsInts.RWB && this.preferredPosition <= enums.PlayerPositionsAsInts.LWB
},entities.Item.prototype.prefersMidfieldPosition = function prefersMidfieldPosition() {
    return this.isPlayer() && this.preferredPosition >= enums.PlayerPositionsAsInts.RDM && this.preferredPosition <= enums.PlayerPositionsAsInts.LAM
},entities.Item.prototype.prefersAttackerPosition = function prefersAttackerPosition() {
    return this.isPlayer() && this.preferredPosition >= enums.PlayerPositionsAsInts.RF
},entities.Item.prototype.compareTo = function compareTo(item) {
    var t = this.getAuctionData(), i = item.getAuctionData();
    return t.isValid() && i.isValid() ? t.compareTo(i) : this.id === item.id
},entities.Item.prototype.compareResourceTo = function compareResourceTo(item, t) {
    return item instanceof entities.Item ? t ? this.resourceId === item.resourceId : this.isLegend() && item.isLegend() && this.iconId > 0 && item.iconId > 0 ? this.iconId === item.iconId : this.getMaskedResourceId() === item.getMaskedResourceId() : (utils.Debug.Assert(!1, "[entities.Item::compareResourceTo] Parameter expected a valid item entity."), !1)
},entities.Item.prototype.setItemPriceLimits = function setItemPriceLimits(t) {
    this._itemPriceLimits = t
},entities.Item.prototype.hasPriceLimits = function hasPriceLimits() {
    return null !== this._itemPriceLimits
},entities.Item.prototype.getPriceLimits = function getPriceLimits() {
    return this._itemPriceLimits
},entities.Item.prototype.increaseStackCount = function increaseStackCount() {
    return this.stackCount++, this._updateUntradeableState(), this.stackCount
},entities.Item.prototype.decreaseStackCount = function decreaseStackCount() {
    return this.stackCount--, this._updateUntradeableState(), this.stackCount
},entities.Item.prototype._updateUntradeableState = function _updateUntradeableState() {
    this.untradeable = this.untradeableCount > 0 && this.stackCount <= this.untradeableCount
},entities.Item.prototype.compareDream = function compareDream(item) {
    return item instanceof entities.Item ? this.getMaskedResourceId() === item.getMaskedResourceId() && this.concept !== item.concept : (utils.Debug.Assert(!1, "[entities.Item::compareToDream] Parameter expected a valid item entity."), !1)
},
entities.Item.prototype.compareType = function compareType(item) {
    return item instanceof entities.Item ? this.type === item.type : (utils.Debug.Assert(!1, "[entities.Item::compareType] Parameter expected a valid item entity."), !1)
},entities.Item.prototype.canApplyTo = function canApplyTo(item) {
    if (!this.isConsumable() || item.isConsumable()) return !1;
    var t = this.getStaticData();
    if (this.isPlayerStyleModifier()) return item.isPlayer() && !item.isGK() && item.playStyle !== this.subtype;
    if (this.isGKStyleModifier()) return item.isGK() && item.playStyle !== this.subtype;
    if (this.isManagerLeagueModifier()) return item.isManager() && item.leagueId !== this.leagueId;
    if (this.isPlayerTraining()) return item.isPlayer() && !item.isGK();
    if (this.isGKTraining()) return item.isPlayer() && item.isGK();
    if (this.isPlayerContract()) return item.isPlayer() && !item.isLoaned() && item.contract < 99;
    if (this.isManagerContract()) return item.isManager() && item.contract < 99;
    if (this.isPlayerPositionModifier()) {
        var position = repositories.Squad.getPosition(item.preferredPosition);
        return !!position && position.getTypeName() === t.trainPosFrom
    }
    return this.isFitness() ? item.isPlayer() && (this.isTeamFitness() || item.fitness < 99) : !!this.isInjuryHealing() && (item.isInjured() && this._canApplyToInjury(item.injuryType))
},entities.Item.prototype._canApplyToInjury = function _canApplyToInjury(t) {
    if (!this.isInjuryHealing()) return !1;
    switch (this.subtype) {
        case enums.ItemSubType.HEALING_HEAD:
            return t === enums.PlayerInjury.HEAD;
        case enums.ItemSubType.HEALING_SHOULDER:
            return t === enums.PlayerInjury.SHOULDER;
        case enums.ItemSubType.HEALING_ARM:
            return t === enums.PlayerInjury.ARM;
        case enums.ItemSubType.HEALING_BACK:
            return t === enums.PlayerInjury.BACK;
        case enums.ItemSubType.HEALING_HIP:
            return t === enums.PlayerInjury.HIP;
        case enums.ItemSubType.HEALING_LEG:
            return t === enums.PlayerInjury.LEG;
        case enums.ItemSubType.HEALING_FOOT:
            return t === enums.PlayerInjury.FOOT;
        case enums.ItemSubType.HEALING_ALL:
            return !0
    }
    return !1
},entities.Item.DANNY_MILLER_CHARITY_ID = 227904,entities.Item.KENTON_CHARITY_ID = 235430,entities.Item.LOYALTY_REQUIRED_GAMES = 10,entities.CustomBrickItem = function FUTCustomBrickItem() {
    entities.Item.call(this, enums.ItemType.PLAYER)
},utils.JS.inherits(entities.CustomBrickItem, entities.Item),entities.CustomBrickItem.prototype.activate = function activate(t) {
    var i = new UTObservable;
    return i.notify({success: !1, error: null}), i
},entities.CustomBrickItem.prototype.loadStaticData = function loadStaticData() {
    var t = new UTObservable;
    return t.notify({success: !1}), t
},entities.CustomBrickItem.prototype._generateStaticData = function _generateStaticData() {
    return new transferobjects.StaticItemData
},entities.CustomBrickItem.prototype.update = function update(t) {
},entities.CustomBrickItem.prototype.isValid = function isValid() {
    return !1
},entities.CustomBrickItem.prototype.isCustomBrick = function isCustomBrick() {
    return !0
},entities.CustomBrickItem.prototype.isInjured = function isInjured() {
    return !1
},entities.CustomBrickItem.prototype.hasTraining = function hasTraining() {
    return !1
},entities.CustomBrickItem.prototype.isSuspended = function isSuspended() {
    return !1
},entities.CustomBrickItem.prototype.setStaticData = function setStaticData(data) {
},entities.CustomBrickItem.prototype.setAuctionData = function setAuctionData(value) {
},entities.CustomBrickItem.prototype.getAttribute = function getAttribute(index, t) {
    return 0
},entities.CustomBrickItem.prototype.isAttributeBoosted = function isAttributeBoosted(index) {
    return !1
},entities.CustomBrickItem.prototype._modifyAttribute = function _modifyAttribute(index, value) {
    return 0
},entities.CustomBrickItem.prototype.hasQualityTiers = function hasQualityTiers() {
    return !1
},entities.CustomBrickItem.prototype.compareTo = function compareTo(item) {
    return !1
},entities.CustomBrickItem.prototype.compareResourceTo = function compareResourceTo(item, t) {
    return !1
},entities.CustomBrickItem.prototype.setItemPriceLimits = function setItemPriceLimits(t) {
},entities.CustomBrickItem.prototype.increaseStackCount = function increaseStackCount() {
    return 0
},
entities.CustomBrickItem.prototype.decreaseStackCount = function decreaseStackCount() {
    return 0
},entities.CustomBrickItem.prototype._updateUntradeableState = function _updateUntradeableState() {
},entities.CustomBrickItem.prototype.compareDream = function compareDream(item) {
    return !1
},entities.CustomBrickItem.prototype.canApplyTo = function canApplyTo(item) {
    return !1
},entities.CustomBrickItem.prototype._canApplyToInjury = function _canApplyToInjury(t) {
    return !1
},entities.NullItem = function FUTNullItem() {
    entities.Item.call(this, enums.ItemType.NONE)
},utils.JS.inherits(entities.NullItem, entities.Item),entities.NullItem.prototype.activate = function activate(t) {
    var i = new UTObservable;
    return i.notify({success: !1, error: null}), i
},entities.NullItem.prototype.loadStaticData = function loadStaticData() {
    var t = new UTObservable;
    return t.notify({success: !1}), t
},entities.NullItem.prototype.clearAuction = function clearAuction() {
},entities.NullItem.prototype._generateStaticData = function _generateStaticData() {
    return new transferobjects.StaticItemData
},entities.NullItem.prototype.update = function update(t) {
},entities.NullItem.prototype.isValid = function isValid() {
    return !1
},entities.NullItem.prototype.isInjured = function isInjured() {
    return !1
},entities.NullItem.prototype.hasTraining = function hasTraining() {
    return !1
},entities.NullItem.prototype.isSuspended = function isSuspended() {
    return !1
},entities.NullItem.prototype.setStaticData = function setStaticData(data) {
},entities.NullItem.prototype.setTrainingItem = function setTrainingItem(item) {
},entities.NullItem.prototype.setAuctionData = function setAuctionData(value) {
},entities.NullItem.prototype.setMetaData = function setMetaData(data) {
},entities.NullItem.prototype.isMovable = function isMovable() {
    return !1
},entities.NullItem.prototype.getAttribute = function getAttribute(index, t) {
    return 0
},entities.NullItem.prototype.getAttributes = function getAttributes() {
    return []
},entities.NullItem.prototype.getStats = function getStats() {
    return []
},entities.NullItem.prototype.isAttributeBoosted = function isAttributeBoosted(index) {
    return !1
},entities.NullItem.prototype._modifyAttribute = function _modifyAttribute(index, value) {
    return 0
},entities.NullItem.prototype.hasQualityTiers = function hasQualityTiers() {
    return !1
},entities.NullItem.prototype.compareTo = function compareTo(item) {
    return !1
},entities.NullItem.prototype.compareResourceTo = function compareResourceTo(item, t) {
    return !1
},entities.NullItem.prototype.setItemPriceLimits = function setItemPriceLimits(t) {
},entities.NullItem.prototype.increaseStackCount = function increaseStackCount() {
    return 0
},entities.NullItem.prototype.decreaseStackCount = function decreaseStackCount() {
    return 0
},entities.NullItem.prototype._updateUntradeableState = function _updateUntradeableState() {
},entities.NullItem.prototype.compareDream = function compareDream(item) {
    return !1
},entities.NullItem.prototype.compareType = function compareType(item) {
    return !1
},entities.NullItem.prototype.canApplyTo = function canApplyTo(item) {
    return !1
},entities.NullItem.prototype._canApplyToInjury = function _canApplyToInjury(t) {
    return !1
},UTAuctionEntityFactory.prototype.createFromUtasObject = function createFromUtasObject(data) {
    var t = new entities.Auction;
    return t.timestamp = Date.now(), t.bidState = data.bidState || enums.AuctionBidState.NONE, t.buyNowPrice = data.buyNowPrice, t.currentBid = data.currentBid, t.expires = data.expires, t.startingBid = data.startingBid, t.tradeId = data.tradeIdStr || data.tradeId.toString(), t.tradeOwner = data.tradeOwner || !1, t.tradeState = data.tradeState || enums.AuctionTradeState.INACTIVE, t._watched = data.watched || !1, t
},NamespaceManager.Register("factories"),factories.Item = function () {
    function ItemEntityFactory() {
        this._auctionFactory = new UTAuctionEntityFactory
    }

    function _generateResourceGameYear(t, i) {
        if (!gSettingsModel.isLegacyYearIdEnabled() && utils.JS.isValid(i) && !utils.JS.isEmpty(i)) return parseInt(i, 10);
        var s = (t & enums.ItemMask.YEAR) >>> 28;
        return parseInt(utils.TextUtils.getYearString(s), 10)
    }

    function _generateSubtype(item) {
        switch (utils.Debug.Assert(item.isPlayer() || item.isStaff(), "Missing required item subtype in server payload."), item.type) {
            case enums.ItemType.PLAYER:
                return enums.ItemSubType.PLAYER;
            case enums.ItemType.MANAGER:
                return enums.ItemSubType.MANAGER;
            case enums.ItemType.HEAD_COACH:
                return enums.ItemSubType.HEAD_COACH;
            case enums.ItemType.GK_COACH:
                return enums.ItemSubType.GK_COACH;
            case enums.ItemType.FITNESS_COACH:
                return enums.ItemSubType.FITNESS_COACH;
            case enums.ItemType.PHYSIO:
                return enums.ItemSubType.PHYSIO
        }
        return enums.ItemSubType.NONE
    }

    function _convertCardAssetIdToItemType(t) {
        switch (t) {
            case enums.ItemCardAssetId.CONTRACT_PLAYER:
            case enums.ItemCardAssetId.CONTRACT_MANAGER:
                return enums.ItemType.CONTRACT;
            case enums.ItemCardAssetId.HEALING:
            case enums.ItemCardAssetId.FITNESS_PLAYER:
            case enums.ItemCardAssetId.FITNESS_TEAM:
                return enums.ItemType.HEALTH;
            case enums.ItemCardAssetId.TRAINING_PLAYER:
            case enums.ItemCardAssetId.TRAINING_GK:
            case enums.ItemCardAssetId.MANAGER_LEAGUE:
            case enums.ItemCardAssetId.POSITION_MODIFIER:
            case enums.ItemCardAssetId.PLAYSTYLE_PLAYER:
            case enums.ItemCardAssetId.PLAYSTYLE_GK:
                return enums.ItemType.TRAINING
        }
        return utils.Debug.Assert(!1, "Unknown cardassetid: " + t), enums.ItemType.NONE
    }

    function _normalizePayload(data, t) {
        data.resourceGameYear = _generateResourceGameYear(data.resourceId, data.resourceGameYear);
        var i = utils.TextUtils.getYearEnum(data.resourceGameYear);
        if (utils.JS.isNumber(data.rareFlag) && (data.rareflag = data.rareFlag, delete data.rareFlag), utils.JS.isNumber(data.teamid) && (data.teamId = data.teamid, delete data.teamid), !utils.JS.isBoolean(t) || t) {
            if (data.teamId && (!utils.JS.isNumber(data.leagueId) || data.leagueId <= 0)) {
                var s = repositories.TeamConfig.getTeam(data.teamId, i);
                data.leagueId = s ? s.league : -1
            }
            if (data.leagueId && (!utils.JS.isNumber(data.nation) || data.nation <= 0)) {
                var o = repositories.TeamConfig.getLeague(data.leagueId, i);
                data.nation = o ? o.nation : -1
            }
        }
        return data
    }

    function _parseItemPayload(item, data) {
        if (item.id = data.id, item.resourceId = data.resourceId, item.resourceGameYear = data.resourceGameYear, item.type = data.itemType, item.subtype = data.cardsubtypeid || _generateSubtype(item), item.untradeable = !(utils.JS.isBoolean(data.untradeable) && item.getYear() >= enums.Year.ASSET && !item.isPlayerPickItem()) || data.untradeable, item.lastSalePrice = data.lastSalePrice || 0, item.discardValue = data.discardValue || 0, item.state = data.itemState, item.pile = data.pile, item.rating = parseInt(data.rating, 10) || 0, item.teamId = data.teamId || 0, item.leagueId = data.leagueId || 0, item.nationId = data.nation || 0, item.rareflag = data.rareflag || 0, item.owners = data.owners || 0, item.timestamp = data.timestamp || 0, (item.type === enums.ItemType.KIT || item.type === enums.ItemType.BADGE) && item.nationId < 1 && (item.nationId = 75), item.stackCount = 1, item.untradeableCount = item.untradeable ? 1 : 0, (item.isPlayer() || item.isManager()) && (item.contract = data.contract, item.concept = data.dream || !1, item.loans = utils.JS.isNumber(data.loans) ? data.loans : -1), item.isPlayer()) {
            item.concept ? item.loyaltyBonus = gSettingsModel.isServiceAvailable(models.SettingsModel.CONCEPT_SQUAD_LOYALTY_BONUS_ENABLED) : item.loyaltyBonus = item.getYear() < enums.Year.ASSET ? 1 : data.loyaltyBonus || 0, item.fitness = data.fitness, item.injuryType = data.injuryType || enums.PlayerInjury.NONE, item.injuryGames = data.injuryGames || 0, item.suspensionGames = data.suspension || 0, item.training = utils.JS.isNumber(data.training) ? data.training : 0;
            var position = repositories.Squad.getPositionByUniqueName(data.preferredPosition);
            item.preferredPosition = position ? position.getId() : 0;
            var t = data.preferredPosition === enums.PlayerPositions.GK;
            if (item.playStyle = data.playStyle || (t ? enums.ItemSubType.TRAINING_PLAYERSTYLE_GOALKEEPER_5 : DEFAULT_PLAYSTYLE_ID), Array.isArray(data.attributeList) && data.attributeList.forEach(function (t, i) {
                    item._attributes[i] = t.value
                }, this), Array.isArray(data.lifetimeStats) && data.lifetimeStats.forEach(function (t, i) {
                    item._lifetimeStats[i] = t.value
                }, this), Array.isArray(data.statsList) && data.statsList.forEach(function (t, i) {
                    item._stats[i] = t.value
                }, this), item.isLegend()) {
                var i = repositories.PlayerIcon.get(item.getMaskedResourceId());
                item.iconId = i ? i.iconId : 0
            }
            var s = repositories.PlayerMeta.get(item.getMaskedResourceId());
            s && item.setMetaData(s)
        }
        item._staticData.parseDynamicItemData(item, data), data.trainingItem && (item._trainingItem = this.createItem(data.trainingItem)), utils.JS.isNumber(data.marketDataMinPrice) && utils.JS.isNumber(data.marketDataMaxPrice) && (item._itemPriceLimits = new UTValueBandVO(data.marketDataMinPrice, data.marketDataMaxPrice))
    }

    function _parseConsumablePayload(item, data) {
        data.item.itemType || (data.item.itemType = item.type), _parseItemPayload.call(this, item, data.item), item.discardValue = data.discardValue, item.stackCount = data.count, item.resourceId = data.resourceId, item.untradeableCount = data.untradeableCount, item._updateUntradeableState()
    }

    return ItemEntityFactory.prototype.createItem = function createItem(data) {
        if (!data) return new entities.NullItem;
        if (data.itemType || (data.itemType = data.cardassetid ? _convertCardAssetIdToItemType(data.cardassetid) : enums.ItemType.PLAYER), (data = _normalizePayload(data)).itemType === enums.ItemType.PLAYER) {
            var t = repositories.Item.getStaticDataByDefId(data.resourceId & enums.ItemMask.DATABASE);
            t && (data.firstName = t.firstName, data.lastName = t.lastName, data.knownAs = t.commonName || enums.Localization.BLANK_STR)
        }
        var item = new entities.Item(data.itemType);
        _parseItemPayload.call(this, item, data);
        var i = services.Configuration.getItemRarity(item);
        return i && (item.hasLevels = i.levels), item
    }, ItemEntityFactory.prototype.createConsumable = function createConsumable(data) {
        if (!data) return new entities.NullItem;
        data.item.itemType || (data.item.itemType = data.item.cardassetid ? _convertCardAssetIdToItemType(data.item.cardassetid) : enums.ItemType.PLAYER), data.item = _normalizePayload(data.item);
        var item = new entities.Item(data.item.itemType);
        _parseConsumablePayload.call(this, item, data);
        var t = services.Configuration.getItemRarity(item);
        return t && (item.hasLevels = t.levels), item
    }, ItemEntityFactory.prototype.createCustomBrickItem = function createItem(data) {
        if (!data) return new entities.NullItem;
        data = _normalizePayload(data, !1);
        var item = new entities.CustomBrickItem;
        return _parseItemPayload.call(this, item, data), item
    }, ItemEntityFactory.prototype.generateItemsFromItemData = function generateItemsFromItemData(t, i) {
        return t.map(function (data) {
            var item = utils.JS.isValid(data.count) ? this.createConsumable(data) : this.createItem(data);
            if (utils.JS.isValid(i)) {
                var duplicate = utils.JS.find(i, function (t) {
                    return t.itemId === item.id
                });
                utils.JS.isValid(duplicate) && (item.duplicateId = duplicate.duplicateItemId, utils.JS.isValid(duplicate.duplicateItemLoans) && (item.duplicateItemLoans = duplicate.duplicateItemLoans))
            }
            return item
        }, this)
    }, ItemEntityFactory.prototype.generateItemsFromAuctionData = function generateItemsFromAuctionData(t, i) {
        return t.map(function (data) {
            var item = this.createItem(data.itemData), t = this._auctionFactory.createFromUtasObject(data);
            if (item.setAuctionData(t), 0 === item.id && (item.id = "Trade" + t.tradeId), !item.isConsumable() && utils.JS.isValid(i)) {
                var duplicate = utils.JS.find(i, function (t) {
                    return t.itemId === item.id
                });
                utils.JS.isValid(duplicate) && (item.duplicateId = duplicate.duplicateItemId)
            }
            return item
        }, this)
    }, new ItemEntityFactory
}(),utils.JS.inherits(UTItemRepository, UTHashTable),UTItemRepository.prototype.isCacheExpired = function isCacheExpired() {
    return this._expiryTimestamp < Date.now()
},UTItemRepository.prototype.reset = function reset() {
    this.clear(), this._resetCount(), this.endOfList = !1, this._expiryTimestamp = 0
},UTItemRepository.prototype.isCountSet = function isCountSet() {
    return this.count > -1
},UTItemRepository.prototype._resetCount = function _resetCount() {
    this.count = -1
},UTItemRepository.prototype.set = function set(key, value) {
    var t = this.has(key) ? this._collection[key] : null;
    return this._collection[key] = value, this.isCountSet() && (this.endOfList ? this.count = this.length : t || this._resetCount()), t
},UTItemRepository.prototype.remove = function remove(key) {
    var t = null;
    return this.has(key) && (t = this._collection[key], delete this._collection[key]),
    this.isCountSet() && (this.endOfList ? this.count = this.length : t && this._resetCount()), t
},UTItemRepository.prototype.search = function search(t) {
    return this.values().filter(function (item) {
        if (t.untradeables === enums.SearchUntradeables.ONLY && !item.untradeable || t.untradeables === enums.SearchUntradeables.EXCLUDE && item.untradeable) return !1;
        if (t.type === enums.SearchType.PLAYER) {
            if (t.position !== enums.SearchType.ANY && repositories.Squad.getPositionByUniqueName(t.position).getId() !== item.preferredPosition) return !1;
            if (t.zone !== enums.SearchType.ANY) {
                var i = utils.JS.find(POSITION_ZONE_LOOKUP, function (i) {
                    return i.value === t.zone
                });
                if (i.minPosId > item.preferredPosition || i.maxPosId < item.preferredPosition) return !1
            }
            if (-1 !== t.playStyle && item.playStyle !== t.playStyle) return !1;
            if (t.defId.length > 0 && t.defId.indexOf(item.getMaskedResourceId()) < 0) return !1
        } else if (t.type === enums.SearchType.STAFF && t.category !== enums.SearchCategory.ANY && (item.isManager() && t.category !== enums.SearchCategory.MANAGER || item.isHeadCoach() && t.category !== enums.SearchCategory.COACH_HEAD || item.isFitnessCoach() && t.category !== enums.SearchCategory.COACH_FITNESS || item.isGKCoach() && t.category !== enums.SearchCategory.COACH_GK || item.isPhysio() && t.category !== enums.SearchCategory.PHYSIO)) return !1;
        if (t.type !== enums.SearchType.CONSUMABLES_DEVELOPMENT && t.type !== enums.SearchType.CONSUMABLES_TRAINING) {
            if (t.level !== enums.SearchType.ANY && (!item.hasQualityTiers() && t.level !== enums.SearchLevel.SPECIAL || item.getTier() === enums.ItemRatingTier.BRONZE && t.level !== enums.SearchLevel.BRONZE || item.getTier() === enums.ItemRatingTier.SILVER && t.level !== enums.SearchLevel.SILVER || item.getTier() === enums.ItemRatingTier.GOLD && t.level !== enums.SearchLevel.GOLD)) return !1;
            if (-1 !== t.nation && t.nation !== item.nationId || -1 !== t.league && t.league !== item.leagueId || -1 !== t.club && t.club !== item.teamId) return !1
        }
        return !0
    })
},UTItemRepository.prototype.setCacheTimestamp = function setCacheTimestamp(timestamp, t) {
    this._expiryTimestamp = timestamp + (utils.JS.isNumber(t) ? t * MS_PER_SECOND : 3e5)
},NamespaceManager.Register("transferobjects"),transferobjects.ClubStat = function ClubStatDTO(data) {
    this.type = data.type || enums.ClubItemType.BALLS, Object.defineProperty(this, "type", {writable: !1}), this.count = data.typeValue || 0, Object.defineProperty(this, "count", {writable: !0})
},NamespaceManager.Register("accessobjects"),accessobjects.Club = function () {
    function UTClubDAO() {
        UTObject.call(this), this.UTAS_REQUEST_PATH = "/ut/game/" + GAME_NAME + "/", Object.defineProperty(this, "UTAS_REQUEST_PATH", {
            writable: !1,
            enumerable: !0
        })
    }

    return utils.JS.inherits(UTClubDAO, UTObject), UTClubDAO.prototype.getStats = function getStats(t) {
        var i = new UTObservable, s = new UTUtasHttpRequest(t);
        return s.setPath(this.UTAS_REQUEST_PATH + "club/stats/club"), s.observe(this, function _onGetStatsComplete(t, data) {
            t.unobserve(this);
            var s = new transferobjects.FUTHttpResponse, o = utils.JS.isObject(data.response);
            s.response = {}, s.response.stats = o ? data.response.stat.map(function (t) {
                return new transferobjects.ClubStat(t)
            }) : [], s.status = data.status, s.success = data.success, i.notify(s)
        }), s.send(), i
    }, new UTClubDAO
}(),communication.ClubConsumableSearchDelegate = function () {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "club/consumables/development", this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.ClubConsumableSearchDelegate, communication.BaseFUTDelegate),communication.ClubSearchDelegate = function (t, i, s) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "club", this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON;
    var o = {}, l = !1;
    if (t.acquiredDate !== enums.SearchSort.NONE ? o.acquiredDate = t.acquiredDate : o.sort = t.sort, t.year !== enums.SearchType.ANY ? (o.type = 1, o.year = t.year,
            l = utils.TextUtils.getYearFromString(t.year) <= enums.Year.YEAR_2012) : o.type = t.type === enums.SearchType.ANY ? enums.SearchType.PLAYER : t.type, t.category !== enums.SearchCategory.ANY && (o.type = t.category.toLowerCase()), o.type !== enums.SearchType.PLAYER && 1 !== o.type || t.level !== enums.SearchLevel.SPECIAL) {
        if (t.level !== enums.SearchLevel.ANY) if (l) {
            var u;
            for (u in enums.SearchLevel) if (enums.SearchLevel.hasOwnProperty(u) && t.level === enums.SearchLevel[u] && enums.ItemRatingTier.hasOwnProperty(u)) {
                o.level = enums.ItemRatingTier[u];
                break
            }
        } else o.level = t.level
    } else o.rare = t.level;
    if (t.club > 0 && (o.team = t.club), t.league > 0 && (o.league = t.league), t.nation > 0 && (o.nation = t.nation), t.untradeables !== enums.SearchUntradeables.DEFAULT && (o.untradeable = t.untradeables), t.isExactSearch && (o.filter = "exact"), t.zone !== enums.SearchType.ANY) {
        var h = utils.JS.find(PLAYER_ZONE_LOOKUP, function (i) {
            return i.value === t.zone
        });
        utils.JS.isValid(h) && (o.type = h.id)
    } else if (t.position !== enums.SearchType.ANY) if (l) {
        var p;
        for (p in enums.PlayerPositions) if (enums.PlayerPositions.hasOwnProperty(p) && t.position === enums.PlayerPositions[p] && enums.PlayerPositionsAsInts.hasOwnProperty(p)) {
            o.position = enums.PlayerPositionsAsInts[p];
            break
        }
    } else o.position = t.position;
    t.playStyle > 0 && (o.playStyle = t.playStyle), t.hasValidDefId() && (o.defId = t.defId), o.start = i, o.count = s, this.setURLVariables(o), this.useClickShield(!0)
},utils.JS.inherits(communication.ClubSearchDelegate, communication.BaseFUTDelegate),ClubRepository.prototype.reset = function reset() {
    this._players.reset(), this._staff.reset(), this._consumables.reset(), this._badges.reset(), this._balls.reset(), this._kits.reset(), this._stadiums.reset(), this._activeItems.clear()
},ClubRepository.prototype._getActiveItems = function _getActiveItems() {
    var t = [];
    return this._activeItems.keys().forEach(function (i) {
        var id = this._activeItems.get(i);
        switch (i) {
            case enums.ItemState.ACTIVE_BADGE:
                t.push(this._badges.get(id));
                break;
            case enums.ItemState.ACTIVE_BALL:
                t.push(this._balls.get(id));
                break;
            case enums.ItemState.ACTIVE_AWAY_KIT:
            case enums.ItemState.ACTIVE_HOME_KIT:
                t.push(this._kits.get(id));
                break;
            case enums.ItemState.ACTIVE_STADIUM:
                t.push(this._stadiums.get(id))
        }
    }, this), t
},ClubRepository.prototype.getActiveItems = function getActiveItems(state) {
    var t = this._getActiveItems();
    return state ? utils.JS.find(t, function (t) {
        return t.state === state
    }) : t
},ClubRepository.prototype.setActiveItem = function setActiveItem(item) {
    if (item.isActiveClubItem()) {
        var t = this.getActiveItems(item.state);
        utils.JS.isValid(t) && t.id !== item.id && (t.state = enums.ItemState.FREE), this._activeItems.set(item.state, item.id)
    }
},ClubRepository.prototype._addClubItem = function _addClubItem(item) {
    item.isBadge() ? this._badges.set(item.id, item) : item.isBall() ? this._balls.set(item.id, item) : item.isKit() ? this._kits.set(item.id, item) : item.isStadium() && this._stadiums.set(item.id, item), this.setActiveItem(item)
},ClubRepository.prototype._removeClubItem = function _removeClubItem(item) {
    item.isActiveClubItem() ? utils.Debug.Assert(!1, "[ClubRepository::_removeClubItem] Can't remove an active club item.") : item.isBadge() ? this._badges.remove(item.id) : item.isBall() ? this._balls.remove(item.id) : item.isKit() ? this._kits.remove(item.id) : item.isStadium() && this._stadiums.remove(item.id)
},ClubRepository.prototype._addConsumable = function _addConsumable(item) {
    this._consumables.has(item.resourceId) ? this._consumables.get(item.resourceId).increaseStackCount() : this._consumables.set(item.resourceId, item)
},ClubRepository.prototype._removeConsumable = function _removeConsumable(t) {
    0 === this._consumables.get(t).stackCount && this._consumables.remove(t)
},ClubRepository.prototype.add = function add(item) {
    function _add(t) {
        t.isPlayer() ? this._players.set(t.id, t) : t.isStaff() ? this._staff.set(t.id, t) : t.isClubItem() ? this._addClubItem(t) : t.isConsumable() && this._addConsumable(t)
    }

    Array.isArray(item) ? item.forEach(function (t) {
        _add.call(this, t)
    }, this) : _add.call(this, item)
},ClubRepository.prototype.remove = function remove(item) {
    function _remove(t) {
        t.isPlayer() ? this._players.remove(t.id) : item.isStaff() ? this._staff.remove(t.id) : item.isClubItem() ? this._removeClubItem(t) : item.isConsumable() && this._removeConsumable(t.resourceId)
    }

    Array.isArray(item) ? item.forEach(function (t) {
        _remove.call(this, t)
    }, this) : _remove.call(this, item)
},ClubRepository.prototype.update = function update(item) {
    item.isPlayer() && this._players.has(item.id) && this._players.set(item.id, item)
},ClubRepository.prototype.search = function search(t) {
    var i, s, event = new UTObservable, o = new transferobjects.ItemDomainResponse;
    switch (t.type) {
        case enums.SearchType.PLAYER:
            i = this._players;
            break;
        case enums.SearchType.STAFF:
            i = this._staff;
            break;
        case enums.SearchType.CONSUMABLES_DEVELOPMENT:
        case enums.SearchType.CONSUMABLES_TRAINING:
            i = this._consumables;
            break;
        case enums.SearchType.CLUB_INFO:
            t.category === enums.SearchCategory.BADGE ? i = this._badges : t.category === enums.SearchCategory.KIT && (i = this._kits);
            break;
        case enums.SearchType.BALL:
            i = this._balls;
            break;
        case enums.SearchType.STADIUM:
            i = this._stadiums
    }
    return i ? !i.endOfList || t.year !== enums.SearchType.ANY && t.year !== utils.TextUtils.getYearString(enums.Year.ASSET) ? ((s = t.type === enums.SearchType.CONSUMABLES_DEVELOPMENT || t.type === enums.SearchType.CONSUMABLES_TRAINING ? new communication.ClubConsumableSearchDelegate : new communication.ClubSearchDelegate(t, t.offset, t.count)).addListener(communication.BaseDelegate.SUCCESS, this, function _onClubSearchSuccess(sender, response) {
        sender.clearListenersByScope(this);
        var s = Array.isArray(response.itemData) ? factories.Item.generateItemsFromItemData(response.itemData) : [],
            l = s.length <= t.count - 1, u = t.type === enums.SearchType.CONSUMABLES_DEVELOPMENT,
            h = !t.isModified(!0) && (t.category === enums.SearchType.ANY || t.type === enums.SearchType.CLUB_INFO);
        if (i.endOfList = u || l && h, o.success = !0, o.items = s, o.retrievedAll = l, s.length > 0) if (t.year === enums.SearchType.ANY || t.year === utils.TextUtils.getYearString(enums.Year.ASSET)) this.add(s); else if (t.type === enums.SearchType.PLAYER) return void function _loadStaticData() {
            function _onStaticLoadComplete(i, data) {
                i.unobserve(this), ++t >= s.length && event.notify(o)
            }

            var t = 0;
            s.forEach(function (t) {
                t.loadStaticData().observe(this, _onStaticLoadComplete)
            })
        }();
        event.notify(o)
    }), s.addListener(communication.BaseDelegate.FAIL, this, function _onClubSearchFail(sender, error) {
        sender.clearListenersByScope(this), o.error = error, event.notify(o)
    }), s.setImportant(!0), s.useClickShield(!0), s.send()) : (o.success = !0, o.items = i.search(t), event.notify(o)) : (utils.Debug.Assert(!1, "[ClubRepository::search] Invalid search, no repository associated to it."), event.notify(o)), event
},ClubRepository.prototype.getStats = function getStats() {
    var event = new UTObservable, t = new transferobjects.ServiceResponse;
    if (this._players.isCountSet() && this._staff.isCountSet() && this._kits.isCountSet() && this._balls.isCountSet() && this._stadiums.isCountSet()) {
        var i = new transferobjects.ClubStat({type: enums.ClubItemType.PLAYERS, typeValue: this._players.count}),
            s = new transferobjects.ClubStat({type: enums.ClubItemType.STAFF, typeValue: this._staff.count}),
            o = new transferobjects.ClubStat({type: enums.ClubItemType.KITS, typeValue: this._kits.count}),
            l = new transferobjects.ClubStat({type: enums.ClubItemType.BALLS, typeValue: this._balls.count}),
            u = new transferobjects.ClubStat({type: enums.ClubItemType.STADIA, typeValue: this._stadiums.count});
        t.success = !0, t.status = enums.HTTPStatusCode.OK, t.data = {stats: [i, s, o, l, u]}, event.notify(t)
    } else accessobjects.Club.getStats(services.Authentication).observe(this, function _onGetStatsComplete(i, s) {
        i.unobserve(this), t.success = s.success, t.status = s.status, t.data = {stats: []}, s.response.stats.forEach(function (i) {
            var s;
            switch (i.type) {
                case enums.ClubItemType.PLAYERS:
                    s = this._players;
                    break;
                case enums.ClubItemType.STAFF:
                    s = this._staff;
                    break;
                case enums.ClubItemType.KITS:
                    s = this._kits;
                    break;
                case enums.ClubItemType.BALLS:
                    s = this._balls;
                    break;
                case enums.ClubItemType.STADIA:
                    s = this._stadiums
            }
            s && (s.count = i.count, t.data.stats.push(i))
        }, this), event.notify(t)
    });
    return event
},NamespaceManager.Register("transferobjects"),
transferobjects.ItemDomainResponse = function (data) {
    this.success = !!data && data.success, this.error = data ? data.error : null, this.items = data ? data.items : [], this.retrievedAll = !data || data.retrievedAll
},NamespaceManager.Register("transferobjects"),transferobjects.StaticPlayerData = function (data) {
    this.id = data.id, Object.defineProperty(this, "id", {writable: !1}), this.firstName = data.f, Object.defineProperty(this, "firstName", {writable: !1}), this.lastName = data.l, Object.defineProperty(this, "lastName", {writable: !1}), this.commonName = data.c || null, Object.defineProperty(this, "commonName", {writable: !1}), this.name = "", Object.defineProperty(this, "name", {
        get: function () {
            return this.commonName || this.firstName + " " + this.lastName
        }
    }), this.rating = data.r, Object.defineProperty(this, "rating", {writable: !1}), this.nationId = data.n, Object.defineProperty(this, "nationId", {writable: !1})
},NamespaceManager.Register("repositories"),repositories.Item = function () {
    function ItemDomainRepository() {
        var t;
        Object.defineProperty(this, "cachedDurationIndex", {
            get: function () {
                return t
            }, set: function (index) {
                utils.JS.isNumber(index) && (t = index)
            }
        }), this._pileSizes = new UTHashTable({}), this._unassigned = new UTItemRepository, this._transfer = new UTItemRepository, this._inbox = new UTItemRepository, this._club = new ClubRepository, this.cachedDurationIndex = 0, this._pileSizes.set(enums.FUTItemPile.PURCHASED, 5), this._pileSizes.set(enums.FUTItemPile.TRANSFER, 30), this._pileSizes.set(enums.FUTItemPile.INBOX, 30)
    }

    var t = new UTHashTable({});
    return ItemDomainRepository.prototype.reset = function reset() {
        this._unassigned.reset(), this._transfer.reset(), this._inbox.reset(), this._club.reset()
    }, ItemDomainRepository.prototype.setCacheTimestamp = function setCacheTimestamp(t, timestamp, i) {
        switch (t) {
            case enums.FUTItemPile.PURCHASED:
                this._unassigned.setCacheTimestamp(timestamp, i);
                break;
            case enums.FUTItemPile.TRANSFER:
                this._transfer.setCacheTimestamp(timestamp, i);
                break;
            case enums.FUTItemPile.INBOX:
                this._inbox.setCacheTimestamp(timestamp, i)
        }
    }, ItemDomainRepository.prototype.setDirty = function setDirty(t) {
        utils.JS.isValid(t) ? this.setCacheTimestamp(t, 0, 0) : (this._unassigned.setCacheTimestamp(0, 0), this._transfer.setCacheTimestamp(0, 0), this._inbox.setCacheTimestamp(0, 0))
    }, ItemDomainRepository.prototype.isDirty = function isDirty(t) {
        switch (t) {
            case enums.FUTItemPile.PURCHASED:
                return this._unassigned.isCacheExpired();
            case enums.FUTItemPile.TRANSFER:
                return this._transfer.isCacheExpired();
            case enums.FUTItemPile.INBOX:
                return this._inbox.isCacheExpired()
        }
        return !0
    }, ItemDomainRepository.prototype.setPileSize = function setPileSize(t, size) {
        this._pileSizes.set(t, size)
    }, ItemDomainRepository.prototype.getPileSize = function getPileSize(t) {
        return utils.Debug.Assert(this._pileSizes.has(t), "[ItemDomainRepository::getPileSize] Unsupported pile requested."), this._pileSizes.get(t) || 0
    }, ItemDomainRepository.prototype.isPileFull = function isPileFull(t) {
        var i = 0, s = this._pileSizes.has(t) ? this._pileSizes.get(t) : 0;
        switch (t) {
            case enums.FUTItemPile.PURCHASED:
                i = this._unassigned.length;
                break;
            case enums.FUTItemPile.TRANSFER:
                i = this._transfer.length;
                break;
            case enums.FUTItemPile.INBOX:
                i = this._inbox.length;
                break;
            case enums.FUTItemPile.CLUB:
                return !1
        }
        return i >= s
    }, ItemDomainRepository.prototype.numItemsInCache = function numItemsInCache(t) {
        switch (t) {
            case enums.FUTItemPile.PURCHASED:
                return this._unassigned.length;
            case enums.FUTItemPile.TRANSFER:
                return this._transfer.length;
            case enums.FUTItemPile.INBOX:
                return this._inbox.length;
            default:
                return utils.Debug.Assert(!1, "Unsupported item pile: " + t), 0
        }
    }, ItemDomainRepository.prototype.hasStaticData = function hasStaticData() {
        return t.length > 0
    }, ItemDomainRepository.prototype.setStaticData = function setStaticData(data) {
        t.clear(), data.forEach(function (d) {
            var i = new transferobjects.StaticPlayerData(d);
            t.set(i.id, i)
        })
    }, ItemDomainRepository.prototype.getStaticDataByDefId = function getStaticDataByDefId(i) {
        return t.get(i)
    }, ItemDomainRepository.prototype.getStaticData = function getStaticData() {
        return t.values()
    },
        ItemDomainRepository.prototype.getWatchedItems = function getWatchedItems() {
            return this._inbox.values()
        }, ItemDomainRepository.prototype.setWatchedItems = function setWatchedItems(t) {
        this._inbox.clear(), t.forEach(function (item) {
            this._inbox.set(item.id, item)
        }, this), this._inbox.endOfList = !0
    }, ItemDomainRepository.prototype.getTransferItems = function getTransferItems() {
        return this._transfer.values()
    }, ItemDomainRepository.prototype.setTransferItems = function setTransferItems(t) {
        this._transfer.clear(), t.forEach(function (item) {
            this._transfer.set(item.id, item)
        }, this), this._transfer.endOfList = !0
    }, ItemDomainRepository.prototype.getUnassignedItems = function getUnassignedItems() {
        return this._unassigned.values()
    }, ItemDomainRepository.prototype.setUnassignedItems = function setUnassignedItems(t) {
        this._unassigned.clear(), t.forEach(function (item) {
            this._unassigned.set(item.id, item)
        }, this), this._unassigned.endOfList = !0
    }, ItemDomainRepository.prototype.setActiveItem = function setActiveItem(item) {
        this._club.setActiveItem(item)
    }, ItemDomainRepository.prototype.getActiveItems = function getActiveItems(state) {
        return this._club.getActiveItems(state)
    }, ItemDomainRepository.prototype.getClubItems = function getClubItems(t) {
        var event = new UTObservable;
        return this._club.search(t).observe(this, function _onClubSearchComplete(t, data) {
            t.unobserve(this), event.notify(data)
        }), event
    }, ItemDomainRepository.prototype.getClubStats = function getClubStats() {
        var event = new UTObservable;
        return this._club.getStats().observe(this, function _onClubStatsComplete(t, data) {
            t.unobserve(this), event.notify(data)
        }), event
    }, ItemDomainRepository.prototype.add = function add(t) {
        function _add(item) {
            var t = item.getAuctionData();
            if (t.watched && !t.tradeOwner) {
                if (this.isPileFull(enums.FUTItemPile.INBOX)) return;
                this._inbox.set(item.id, item)
            } else {
                if (this.isPileFull(item.pile)) return;
                switch (item.pile) {
                    case enums.FUTItemPile.PURCHASED:
                        this._unassigned.set(item.id, item);
                        break;
                    case enums.FUTItemPile.TRANSFER:
                        this._transfer.set(item.id, item);
                        break;
                    case enums.FUTItemPile.INBOX:
                        this._inbox.set(item.id, item);
                        break;
                    case enums.FUTItemPile.CLUB:
                        this._club.add(item)
                }
            }
            i.push(item)
        }

        var i = [];
        return Array.isArray(t) ? t.forEach(_add, this) : _add.call(this, t), i
    }, ItemDomainRepository.prototype.remove = function remove(t) {
        function _remove(item) {
            var t = item.getAuctionData();
            if (!t.watched || t.tradeOwner) switch (item.pile) {
                case enums.FUTItemPile.PURCHASED:
                    this._unassigned.remove(item.id);
                    break;
                case enums.FUTItemPile.TRANSFER:
                    this._transfer.remove(item.id);
                    break;
                case enums.FUTItemPile.INBOX:
                    this._inbox.remove(item.id);
                    break;
                case enums.FUTItemPile.CLUB:
                    this._club.remove(item)
            } else this._inbox.remove(item.id)
        }

        Array.isArray(t) ? t.forEach(_remove, this) : _remove.call(this, t)
    }, ItemDomainRepository.prototype.update = function update(t) {
        function _update(item) {
            switch (item.pile) {
                case enums.FUTItemPile.CLUB:
                    this._club.update(item);
                    break;
                default:
                    utils.Debug.Assert(!1, "ItemDomainRepository::update. This pile does not support updating items.")
            }
        }

        Array.isArray(t) ? t.forEach(_update, this) : _update.call(this, t)
    }, new ItemDomainRepository
}(),communication.DailyGiftDelegate = function () {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "activeMessage", this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.DailyGiftDelegate, communication.BaseFUTDelegate),communication.FETMessagesDelegate = function (t) {
    communication.BaseFUTDelegate.call(this);
    var screen = isWeb() ? enums.ArubaScreenId.WEB_HUB : enums.ArubaScreenId.COMPANION_HUB;
    this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "message/list/template?nucPersId=" + t + "&screen=" + screen, this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.FETMessagesDelegate, communication.BaseFUTDelegate),communication.LiveMessagesDelegate = function (t) {
    communication.BaseFUTDelegate.call(this);
    var i, s, screen = isWeb() ? enums.ArubaScreenId.WEB_LIVE : enums.ArubaScreenId.COMPANION_LIVE,
        url = communication.BaseFUTDelegate.REQUEST_ROOT + "livemessage";
    utils.JS.isNumber(t) ? (url += "?screen=" + screen, i = enums.HTTPRequestMethod.PUT, s = models.CommunicationModel.RESPONSE.EMPTY, this.setData({idList: [t]})) : (url += "/template?screen=" + screen, i = enums.HTTPRequestMethod.GET, s = models.CommunicationModel.RESPONSE.TEXT_JSON), this.setRequest(url, i, s, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.LiveMessagesDelegate, communication.BaseFUTDelegate),NamespaceManager.Register("transferobjects"),transferobjects.ArubaTextField = function ArubaTextFieldDTO(text, t) {
    this.text = text || "", Object.defineProperty(this, "text", {writable: !1}), this.colour = t || "", Object.defineProperty(this, "colour", {writable: !1})
},NamespaceManager.Register("entities"),entities.ArubaMessage = function UTArubaMessage(data) {
    this.id = data.messageId || -1, Object.defineProperty(this, "id", {writable: !1}), this.screen = data.screen || "", Object.defineProperty(this, "screen", {writable: !1}), this.trackingTag = data.trackingTag || "", Object.defineProperty(this, "trackingTag", {writable: !1}), this.priority = data.priority || -1, Object.defineProperty(this, "priority", {writable: !1}), this.goToLink = data.tmtLink ? data.tmtLink.toLowerCase() : "", Object.defineProperty(this, "goToLink", {writable: !1}), this.durationInSec = data.displayTime || 5, Object.defineProperty(this, "durationInSec", {writable: !1}), this.countdownKeys = [], Object.defineProperty(this, "countdownMessages", {writable: !1}), this.countdownTimestamps = [], Object.defineProperty(this, "countdownTimestamps", {writable: !1});
    var t = "", i = "", text = "", s = "", o = "", l = "", u = "", h = "", p = "", m = "";
    utils.JS.valToArray(data.renders).forEach(function (_) {
        "TEXT" !== _.type || utils.JS.isEmpty(_.value) ? "IMAGE" === _.type && (_.name === enums.ArubaImageType.BODY ? p = _.value || "" : _.name === enums.ArubaImageType.BACKGROUND && (m = _.value || "")) : _.name === enums.ArubaTextFieldType.TITLE ? (t = this._replaceKeys(_.value), _.attributes && _.attributes.colour && (o = this._convertToHex(_.attributes.colour))) : _.name === enums.ArubaTextFieldType.BODY ? (text = utils.TextUtils.nltobr(this._replaceKeys(_.value)), _.attributes && _.attributes.colour && (u = this._convertToHex(_.attributes.colour))) : _.name === enums.ArubaTextFieldType.SUBTITLE ? (i = utils.TextUtils.nltobr(this._replaceKeys(_.value)), _.attributes && _.attributes.colour && (l = this._convertToHex(_.attributes.colour))) : _.name === enums.ArubaTextFieldType.INFO && (s = utils.TextUtils.nltobr(this._replaceKeys(_.value)), _.attributes && _.attributes.colour && (h = this._convertToHex(_.attributes.colour)))
    }, this), this.textFields = new UTHashTable({}), Object.defineProperty(this, "textFields", {writable: !1}), this.textFields.set(enums.ArubaTextFieldType.TITLE, new transferobjects.ArubaTextField(t, o)), this.textFields.set(enums.ArubaTextFieldType.BODY, new transferobjects.ArubaTextField(text, u)), utils.JS.isEmpty(i) || this.textFields.set(enums.ArubaTextFieldType.SUBTITLE, new transferobjects.ArubaTextField(i, l)), utils.JS.isEmpty(s) || this.textFields.set(enums.ArubaTextFieldType.INFO, new transferobjects.ArubaTextField(s, h)), this.images = new UTHashTable({}), Object.defineProperty(this, "images", {writable: !1}), utils.JS.isEmpty(p) || this.images.set(enums.ArubaImageType.BODY, p), utils.JS.isEmpty(m) || this.images.set(enums.ArubaImageType.BACKGROUND, m), this._retrieveCountdowns()
},entities.ArubaMessage.prototype.hasCountdownKeys = function hasCountdownKeys() {
    return this.countdownKeys.length > 0 && this.countdownTimestamps.length > 0
},entities.ArubaMessage.prototype._convertToHex = function _convertToHex(t) {
    var i = /^[0-9a-fA-F]+$/;
    return 0 === t.indexOf("#") && i.test(t.slice(1, 7)) ? t : "#" + utils.JS.baseToBase(10, 16, t)
},entities.ArubaMessage.prototype._replaceKeys = function _replaceKeys(text) {
    var t = services.User.getUser(), i = t ? t.getSelectedPersona() : null, s = i ? i.getCurrentClub() : null,
        o = i ? i.name : "", l = s ? s.name : "";
    return text.split(enums.ArubaStringKeys.FUT_CLUB_NAME).join(l).split(enums.ArubaStringKeys.GAMERTAG).join(o)
},
entities.ArubaMessage.prototype._retrieveCountdowns = function _retrieveCountdowns() {
    for (var result = this.textFields.get(enums.ArubaTextFieldType.BODY).text, t = result.indexOf(enums.ArubaStringKeys.COUNTDOWN); t > -1;) {
        var i = result.substr(t);
        i = i.substr(0, i.indexOf("^", 1) + 1), this.countdownKeys.push(i);
        var dateTime = i.slice(0, -1).replace(enums.ArubaStringKeys.COUNTDOWN, ""), s = dateTime.substr(0, 4),
            o = parseInt(dateTime.substr(4, 2), 10) - 1, l = dateTime.substr(6, 2), u = dateTime.substr(9, 2),
            h = dateTime.substr(11, 2), p = dateTime.substr(13, 2),
            m = Math.round(new Date(s, o, l, u, h, p).getTime() / 1e3);
        this.countdownTimestamps.push(m), t = (result = result.replace(i, "")).indexOf(enums.ArubaStringKeys.COUNTDOWN)
    }
},communication.ClaimDailyGiftDelegate = function (id) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "activeMessage/" + id, this._requestType = enums.HTTPRequestMethod.DELETE, this._dataType = models.CommunicationModel.RESPONSE.EMPTY, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.ClaimDailyGiftDelegate, communication.BaseFUTDelegate),NamespaceManager.Register("entities"),entities.DailyGift = function (data) {
    this.id = data.id, Object.defineProperty(this, "id", {writable: !1}), this.rewardType = data.rewardType, Object.defineProperty(this, "rewardType", {writable: !1}), this.rewardValue = data.rewardValue, Object.defineProperty(this, "rewardValue", {writable: !1}), this.isValid = !utils.JS.isEmpty(this.rewardType) && this.rewardValue > 0, Object.defineProperty(this, "isValid", {writable: !1}), this.claimed = !1, Object.defineProperty(this, "claimed", {writable: !0})
},entities.DailyGift.prototype.claim = function () {
    var event = new UTObservable, t = {}, i = new communication.ClaimDailyGiftDelegate(this.id);
    return i.addListener(communication.BaseDelegate.SUCCESS, this, function claimSuccess(sender, response) {
        sender.clearListenersByScope(this), "coin" === this.rewardType && services.User.requestCurrencies(), this.claimed = !0, t.rewardType = this.rewardType, t.claimed = this.claimed, event.notify(!0, t)
    }), i.addListener(communication.BaseDelegate.FAIL, this, function claimFail(sender, error) {
        sender.clearListenersByScope(this), t.rewardType = this.rewardType, t.claimed = this.claimed, NetworkErrorManager.handle(error, !0, function () {
            event.notify(!1, t, error.getCode())
        }.bind(this))
    }), i.send(), event
},NamespaceManager.Register("repositories"),repositories.Message = function () {
    function MessageRepository() {
        var t;
        Object.defineProperty(this, "dailyGift", {
            get: function () {
                return t
            }, set: function (i) {
                null === i || i instanceof entities.DailyGift ? t = i : utils.Debug.Assert(!1, "[repositories.Message] Invalid daily gift object")
            }
        }), this.dailyGift = null, this._cacheExpiration = {}
    }

    return MessageRepository.prototype.reset = function reset() {
        this.dailyGift = null, this._cacheExpiration = {}
    }, MessageRepository.prototype.setDailyGift = function setDailyGift(t) {
        this.dailyGift = new entities.DailyGift(t), this._cacheExpiration.getDailyGift = Date.now() + 36e5
    }, MessageRepository.prototype.getLiveMessages = function getLiveMessages() {
        var event = new UTObservable, t = {messages: [], promoCoins: !1, promoItems: !1};
        if (!gSettingsModel.isServiceAvailable(models.SettingsModel.LIVE_MESSAGING_ENABLED) || utils.JS.isValid(this._cacheExpiration.getLiveMessages) && this._cacheExpiration.getLiveMessages > Date.now()) return event.notify(t), event;
        var i = new communication.LiveMessagesDelegate;
        return i.setImportant(!0), i.useClickShield(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, function getLiveMessagesSuccess(sender, response) {
            sender.clearListenersByScope(this), this._cacheExpiration.getLiveMessages = Date.now() + 3e5, Array.isArray(response.messageList) && (t.messages = response.messageList.map(function (message) {
                return new entities.ArubaMessage(message)
            }, this));
            var i = response.promoUpdate;
            Array.isArray(i) && i.length > 0 && (t.promoCoins = -1 !== i.indexOf("coin"), t.promoItems = -1 !== i.indexOf("item")), event.notify(t)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function getLiveMessagesFail(sender, error) {
            sender.clearListenersByScope(this),
            error.getCode() === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.LIVE_MESSAGING_ENABLED), event.notify(t)
        }), i.send(), event
    }, MessageRepository.prototype.getHubMessages = function getHubMessages(t) {
        var event = new UTObservable, i = {messages: []},
            s = new communication.FETMessagesDelegate(services.User.getUser().getSelectedPersona().id);
        return s.addListener(communication.BaseDelegate.SUCCESS, this, function getHubMessagesSuccess(sender, response) {
            sender.clearListenersByScope(this), $.isArray(response.messageList) && (i.messages = response.messageList.slice(0, t).map(function (message) {
                return new entities.ArubaMessage(message)
            })), event.notify(!0, i)
        }), s.addListener(communication.BaseDelegate.FAIL, this, function getHubMessagesFail(sender, error) {
            sender.clearListenersByScope(this), event.notify(!1, i, error.getCode())
        }), s.useClickShield(!0), s.send(), event
    }, MessageRepository.prototype.getDailyGift = function getDailyGift() {
        var event = new UTObservable, t = {dailyGift: this.dailyGift};
        if (utils.JS.isValid(this.dailyGift) && this.dailyGift.isValid && !this.dailyGift.claimed) return event.notify(!0, t), event;
        if (utils.JS.isValid(this._cacheExpiration.getDailyGift) && this._cacheExpiration.getDailyGift > Date.now()) return event.notify(!1, t), event;
        var i = new communication.DailyGiftDelegate;
        return i.addListener(communication.BaseDelegate.SUCCESS, this, function getGiftSuccess(sender, response) {
            if (sender.clearListenersByScope(this), this._cacheExpiration.getDailyGift = Date.now() + 36e5, utils.JS.isValid(response.activeMessage) && Array.isArray(response.activeMessage)) {
                var i = response.activeMessage.filter(function (t) {
                    return utils.JS.isValid(t.rewardType)
                }), s = i.length > 0 ? i[0] : null;
                utils.JS.isValid(s) ? (this.dailyGift = new entities.DailyGift(s), t.dailyGift = this.dailyGift, event.notify(!0, t)) : event.notify(!1, t)
            } else utils.Debug.Assert(utils.JS.isValid(response.activeMessage) && Array.isArray(response.activeMessage), "WARNING - Data receieved did not contain an activeMessage variable. Did the data format change?"), event.notify(!1, t)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function getGiftFail(sender, error) {
            sender.clearListenersByScope(this), this._cacheExpiration.getDailyGift = Date.now() + 6e5, utils.Debug.Assert(!1, "Failed to retrieve daily gift data"), event.notify(!1, t)
        }), i.useClickShield(!0), i.send(), event
    }, MessageRepository.prototype.markAsRead = function markAsRead(t) {
        if (gSettingsModel.isServiceAvailable(models.SettingsModel.LIVE_MESSAGING_ENABLED)) {
            var i = new communication.LiveMessagesDelegate(t.id);
            i.addListener(communication.BaseDelegate.SUCCESS, this, function markAsReadSuccess(sender, response) {
                sender.clearListenersByScope(this)
            }), i.addListener(communication.BaseDelegate.FAIL, this, function markAsReadFail(sender, error) {
                sender.clearListenersByScope(this), error.getCode() === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.LIVE_MESSAGING_ENABLED)
            }), i.send()
        }
    }, new MessageRepository
}(),NamespaceManager.Register("transferobjects"),transferobjects.PlayStyle = function PlayStyleDTO(data) {
    this.statBonus = data.statBonus || [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], Object.defineProperty(this, "statBonus", {
        writable: !1,
        enumerable: !0
    }), this.style = data.style || 0, Object.defineProperty(this, "style", {
        writable: !1,
        enumerable: !0
    }), this.styleId = data.styleId || 0, Object.defineProperty(this, "styleId", {
        writable: !1,
        enumerable: !0
    }), this.styleType = data.styleType || 0, Object.defineProperty(this, "styleType", {writable: !1, enumerable: !0})
},NamespaceManager.Register("repositories"),repositories.PlayStyle = function () {
    function PlayStyleRepository() {
        this._playstyles = new UTHashTable({}), Object.defineProperty(this, "_playstyles", {
            writable: !1,
            enumerable: !1
        })
    }

    return PlayStyleRepository.prototype.setPlayStyles = function setPlayStyles(data) {
        data.forEach(function (t) {
            var i = new transferobjects.PlayStyle(t);
            this._playstyles.set(i.styleId, i)
        }, this)
    }, PlayStyleRepository.prototype.getPlayStyles = function getPlayStyles() {
        return this._playstyles.values()
    },
        PlayStyleRepository.prototype.getPlayStyleById = function getPlayStyleById(id) {
            return this._playstyles.get(id)
        }, PlayStyleRepository.prototype.getPlayStyleBonusById = function getPlayStyleBonusById(id, t) {
        var i = this.getPlayStyleById(id);
        return i ? t ? i.statBonus.slice(6) : i.statBonus.slice(0, 6) : [0, 0, 0, 0, 0, 0]
    }, new PlayStyleRepository
}(),NamespaceManager.Register("repositories"),repositories.Rarity = function () {
    function UTItemRarityRepository() {
        UTHashTable.call(this, {}), this._expiryTimestamp = 0
    }

    return utils.JS.inherits(UTItemRarityRepository, UTHashTable), UTItemRarityRepository.prototype.add = function add(t, i) {
        this.has(i) || this.set(i, new UTHashTable({}));
        var s = this.get(i);
        Array.isArray(t) ? t.forEach(function (r) {
            s.set(r.id, r)
        }) : s.set(t.id, t)
    }, UTItemRarityRepository.prototype.getRarity = function getRarity(id, t) {
        t = t || enums.Year.ASSET;
        var i = this.get(t);
        return utils.Debug.Assert(utils.JS.isValid(i), "Rarity asset year not found: " + t), i && i.has(id) ? i.get(id) : new UTItemRarityDTO
    }, UTItemRarityRepository.prototype.yearValues = function yearValues(t) {
        var i = this.get(t);
        return i ? i.values() : []
    }, UTItemRarityRepository.prototype.isCacheExpired = function isCacheExpired() {
        return this._expiryTimestamp < Date.now()
    }, UTItemRarityRepository.prototype.isEmpty = function isEmpty() {
        return this.length < 1
    }, UTItemRarityRepository.prototype.isYearEmpty = function isYearEmpty(t) {
        var i = this.get(t);
        return !i || i.length < 1
    }, UTItemRarityRepository.prototype.reset = function reset() {
        this.clear(), this._expiryTimestamp = 0
    }, UTItemRarityRepository.prototype.resetYear = function resetYear(t) {
        var i = this.get(t);
        i && i.clear(), t === enums.Year.ASSET && (this._expiryTimestamp = 0)
    }, UTItemRarityRepository.prototype.setCacheTimestamp = function setCacheTimestamp(timestamp, t) {
        this._expiryTimestamp = timestamp + (utils.JS.isNumber(t) ? t * MS_PER_SECOND : 36e5)
    }, new UTItemRarityRepository
}(),communication.SBCSetsDelegate = function () {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "sbs/sets", this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.SBCSetsDelegate, communication.BaseFUTDelegate),communication.SBCSetsDelegate.prototype.onFail = function (errorCode) {
    errorCode === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), communication.SBCSetsDelegate.superClass_.onFail.call(this, errorCode)
},communication.SBCTagSetsDelegate = function (t, tag) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "sbs/sets/tag", this._requestType = enums.HTTPRequestMethod.PUT, this._dataType = models.CommunicationModel.RESPONSE.NONE, this._contentType = enums.HTTPContentType.JSON;
    var data = {};
    data.sets = [{setId: t, tagged: tag}], this.setData(data)
},utils.JS.inherits(communication.SBCTagSetsDelegate, communication.BaseFUTDelegate),communication.SBCTagSetsDelegate.prototype.onFail = function (errorCode) {
    errorCode === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), communication.SBCTagSetsDelegate.superClass_.onFail.call(this, errorCode)
},communication.SBCChallengesDelegate = function (t) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "sbs/setId/" + t + "/challenges", this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.SBCChallengesDelegate, communication.BaseFUTDelegate),communication.SBCChallengesDelegate.prototype.onFail = function (errorCode) {
    errorCode === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), communication.SBCChallengesDelegate.superClass_.onFail.call(this, errorCode)
},communication.SBCSubmitChallengeDelegate = function (t) {
    communication.BaseFUTDelegate.call(this),
        this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "sbs/challenge/" + t, this._requestType = enums.HTTPRequestMethod.PUT, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.SBCSubmitChallengeDelegate, communication.BaseFUTDelegate),communication.SBCSubmitChallengeDelegate.prototype.onFail = function (errorCode) {
    errorCode === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), communication.SBCSubmitChallengeDelegate.superClass_.onFail.call(this, errorCode)
},NamespaceManager.Register("transferobjects"),transferobjects.SBCEligibility = function (t) {
    this.kvPairs = new UTHashTable({}), this.count = -1, this.scope = -1, this.isCombinedRequirement = !1, Object.defineProperty(this, "isCombinedRequirement", {
        get: function () {
            return this.kvPairs.length > 1
        }, enumerable: !0
    }), t.forEach(function (data) {
        switch (data.eligibilityKey) {
            case enums.SBC.ELG_KEY.FUT_ELGRULE_SCOPE:
                this.scope = data.eligibilityValue;
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_COUNT:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_COUNT_COMBINED:
                this.count = data.eligibilityValue;
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_STAR_RATING:
                this.kvPairs.set(data.eligibilityKey, [data.eligibilityValue / 2]);
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_CHEMISTRY:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_RATING:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_ID:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_ID:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_ID:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_LEVEL:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_RARITY:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_QUALITY:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_NATION_COUNT:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_LEAGUE_COUNT:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_CLUB_COUNT:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_COUNT:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_COUNT:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_COUNT:
            case enums.SBC.ELG_KEY.FUT_ELGRULE_LEGEND_COUNT:
                var t = data.eligibilityValue;
                this.kvPairs.set(data.eligibilityKey, utils.JS.valToArray(t));
                break;
            default:
                utils.Debug.Assert(!1, "Reached default case: " + data.eligibilityKey)
        }
    }, this), Object.defineProperty(this, "kvPairs", {
        writable: !1,
        enumerable: !0
    }), Object.defineProperty(this, "count", {
        writable: !1,
        enumerable: !0
    }), Object.defineProperty(this, "scope", {writable: !1, enumerable: !0})
},transferobjects.SBCEligibility.prototype.getValue = function getValue(key) {
    return this.kvPairs.has(key) ? this.kvPairs.get(key) : [-1]
},transferobjects.SBCEligibility.prototype.getFirstKey = function getFirstKey() {
    return this.kvPairs.length > 0 ? parseInt(this.kvPairs.keys()[0], 10) : (utils.Debug.Assert(!1, "transferobjects.SBCEligibility::getFirstKey. Requirement is empty or invalid."), -1)
},transferobjects.SBCEligibility.prototype.getFirstValue = function getFirstValue(key) {
    return this.kvPairs.has(key) ? this.kvPairs.get(key)[0] : -1
},transferobjects.SBCEligibility.prototype.buildString = function buildString() {
    function createStringFromValues(t, i) {
        if (value.length > 1) {
            var s = "";
            return value.forEach(function (o, l) {
                s += utils.JS.isValid(i) ? t.call(this, i + o) : t.call(this, o), s += l < value.length - 1 ? " " + services.Localization.localize("label.general.or").toUpperCase() + " " : ""
            }, this), s
        }
        var o = value[0];
        return utils.JS.isValid(i) ? t.call(this, i + o) : t.call(this, o)
    }

    var text = "", substring = "sbc.requirements.", t = "scope" + this.scope, key = this.getFirstKey(),
        value = this.getValue(key), count = this.count,
        i = 1 === count ? substring + "player." + t : substring + "players." + t;
    if (this.isCombinedRequirement) {
        var s = [];
        this.kvPairs.keys().forEach(function (t) {
            switch (t = parseInt(t, 10), value = this.getValue(t), t) {
                case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_ID:
                    s.push(createStringFromValues.call(this, utils.FUTLocalization.getNationNameById));
                    break;
                case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_ID:
                    s.push(createStringFromValues.call(this, utils.FUTLocalization.getLeagueNameByID));
                    break;
                case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_ID:
                    s.push(createStringFromValues.call(this, utils.FUTLocalization.getTeamAbb15ByID));
                    break;
                default:
                    utils.Debug.Assert(!1, "[transferobjects.SBCEligibility::buildString] | Reached invalid combined case: " + t)
            }
        }, this), text = services.Localization.localize(i + ".val", [count]) + " " + s.join(" + ")
    } else switch (key) {
        case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_STAR_RATING:
            text = services.Localization.localize(substring + "team.rating." + t, value);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_RATING:
            text = services.Localization.localize(substring + "team.rating1to100." + t, value);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_CHEMISTRY:
            text = services.Localization.localize(substring + "team.chemistry." + t, value);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_QUALITY:
            text = services.Localization.localize(substring + t);
            var o = value[0];
            o === enums.SBC.ELG_QUALITY_TYPES.BRONZE ? text += " " + services.Localization.localize("packtype.bronzePlayers") : o === enums.SBC.ELG_QUALITY_TYPES.SILVER ? text += " " + services.Localization.localize("packtype.silverPlayers") : text += " " + services.Localization.localize("packtype.goldPlayers");
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_LEVEL:
            text = services.Localization.localize(substring + "rare." + t, [count]) + " " + createStringFromValues.call(services.Localization, services.Localization.localize, "search.cardLevels.cardLevel");
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_NATION_COUNT:
            text = services.Localization.localize(i, [value, services.Localization.localize(substring + "subType.nation")]);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_LEAGUE_COUNT:
            text = services.Localization.localize(i, [value, services.Localization.localize(substring + "subType.league")]);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_CLUB_COUNT:
            text = services.Localization.localize(i, [value, services.Localization.localize(substring + "subType.club")]);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_COUNT:
            text = services.Localization.localize(substring + "nations." + t, [value]);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_COUNT:
            text = services.Localization.localize(substring + "leagues." + t, [value]);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_COUNT:
            text = services.Localization.localize(substring + "clubs." + t, [value]);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_ID:
            text = services.Localization.localize(i + ".val", [count]) + " " + createStringFromValues.call(this, utils.FUTLocalization.getNationNameById);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_ID:
            text = services.Localization.localize(i + ".val", [count]) + " " + createStringFromValues.call(this, utils.FUTLocalization.getLeagueNameByID);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_ID:
            text = services.Localization.localize(i + ".val", [count]) + " " + createStringFromValues.call(this, utils.FUTLocalization.getTeamAbb15ByID);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_LEGEND_COUNT:
            i = 1 === value ? substring + "legend." + t : substring + "legends." + t, text = services.Localization.localize(i, [value]);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_RARITY:
            text = services.Localization.localize(substring + "rare." + t, [count]) + " " + createStringFromValues.call(services.Localization, services.Localization.localize, "item.raretype");
            break;
        default:
            utils.Debug.Assert(!1, "[transferobjects.SBCEligibility::buildString] | Reached default case: " + key)
    }
    return text
},NamespaceManager.Register("factories"),factories.SBC = function () {
    function SBCFactory() {
    }

    return SBCFactory.prototype.createRequirements = function (t) {
        var i, s, o = [];
        return t.forEach(function (data) {
            if (s !== data.eligibilitySlot) s = data.eligibilitySlot, (i = new UTHashTable([])).set(data.type, data), o[s] = i; else {
                var t = (i = o[s]).get(data.type);
                utils.JS.isValid(t) ? t.eligibilityValue = [].concat(t.eligibilityValue, data.eligibilityValue) : i.set(data.type, data)
            }
        }, this), o.reduce(function (t, i) {
            return utils.JS.isValid(i) && t.push(new transferobjects.SBCEligibility(i.values())), t
        }, [])
    }, new SBCFactory
}(),communication.SquadSaveDelegate = function (t) {
    communication.BaseFUTDelegate.call(this)
    ;var i = t.getType() === enums.SquadType.GENERATIONS ? enums.UserSquadId.GENERATIONS : t.getId(),
        s = t.getManager().getItem(), o = {
            id: t.getId(),
            squadName: t.getName(),
            chemistry: t.getChemistry(),
            manager: [{id: s.id, dream: s.concept}],
            formation: t.getFormation().getName(),
            players: t.getPlayers().map(function (t) {
                var item = t.getItem();
                return {index: t.getIndex(), kitNumber: t.getKitNumber(), itemData: {id: item.id, dream: item.concept}}
            })
        };
    this.setData(o), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "squad/" + i, enums.HTTPRequestMethod.PUT, models.CommunicationModel.RESPONSE.EMPTY, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.SquadSaveDelegate, communication.BaseFUTDelegate),communication.SquadSaveDelegate.prototype.onFail = function (errorCode) {
    this._networkError = this.generateDefaultNetworkError(errorCode);
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    this._networkError.isCodeValid() || (this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.activesquad.SaveFailedTitle", "popup.error.activesquad.SaveFailed")), this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
},NamespaceManager.Register("entities"),entities.SquadSlot = function (index, position) {
    this.onDataUpdated = new UTObservable, Object.defineProperty(this, "onDataUpdated", {
        writable: !1,
        enumerable: !0
    }), this._index = index, this._kitNumber = 0, this._chemistry = 0, this._item = factories.Item.createItem(), this._position = position || null, this._requirement = null, this._managerBonus = 0
},entities.SquadSlot.prototype.getIndex = function getIndex() {
    return this._index
},entities.SquadSlot.prototype.getItem = function getItem() {
    return this._item
},entities.SquadSlot.prototype.getItemData = function getItemData() {
    return this._item
},entities.SquadSlot.prototype.getKitNumber = function getKitNumber() {
    return this._kitNumber
},entities.SquadSlot.prototype.getAuctionData = function getAuctionData() {
    return this._item.getAuctionData()
},entities.SquadSlot.prototype.setItem = function setItem(item) {
    this._item && this._item.onDataUpdated.unobserve(this), this._item = item, this._item.onDataUpdated.observe(this, this._eItemDataUpdated)
},entities.SquadSlot.prototype.setKitNumber = function setKitNumber(value) {
    this._kitNumber = value
},entities.SquadSlot.prototype.getChemistry = function getChemistry() {
    return this._chemistry
},entities.SquadSlot.prototype.setChemistry = function setChemistry(value) {
    this._chemistry = Math.min(Math.max(value, 0), 10)
},entities.SquadSlot.prototype.setPosition = function setPosition(position) {
    this._position = position
},entities.SquadSlot.prototype.getGeneralPosition = function getGeneralPosition() {
    return this._position ? this._position.getTypeId() : -1
},entities.SquadSlot.prototype.getUniquePosition = function getUniquePosition() {
    return this._position ? this._position.getId() : -1
},entities.SquadSlot.prototype.getGeneralPositionName = function getGeneralPositionName() {
    return this._position ? this._position.getTypeName() : ""
},entities.SquadSlot.prototype.getUniquePositionName = function getUniquePositionName() {
    return this._position ? this._position.getName() : ""
},entities.SquadSlot.prototype.setRequirement = function setRequirement(t) {
    this._requirement = t
},entities.SquadSlot.prototype.getRequirement = function getRequirement() {
    return this._requirement
},entities.SquadSlot.prototype.getManagerBonus = function getManagerBonus() {
    return this._managerBonus
},entities.SquadSlot.prototype.setManagerBonus = function setManagerBonus(t) {
    this._managerBonus = t
},entities.SquadSlot.prototype.getPositionBonus = function getPositionBonus() {
    return this._position && this._item && (this._item.isValid() || this.isCustomBrick()) ? this._position.getBonus(this._item.preferredPosition) : 0
},entities.SquadSlot.prototype.hasChemistry = function hasChemistry() {
    return this._chemistry.get() > 0
},entities.SquadSlot.prototype.isBrick = function isBrick() {
    return this.isRegularBrick() || this.isCustomBrick()
},entities.SquadSlot.prototype.isRegularBrick = function isRegularBrick() {
    return !!this._requirement && this._requirement.isRegularBrickType()
},
entities.SquadSlot.prototype.isCustomBrick = function isCustomBrick() {
    return !!this._requirement && this._requirement.isCustomBrickType()
},entities.SquadSlot.prototype.isValid = function isValid() {
    return !!this._item && this._item.isValid()
},entities.SquadSlot.prototype.compareTo = function compareTo(t) {
    return this.getIndex() === t.getIndex()
},entities.SquadSlot.prototype._eItemDataUpdated = function _eItemDataUpdated(t, sender, data) {
    this.onDataUpdated.notify(this, {item: sender})
},NamespaceManager.Register("entities"),entities.NullSquadSlot = function FUTNullSquadSlot() {
    entities.SquadSlot.call(this, -1, null)
},utils.JS.inherits(entities.NullSquadSlot, entities.SquadSlot),entities.NullSquadSlot.prototype.getIndex = function () {
    return -1
},entities.NullSquadSlot.prototype.setItem = function (item) {
},entities.NullSquadSlot.prototype.getChemistry = function () {
    return 0
},entities.NullSquadSlot.prototype.setChemistry = function (value) {
},entities.NullSquadSlot.prototype.setPosition = function (position) {
},entities.NullSquadSlot.prototype.getGeneralPosition = function () {
    return -1
},entities.NullSquadSlot.prototype.getUniquePosition = function () {
    return -1
},entities.NullSquadSlot.prototype.getManagerBonus = function () {
    return 0
},entities.NullSquadSlot.prototype.setManagerBonus = function (t) {
},entities.NullSquadSlot.prototype.getPositionBonus = function () {
    return 0
},entities.NullSquadSlot.prototype.hasChemistry = function () {
    return !1
},entities.NullSquadSlot.prototype.compareTo = function (t) {
    return !1
},NamespaceManager.Register("transferobjects"),transferobjects.SBCPlayerRequirement = function (data) {
    this.index = data.index, Object.defineProperty(this, "index", {writable: !1});
    var t;
    Object.defineProperty(this, "playerType", {
        get: function () {
            return t
        }, set: function (i) {
            var key;
            for (key in enums.SBC.PLAYER_TYPE) if (enums.SBC.PLAYER_TYPE.hasOwnProperty(key) && enums.SBC.PLAYER_TYPE[key] === i) return void(t = i);
            utils.Debug.Assert(!1, "Invalid playerType assignment to transferobjects.SBCPlayerRequirement")
        }
    }), this.playerType = data.playerType, this.elgReq = data.elgReq ? factories.SBC.createRequirements(data.elgReq) : [], Object.defineProperty(this, "elgReq", {writable: !1})
},transferobjects.SBCPlayerRequirement.prototype.isRegularBrickType = function isRegularBrickType() {
    return this.playerType === enums.SBC.PLAYER_TYPE.BRICK
},transferobjects.SBCPlayerRequirement.prototype.isCustomBrickType = function isCustomBrickType() {
    return this.playerType === enums.SBC.PLAYER_TYPE.CUSTOM_BRICK
},NamespaceManager.Register("transferobjects"),transferobjects.SquadPosition = function (data, t) {
    this._id = data.uniqueId, this._typeId = data.typeId, this._name = data.uniqueName, this._typeName = data.typeName, this._bonusLookup = t
},transferobjects.SquadPosition.prototype.getId = function () {
    return this._id
},transferobjects.SquadPosition.prototype.getTypeId = function () {
    return this._typeId
},transferobjects.SquadPosition.prototype.getName = function () {
    return this._name
},transferobjects.SquadPosition.prototype.getTypeName = function () {
    return this._typeName
},transferobjects.SquadPosition.prototype.getBonus = function (t) {
    return this._bonusLookup[t] || 0
},NamespaceManager.Register("transferobjects"),transferobjects.SquadLink = function (data) {
    this._posA = data.a, this._posB = data.b
},transferobjects.SquadLink.prototype.getPositionA = function () {
    return this._posA
},transferobjects.SquadLink.prototype.getPositionB = function () {
    return this._posB
},transferobjects.SquadLink.prototype.containsPosition = function (t) {
    return t === this._posA || t === this._posB
},transferobjects.SquadLink.prototype.getLinkedPosition = function (t) {
    return utils.Debug.Assert(this.containsPosition(t), "[SquadLink::getLinkedPosition] Provided position not associated with chemistry link."), t === this._posA ? this._posB : this._posA
},NamespaceManager.Register("transferobjects"),transferobjects.SquadFormation = function (t, i, s, o) {
    this._id = t.id, this._name = t.name, this._displayName = services.Localization.localize("global.formation." + t.name), this._teamBonus = i, this._positions = o, this.generalPositions = t.generalPositionSlots, Object.defineProperty(this, "generalPositions", {
        writable: !1
    }), this.uniquePositions = t.uniquePositionSlots, Object.defineProperty(this, "uniquePositions", {writable: !1}), this._links = s
},transferobjects.SquadFormation.prototype.getId = function () {
    return this._id
},transferobjects.SquadFormation.prototype.getName = function () {
    return this._name
},transferobjects.SquadFormation.prototype.getDisplayName = function () {
    return this._displayName
},transferobjects.SquadFormation.prototype.getPositions = function () {
    return this._positions
},transferobjects.SquadFormation.prototype.getPosition = function (index) {
    return this._positions[index] || null
},transferobjects.SquadFormation.prototype.getLinks = function () {
    return this._links
},transferobjects.SquadFormation.prototype.getTeamBonus = function (index) {
    return this._teamBonus[index] || 0
},NamespaceManager.Register("transferobjects"),transferobjects.SquadChemistryLink = function (t, i, s, o) {
    this._posA = t, this._posB = i, this._chemistry = s, this._isValid = o
},transferobjects.SquadChemistryLink.prototype.getPositionA = function () {
    return this._posA
},transferobjects.SquadChemistryLink.prototype.getPositionB = function () {
    return this._posB
},transferobjects.SquadChemistryLink.prototype.getChemistry = function () {
    return this._chemistry
},transferobjects.SquadChemistryLink.prototype.isValid = function () {
    return this._isValid
},NamespaceManager.Register("interfaces"),interfaces.SquadSaveDelegate = function ISquadSaveDelegate() {
},interfaces.SquadSaveDelegate.prototype.save = function save(t) {
},NamespaceManager.Register("entities"),entities.Squad = function FUTSquad() {
    this.onDataUpdated = new UTObservable, Object.defineProperty(this, "onDataUpdated", {
        writable: !1,
        enumerable: !0
    }), this._owner = 0, this._id = -1, this._captain = 0, this._name = "", this._formation = null, this._rating = 0, this._chemistry = 0, this._manager = new entities.NullSquadSlot, this._players = [], this._chemistryLinks = [], this._type = enums.SquadType.REGULAR, this._valid = !1, this._isTOTW = !1, this._isSBC = !1, this._isShowOff = !1, this._timestamp = 0, this._modified = !1, this.simpleBrickIndices = [], this.customBrickIndices = [], this._squadSaveDelegate = null
},entities.Squad.TOTAL_PLAYERS_AND_MANAGER = 24,entities.Squad.TOTAL_PLAYERS = 23,entities.Squad.FIELD_PLAYERS = 11,entities.Squad.SUB_PLAYERS = 7,entities.Squad.RESERVE_PLAYERS = 5,entities.Squad.MANAGER_SLOT_INDEX = 23,entities.Squad.NATION_BONUS = 3,entities.Squad.LEAGUE_BONUS = 3,entities.Squad.CLUB_BONUS = 3,entities.Squad.MANAGER_BONUS = 1,entities.Squad.GENERATIONS_ID = 100,entities.Squad.GENERATIONS_NAME = "Generations",entities.Squad.prototype.save = function save() {
    function _onSuccessEvent() {
        this.setCacheTimestamp(Date.now()), this._modified = !1, t.success = !0, event.notify(t), getDefaultDispatcher().notify(enums.Notification.SQUAD_SAVE, this)
    }

    var event = new UTObservable, t = {success: !1, error: null};
    if (this._squadSaveDelegate) this._squadSaveDelegate.save(this).observe(this, function _onSquadSaveDelegateComplete(i, s, data, errorCode) {
        i.unobserve(this), s ? _onSuccessEvent.call(this) : (t.error = errorCode, event.notify(t))
    }); else {
        var i = new communication.SquadSaveDelegate(this);
        i.setImportant(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, function _onSaveSuccess(sender) {
            sender.clearListenersByScope(this), _onSuccessEvent.call(this)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function _onSaveFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                t.error = error.getCode(), event.notify(t)
            }.bind(this))
        }), i.send()
    }
    return event
},entities.Squad.prototype.setCacheTimestamp = function setCacheTimestamp(timestamp) {
    this._timestamp = timestamp
},entities.Squad.prototype.getOwner = function getOwner() {
    return this._owner
},entities.Squad.prototype.getId = function getId() {
    return this._id
},entities.Squad.prototype.getCaptain = function getCaptain() {
    return this._captain
},entities.Squad.prototype.getManager = function getManager() {
    return this._manager
},entities.Squad.prototype.getPlayer = function getPlayer(t) {
    return utils.Debug.Assert(this._isValidPlayerSlot(t), "[Squad::getPlayer] Invalid slot value provided."), this.getSlot(t)
},
entities.Squad.prototype.getPlayers = function getPlayers() {
    return this._players
},entities.Squad.prototype.getFieldPlayers = function getFieldPlayers() {
    return this._players.slice(0, entities.Squad.FIELD_PLAYERS)
},entities.Squad.prototype.getSubPlayers = function getSubPlayers() {
    return this._players.slice(entities.Squad.FIELD_PLAYERS, entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS)
},entities.Squad.prototype.getReservePlayers = function getReservePlayers() {
    return this._players.slice(entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS, entities.Squad.TOTAL_PLAYERS)
},entities.Squad.prototype.getSubAndReservePlayers = function getSubAndReservePlayers() {
    return this._players.slice(entities.Squad.FIELD_PLAYERS, entities.Squad.TOTAL_PLAYERS)
},entities.Squad.prototype.getFieldAndSubPlayers = function getFieldAndSubPlayers() {
    return this._players.slice(0, entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS)
},entities.Squad.prototype.getPlayersByZone = function getPlayersByZone() {
    var t = {};
    return this._players.forEach(function (i) {
        var s = enums.SquadPositionZones[i.getUniquePosition()];
        utils.JS.isValid(s) && (t.hasOwnProperty(s) || (t[s] = []), t[s].push(i))
    }, this), t
},entities.Squad.prototype._getSlotByUniquePosition = function _getSlotByUniquePosition(position) {
    var t = utils.JS.find(this.getFieldPlayers(), function (t) {
        return t.getUniquePosition() === position
    });
    return t || (utils.Debug.Assert(!1, "[Squad::_getPlayerByUniqueSlotId] Unable to find a slot associated with the unique position: " + position), new entities.NullSquadSlot)
},entities.Squad.prototype.getSlot = function getSlot(identifier) {
    return utils.JS.isNumber(identifier) ? this._getSlotByIndex(identifier) : identifier instanceof entities.Item ? this._getSlotByItem(identifier) : new entities.NullSquadSlot
},entities.Squad.prototype._getSlotByIndex = function _getSlotByIndex(index) {
    return index === entities.Squad.MANAGER_SLOT_INDEX ? this._manager : this._isValidPlayerSlot(index) ? this._players[index] : new entities.NullSquadSlot
},entities.Squad.prototype._getSlotByItem = function _getSlotByItem(item) {
    if (this._manager.getItem().id === item.id && item.isValid()) return this._manager;
    return (item.isValid() ? utils.JS.find(this._players, function (t) {
        return t.getItem().id === item.id
    }) : utils.JS.find(this._players, function (t) {
        return t.getItem() === item
    })) || new entities.NullSquadSlot
},entities.Squad.prototype.getSlots = function getSlots() {
    var t = this._filterBrickIndices(this._players);
    return this._manager && !this.isSBC() && (t = t.concat(this._manager)), t
},entities.Squad.prototype.getType = function getType() {
    return this._type
},entities.Squad.prototype.getName = function getName() {
    return this._name
},entities.Squad.prototype.setName = function setName(name, t) {
    this._name = utils.TextUtils.createSquadName(name, t), this._modified = !0, this.onDataUpdated.notify({name: this._name})
},entities.Squad.prototype.getFormation = function getFormation() {
    return this._formation
},entities.Squad.prototype.setFormation = function setFormation(t) {
    this._formation.getId() !== t.getId() && (this._formation = t, this._players.forEach(function (t) {
        t.setPosition(this._formation.getPosition(t.getIndex()))
    }, this), this.updateChemistry(), this._modified = !0, this.onDataUpdated.notify({
        slots: this._players.slice(0, entities.Squad.FIELD_PLAYERS),
        chemistry: this.getChemistry(),
        formation: this._formation
    }))
},entities.Squad.prototype.getStarRating = function getStarRating() {
    var t = this._rating, value = 0;
    return t <= enums.TeamStarRanges.RATING_0_0 ? value : value = t <= enums.TeamStarRanges.RATING_0_5 ? .5 : t <= enums.TeamStarRanges.RATING_1_0 ? 1 : t <= enums.TeamStarRanges.RATING_1_5 ? 1.5 : t <= enums.TeamStarRanges.RATING_2_0 ? 2 : t <= enums.TeamStarRanges.RATING_2_5 ? 2.5 : t <= enums.TeamStarRanges.RATING_3_0 ? 3 : t <= enums.TeamStarRanges.RATING_3_5 ? 3.5 : t <= enums.TeamStarRanges.RATING_4_0 ? 4 : t <= enums.TeamStarRanges.RATING_4_5 ? 4.5 : 5
},entities.Squad.prototype.getRating = function getRating() {
    return this._rating
},entities.Squad.prototype.getChemistry = function getChemistry() {
    return this._chemistry
},
entities.Squad.prototype.getChemistryLinks = function getChemistryLinks() {
    return this._chemistryLinks
},entities.Squad.prototype.setTOTW = function setTOTW(t) {
    this._isTOTW = t
},entities.Squad.prototype.setSBC = function setSBC(t) {
    this._isSBC = t
},entities.Squad.prototype.setSaveDelegate = function setSaveDelegate(t) {
    this._squadSaveDelegate = t
},entities.Squad.prototype.setShowOff = function setShowOff(t) {
    this._isShowOff = t
},entities.Squad.prototype.getSlotsLinkedToPosition = function getSlotsLinkedToPosition(t) {
    var self = this;
    return this._chemistryLinks.reduce(function (result, link) {
        return link.getPositionA() === t ? result.push(self._getSlotByUniquePosition(link.getPositionB())) : link.getPositionB() === t && result.push(self._getSlotByUniquePosition(link.getPositionA())), result
    }, [])
},entities.Squad.prototype.getBestAvailableEmptySlotIndex = function getBestAvailableEmptySlotIndex(t, i) {
    i = !utils.JS.isBoolean(i) || i;
    var s, o, l = 0, u = 0, index = -1;
    return this.getPlayers().filter(function getEmptySlots(t) {
        return !t.isValid()
    }).forEach(function checkIfBestSlot(h) {
        if (!(h.getIndex() < entities.Squad.FIELD_PLAYERS)) return l > 0 ? index : h.getIndex();
        if (h.setItemData(t), o = h.getPositionBonus(), i) {
            s = 0;
            var p;
            for (p = 0; p < entities.Squad.FIELD_PLAYERS; ++p) {
                var m = this._players[p];
                s += this._calculateSlotChemistry(m)
            }
            (s > l || o > u) && (l = s, u = o, index = h.getIndex())
        } else o > l && (l = o, index = h.getIndex());
        this._emptySlot(h)
    }, this), index
},entities.Squad.prototype.getManagerBonusImpact = function getManagerBonusImpact(t) {
    var i = [];
    return t.isManager() && this._players.forEach(function (s) {
        this._calculateManagerBonus(s.getItem(), t) > 0 && i.push(s.getIndex())
    }, this), i
},entities.Squad.prototype._getPlayersForCounters = function _getPlayersForCounters(t) {
    return this.getNonBrickSlots(t).filter(function (t) {
        return t.isValid()
    })
},entities.Squad.prototype._clubCounter = function _clubCounter(t) {
    var i = {};
    return this._getPlayersForCounters(t).forEach(function incrementClubCount(t) {
        var s = t.getItem().teamId;
        i[s] ? i[s].push(t.getIndex()) : i[s] = [t.getIndex()]
    }, this), i
},entities.Squad.prototype._leagueCounter = function _leagueCounter(t) {
    var i = {};
    return this._getPlayersForCounters(t).forEach(function incrementLeagueCount(t) {
        var s = t.getItem().leagueId;
        i[s] ? i[s].push(t.getIndex()) : i[s] = [t.getIndex()]
    }, this), i
},entities.Squad.prototype._nationCounter = function _nationCounter(t) {
    var i = {};
    return this._getPlayersForCounters(t).forEach(function incrementNationCount(t) {
        var s = t.getItem().nationId;
        i[s] ? i[s].push(t.getIndex()) : i[s] = [t.getIndex()]
    }, this), i
},entities.Squad.prototype._qualityCounter = function _qualityCounter(t) {
    var i = {};
    return this._getPlayersForCounters(t).forEach(function incrementTierCount(t) {
        var s = t.getItem().getTier();
        i[s] ? i[s].push(t.getIndex()) : i[s] = [t.getIndex()]
    }, this), i
},entities.Squad.prototype._playerCountHelper = function _playerCountHelper(t, i) {
    return Array.isArray(t) ? t.reduce(function (t, s) {
        return t + i.call(this, s)
    }.bind(this), 0) : i.call(this, t)
},entities.Squad.prototype.getNumberOfPlayersByRarity = function getNumberOfPlayersByRarity(t, i) {
    return this._playerCountHelper(t, function (t) {
        return this.getNonBrickSlots(i).reduce(function (a, b) {
            return b.isValid() && b.getItem().rareflag === t ? ++a : a
        }.bind(this), 0)
    })
},entities.Squad.prototype.getPlayersPerQualityTier = function getPlayersPerQualityTier() {
    var t = this._qualityCounter();
    return new UTHashTable(Object.keys(t).reduce(function (a, b) {
        return a[b] = t[b].length, a
    }, {}))
},entities.Squad.prototype.getSlotIndicesByQualityTier = function getSlotIndicesByQualityTier(t, i) {
    return this._qualityCounter(i)[t] || []
},entities.Squad.prototype.getNumberOfPlayersByQualityTier = function getNumberOfPlayersByQualityTier(t, i) {
    return this._playerCountHelper(t, function (t) {
        return this.getNonBrickSlots(i).reduce(function (a, b) {
            return b.isValid() && b.getItem().getTier() === t ? ++a : a
        }.bind(this), 0)
    })
},entities.Squad.prototype.getPlayersPerLeague = function getPlayersPerLeague() {
    var t = this._leagueCounter();
    return new UTHashTable(Object.keys(t).reduce(function (a, b) {
        return a[b] = t[b].length, a
    }, {}))
},
entities.Squad.prototype.getPopularLeagues = function getPopularLeagues() {
    return utils.JS.getSortedKeys(this._leagueCounter())
},entities.Squad.prototype.getSlotIndicesByLeague = function getSlotIndicesByLeague(t, i) {
    return this._leagueCounter(i)[t] || []
},entities.Squad.prototype.getNumberOfPlayersByLeague = function getNumberOfPlayersByLeague(t, i) {
    return this._playerCountHelper(t, function (t) {
        return this.getNonBrickSlots(i).reduce(function (a, b) {
            return b.isValid() && b.getItem().leagueId === t ? ++a : a
        }.bind(this), 0)
    })
},entities.Squad.prototype.getPopularClubs = function getPopularClubs() {
    return utils.JS.getSortedKeys(this._clubCounter())
},entities.Squad.prototype.getPlayersPerClub = function getPlayersPerClub() {
    var t = this._clubCounter();
    return new UTHashTable(Object.keys(t).reduce(function (a, b) {
        return a[b] = t[b].length, a
    }, {}))
},entities.Squad.prototype.getSlotIndicesByClub = function getSlotIndicesByClub(t, i) {
    return this._clubCounter(i)[t] || []
},entities.Squad.prototype.getNumberOfPlayersByClub = function getNumberOfPlayersByClub(t, i) {
    return this._playerCountHelper(t, function (t) {
        return this.getNonBrickSlots(i).reduce(function (a, b) {
            return b.isValid() && b.getItem().teamId === t ? ++a : a
        }.bind(this), 0)
    })
},entities.Squad.prototype.getPopularNationalities = function getPopularNationalities() {
    return utils.JS.getSortedKeys(this._nationCounter())
},entities.Squad.prototype.getPlayersPerNation = function getPlayersPerNation() {
    var t = this._nationCounter();
    return new UTHashTable(Object.keys(t).reduce(function (a, b) {
        return a[b] = t[b].length, a
    }, {}))
},entities.Squad.prototype.getSlotIndicesByNation = function getSlotIndicesByNation(t, i) {
    return this._nationCounter(i)[t] || []
},entities.Squad.prototype.getNumberOfPlayersByNation = function getNumberOfPlayersByNation(t, i) {
    return this._playerCountHelper(t, function (t) {
        return this.getNonBrickSlots(i).reduce(function (a, b) {
            return b.isValid() && b.getItem().nationId === t ? ++a : a
        }.bind(this), 0)
    })
},entities.Squad.prototype.getNumberOfLegends = function getNumberOfLegends() {
    return this.getNonBrickSlots().reduce(function (a, b) {
        return b.getItem().isLegend() ? ++a : a
    }, 0)
},entities.Squad.prototype.getBestPlayerByZone = function getBestPlayerByZone(t) {
    var i = null;
    return this.getPlayersByZone()[t].forEach(function getBestPlayer(t) {
        (!i || i.getItem().rating < t.getItem().rating) && (i = t)
    }, this), i
},entities.Squad.prototype.getAverageRatingByZone = function getAverageRatingByZone(t) {
    var i = this.getPlayersByZone()[t], s = 0;
    return i.length < 1 ? s : (i.forEach(function incrementRatingTotal(t) {
        s += t.getItem().rating
    }, this), Math.floor(s / i.length))
},entities.Squad.prototype.replaceDreamItem = function replaceDreamItem(t) {
    var i = utils.JS.find(this.getPlayers(), function (i) {
        return i.getItem().compareDream(t)
    });
    i && this._addItemToSlot(i, t)
},entities.Squad.prototype._calculateChemistry = function _calculateChemistry() {
    var total = 0;
    this.getFieldPlayers().forEach(function (t) {
        this._isSlotChemCalculable(t) && (total += t.getChemistry())
    }, this), this._chemistry = Math.min(Math.max(Math.round(total), 0), 100)
},entities.Squad.prototype._calculateRating = function _calculateRating() {
    var t = this.isSBC() ? this.getFieldPlayers() : this.getFieldAndSubPlayers(),
        i = gSettingsModel.isSquadRatingFloatCalculationEnabled(), s = 0, o = entities.Squad.FIELD_PLAYERS;
    if (t.forEach(function (t, i) {
            var item = t.getItem();
            item.isValid() && (s += item.rating, i >= entities.Squad.FIELD_PLAYERS && o++)
        }), i) {
        var l = s, u = l;
        o > 0 && (l /= o), l = Math.min(l, 99), t.forEach(function (t, i) {
            var item = t.getItem();
            if (item.isValid()) {
                if (item.rating <= l) return;
                i < entities.Squad.FIELD_PLAYERS ? u += item.rating - l : u += .5 * (item.rating - l)
            }
        }), s = Math.round(u)
    } else {
        var h = Math.min(Math.floor(s / o), 99);
        t.forEach(function (t, i) {
            var item = t.getItem();
            if (item.isValid()) {
                if (item.rating <= h) return;
                i < entities.Squad.FIELD_PLAYERS ? s += item.rating - h : s += Math.floor(.5 * (item.rating - h))
            }
        })
    }
    this._rating = Math.min(Math.max(Math.floor(s / o), 0), 99)
},entities.Squad.prototype._calculateLinkChemistry = function _calculateLinkChemistry(t, i) {
    var s = 0;
    if (this._isSlotChemCalculable(t) && this._isSlotChemCalculable(i)) {
        var o = t.getItem(), l = i.getItem(),
            u = o.isLegend() || o.isCharityItem() || l.isLegend() || l.isCharityItem();
        o.nationId > 0 && o.nationId === l.nationId && (s += entities.Squad.NATION_BONUS), o.teamId > 0 && o.teamId === l.teamId && (s += entities.Squad.CLUB_BONUS), (u || o.leagueId > 0 && o.leagueId === l.leagueId) && (s += entities.Squad.LEAGUE_BONUS)
    }
    return s
},entities.Squad.prototype.updateChemistry = function updateChemistry() {
    this._updateChemistryLinks(), this._players.forEach(this._calculateSlotChemistry, this), this._calculateChemistry()
},entities.Squad.prototype._updateChemistryLinks = function _updateChemistryLinks() {
    this._players.length < 1 || (this._chemistryLinks = [], this._formation.getLinks().forEach(function (link) {
        var t = link.getPositionA(), i = link.getPositionB(), s = this._getSlotByUniquePosition(t),
            o = this._getSlotByUniquePosition(i), l = 0,
            u = this._isSlotChemCalculable(s) && this._isSlotChemCalculable(o);
        u && (l = this._calculateLinkChemistry(s, o)), this._chemistryLinks.push(new transferobjects.SquadChemistryLink(t, i, l, u))
    }, this))
},entities.Squad.prototype._calculateSlotChemistry = function _calculateSlotChemistry(t) {
    var i = 0;
    if (this._isSlotChemCalculable(t)) {
        var item = t.getItem();
        if (i += Math.round(t.getPositionBonus() * this._calculateConnectionBonus(t)), this.hasManager()) {
            var s = this._calculateManagerBonus(item, this._manager.getItem());
            i += s, t.setManagerBonus(s)
        }
        i += item.loyaltyBonus
    }
    t.setChemistry(i)
},entities.Squad.prototype._calculateManagerBonus = function _calculateManagerBonus(t, i) {
    return utils.Debug.Assert(t.isPlayer(), "[Squad::_calculateManagerBonus] First parameter expected to be a player item."), utils.Debug.Assert(i.isManager(), "[Squad::_calculateManagerBonus] Second parameter expected to be a manager item."), t.nationId === i.nationId || t.leagueId === i.leagueId ? entities.Squad.MANAGER_BONUS : 0
},entities.Squad.prototype._calculateConnectionBonus = function _calculateConnectionBonus(t) {
    if (t.getIndex() >= entities.Squad.FIELD_PLAYERS || !this._isSlotChemCalculable(t)) return 0;
    var i = 0, s = 0;
    this._chemistryLinks.forEach(function (link) {
        var o = t.getUniquePosition();
        !link.isValid() || link.getPositionA() !== o && link.getPositionB() !== o || (i += link.getChemistry(), ++s)
    }, this);
    var o = 0;
    return (i = s > 0 ? i / s : 0) >= 5 ? o = 3 : i >= 3 ? o = 2 : i >= 1 && (o = 1), this._formation.getTeamBonus(o)
},entities.Squad.prototype.isCacheExpired = function isCacheExpired() {
    return Date.now() > this._timestamp + 3e5
},entities.Squad.prototype.isModified = function isModified() {
    return this._modified
},entities.Squad.prototype.isDream = function isDream() {
    return this._type === enums.SquadType.DREAM
},entities.Squad.prototype.isGenerations = function isGenerations() {
    return this._type === enums.SquadType.GENERATIONS
},entities.Squad.prototype.isValid = function isValid() {
    return this._valid
},entities.Squad.prototype.isTOTW = function isTOTW() {
    return this._isTOTW
},entities.Squad.prototype.isSBC = function isSBC() {
    return this._isSBC
},entities.Squad.prototype.isShowOff = function isShowOff() {
    return this._isShowOff
},entities.Squad.prototype.isStartingElevenComplete = function isStartingElevenComplete() {
    return this._slotsHaveValidPlayers(0, entities.Squad.FIELD_PLAYERS)
},entities.Squad.prototype.areSubsComplete = function areSubsComplete() {
    return this._slotsHaveValidPlayers(entities.Squad.FIELD_PLAYERS, entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS)
},entities.Squad.prototype.areReservesComplete = function areReservesComplete() {
    return this._slotsHaveValidPlayers(entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS, entities.Squad.MANAGER_SLOT_INDEX)
},entities.Squad.prototype.isValidForTOTW = function isValidForTOTW() {
    return this._slotsHaveValidPlayers(0, entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS)
},entities.Squad.prototype.isSquadFull = function isSquadFull() {
    var empty = utils.JS.find(this.getNonBrickSlots(), function (t) {
        return !t.isValid()
    });
    return !utils.JS.isValid(empty)
},entities.Squad.prototype.isSquadEmpty = function isSquadEmpty() {
    var t = utils.JS.find(this._players, function (t) {
        return t.isValid()
    });
    return !utils.JS.isValid(t)
},
entities.Squad.prototype.isSquadLoaded = function isSquadLoaded() {
    if (this._manager.getItem() instanceof entities.NullItem) return !1;
    var t = utils.JS.find(this._players, function (t) {
        return !(t.getItem() instanceof entities.NullItem)
    });
    return utils.JS.isValid(t)
},entities.Squad.prototype._slotsHaveValidPlayers = function _slotsHaveValidPlayers(start, total) {
    var t;
    for (t = start; t < total; ++t) if (!this._getSlotByIndex(t).isValid()) return !1;
    return !0
},entities.Squad.prototype._isValidPlayerSlot = function _isValidPlayerSlot(t) {
    return t >= 0 && t < entities.Squad.MANAGER_SLOT_INDEX
},entities.Squad.prototype._isValidSlotIndex = function _isValidSlotIndex(index) {
    return index >= 0 && index <= entities.Squad.MANAGER_SLOT_INDEX
},entities.Squad.prototype.containsDreamItem = function containsDreamItem(t) {
    if (this.isDream() && 0 !== t.getMaskedResourceId()) {
        var i, s = this._players.length;
        for (i = 0; i < s; i++) {
            var o = this._players[i];
            if (o.getItem().compareDream(t)) return o.getIndex()
        }
    }
    return -1
},entities.Squad.prototype.containsVariationOfCard = function containsVariationOfCard(t) {
    if (0 !== t.getMaskedResourceId()) {
        var i, s = this._players.length;
        for (i = 0; i < s; i++) if (this._players[i].getItem().compareResourceTo(t)) return !0
    }
    return !1
},entities.Squad.prototype.containsItem = function containsItem(item, t) {
    if (0 === item.resourceId) return !1;
    if (item.resourceId === this._manager.getItem().resourceId) return !0;
    for (var i = this._players.length; i-- > 0;) if (item.compareResourceTo(this._players[i].getItem(), t)) return !0;
    return !1
},entities.Squad.prototype.hasManager = function hasManager() {
    return this._manager.isValid()
},entities.Squad.prototype.swapPlayersByIndex = function swapPlayersByIndex(a, b) {
    utils.Debug.Assert(this._isValidPlayerSlot(a), "[Squad::swapPlayersByIndex] Invalid slot index provided for first parameter."), utils.Debug.Assert(this._isValidPlayerSlot(b), "[Squad::swapPlayersByIndex] Invalid slot index provided for second parameter.");
    var t = this.getSlot(a), i = this.getSlot(b), s = t.getItem(), o = i.getItem(), l = t.getKitNumber(),
        u = i.getKitNumber();
    t.setItem(o), i.setItem(s), t.setKitNumber(u), i.setKitNumber(l), this.updateChemistry(), this._calculateRating(), this.isSBC() && this._updateType(), this._modified = !0, this.onDataUpdated.notify({
        slots: [t, i],
        chemistry: this.getChemistry(),
        rating: this.getRating(),
        type: this.getType()
    })
},entities.Squad.prototype._addItemToSlot = function _addItemToSlot(t, item) {
    var i = t.getItem(), index = t.getIndex();
    return t.setItem(item), (index < entities.Squad.FIELD_PLAYERS || item.isManager()) && this.updateChemistry(), index < entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS && this._calculateRating(), this._updateType(), i
},entities.Squad.prototype.addItemToSlot = function addItemToSlot(index, item) {
    var t = null;
    if (utils.Debug.Assert(this._isValidSlotIndex(index), "Invalid squad slot index: " + index), this._isValidSlotIndex(index)) {
        var i = this.getSlot(index);
        t = this._addItemToSlot(i, item), this._modified = !0, this.onDataUpdated.notify({
            slots: [i],
            chemistry: this.getChemistry(),
            rating: this.getRating(),
            type: this.getType()
        })
    }
    return t
},entities.Squad.prototype._emptySlot = function _emptySlot(t) {
    var i = t.getItem().isManager() ? new entities.Item(enums.ItemType.MANAGER) : new entities.Item;
    i.resourceGameYear = parseInt(utils.TextUtils.getYearString(enums.Year.ASSET), 10), i.playStyle = DEFAULT_PLAYSTYLE_ID, t.setItem(i)
},entities.Squad.prototype._removeItemFromSlot = function _removeItemFromSlot(t) {
    this._emptySlot(t);
    var index = t.getIndex();
    (index < entities.Squad.FIELD_PLAYERS || t.getItem().isManager()) && this.updateChemistry(), index < entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS && this._calculateRating(), this._updateType()
},entities.Squad.prototype.removeItemFromSlot = function removeItemFromSlot(index) {
    if (this._isValidSlotIndex(index)) {
        var t = this.getSlot(index);
        this._removeItemFromSlot(t), this._modified = !0, this.onDataUpdated.notify({
            slots: [t],
            chemistry: this.getChemistry(),
            rating: this.getRating(),
            type: this.getType()
        })
    }
},entities.Squad.prototype.removeItem = function removeItem(item) {
    var t = this.getSlot(item);
    t.isValid() && (this._removeItemFromSlot(t),
        this._modified = !0, this.onDataUpdated.notify({
        slots: [t],
        chemistry: this.getChemistry(),
        rating: this.getRating(),
        type: this.getType()
    }))
},entities.Squad.prototype.update = function update(t) {
    this._chemistry = t.getChemistry(), this._rating = t.getRating(), this._name = t.getName(), this._formation = t.getFormation(), this._type = t.getType(), this._valid = t.isValid(), this._captain = t.getCaptain(), this._manager && this._manager.onDataUpdated.unobserve(this), this._manager = t.getManager(), this._manager.onDataUpdated.observe(this, this._eSlotDataUpdated), this._players.length > 0 && this._players.forEach(function (t) {
        t.onDataUpdated.unobserve(this)
    }, this), this._players = t.getPlayers(), this._players.length > 0 && (this._updateChemistryLinks(), this._players.forEach(function (t) {
        this._calculateSlotChemistry(t), t.onDataUpdated.observe(this, this._eSlotDataUpdated)
    }, this)), this._modified = !0, this.onDataUpdated.notify({
        chemistry: this.getChemistry(),
        formation: this.getFormation(),
        name: this.getName(),
        rating: this.getRating(),
        slots: this.getPlayers().concat(this.getManager()),
        type: this.getType()
    })
},entities.Squad.prototype.setPlayers = function setPlayers(t, i) {
    var s = null, o = [];
    t = t.slice(0, entities.Squad.TOTAL_PLAYERS), i && t.forEach(function (item, t) {
        s = this.getSlot(t), item && item.isPlayer() && !s.isBrick() && this._emptySlot(s)
    }, this), t.forEach(function (item, t) {
        s = this.getSlot(t), item && item.isPlayer() && !s.isBrick() && !this.containsVariationOfCard(item) && (this._addItemToSlot(s, item), o.push(s))
    }, this), o.length > 0 && (this._modified = !0, this.onDataUpdated.notify({
        slots: o,
        chemistry: this.getChemistry(),
        rating: this.getRating(),
        type: this.getType()
    }))
},entities.Squad.prototype.removeAllItems = function removeAllItems(t) {
    var i = [];
    this.getNonBrickSlots(!0).forEach(function (t) {
        t.isValid() && (this._removeItemFromSlot(t), i.push(t))
    }, this);
    var s = i.length > 0;
    return !t && this.hasManager() && (this._removeItemFromSlot(this._manager), i.push(this._manager), s = !0), s && (this._modified = !0, this.onDataUpdated.notify({
        slots: i,
        chemistry: this.getChemistry(),
        rating: this.getRating(),
        type: this.getType()
    })), s
},entities.Squad.prototype._isSlotChemCalculable = function _isSlotChemCalculable(t) {
    return t.isValid() || this._isSlotCustomBrick(t.getIndex())
},entities.Squad.prototype._updateType = function _updateType() {
    if (this._type !== enums.SquadType.GENERATIONS) {
        var t = this.isSBC() ? this.getFieldPlayers() : this.getPlayers(), type = enums.SquadType.REGULAR;
        utils.JS.isValid(utils.JS.find(t, function (t) {
            return t.getItem().concept
        })) && (type = enums.SquadType.DREAM), this._type = type
    }
},entities.Squad.prototype.compareTo = function compareTo(t) {
    return this.getId() === t.getId()
},entities.Squad.prototype._filterBrickIndices = function _filterBrickIndices(t) {
    return t.filter(function (item) {
        return -1 === this.getAllBrickIndices().indexOf(item.getIndex())
    }, this)
},entities.Squad.prototype._filterSimpleBrickIndices = function _filterSimpleBrickIndices(t) {
    return t.filter(function (item) {
        return -1 === this.simpleBrickIndices.indexOf(item.getIndex())
    }, this)
},entities.Squad.prototype.getAllBrickIndices = function getAllBrickIndices() {
    return this.simpleBrickIndices.concat(this.customBrickIndices).sort(function (a, b) {
        return a - b
    })
},entities.Squad.prototype._isSlotBrick = function _isSlotBrick(index) {
    return -1 !== this.getAllBrickIndices().indexOf(index)
},entities.Squad.prototype._isSlotSimpleBrick = function _isSlotSimpleBrick(index) {
    return -1 !== this.simpleBrickIndices.indexOf(index)
},entities.Squad.prototype._isSlotCustomBrick = function _isSlotCustomBrick(index) {
    return -1 !== this.customBrickIndices.indexOf(index)
},entities.Squad.prototype.isSBCSquadEligible = function isSBCSquadEligible() {
    var t = utils.JS.find(this.getNonBrickSlots(), function (t) {
        var i = t.getItemData();
        return i.isLoaned() || i.concept || entities.Item.isAlex(i.resourceId) || entities.Item.isJim(i.resourceId) || entities.Item.isDanny(i.resourceId)
    });
    return !utils.JS.isValid(t)
},entities.Squad.prototype.getSBCSlots = function getSBCSlots(t) {
    return t ? this._players : this._filterSimpleBrickIndices(this._players)
},
entities.Squad.prototype.getNonBrickSlots = function getNonBrickSlots(t) {
    var i = t ? this._players : this.getFieldPlayers();
    return 0 === this.getAllBrickIndices().length ? i : this._filterBrickIndices(i)
},entities.Squad.prototype.getNumOfRequiredPlayers = function getNumOfRequiredPlayers() {
    return entities.Squad.FIELD_PLAYERS - this.getAllBrickIndices().length
},entities.Squad.prototype._eSlotDataUpdated = function _eSlotDataUpdated(t, sender, data) {
    var index = sender.getIndex();
    (index < entities.Squad.FIELD_PLAYERS || index === entities.Squad.MANAGER_SLOT_INDEX) && this.updateChemistry(), index < entities.Squad.FIELD_PLAYERS + entities.Squad.SUB_PLAYERS && this._calculateRating(), this._updateType(), this._modified = !0, this.onDataUpdated.notify({
        slots: [sender],
        chemistry: this.getChemistry(),
        rating: this.getRating(),
        type: this.getType()
    })
},NamespaceManager.Register("factories"),factories.Squad = function () {
    function SquadEntityFactory() {
    }

    function _normalizePayload(data) {
        return utils.JS.isNumber(data.starRating) && (data.rating = data.starRating, delete data.starRating), utils.JS.isString(data.squadName) || (data.squadName = ""), Array.isArray(data.manager) && (data.manager = data.manager.length > 0 ? data.manager[0] : null), data
    }

    function _parseGenerationsSquadPayload(t, data) {
        t._type = enums.SquadType.GENERATIONS, services.Configuration.getGBUDData().observe(this, function _onGetGBUDDataComplete(i, response) {
            i.unobserve(this);
            for (var s = response.data, o = !1, l = 0; l < entities.Squad.MANAGER_SLOT_INDEX;) {
                var u = new entities.SquadSlot(l, t._formation.getPosition(l)), h = data.players[l], item = null;
                if (h) {
                    var p = (item = factories.Item.createItem(h.itemData)).getYear();
                    (p < enums.Year.YEAR_2013 || p < enums.Year.ASSET && -1 !== s.get(item.resourceGameYear).indexOf(item.getDefId())) && (o = !0, item = factories.Item.createItem())
                } else item = factories.Item.createItem();
                item.type = enums.ItemType.PLAYER, u.setItem(item), u.onDataUpdated.observe(t, t._eSlotDataUpdated), t._players.push(u), l++
            }
            t._updateChemistryLinks(), t._players.forEach(t._calculateSlotChemistry, t), t._calculateRating(), o && t.save()
        })
    }

    function _parseSquadPayload(t, data) {
        if (t._owner = data.personaId, t._id = data.id, t._valid = data.valid, t._captain = data.captain, t._formation = repositories.Squad.getFormation(data.formation), t._chemistry = data.chemistry, t._rating = data.rating, t._name = data.squadName, t._id !== entities.Squad.GENERATIONS_ID || t._name !== entities.Squad.GENERATIONS_NAME) {
            utils.JS.isEmpty(data.squadType) || (t._type = data.squadType);
            for (var i = 0; i <= entities.Squad.MANAGER_SLOT_INDEX;) {
                var s = new entities.SquadSlot(i, t._formation.getPosition(i)), o = 0, item = null;
                if (i === entities.Squad.MANAGER_SLOT_INDEX && data.manager) item = factories.Item.createItem(data.manager); else if (data.players[i]) {
                    var l = data.players[i];
                    item = factories.Item.createItem(l.itemData), o = l.kitNumber || 0
                } else item = factories.Item.createItem();
                s.setItem(item), s.setKitNumber(o), s.onDataUpdated.observe(t, t._eSlotDataUpdated), i === entities.Squad.MANAGER_SLOT_INDEX ? (item.type = enums.ItemType.MANAGER, t._manager = s) : (item.type = enums.ItemType.PLAYER, t._players.push(s)), i++
            }
            t._updateChemistryLinks(), t._players.forEach(t._calculateSlotChemistry, t)
        } else _parseGenerationsSquadPayload(t, data)
    }

    function _parseSBCSquadPayload(t, data, i) {
        t._id = data.id, t._formation = repositories.Squad.getFormation(data.formation), t._chemistry = data.chemistry, t._rating = data.rating;
        for (var s = utils.JS.isValid(i), o = 0; o < entities.Squad.MANAGER_SLOT_INDEX;) {
            var l = new entities.SquadSlot(o, t._formation.getPosition(o)), u = o < entities.Squad.FIELD_PLAYERS,
                h = !1, item = null;
            if (s && u) {
                var p = i[o];
                p.playerType === enums.SBC.PLAYER_TYPE.BRICK ? t.simpleBrickIndices.push(p.index) : p.playerType === enums.SBC.PLAYER_TYPE.CUSTOM_BRICK && (t.customBrickIndices.push(p.index), h = !0), l.setRequirement(new transferobjects.SBCPlayerRequirement(p))
            }
            (item = h && data.players[o] ? factories.Item.createCustomBrickItem(data.players[o].itemData) : data.players[o] ? factories.Item.createItem(data.players[o].itemData) : factories.Item.createItem()).type = enums.ItemType.PLAYER, l.setItem(item), l.onDataUpdated.observe(t, t._eSlotDataUpdated),
                t._players.push(l), item.concept && u && t._type === enums.SquadType.REGULAR && (t._type = enums.SquadType.DREAM), o++
        }
        t._updateChemistryLinks(), t._players.forEach(t._calculateSlotChemistry, t)
    }

    return SquadEntityFactory.prototype.createSquad = function createSquad(data) {
        data = _normalizePayload(data);
        var t = new entities.Squad;
        return _parseSquadPayload(t, data), t
    }, SquadEntityFactory.prototype.createSBCSquad = function createSquad(data, t) {
        data = _normalizePayload(data);
        var i = new entities.Squad;
        return i.setSBC(!0), _parseSBCSquadPayload(i, data, t), i
    }, new SquadEntityFactory
}(),communication.SBCLoadChallengeDelegate = function (t, i) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "sbs/challenge/" + t, i ? (this._url += "/squad", this._requestType = enums.HTTPRequestMethod.GET) : this._requestType = enums.HTTPRequestMethod.POST, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON
},utils.JS.inherits(communication.SBCLoadChallengeDelegate, communication.BaseFUTDelegate),communication.SBCLoadChallengeDelegate.prototype.onFail = function (errorCode) {
    errorCode === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), communication.SBCLoadChallengeDelegate.superClass_.onFail.call(this, errorCode)
},communication.SBCSaveChallengeDelegate = function (t, i) {
    communication.BaseFUTDelegate.call(this);
    var s = {};
    s.players = i.getPlayers().map(function (t) {
        var item = t.getItem();
        return {index: t.getIndex(), itemData: {id: item.id, dream: item.concept}}
    }), this.setData(s), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "sbs/challenge/" + t + "/squad", enums.HTTPRequestMethod.PUT, models.CommunicationModel.RESPONSE.NONE, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.SBCSaveChallengeDelegate, communication.BaseFUTDelegate),communication.SBCSaveChallengeDelegate.prototype.onFail = function (errorCode) {
    errorCode === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), communication.SBCSaveChallengeDelegate.superClass_.onFail.call(this, errorCode)
},NamespaceManager.Register("entities"),entities.SBCChallenge = function (data) {
    this.id = data.challengeId, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.name = data.name, Object.defineProperty(this, "name", {
        writable: !1,
        enumerable: !0
    }), this.description = data.description, Object.defineProperty(this, "description", {
        writable: !1,
        enumerable: !0
    }), this.endTime = utils.JS.isNumber(data.endTime) && data.endTime > 0 ? data.endTime + Math.round((new Date).getTime() / 1e3) : 0, Object.defineProperty(this, "endTime", {
        writable: !1,
        enumerable: !0
    }), this.notExpirable = 0 === this.endTime, Object.defineProperty(this, "notExpirable", {
        writable: !1,
        enumerable: !0
    }), this.priority = data.priority, Object.defineProperty(this, "priority", {
        writable: !1,
        enumerable: !0
    }), this.repeatable = data.repeatable, Object.defineProperty(this, "repeatable", {
        writable: !1,
        enumerable: !0
    }), this.setId = data.setId, Object.defineProperty(this, "setId", {
        writable: !1,
        enumerable: !0
    }), this.assetId = utils.JS.isEmpty(data.challengeImageId) ? data.trophyId : data.challengeImageId, this.formation = data.formation, Object.defineProperty(this, "formation", {
        writable: !1,
        enumerable: !0
    }), this.type = data.type, Object.defineProperty(this, "type", {writable: !1, enumerable: !0});
    var t;
    Object.defineProperty(this, "status", {
        get: function () {
            return t
        }, set: function (i) {
            var key;
            for (key in enums.SBC.CHALLENGE_STATUS) if (enums.SBC.CHALLENGE_STATUS.hasOwnProperty(key) && enums.SBC.CHALLENGE_STATUS[key] === i) return void(t = i);
            utils.Debug.Assert(!1, "Invalid assignment to entity: SBCChallenge.status")
        }
    }), this.status = data.status, this.timesCompleted = data.timesCompleted, Object.defineProperty(this, "timesCompleted", {writable: !0}), this.awards = utils.JS.isValid(data.awards) ? data.awards.map(function (t) {
        return new transferobjects.SBCReward(t)
    }, this) : [], this.awards.sort(function awardSort(a, b) {
        return a.getPriority() < b.getPriority() ? -1 : a.getPriority() > b.getPriority() ? 1 : 0
    }),
        Object.defineProperty(this, "awards", {
            writable: !1,
            enumerable: !0
        }), this._eligibilityOperation = data.elgOperation === enums.SBC.ELG_OPERATION.AND || data.elgOperation === enums.SBC.ELG_OPERATION.OR ? data.elgOperation : enums.SBC.ELG_OPERATION.AND, Object.defineProperty(this, "_eligibilityOperation", {
        writable: !1,
        enumerable: !1
    }), this.eligibilityRequirements = factories.SBC.createRequirements(data.elgReq), Object.defineProperty(this, "eligibilityRequirements", {
        writable: !1,
        enumerable: !0
    }), this.squad = null, Object.defineProperty(this, "squad", {writable: !0}), this.onDataChange = new UTObservable, Object.defineProperty(this, "onDataChange", {
        writable: !1,
        enumerable: !0
    }), this.onSave = new UTObservable, Object.defineProperty(this, "onSave", {writable: !1, enumerable: !0})
},entities.SBCChallenge.prototype.reset = function reset() {
    this.status = enums.SBC.CHALLENGE_STATUS.NOT_STARTED, this.squad = null, this.onDataChange.notify({
        status: this.status,
        squad: this.squad
    })
},entities.SBCChallenge.prototype.hasNotStarted = function hasNotStarted() {
    return this.status === enums.SBC.CHALLENGE_STATUS.NOT_STARTED
},entities.SBCChallenge.prototype.isInProgress = function isInProgress() {
    return this.status === enums.SBC.CHALLENGE_STATUS.IN_PROGRESS
},entities.SBCChallenge.prototype.isCompleted = function isCompleted() {
    return this.status === enums.SBC.CHALLENGE_STATUS.COMPLETED
},entities.SBCChallenge.prototype.isBrickChallenge = function isBrickChallenge() {
    return this.type === enums.SBC.CHALLENGE_TYPE.BRICK || this.type === enums.SBC.CHALLENGE_TYPE.CUSTOM_BRICK
},entities.SBCChallenge.prototype.hasExpired = function hasExpired(t) {
    if (this.notExpirable) return !1;
    var i = this.endTime - Math.round((new Date).getTime() / 1e3);
    return t && (i += 60 * gSettingsModel.getConfigsByKey(models.SettingsModel.SBC_GRACE_PERIOD_MINUTES)), i < 0
},entities.SBCChallenge.prototype._getApplicableSlotsForCombinedReq = function _getApplicableSlotsForCombinedReq(t) {
    var i = [];
    return t.kvPairs.keys().forEach(function (key) {
        key = parseInt(key, 10);
        var value = t.getFirstValue(key);
        switch (key) {
            case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_ID:
                i = i.concat(this.squad.getSlotIndicesByNation(value));
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_ID:
                i = i.concat(this.squad.getSlotIndicesByLeague(value));
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_ID:
                i = i.concat(this.squad.getSlotIndicesByClub(value));
                break;
            default:
                utils.Debug.Assert(!1, "Reached invalid combined case: " + key)
        }
    }, this), i
},entities.SBCChallenge.prototype._hasMultipleValues = function _hasMultipleValues(t, key) {
    return !!t.kvPairs.has(key) && t.kvPairs.get(key).length > 1
},entities.SBCChallenge.prototype.isRequirementMet = function isRequirementMet(t) {
    var i, s = t.kvPairs.keys().length, o = 0, l = 0;
    if (!this.squad || this.eligibilityRequirements.indexOf(t) < 0) return !1;
    if (t.isCombinedRequirement) {
        l = t.count;
        var u = {};
        this._getApplicableSlotsForCombinedReq(t).forEach(function (t) {
            u[t] ? (u[t] += 1, u[t] === s && o++) : u[t] = 1
        }, t)
    } else {
        if (1 !== s) return utils.Debug.Assert(!1, "Requirement is empty or invalid."), !1;
        var key = t.getFirstKey(), value = this._hasMultipleValues(t, key) ? t.getValue(key) : t.getFirstValue(key);
        switch (l = value, key) {
            case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_STAR_RATING:
                o = this.squad.getStarRating();
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_RATING:
                o = this.squad.getRating();
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_TEAM_CHEMISTRY:
                o = this.squad.getChemistry();
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_QUALITY:
                o = -1;
                var h = this.squad.getPlayersPerQualityTier().keys();
                if (0 === h.length) break;
                t.scope === enums.SBC.ELG_SCOPE.FUT_ELGRULE_SCOPE_GREATER ? o = Math.min.apply(Math, h) : t.scope === enums.SBC.ELG_SCOPE.FUT_ELGRULE_SCOPE_LOWER ? o = Math.max.apply(Math, h) : 1 === h.length && (o = parseInt(h[0], 10));
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_LEVEL:
                l = t.count, o = this.squad.getNumberOfPlayersByQualityTier(value);
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_NATION_COUNT:
                i = this.squad.getPlayersPerNation();
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_LEAGUE_COUNT:
                i = this.squad.getPlayersPerLeague();
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_SAME_CLUB_COUNT:
                i = this.squad.getPlayersPerClub();
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_COUNT:
                o = this.squad.getPopularNationalities().length;
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_COUNT:
                o = this.squad.getPopularLeagues().length;
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_COUNT:
                o = this.squad.getPopularClubs().length;
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_ID:
                l = t.count, o = this.squad.getNumberOfPlayersByNation(value);
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_ID:
                l = t.count, o = this.squad.getNumberOfPlayersByLeague(value);
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_ID:
                l = t.count, o = this.squad.getNumberOfPlayersByClub(value);
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_LEGEND_COUNT:
                o = this.squad.getNumberOfLegends();
                break;
            case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_RARITY:
                l = t.count, o = this.squad.getNumberOfPlayersByRarity(value);
                break;
            default:
                utils.Debug.Assert(!1, "Reached default case: " + key)
        }
    }
    return t.scope === enums.SBC.ELG_SCOPE.FUT_ELGRULE_SCOPE_GREATER ? (utils.JS.isValid(i) && (o = Math.max.apply(Math, i.values())), o >= l) : t.scope === enums.SBC.ELG_SCOPE.FUT_ELGRULE_SCOPE_LOWER ? (utils.JS.isValid(i) && (o = Math.max.apply(Math, i.values())), o <= l) : (utils.JS.isValid(i) && (o = i.find(function (t) {
        return t === l
    })), o === l)
},entities.SBCChallenge.prototype.meetsRequirements = function meetsRequirements() {
    if (this.squad && !this.squad.isSquadFull()) return !1;
    for (var t = this.eligibilityRequirements.length; t-- > 0;) {
        var i = this.isRequirementMet(this.eligibilityRequirements[t]);
        if (!i && this._eligibilityOperation === enums.SBC.ELG_OPERATION.AND) return !1;
        if (i && this._eligibilityOperation === enums.SBC.ELG_OPERATION.OR) return !0
    }
    return !0
},entities.SBCChallenge.prototype.canSubmit = function canSubmit() {
    return !this.hasExpired(!0) && this.meetsRequirements() && this.squad.isSBCSquadEligible()
},entities.SBCChallenge.prototype.hasUntradeableItems = function hasUntradeableItems() {
    return utils.JS.isValid(utils.JS.find(this.squad.getNonBrickSlots(), function (t) {
        return t.getItem().untradeable
    }))
},entities.SBCChallenge.prototype.getRequirementCounter = function getRequirementCounter(t) {
    var i = 0;
    if (!this.isInProgress() || !this.squad || this.eligibilityRequirements.indexOf(t) < 0) return -1;
    if (t.isCombinedRequirement) return -1;
    var key = t.getFirstKey(), value = this._hasMultipleValues(t, key) ? t.getValue(key) : t.getFirstValue(key);
    switch (key) {
        case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_COUNT:
            i += this.squad.getPopularNationalities().length;
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_COUNT:
            i += this.squad.getPopularLeagues().length;
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_COUNT:
            i += this.squad.getPopularClubs().length;
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_NATION_ID:
            i += this.squad.getNumberOfPlayersByNation(value);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_LEAGUE_ID:
            i += this.squad.getNumberOfPlayersByLeague(value);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_CLUB_ID:
            i += this.squad.getNumberOfPlayersByClub(value);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_LEVEL:
            i += this.squad.getNumberOfPlayersByQualityTier(value);
            break;
        case enums.SBC.ELG_KEY.FUT_ELGRULE_PLAYER_RARITY:
            i += this.squad.getNumberOfPlayersByRarity(value);
            break;
        default:
            return -1
    }
    return i
},entities.SBCChallenge.prototype.getNumberOfRequirementsMet = function getNumberOfRequirementsMet() {
    var t = 0;
    return this.squad.isSquadFull() && t++, this.eligibilityRequirements.forEach(function (i) {
        this.isRequirementMet(i) && t++
    }, this), t
},entities.SBCChallenge.prototype._delegateFailHandler = function _delegateFailHandler(sender, event, t, error) {
    sender.clearListenersByScope(this), error.getCode() === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), NetworkErrorManager.handle(error, !1, function () {
        event.notify(!1, t, error.getCode())
    }.bind(this))
},entities.SBCChallenge.prototype.load = function load() {
    var event = new UTObservable,
        t = {success: !1, status: enums.HTTPStatusCode.UNKNOWN, hasExpired: !1, challenge: this};
    if (this.hasExpired(!0) || this.hasNotStarted() && this.hasExpired()) return t.hasExpired = !0, event.notify(!1, t), event
        ;
    var i = new communication.SBCLoadChallengeDelegate(this.id, this.isInProgress());
    return i.setImportant(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, function loadSuccess(sender, result) {
        sender.clearListenersByScope(this), this.squad = factories.Squad.createSBCSquad(result.squad, result.playerRequirements), this.squad.setSaveDelegate(this);
        var i = {squad: this.squad};
        this.hasNotStarted() && (this.status = enums.SBC.CHALLENGE_STATUS.IN_PROGRESS, i.status = this.status), t.success = !0, t.status = enums.HTTPStatusCode.OK, this.onDataChange.notify(i), event.notify(!0, t)
    }), i.addListener(communication.BaseDelegate.FAIL, this, function delegateFail(sender, error) {
        t.status = error.getCode(), this._delegateFailHandler(sender, event, t, error)
    }), i.send(), event
},entities.SBCChallenge.prototype.save = function save(t) {
    var event = new UTObservable, i = {hasExpired: !1};
    if (this.hasExpired(!0)) return i.hasExpired = !0, event.notify(!1, i), event;
    var s = new communication.SBCSaveChallengeDelegate(this.id, this.squad);
    return s.addListener(communication.BaseDelegate.SUCCESS, this, function _onSaveChallengeSuccess(sender) {
        sender.clearListenersByScope(this), this.onSave.notify(), event.notify(!0, i)
    }), s.addListener(communication.BaseDelegate.FAIL, this, function _onSaveChallengeFail(sender, error) {
        this._delegateFailHandler(sender, event, i, error)
    }), s.setImportant(!0), s.send(), event
},entities.SBCChallenge.prototype.submit = function submit() {
    function submitSuccess(sender, result) {
        sender.clearListenersByScope(this), this.timesCompleted++, this.status = enums.SBC.CHALLENGE_STATUS.COMPLETED, t.success = !0, t.credits = result.credits || 0, t.preOrderPacks = result.preOrderPacks || 0, t.recoveredPacks = result.recoveredPacks || 0, this.onDataChange.notify({
            status: this.status,
            timesCompleted: this.timesCompleted
        }), event.notify(t)
    }

    function delegateFail(sender, error) {
        sender.clearListenersByScope(this), t.error = error, event.notify(t)
    }

    var event = new UTObservable,
        t = {success: !1, hasExpired: !1, credits: 0, recoveredPacks: 0, preOrderPacks: 0, error: null};
    return this.hasExpired(!0) ? (t.hasExpired = !0, event.notify(t), event) : (this.save().observe(this, function (t, response) {
        t.unobserve(this);
        var i = new communication.SBCSubmitChallengeDelegate(this.id);
        i.setImportant(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, submitSuccess), i.addListener(communication.BaseDelegate.FAIL, this, delegateFail), i.send()
    }), event)
},transferobjects.SBCReward = function (data) {
    transferobjects.Reward.call(this, data), this.loan = data.loan, Object.defineProperty(this, "loan", {writable: !1})
},utils.JS.inherits(transferobjects.SBCReward, transferobjects.Reward),NamespaceManager.Register("entities"),entities.SBCSet = function (data) {
    this.id = data.setId, Object.defineProperty(this, "id", {writable: !1}), this.name = data.name, Object.defineProperty(this, "name", {writable: !1}), this.description = data.description, Object.defineProperty(this, "description", {writable: !1}), this.endTime = utils.JS.isNumber(data.endTime) && data.endTime > 0 ? data.endTime + Math.round((new Date).getTime() / 1e3) : 0, Object.defineProperty(this, "endTime", {writable: !1}), this.notExpirable = 0 === this.endTime, Object.defineProperty(this, "notExpirable", {writable: !1}), this.priority = data.priority, Object.defineProperty(this, "priority", {writable: !1}), this.repeatable = data.repeatable, Object.defineProperty(this, "repeatable", {writable: !1}), this.assetId = utils.JS.isEmpty(data.setImageId) ? data.trophyId : data.setImageId, this.challengesCount = data.challengesCount, Object.defineProperty(this, "challengesCount", {writable: !1}), this.challengesCompletedCount = data.challengesCompletedCount, Object.defineProperty(this, "challengesCompletedCount", {writable: !0}), this.timesCompleted = data.timesCompleted, Object.defineProperty(this, "timesCompleted", {writable: !0}), this.isFeatured = data.taggedByProduction, Object.defineProperty(this, "isFeatured", {writable: !1}), this.isFavourite = data.taggedByUser, Object.defineProperty(this, "isFavourite", {writable: !0}), this.awards = data.awards.map(function (t) {
        return new transferobjects.SBCReward(t)
    }, this), this.awards.sort(function awardSort(a, b) {
        return a.getPriority() < b.getPriority() ? -1 : a.getPriority() > b.getPriority() ? 1 : 0
    }), Object.defineProperty(this, "awards", {writable: !1}), this.hidden = data.hidden, Object.defineProperty(this, "hidden", {writable: !1}), this._previewImageId = data.rewardPreviewImageId, Object.defineProperty(this, "_previewImageId", {writable: !1}), this.tutorial = data.tutorial, Object.defineProperty(this, "tutorial", {writable: !1}), this.challenges = new UTHashTable({}), Object.defineProperty(this, "challenges", {writable: !1}), this.onTag = new UTObservable, Object.defineProperty(this, "onTag", {writable: !1})
},entities.SBCSet.prototype.isComplete = function () {
    return this.challengesCount === this.challengesCompletedCount
},entities.SBCSet.prototype.isDisplayable = function () {
    return !this.hasExpired()
},entities.SBCSet.prototype.hasExpired = function (t) {
    if (this.notExpirable) return !1;
    var i = this.endTime - Math.round((new Date).getTime() / 1e3);
    return t && (i += 60 * gSettingsModel.getConfigsByKey(models.SettingsModel.SBC_GRACE_PERIOD_MINUTES)), i < 0
},entities.SBCSet.prototype.addChallenge = function (t) {
    this.challenges.set(t.id, t)
},entities.SBCSet.prototype.getChallenge = function (t) {
    return this.challenges.get(t)
},entities.SBCSet.prototype.getPreviewImageId = function getPreviewImageId() {
    return this._previewImageId
},entities.SBCSet.prototype.submitChallenge = function (t) {
    var event = new UTObservable,
        i = {success: !1, hasExpired: !1, set: null, credits: 0, recoveredPacks: 0, preOrderPacks: 0, error: null};
    return this.getChallenge(t).submit().observe(this, function _onChallengeSubmitComplete(t, data) {
        t.unobserve(this), data.success && (this.challengesCompletedCount++, this.isComplete() && (this.timesCompleted++, this.repeatable ? (this.challengesCompletedCount = 0, this.challenges.forEach(function (c) {
            c.reset()
        }, this)) : this.isFavourite && this.tag(), i.set = this), i.credits = data.credits, i.recoveredPacks = data.recoveredPacks, i.preOrderPacks = data.preOrderPacks), i.success = data.success, i.hasExpired = data.hasExpired, i.error = data.error, event.notify(i)
    }), event
},entities.SBCSet.prototype.tag = function () {
    var event = new UTObservable, t = new communication.SBCTagSetsDelegate(this.id, !this.isFavourite);
    return t.addListener(communication.BaseDelegate.SUCCESS, this, function delegateSuccess(sender) {
        sender.clearListenersByScope(this), this.isFavourite = !this.isFavourite, this.onTag.notify({
            sid: this.id,
            taggedByUser: this.isFavourite
        }), event.notify(!0)
    }), t.addListener(communication.BaseDelegate.FAIL, this, function delegateFail(sender, error) {
        sender.clearListenersByScope(this), error.getCode() === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), NetworkErrorManager.handle(error, !1, function () {
            event.notify(!1, error.getCode())
        }.bind(this))
    }), t.send(), event
},NamespaceManager.Register("transferobjects"),transferobjects.SBCCategory = function (id, t, name, type) {
    this.id = id, Object.defineProperty(this, "id", {writable: !1}), this.priority = t, Object.defineProperty(this, "priority", {writable: !1}), this.name = name, Object.defineProperty(this, "name", {writable: !1}), this.setIds = [], Object.defineProperty(this, "setIds", {writable: !0}), this.displayable = !1, Object.defineProperty(this, "displayable", {writable: !0}), this.isAll = type === enums.SBC.CATEGORY_TYPE.CUSTOM_ALL, Object.defineProperty(this, "isAll", {writable: !1}), this.isFavourite = type === enums.SBC.CATEGORY_TYPE.CUSTOM_FAVOURITE, Object.defineProperty(this, "isFavourite", {writable: !1}), this.type = type, Object.defineProperty(this, "type", {writable: !1})
},NamespaceManager.Register("repositories"),repositories.SBC = function () {
    function SBCRepository() {
        this.categories = new UTHashTable({}), Object.defineProperty(this, "categories", {writable: !1}), this.sets = new UTHashTable({}), Object.defineProperty(this, "sets", {writable: !1}), this._cacheExpiration = {}
    }

    return SBCRepository.CATEGORIES = {
        ALL: "All",
        FAVOURITE: "Favourite"
    }, SBCRepository.prototype._getCategories = function _getCategories() {
        return this.categories.forEach(function (t) {
            t.displayable = !1;
            var i;
            for (i = 0; i < t.setIds.length; i++) if (this.sets.get(t.setIds[i]).isDisplayable()) {
                t.displayable = !0
                ;
                break
            }
        }, this), this.categories.get(SBCRepository.CATEGORIES.FAVOURITE).displayable = !0, this.categories.values().sort(function categorySort(a, b) {
            return a.priority < b.priority ? -1 : a.priority > b.priority ? 1 : 0
        })
    }, SBCRepository.prototype.reset = function reset() {
        this.sets.clear(), this.categories.clear(), this._cacheExpiration = {}
    }, SBCRepository.prototype._delegateFailHandler = function _delegateFailHandler(sender, event, t, error) {
        sender.clearListenersByScope(this), error.getCode() === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.SBC_ENABLED), NetworkErrorManager.handle(error, !1, function () {
            event.notify(!1, t, error.getCode())
        }.bind(this))
    }, SBCRepository.prototype.getCachedSets = function getCachedSets() {
        return this.sets.values()
    }, SBCRepository.prototype.getSets = function getSets() {
        function _onSetTagged(t, data) {
            var i = this.categories.get(SBCRepository.CATEGORIES.FAVOURITE).setIds;
            if (data.taggedByUser) i.push(data.sid); else {
                var s = i.indexOf(data.sid);
                -1 !== s && i.splice(s, 1)
            }
        }

        var event = new UTObservable, t = {sets: [], categories: []};
        if (utils.JS.isValid(this._cacheExpiration.getSets) && this._cacheExpiration.getSets > Date.now()) return t.sets = this.getCachedSets(), t.categories = this._getCategories(), event.notify(!0, t), event;
        var i = new communication.SBCSetsDelegate;
        return i.setImportant(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, function _getSetsSuccess(sender, result) {
            sender.clearListenersByScope(this), this.reset(), this._cacheExpiration.getSets = Date.now() + 6e5;
            var i = [], s = [];
            result.categories.forEach(function (t) {
                var o = new transferobjects.SBCCategory(t.categoryId, t.priority, t.name, enums.SBC.CATEGORY_TYPE.SERVER);
                this.categories.set(o.id, o), t.sets.forEach(function (setData) {
                    var t = new entities.SBCSet(setData);
                    this.sets.set(t.id, t), o.setIds.push(t.id), i.push(t.id), t.isFavourite && s.push(t.id), t.onTag.observe(this, _onSetTagged)
                }, this)
            }, this);
            var o = new transferobjects.SBCCategory(-1, -1, services.Localization.localize("sbc.categories.all"), enums.SBC.CATEGORY_TYPE.CUSTOM_ALL);
            o.setIds = i, this.categories.set(SBCRepository.CATEGORIES.ALL, o);
            var l = new transferobjects.SBCCategory(-1, -1, services.Localization.localize("sbc.categories.favourites"), enums.SBC.CATEGORY_TYPE.CUSTOM_FAVOURITE);
            l.setIds = s, this.categories.set(SBCRepository.CATEGORIES.FAVOURITE, l), t.sets = this.getCachedSets(), t.categories = this._getCategories(), event.notify(!0, t)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function _getSetsFail(sender, error) {
            this._delegateFailHandler(sender, event, t, error)
        }), i.send(), event
    }, SBCRepository.prototype.requestChallengesBySetId = function requestChallengesBySetId(t) {
        var event = new UTObservable, i = {challenges: []}, set = this.sets.get(t);
        if (!set) return event.notify(!1, i, enums.HTTPStatusCode.BAD_REQUEST), event;
        var s = set.challenges.values();
        if (s.length > 0) return i.challenges = s, event.notify(!0, i), event;
        var o = new communication.SBCChallengesDelegate(t);
        return o.setImportant(!0), o.addListener(communication.BaseDelegate.SUCCESS, this, function _requestChallengesSuccess(sender, result) {
            sender.clearListenersByScope(this);
            var set = this.sets.get(t);
            set.challenges.clear(), s = [], result.challenges.forEach(function (t) {
                var challenge = new entities.SBCChallenge(t);
                set.addChallenge(challenge), s.push(challenge)
            }, this), i.challenges = s, event.notify(!0, i)
        }), o.addListener(communication.BaseDelegate.FAIL, this, function _requestChallengesFail(sender, error) {
            this._delegateFailHandler(sender, event, i, error)
        }), o.send(), event
    }, new SBCRepository
}(),communication.EntitlementDelegate = function (requestData) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "purchased/items", this._requestType = enums.HTTPRequestMethod.POST, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON, this._data = requestData
},utils.JS.inherits(communication.EntitlementDelegate, communication.BaseFUTDelegate),communication.EntitlementDelegate.prototype.onSuccess = function (response) {
    var t = factories.Item.generateItemsFromItemData(response.itemList, null), i = null;
    if (response.itemList.length > 0) {
        var s = t.filter(function (item) {
            return item.isPlayer()
        });
        s.length > 0 ? s.forEach(function (t) {
            var s = !!i && i.isSpecial(), o = t.isSpecial();
            (!utils.JS.isValid(i) || !s && o || i.rating < t.rating) && (i = t)
        }) : t.forEach(function (item) {
            (!utils.JS.isValid(i) || i.discardValue < item.discardValue) && (i = item)
        })
    }
    this.dispatch(communication.BaseDelegate.SUCCESS, i)
},communication.EntitlementDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.DESTINATION_FULL:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.tradetoken.DestinationFullTitle", "popup.error.item.DestinationFull");
            break;
        case enums.HTTPStatusCode.ITEM_EXISTS:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.unassignedItemsEntitlementTitle", "popup.error.fifacredits.unassignedItemsEntitlement");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
},utils.JS.inherits(UTPackOddsDTO, UTObject),NamespaceManager.Register("entities"),entities.FUTPack = function (data) {
    this.assetId = data.assetId, Object.defineProperty(this, "assetId", {writable: !1}), this.guidAssetId = data.guidAssetId || "", this.dealType = data.dealType, Object.defineProperty(this, "dealType", {writable: !1}), this.displayGroup = data.displayGroup.value, Object.defineProperty(this, "displayGroup", {writable: !1}), this.displayGroupAssetId = data.displayGroupAssetId, Object.defineProperty(this, "displayGroupAssetId", {writable: !1}), this.id = data.id, Object.defineProperty(this, "id", {writable: !1}), this.productId = data.productId, Object.defineProperty(this, "productId", {writable: !1}), this.storeId = data.firstPartyStoreId || 0, Object.defineProperty(this, "storeId", {writable: !1}), this.prices = new UTHashTable({}), Object.defineProperty(this, "prices", {writable: !1}), Array.isArray(data.currencies) && data.currencies.forEach(function (t) {
        var i = new valueobjects.Currency(t.name, t.funds);
        this.prices.set(i.type, i)
    }, this), this.state = data.state, Object.defineProperty(this, "state", {writable: !1}), this.packType = data.packType, Object.defineProperty(this, "packType", {writable: !1}), this.saleType = data.saleType, Object.defineProperty(this, "saleType", {writable: !1}), this.start = data.start || 0, Object.defineProperty(this, "start", {writable: !1}), this.end = data.end || 0, Object.defineProperty(this, "end", {writable: !1}), this.quantity = data.quantity || 0, Object.defineProperty(this, "quantity", {writable: !1}), this.mtxGroupName = data.hasOwnProperty("extPrice") ? data.extPrice.finalPrice.groupName || data.extPrice.originalPrice.groupName : "", Object.defineProperty(this, "mtxGroupName", {writable: !1}), this.packName = services.Localization.localize("FUT_STORE_PACK_" + data.id.toString() + "_NAME_MOBILE"), Object.defineProperty(this, "packName", {writable: !1}), this.packDesc = services.Localization.localize("FUT_STORE_PACK_" + data.id.toString() + "_DESC"), Object.defineProperty(this, "packDesc", {writable: !1}), this.displayGroupName = services.Localization.localize("FUT_STORE_CAT_" + data.displayGroup.value.toString().toUpperCase() + "_NAME"), Object.defineProperty(this, "displayGroupName", {writable: !1}), this.displayGroupDesc = services.Localization.localize("FUT_STORE_CAT_" + data.displayGroup.value.toString().toUpperCase() + "_DESC"), Object.defineProperty(this, "displayGroupDesc", {writable: !1}), this.isMyPack = data.displayGroup.value === enums.Purchase.DisplayGroup.MYPACKS, Object.defineProperty(this, "isMyPack", {writable: !1}), this.isSpecialPack = data.displayGroup.value === enums.Purchase.DisplayGroup.SPECIAL, Object.defineProperty(this, "isSpecialPack", {writable: !1}), this.isTimed = data.saleType === enums.Purchase.SaleType.TIME || data.saleType === enums.Purchase.SaleType.TIME_QUANTITY, Object.defineProperty(this, "isTimed", {writable: !1}),
        this.isLimited = data.saleType === enums.Purchase.SaleType.QUANTITY || data.saleType === enums.Purchase.SaleType.TIME_QUANTITY, Object.defineProperty(this, "isLimited", {writable: !1}), this.itemQuantity = data.packContentInfo ? data.packContentInfo.itemQuantity : 0, Object.defineProperty(this, "itemQuantity", {writable: !1}), this.rareQuantity = data.packContentInfo ? data.packContentInfo.rareQuantity : 0, Object.defineProperty(this, "rareQuantity", {writable: !1}), this.bronzeQuantity = data.packContentInfo ? data.packContentInfo.bronzeQuantity : 0, Object.defineProperty(this, "bronzeQuantity", {writable: !1}), this.silverQuantity = data.packContentInfo ? data.packContentInfo.silverQuantity : 0, Object.defineProperty(this, "silverQuantity", {writable: !1}), this.goldQuantity = data.packContentInfo ? data.packContentInfo.goldQuantity : 0, Object.defineProperty(this, "goldQuantity", {writable: !1}), this.odds = data.packOdds ? data.packOdds.map(function (t) {
        return new UTPackOddsDTO(t)
    }, this) : [], this.odds.length > 0 && this.odds.sort(function (a, b) {
        return a.order - b.order
    }), Object.defineProperty(this, "odds", {writable: !1})
},entities.FUTPack.prototype.hasOdds = function hasOdds() {
    return this.odds.length > 0
},entities.FUTPack.prototype.open = function open() {
    var event = new UTObservable;
    if (!this.isMyPack) return event.notify(null, enums.HTTPStatusCode.BAD_REQUEST), event;
    var t = {packId: this.id, currency: 0, usePreOrder: !0}, i = new communication.EntitlementDelegate(t);
    return i.useClickShield(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, function _onSuccess(sender, t) {
        sender.clearListenersByScope(this), event.notify(t)
    }), i.addListener(communication.BaseDelegate.FAIL, this, function _onFail(sender, error) {
        sender.clearListenersByScope(this);
        NetworkErrorManager.handle(error, !1, function () {
            event.notify(null, error.getCode())
        })
    }), i.send(), event
},entities.FUTPack.prototype.purchase = function purchase(type) {
    var event = new UTObservable;
    if (this.isMyPack) return event.notify(null, enums.HTTPStatusCode.BAD_REQUEST), event;
    var t = {packId: this.id, currency: type}, i = new communication.EntitlementDelegate(t);
    return i.useClickShield(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, function _onSuccess(sender, t) {
        sender.clearListenersByScope(this), event.notify(t)
    }), i.addListener(communication.BaseDelegate.FAIL, this, function _onFail(sender, error) {
        sender.clearListenersByScope(this);
        NetworkErrorManager.handle(error, !1, function () {
            event.notify(null, error.getCode())
        })
    }), i.send(), event
},communication.PurchaseGroupDelegate = function (filter, t) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "store/purchaseGroup/" + filter.toLowerCase(), this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON, t && (this._urlVariables = {ppInfo: "true"})
},utils.JS.inherits(communication.PurchaseGroupDelegate, communication.BaseFUTDelegate),communication.PurchaseGroupDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.PERMISSION_DENIED:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.item.PermissionDeniedTitle", "popup.error.item.PermissionDenied");
            break;
        case enums.HTTPStatusCode.STATE_INVALID:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.item.InvalidStateTitle", "popup.error.item.InvalidState");
            break;
        case enums.HTTPStatusCode.NOT_ENOUGH_CREDIT:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.error.auctionInsufficientCoinsTitle", "popup.error.auctionInsufficientCoins");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
},NamespaceManager.Register("repositories"),repositories.Store = function () {
    function StoreRepository() {
    }

    return StoreRepository.prototype.getPacks = function (filter, t) {
        var event = new UTObservable, i = new communication.PurchaseGroupDelegate(filter, t);
        return i.useClickShield(!0), i.addListener(communication.BaseDelegate.SUCCESS, this, function onSuccess(sender, response) {
            sender.clearListenersByScope(this);
            var t = [];
            response.purchase.forEach(function (data) {
                if (data.state !== enums.Purchase.PackState.HIDDEN) {
                    var i = new entities.FUTPack(data);
                    t.push(i)
                }
            }), event.notify(t)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function onFail(sender, error) {
            sender.clearListenersByScope(this);
            var t = function () {
                event.notify([])
            };
            error.getCode() === enums.HTTPStatusCode.SERVICE_IS_DISABLED ? (gSettingsModel.disableService(models.SettingsModel.STORE_ENABLED), t()) : NetworkErrorManager.handle(error, !1, t)
        }), i.send(), event
    }, new StoreRepository
}(),communication.DreamTemplateDelegate = function () {
    communication.BaseDelegate.call(this)
},utils.JS.inherits(communication.DreamTemplateDelegate, communication.BaseDelegate),communication.DreamTemplateDelegate.prototype.send = function send() {
    utils.ResourceManager.RequestResource(utils.AssetLocator.getDreamSquadTemplateURI(), function _onCacheSuccess(value) {
        this.setRequest(value.path, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), communication.DreamTemplateDelegate.superClass_.send.call(this)
    }.bind(this), function _onCacheFail() {
        this.onFail(enums.HTTPStatusCode.NETWORK_ERROR)
    }.bind(this))
},communication.GetShowOffSquadsDelegate = function () {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "showoff", enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.GetShowOffSquadsDelegate, communication.BaseFUTDelegate),communication.LoadShowOffSquadDelegate = function (t, i) {
    communication.BaseDelegate.call(this), this._shardPath = t, this.setRequest("/ut/showofflink/" + i, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.LoadShowOffSquadDelegate, communication.BaseDelegate),communication.LoadShowOffSquadDelegate.prototype.generateURL = function () {
    return this._shardPath + this._url
},communication.LoadShowOffSquadDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.NO_USER:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.ineligibleshowoffsquad.title", "popup.ineligibleshowoffsquad.message");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
},communication.SquadsListDelegate = function () {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "squad/list", enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.SquadsListDelegate, communication.BaseFUTDelegate),communication.SquadLoadDelegate = function SquadLoadDelegate(t, i) {
    communication.BaseFUTDelegate.call(this);
    var s = enums.UserSquadId.ACTIVE;
    if (utils.JS.isNumber(t) && t >= 0) s = t.toString(); else {
        var o;
        for (o in enums.UserSquadId) enums.UserSquadId.hasOwnProperty(o) && enums.UserSquadId[o] === t && (s = t)
    }
    var url = communication.BaseFUTDelegate.REQUEST_ROOT + "squad/" + s;
    utils.JS.isNumber(i) && i > 0 && (url += "/user/" + i.toString()), this.setRequest(url, enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON)
},utils.JS.inherits(communication.SquadLoadDelegate, communication.BaseFUTDelegate),NamespaceManager.Register("transferobjects"),transferobjects.ShowOffSquad = function (t, i) {
    this.squad = t, this.id = i.showoffid, this.url = gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_SHOW_OFF_URL) + i.url, this.timestamp = i.timestamp, this.viewcount = i.viewcount, this.persona = i.persona, this.platform = i.platform,
        this.clubName = utils.JS.isValid(this.squad) ? i.data.squad[0].clubName : "", this.clubAbbr = utils.JS.isValid(this.squad) ? i.data.squad[0].clubAbbr : "", this.estDate = utils.JS.isValid(this.squad) ? i.data.squad[0].estDate : ""
},NamespaceManager.Register("repositories"),repositories.Squad = function () {
    function SquadRepository() {
        this._squads = new UTHashTable({}), this._showOffSquads = new UTHashTable({}), this._formations = new UTHashTable({}), this._positions = new UTHashTable({}), this._activeSquad = 0, this._cacheExpiration = {}, this.unauthenticatedShowOffId = "", this.MAX_SQUADS = 15, this.MAX_SHOWOFF_SQUADS = 10
    }

    return SquadRepository.prototype.reset = function reset() {
        this._activeSquad = 0, this._cacheExpiration = {}, this._squads.clear(), this._showOffSquads.clear(), this._formations.clear(), this._positions.clear()
    }, SquadRepository.prototype.setDirty = function setDirty() {
        this._cacheExpiration = {}
    }, SquadRepository.prototype.isSquadListFull = function isSquadListFull() {
        var event = new UTObservable;
        return this.getSquads(!1).observe(this, function (t, i) {
            t.unobserve(this), event.notify(i.length >= this.MAX_SQUADS)
        }), event
    }, SquadRepository.prototype.isShowOffListFull = function isShowOffListFull() {
        return this._showOffSquads.length >= this.MAX_SHOWOFF_SQUADS
    }, SquadRepository.prototype.hasExternalShowOffSquad = function hasExternalShowOffSquad() {
        return !utils.JS.isEmpty(this.unauthenticatedShowOffId)
    }, SquadRepository.prototype.getActiveSquadId = function getActiveSquadId() {
        return this._activeSquad
    }, SquadRepository.prototype.setActiveSquadId = function setActiveSquadId(id) {
        this._activeSquad = id
    }, SquadRepository.prototype.set = function set(t, i) {
        var id = i.getId();
        if (this._squads.has(t)) this._squads.get(t).has(id) ? this._squads.get(t).get(id).update(i) : this._squads.get(t).set(id, i); else {
            var s = {};
            s[id] = i, this._squads.set(t, new UTHashTable(s))
        }
    }, SquadRepository.prototype._getSquads = function _getSquads(t, i) {
        var s = this._squads.get(t).values();
        return i || (s = s.filter(function (t) {
            return !t.isGenerations()
        })), s
    }, SquadRepository.prototype.getSquads = function getSquads(t) {
        var event = new UTObservable, i = services.User.getUser().selectedPersona;
        if (t = !!utils.JS.isBoolean(t) && t, this._cacheExpiration.getSquads && this._cacheExpiration.getSquads > Date.now()) return event.notify(this._getSquads(i, t)), event;
        this._squads.has(i) && this._squads.get(i).clear();
        var s = new communication.SquadsListDelegate;
        return s.addListener(communication.BaseDelegate.SUCCESS, this, function _onGetSquadSuccess(sender, result) {
            sender.clearListenersByScope(this), this._activeSquad = result.activeSquadId, this._cacheExpiration.getSquads = Date.now() + 6e5, result.squad.forEach(function (data) {
                this.storeSquad(i, data).observe(this, function (t, i) {
                    t.unobserve(this), i.setCacheTimestamp(0)
                })
            }, this), event.notify(this._getSquads(i, t))
        }), s.addListener(communication.BaseDelegate.FAIL, this, function _onGetSquadFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                event.notify([])
            }.bind(this))
        }), s.useClickShield(!0), s.send(), event
    }, SquadRepository.prototype.getSquadById = function getSquadById(id, t) {
        var event = new UTObservable;
        if (t = utils.JS.isNumber(t) ? t : services.User.getUser().selectedPersona, this._squads.has(t) && this._squads.get(t).get(id) && !this._squads.get(t).get(id).isCacheExpired()) return event.notify(this._squads.get(t).get(id)), event;
        var i = new communication.SquadLoadDelegate(id, t);
        return i.addListener(communication.BaseDelegate.SUCCESS, this, function _onGetSquadSuccess(sender, data) {
            sender.clearListenersByScope(this), this.storeSquad(data.personaId, data).observe(this, function (i, s) {
                i.unobserve(this), utils.JS.isNumber(t) && t < 1 && (this._activeSquad = s.getId()), s.setCacheTimestamp(Date.now()), event.notify(s, null)
            })
        }), i.addListener(communication.BaseDelegate.FAIL, this, function _onGetSquadFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                event.notify(null, error)
            }.bind(this))
        }), i.useClickShield(!0), i.send(), event
    }, SquadRepository.prototype.getSquadsByType = function getSquadsByType(type, t) {
        function isSameType(t) {
            return t.getType() === type
        }

        var event = new UTObservable, i = {success: !1, squads: [], error: null};
        return t = utils.JS.isNumber(t) ? t : services.User.getUser().selectedPersona, this.getSquads().observe(this, function (t, data) {
            t.unobserve(this), i.success = !0, i.squads = data.filter(isSameType), event.notify(i)
        }), event
    }, SquadRepository.prototype.getShowOffSquads = function getShowOffSquads() {
        var event = new UTObservable, t = {success: !1, showOffSquads: [], error: null};
        if (this._cacheExpiration.getShowOffSquads && this._cacheExpiration.getShowOffSquads > Date.now()) return t.success = !0, t.showOffSquads = this._showOffSquads.values(), event.notify(t), event;
        var i = new communication.GetShowOffSquadsDelegate;
        return i.addListener(communication.BaseDelegate.SUCCESS, this, function _onShowOffLoadSuccess(sender, data) {
            this._cacheExpiration.getShowOffSquads = Date.now() + 6e5, data["showoff-list"].showOff.forEach(function (t) {
                var i = new transferobjects.ShowOffSquad(factories.Squad.createSquad(t.data.squad[0]), t);
                this.addShowOffSquad(i)
            }, this), t.success = !0, t.showOffSquads = this._showOffSquads.values(), event.notify(t)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function _onShowOffLoadFail(sender, error) {
            NetworkErrorManager.handle(error, !1, function () {
                t.error = error, event.notify(t)
            }.bind(this))
        }), i.useClickShield(!0), i.send(), event
    }, SquadRepository.prototype.addShowOffSquad = function addShowOffSquad(t) {
        this._showOffSquads.set(t.id, t)
    }, SquadRepository.prototype.removeShowOffSquad = function removeShowOffSquad(t) {
        this._showOffSquads.remove(t)
    }, SquadRepository.prototype.loadShowOffSquad = function loadShowOffSquad() {
        function _onShowOffLoadSuccess(sender, response) {
            sender.clearListenersByScope(this), this.unauthenticatedShowOffId = "";
            var i = factories.Squad.createSquad(response.data.squad[0]);
            i.setShowOff(!0), t.success = !0, t.showOffDTO = new transferobjects.ShowOffSquad(i, response), event.notify(t)
        }

        function _onShowOffFail(sender, error) {
            sender.clearListenersByScope(this), this.unauthenticatedShowOffId = "", NetworkErrorManager.handle(error, !1, function () {
                t.error = error, event.notify(t)
            }.bind(this))
        }

        function _showOffLoad(t) {
            var i = t.protocol + "://" + t.hostname.split(":")[0], o = new communication.LoadShowOffSquadDelegate(i, s);
            o.addListener(communication.BaseDelegate.SUCCESS, this, _onShowOffLoadSuccess), o.addListener(communication.BaseDelegate.FAIL, this, _onShowOffFail), o.addListener(communication.BaseDelegate.CANCEL, this, _onShowOffFail), o.useClickShield(!0), o.send()
        }

        var event = new UTObservable, t = {success: !1, showOffDTO: null, error: null},
            i = decodeURIComponent(this.unauthenticatedShowOffId).split(":");
        if (!this.hasExternalShowOffSquad() || 2 !== i.length) return event.notify(t), event;
        var s = i[0], o = i[1], l = services.Authentication.getServerShardBySKU(o);
        return utils.JS.isValid(l) ? _showOffLoad.call(this, l) : services.Authentication.requestServerShards().observe(this, function _onRequestServerShardsComplete(i, response) {
            i.unobserve(this);
            var s = response.data.shards, l = s.length;
            if (response.success && l > 0) {
                for (; l-- > 0;) if (s[l].supportsSKU(o)) return void _showOffLoad.call(this, s[l])
            } else this.unauthenticatedShowOffId = "", event.notify(t)
        }), event
    }, SquadRepository.prototype.getGenerationsSquad = function getGenerationsSquad(t) {
        function _loadSquadStaticData(t) {
            function _onStaticLoadComplete(o) {
                o.unobserve(this), ++s === i.length && event.notify(t)
            }

            var i = t.getSlots(), s = 0;
            i.forEach(function (t) {
                t.getItem().loadStaticData().observe(this, _onStaticLoadComplete)
            })
        }

        var event = new UTObservable, i = services.User.getUser().selectedPersona, id = entities.Squad.GENERATIONS_ID;
        if (t = !utils.JS.isBoolean(t) || t, this._squads.has(i) && this._squads.get(i).get(id)) {
            var s = this._squads.get(i).get(id);
            return t ? _loadSquadStaticData.call(this, s) : event.notify(s), event
        }
        var o = new communication.SquadLoadDelegate(enums.UserSquadId.GENERATIONS);
        return o.addListener(communication.BaseDelegate.SUCCESS, this, function _onGetSquadSuccess(sender, data) {
            sender.clearListenersByScope(this), this.storeSquad(i, data).observe(this, function (i, s) {
                i.unobserve(this),
                    t ? _loadSquadStaticData.call(this, s) : event.notify(s), s.setCacheTimestamp(Date.now())
            })
        }), o.addListener(communication.BaseDelegate.FAIL, this, function _onGetSquadFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                event.notify(null)
            }.bind(this))
        }), o.useClickShield(!0), o.send(), event
    }, SquadRepository.prototype.storeSquad = function storeSquad(t, data) {
        var event = new UTObservable, i = factories.Squad.createSquad(data), id = i.getId();
        return this.set(t, i), event.notify(this._squads.get(t).get(id)), event
    }, SquadRepository.prototype.removeSquad = function removeSquad(t, i) {
        this._squads.has(t) && this._squads.get(t).remove(i)
    }, SquadRepository.prototype.getFormation = function getFormation(name) {
        return this._formations.get(name)
    }, SquadRepository.prototype.getFormations = function getFormations() {
        return this._formations.values()
    }, SquadRepository.prototype.getPosition = function getPosition(id) {
        return this._positions.get(id)
    }, SquadRepository.prototype.getPositionByUniqueName = function getPositionByUniqueName(t) {
        return utils.JS.find(this._positions.values(), function (position) {
            return position.getName() === t
        })
    }, SquadRepository.prototype.setSquadDataLookup = function setSquadDataLookup(data) {
        data.formationData.forEach(function (t) {
            var i = utils.JS.find(data.chemLinks, function (links) {
                return links.formationName === t.name
            }), links = i ? i.linkData.map(function (link) {
                return new transferobjects.SquadLink(link)
            }) : [], s = t.uniquePositionSlots.map(function (i, s) {
                var o = t.generalPositionSlots[s], l = data.positionBonusTable[o].map(function (t) {
                    return data.bonusValues.Position[t]
                });
                return new transferobjects.SquadPosition(data.positionData[i], l)
            }), o = new transferobjects.SquadFormation(t, data.bonusValues.Team, links, s);
            this._formations.set(o.getName(), o)
        }, this), data.positionData.forEach(function (position) {
            var t = new transferobjects.SquadPosition(position, []);
            this._positions.set(position.uniqueId, t)
        }, this)
    }, SquadRepository.prototype.removeItemsFromSquads = function removeItemsFromSquads(t) {
        function _removeItemFromSquad(t, item) {
            (item.isPlayer() || item.isManager()) && t.forEach(function (t) {
                t.containsItem(item, !0) && t.removeItem(item)
            }, this)
        }

        this.getSquads(!0).observe(this, function (i, data) {
            i.unobserve(this), Array.isArray(t) ? t.forEach(function (t) {
                _removeItemFromSquad.call(this, data, t)
            }, this) : _removeItemFromSquad.call(this, data, t)
        })
    }, new SquadRepository
}(),communication.GenerationsTeamsConfigDelegate = function () {
    communication.TeamsConfigDelegate.call(this)
},utils.JS.inherits(communication.GenerationsTeamsConfigDelegate, communication.TeamsConfigDelegate),communication.GenerationsTeamsConfigDelegate.prototype.execute = function () {
    var url = utils.AssetLocator.getGenerationsStaticTeamConfigURI();
    this.setCache(isWeb()), utils.ResourceManager.RequestResource(url, this.onResourceCached.bind(this), this.onResourceCacheFailed.bind(this))
},LeagueRepository.prototype.add = function add(t) {
    Array.isArray(t) ? t.forEach(function (t) {
        this._leagues.set(t.id, t)
    }, this) : this._leagues.set(t.id, t)
},LeagueRepository.prototype.get = function get(t) {
    return this._leagues.get(t)
},LeagueRepository.prototype.values = function values() {
    return this._leagues.values()
},NationRepository.prototype.add = function add(t) {
    Array.isArray(t) ? t.forEach(function (n) {
        this._nations.set(n.id, n)
    }, this) : this._nations.set(t.id, t)
},NationRepository.prototype.get = function get(t) {
    return this._nations.get(t)
},NationRepository.prototype.values = function values() {
    return this._nations.values()
},TeamRepository.prototype.add = function add(t) {
    Array.isArray(t) ? t.forEach(function (t) {
        this._teams.set(t.id, t)
    }, this) : this._teams.set(t.id, t)
},TeamRepository.prototype.get = function get(t) {
    return this._teams.get(t)
},TeamRepository.prototype.values = function values() {
    return this._teams.values()
},NamespaceManager.Register("transferobjects"),transferobjects.League = function LeagueDTO(data, t, i) {
    this.id = data.LeagueId, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.nation = data.NationId, Object.defineProperty(this, "nation", {
        writable: !1,
        enumerable: !0
    }), this.name = utils.FUTLocalization.getLeagueNameByID(this.id, t || enums.Year.ASSET), Object.defineProperty(this, "name", {
        writable: !1,
        enumerable: !0
    }), this.abbreviation = utils.FUTLocalization.getLeagueAbbr5ByID(this.id, t || enums.Year.ASSET), Object.defineProperty(this, "abbreviation", {
        writable: !1,
        enumerable: !0
    }), this.sortName = utils.TextUtils.stripSpecialCharacters(this.name).toLowerCase(), Object.defineProperty(this, "sortName", {
        writable: !1,
        enumerable: !0
    }), this.legend = i || !1, Object.defineProperty(this, "legend", {writable: !1, enumerable: !0})
},NamespaceManager.Register("transferobjects"),transferobjects.Nation = function NationDTO(id) {
    this.id = id, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.name = utils.FUTLocalization.getNationAbb12ById(id), Object.defineProperty(this, "name", {
        writable: !1,
        enumerable: !0
    }), this.sortName = utils.TextUtils.stripSpecialCharacters(this.name).toLowerCase(), Object.defineProperty(this, "sortName", {
        writable: !1,
        enumerable: !0
    })
},NamespaceManager.Register("transferobjects"),transferobjects.TeamKit = function TeamKitDTO(data) {
    this.localized = data.L || !1, Object.defineProperty(this, "localized", {
        writable: !1,
        enumerable: !0
    }), this.year = data.Y || 0, Object.defineProperty(this, "year", {
        writable: !1,
        enumerable: !0
    }), this.type = data.type || 0, Object.defineProperty(this, "type", {
        writable: !1,
        enumerable: !0
    }), this.V2 = data.V2 || !1, Object.defineProperty(this, "V2", {
        writable: !1,
        enumerable: !1
    }), this.V4 = data.V4 || !1, Object.defineProperty(this, "V4", {
        writable: !1,
        enumerable: !1
    }), this.V6 = data.V6 || !1, Object.defineProperty(this, "V6", {writable: !1, enumerable: !1})
},NamespaceManager.Register("transferobjects"),transferobjects.Team = function TeamDTO(data, t, i) {
    this.id = data.TeamId, Object.defineProperty(this, "id", {
        writable: !1,
        enumerable: !0
    }), this.league = data.LeagueId, Object.defineProperty(this, "league", {
        writable: !1,
        enumerable: !0
    }), this.kits = Array.isArray(data.Kit) ? data.Kit.map(function (t) {
        return new transferobjects.TeamKit(t)
    }) : [], Object.defineProperty(this, "kits", {
        writable: !1,
        enumerable: !0
    }), this.name = utils.FUTLocalization.getTeamAbb15ByID(data.TeamId, t || enums.Year.ASSET), Object.defineProperty(this, "name", {
        writable: !1,
        enumerable: !0
    }), this.sortName = utils.TextUtils.stripSpecialCharacters(this.name).toLowerCase(), Object.defineProperty(this, "sortName", {
        writable: !1,
        enumerable: !0
    }), this.legend = i || !1, Object.defineProperty(this, "legend", {
        writable: !1,
        enumerable: !0
    }), this.R = data.R || 0, Object.defineProperty(this, "R", {
        writable: !1,
        enumerable: !1
    }), this.G = data.G || 0, Object.defineProperty(this, "G", {
        writable: !1,
        enumerable: !1
    }), this.B = data.B || 0, Object.defineProperty(this, "B", {writable: !1, enumerable: !1})
},NamespaceManager.Register("repositories"),repositories.TeamConfig = function () {
    function _sortByName(a, b) {
        return utils.JS.sortCompare(a.sortName, b.sortName)
    }

    function TeamConfigRepository() {
        this._nations = new UTHashTable({}), Object.defineProperty(this, "_nations", {
            writable: !1,
            enumerable: !1
        }), this._leagues = new UTHashTable({}), Object.defineProperty(this, "_leagues", {
            writable: !1,
            enumerable: !1
        }), this._teams = new UTHashTable({}), Object.defineProperty(this, "_teams", {writable: !1, enumerable: !1})
    }

    return TeamConfigRepository.prototype.reset = function reset() {
        this._nations.clear(), this._leagues.clear(), this._teams.clear()
    }, TeamConfigRepository.prototype.addNations = function addNations(t, i) {
        var s = t.map(function (id) {
            return new transferobjects.Nation(id)
        });
        this._nations.has(i) ? this._nations.get(i).add(s) : this._nations.set(i, new NationRepository(s))
    }, TeamConfigRepository.prototype.getNation = function getNation(id, t) {
        return t || (t = enums.Year.ASSET), this._nations.has(t) ? this._nations.get(t).get(id) : null
    }, TeamConfigRepository.prototype.getNationsByYear = function getNationsByYear(t) {
        return this._nations.has(t) ? this._nations.get(t).values().sort(_sortByName) : []
    }, TeamConfigRepository.prototype.addLeagues = function addLeagues(t, i, s) {
        var o = t.map(function (t) {
            return new transferobjects.League(t, i, s)
        });
        this._leagues.has(i) ? this._leagues.get(i).add(o) : this._leagues.set(i, new LeagueRepository(o))
    },
        TeamConfigRepository.prototype.getLeague = function getLeague(id, t) {
            return t || (t = enums.Year.ASSET), this._leagues.has(t) ? this._leagues.get(t).get(id) : null
        }, TeamConfigRepository.prototype.getLeaguesByYear = function getLeaguesByYear(t, i) {
        if (this._leagues.has(t)) {
            var s = this._leagues.get(t).values();
            return i && (s = s.filter(function (t) {
                return !t.legend
            })), s.sort(_sortByName)
        }
        return []
    }, TeamConfigRepository.prototype.addTeams = function addTeams(t, i, s) {
        var o = t.map(function (t) {
            return new transferobjects.Team(t, i, s)
        });
        this._teams.has(i) ? this._teams.get(i).add(o) : this._teams.set(i, new TeamRepository(o))
    }, TeamConfigRepository.prototype.getTeam = function getTeam(id, t) {
        return t || (t = enums.Year.ASSET), this._teams.has(t) ? this._teams.get(t).get(id) : null
    }, TeamConfigRepository.prototype.getTeamsByYear = function getTeamsByYear(t, i) {
        if (this._teams.has(t)) {
            var s = this._teams.get(t).values();
            return i && (s = s.filter(function (t) {
                return !t.legend
            })), s.sort(_sortByName)
        }
        return []
    }, TeamConfigRepository.prototype.getPreviousYearsData = function getPreviousYearsData() {
        var event = new UTObservable;
        if (this._teams.has(enums.Year.ASSET - 1)) return event.notify(!0), event;
        var t = new communication.GenerationsTeamsConfigDelegate;
        return t.addListener(communication.BaseDelegate.SUCCESS, this, function _onGetDataSuccess(sender) {
            sender.clearListenersByScope(this), event.notify(!0)
        }), t.addListener(communication.BaseDelegate.FAIL, this, function _onGetDataFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                event.notify(!1)
            }.bind(this))
        }), t.useClickShield(!0), t.execute(), event
    }, new TeamConfigRepository
}(),communication.SearchAuctionDelegate = function (requestData) {
    communication.BaseFUTDelegate.call(this), this._url = communication.BaseFUTDelegate.REQUEST_ROOT + "transfermarket", this._requestType = enums.HTTPRequestMethod.GET, this._dataType = models.CommunicationModel.RESPONSE.TEXT_JSON, this._contentType = enums.HTTPContentType.JSON;
    var t = {};
    t.start = requestData.offset, t.num = requestData.count, t.type = requestData.type === enums.SearchType.ANY ? enums.SearchType.PLAYER : requestData.type, requestData.defId > 0 ? t.definitionId = requestData.defId & (enums.ItemMask.DATABASE | enums.ItemMask.REVISION) : requestData.maskedDefId > 0 ? t.maskedDefId = requestData.maskedDefId & enums.ItemMask.DATABASE : requestData.category !== enums.SearchCategory.ANY && (t.cat = requestData.category), requestData.zone !== enums.SearchType.ANY ? t.zone = requestData.zone : requestData.position !== enums.SearchType.ANY && (t.pos = requestData.position), t.type === enums.SearchType.PLAYER && requestData.level === enums.SearchLevel.SPECIAL ? t.rare = requestData.level : requestData.level !== enums.SearchLevel.ANY && (t.lev = requestData.level), requestData.nation > 0 && (t.nat = requestData.nation), requestData.league > 0 && (t.leag = requestData.league), requestData.club > 0 && (t.team = requestData.club), requestData.playStyle > 0 && (t.playStyle = requestData.playStyle), requestData.minBid && (t.micr = requestData.minBid), requestData.maxBid && (t.macr = requestData.maxBid), requestData.minBuy > 0 && (t.minb = requestData.minBuy), requestData.maxBuy > 0 && (t.maxb = requestData.maxBuy), this.setURLVariables(t), this.setCache(!1), this.useClickShield(!0)
},utils.JS.inherits(communication.SearchAuctionDelegate, communication.BaseFUTDelegate),NamespaceManager.Register("repositories"),repositories.TransferMarket = function () {
    function TransferMarketRepository() {
    }

    return TransferMarketRepository.prototype.search = function (t) {
        var event = new UTObservable, i = {success: !1, items: [], error: null},
            s = new communication.SearchAuctionDelegate(t);
        return s.addListener(communication.BaseDelegate.SUCCESS, this, function _onMarketSearchSuccess(sender, response) {
            sender.clearListenersByScope(this);
            var t = factories.Item.generateItemsFromAuctionData(response.auctionInfo || [], response.duplicateItemIdList || []);
            i.success = !0, i.items = t, event.notify(i)
        }), s.addListener(communication.BaseDelegate.FAIL, this, function _onMarketSearchFail(sender, error) {
            sender.clearListenersByScope(this), NetworkErrorManager.handle(error, !1, function () {
                error.getCode() === enums.HTTPStatusCode.SERVICE_IS_DISABLED && gSettingsModel.disableService(models.SettingsModel.TRADING_ENABLED), i.error = error, event.notify(i)
            })
        }), s.send(), event
    }, new TransferMarketRepository
}(),utils.JS.inherits(UTRootPresentationController, UTPresentationController),UTRootPresentationController.prototype._presentInContainerContext = function _presentInContainerContext() {
    var t = this._presentedViewController.getView(), i = t.getRootElement();
    i.style.width = "100%", i.style.height = "100%", this._insertView(t, this._presentingViewController.getView())
},utils.JS.inherits(UTTabBarItemNotificationView, FUIView),UTTabBarItemNotificationView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("view-tab-bar-item-notif"), this.__root = t, this._generated = !0
    }
},UTTabBarItemNotificationView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
},UTTabBarItemNotificationView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTTabBarItemNotificationView.prototype.getRootElement = function getRootElement() {
    return this.__root
},UTTabBarItemNotificationView.prototype.setNumber = function setNumber(value) {
    var t = utils.JS.isValid(value) && value > 0;
    this.getRootElement().textContent = t ? services.Localization.localizeNumber(value) : ""
},utils.JS.inherits(UTTabBarItemView, FUIButton),UTTabBarItemView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("button");
        t.classList.add("view-tab-bar-item"), this.__root = t, this._generated = !0
    }
},UTTabBarItemView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
},UTTabBarItemView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTTabBarItemView.prototype.getRootElement = function getRootElement() {
    return this.__root
},UTTabBarItemView.prototype.dealloc = function dealloc() {
    this.removeNotificationBubble(), this.superclass()
},UTTabBarItemView.prototype.setTag = function setTag(t) {
    this._tag = t
},UTTabBarItemView.prototype.getTag = function getTag() {
    return this._tag
},UTTabBarItemView.prototype.removeNotificationBubble = function removeNotificationBubble() {
    utils.JS.isValid(this._notifBubble) && (this._notifBubble.dealloc(), this._notifBubble = null)
},UTTabBarItemView.prototype.addNotificationBubble = function addNotificationBubble() {
    utils.JS.isValid(this._notifBubble) || (this._notifBubble = new UTTabBarItemNotificationView, this.addSubview(this._notifBubble), this.layoutSubviews())
},utils.JS.inherits(UTTabBarView, FUITargetActionView),UTTabBarView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("section");
        t.classList.add("view-tab-bar-container"), this.__navTabBar = document.createElement("nav"), this.__navTabBar.classList.add("view-tab-bar"), t.appendChild(this.__navTabBar), this.__root = t, this._generated = !0
    }
},UTTabBarView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__navTabBar = null
},UTTabBarView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTTabBarView.prototype.getRootElement = function getRootElement() {
    return this.__root
},UTTabBarView.Event = {TAB_SELECTED: "UTTabBarView.Event.TAB_SELECTED"},UTTabBarView.prototype.dealloc = function dealloc() {
    this.superclass(), this._tabItems.forEach(function (item) {
        item.removeTarget(this, this._eTabSelected, enums.Event.TAP)
    }, this)
},UTTabBarView.prototype.layoutSubviews = function layoutSubviews() {
    this._subviews.forEach(function (t) {
        var i = t.view.getRootElement();
        t.container === this.getRootElement() ? t.container.insertBefore(i, this.__navTabBar) : t.container.appendChild(i)
    }, this)
},UTTabBarView.prototype.setTabItems = function setTabItems(t) {
    this._tabItems.forEach(function (item) {
        item.removeFromSuperview()
    }, this), this._tabItems = t.slice(), this._tabItems.forEach(function (item) {
        item.addTarget(this, this._eTabSelected, enums.Event.TAP), this.addSubview(item, this.__navTabBar)
    }, this)
},UTTabBarView.prototype.setSelectedIndex = function setSelectedIndex(index) {
    this._tabItems[index] && this._tabItems.forEach(function (item, t) {
        item.toggleClass(enums.UIState.SELECTED, t === index)
    })
},UTTabBarView.prototype.toggleItemNotification = function toggleItemNotification(index, t) {
    var item = this._tabItems[index];
    item && (t ? item.addNotificationBubble() : item.removeNotificationBubble())
},UTTabBarView.prototype._eTabSelected = function _eTabSelected(sender, event, data) {
    if (this.isInteractionEnabled()) {
        var index = this._tabItems.indexOf(sender);
        this._triggerActions(UTTabBarView.Event.TAB_SELECTED, {index: index, tag: sender.getTag()})
    }
},utils.JS.inherits(UTTabBarController, FUIViewController),UTTabBarController.prototype.initWithViewControllers = function initWithViewControllers(t) {
    if (!this.initialized) {
        var i = [];
        t.forEach(function (t) {
            this.addChildViewController(t), t.tabBarItem || (t.tabBarItem = new UTTabBarItemView, t.tabBarItem.init(), t.tabBarItem.setText(t.getNavigationTitle())), i.push(t.tabBarItem)
        }, this);
        var view = this.getView();
        view.setTabItems(i), view.addTarget(this, this._eTabSelected, UTTabBarView.Event.TAB_SELECTED), this.init()
    }
},UTTabBarController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTTabBarView
},UTTabBarController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(), !this._currentController && this._childViewControllers.length > 0 && (this._showController(this._childViewControllers[0]), this.getView().setSelectedIndex(0))
},UTTabBarController.prototype.getCurrentViewController = function getCurrentViewController() {
    return this._currentController
},UTTabBarController.prototype.setSelectedIndex = function setSelectedIndex(index) {
    var controller = this._childViewControllers[index];
    controller instanceof FUIViewController && (this.getView().setSelectedIndex(index), this._showController(controller))
},UTTabBarController.prototype._getIndexOfTabBarItemByTag = function _getIndexOfTabBarItemByTag(tag) {
    var t, index = -1, length = this._childViewControllers.length;
    for (t = 0; t < length; t++) {
        var item = this._childViewControllers[t].tabBarItem;
        if (item && item.getTag() === tag) {
            index = t;
            break
        }
    }
    return index
},UTTabBarController.prototype.setSelectedIndexByTag = function setSelectedIndexByTag(tag) {
    var index = this._getIndexOfTabBarItemByTag(tag);
    index >= 0 && this.setSelectedIndex(index)
},UTTabBarController.prototype._showController = function _showController(t, i) {
    if (this._currentController !== t) {
        var view = this.getView();
        gClickShield.showShield(components.ClickShield.SHIELD.INTERACTION), view.setInteractionState(!1);
        var s = this._currentController;
        if (this._currentController = t, this._currentView = t.getView(), s) {
            s.viewWillDisappear();
            var o = s.getView();
            o && o.removeFromSuperview(i)
        }
        this._currentController.viewWillAppear(), this._currentView.getSuperview() !== view && (view.addSubview(this._currentView), view.layoutSubviews()), view.setInteractionState(!0), s && s.viewDidDisappear(), this._currentController.viewDidAppear(), setTimeout(function () {
            gClickShield.hideShield(components.ClickShield.SHIELD.INTERACTION)
        }, 300)
    }
},UTTabBarController.prototype._eTabSelected = function _eTabSelected(sender, event, data) {
    var index = data ? data.index || 0 : 0, controller = this._childViewControllers[index];
    controller instanceof FUIViewController && (this.getView().setSelectedIndex(index), this._showController(controller))
},utils.JS.inherits(UTGameTabBarController, UTTabBarController),UTGameTabBarController.TabTag = {
    HOME: 0,
    SQUADS: 1,
    SBC: 2,
    TRANSFERS: 3,
    STORE: 4,
    CLUB: 5,
    SETTINGS: 6,
    LEADERBOARDS: 7
},UTGameTabBarController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(), this._toggleStoreNotificationBubble(services.User.getUser().getNumUnopenedPacks() > 0), getDefaultDispatcher().addObserver(enums.Notification.STORE_PACK_COUNT_CHANGE, this, this._nStorePackChange)
},UTGameTabBarController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(), getDefaultDispatcher().removeObserver(enums.Notification.STORE_PACK_COUNT_CHANGE, this)
},
UTGameTabBarController.prototype._toggleStoreNotificationBubble = function _toggleStoreNotificationBubble(t) {
    var i = this._getIndexOfTabBarItemByTag(UTGameTabBarController.TabTag.STORE);
    i >= 0 && this.getView().toggleItemNotification(i, t)
},UTGameTabBarController.prototype._eTabSelected = function _eTabSelected(sender, event, data) {
    data.tag !== UTGameTabBarController.TabTag.LEADERBOARDS || gSettingsModel.isServiceAvailable(models.SettingsModel.LEADERBOARDS_ENABLED) ? (this.superclass(sender, event, data), this._currentController instanceof FUINavigationController && this._currentController.popToRootViewController()) : services.Notification.queue([services.Localization.localize("popup.error.LeaderboardsDown"), enums.UINotificationType.NEGATIVE])
},UTGameTabBarController.prototype._nStorePackChange = function _nStorePackChange(t, sender, data) {
    this._toggleStoreNotificationBubble(data.unopenedPacks > 0)
},NamespaceManager.Register("interfaces"),interfaces.ListDataComponent = function () {
},interfaces.ListDataComponent.prototype.render = function (data) {
},interfaces.ListDataComponent.prototype.update = function (data) {
},NamespaceManager.Register("interfaces"),interfaces.ListRow = function () {
},interfaces.ListRow.prototype.setData = function (data) {
},interfaces.ListRow.prototype.getData = function () {
},interfaces.ListRow.prototype.render = function () {
},interfaces.ListRow.prototype.setDataComponent = function (t) {
},interfaces.ListRow.prototype.setAction = function (style, t) {
},interfaces.ListRow.prototype.setTapCallback = function (t) {
},NamespaceManager.Register("components"),components.ListRowPersona = function () {
    FUITargetActionView.call(this), this._data = {persona: null, club: null}, this._tapCallback = null, this._generate()
},utils.JS.inherits(components.ListRowPersona, FUITargetActionView),components.ListRowPersona.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("button");
        t.classList.add("ut-persona-selector-item"), t.classList.add("ut-group-button");
        var i = document.createElement("div");
        i.classList.add("ut-persona-selector-item-details"), this.__personaIcon = document.createElement("div"), this.__personaIcon.classList.add("btn-icon"), i.appendChild(this.__personaIcon), this.__personaName = document.createElement("span"), this.__personaName.classList.add("btn-text"), i.appendChild(this.__personaName), this.__clubName = document.createElement("span"), this.__clubName.classList.add("btn-subtext"), i.appendChild(this.__clubName), t.appendChild(i), this.__root = t, this._generated = !0
    }
},components.ListRowPersona.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__personaIcon = null, this.__personaName = null, this.__clubName = null
},components.ListRowPersona.prototype.getRoot = function getRoot() {
    return $(this.__root)
},components.ListRowPersona.prototype.getRootElement = function getRootElement() {
    return this.__root
},components.ListRowPersona.prototype.dealloc = function dealloc() {
    this._data = null, this._tapCallback = null, this.superclass()
},components.ListRowPersona.prototype.setData = function (data) {
    this._data = data
},components.ListRowPersona.prototype.getData = function () {
    return this._data
},components.ListRowPersona.prototype.render = function () {
    var t = "";
    switch (this._data.club.platform) {
        case enums.Platform.XBO:
            t = enums.UIPlatform.XBO;
            break;
        case enums.Platform.XBX:
            t = enums.UIPlatform.XBX;
            break;
        case enums.Platform.PS4:
            t = enums.UIPlatform.PS4;
            break;
        case enums.Platform.PS3:
            t = enums.UIPlatform.PS3;
            break;
        case enums.Platform.PC:
            t = enums.UIPlatform.PC;
            break;
        case enums.Platform.SWI:
            t = enums.UIPlatform.SWI;
            break;
        default:
            utils.Debug.Assert(!1, "[components.ListRowPersona] Unrecognized gameSku.")
    }
    this.__clubName.textContent = this._data.club.name, this.__personaName.textContent = this._data.persona.name, this.addClass(t)
},components.ListRowPersona.prototype.setDataComponent = function (t) {
},components.ListRowPersona.prototype.setAction = function (style, t) {
},components.ListRowPersona.prototype.setTapCallback = function setTapCallback(t) {
    this._tapCallback = t,
        this.addClass(enums.UIRowActionClass.MORE)
},components.ListRowPersona.prototype._touchStarted = function _touchStarted(e) {
    this.superclass(), this.addClass(enums.UIState.ACTIVE)
},components.ListRowPersona.prototype._touchMoved = function _touchMoved(e) {
    this.superclass(), this.removeClass(enums.UIState.ACTIVE)
},components.ListRowPersona.prototype._touchEnded = function _touchEnded(e) {
    this.superclass(), this.removeClass(enums.UIState.ACTIVE)
},components.ListRowPersona.prototype._tapDetected = function _tapDetected(e) {
    this.superclass(), utils.JS.isFunction(this._tapCallback) && this._tapCallback(this._data)
},NamespaceManager.Register("views.persona"),views.persona.PersonaSelector = function UTPersonaSelectorView() {
    FUITargetActionView.call(this), this._personaRows = [], this._generate()
},utils.JS.inherits(views.persona.PersonaSelector, FUITargetActionView),views.persona.PersonaSelector.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("ut-persona-selector"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content");
        var s = document.createElement("section"), o = document.createElement("header");
        this.__currentPersonaTitle = document.createElement("h1"), o.appendChild(this.__currentPersonaTitle), s.appendChild(o);
        var l = document.createElement("div");
        l.classList.add("ut-button-group"), this._selectedPersona = new components.ListRowPersona, l.appendChild(this._selectedPersona.getRootElement()), this.__helpText = document.createElement("p"), l.appendChild(this.__helpText), s.appendChild(l), i.appendChild(s);
        var u = document.createElement("section"), h = document.createElement("header");
        this.__changePersonaTitle = document.createElement("h1"), h.appendChild(this.__changePersonaTitle), u.appendChild(h), this.__personaList = document.createElement("div"), this.__personaList.classList.add("ut-button-group"), u.appendChild(this.__personaList), i.appendChild(u), t.appendChild(i), this.__root = t, this._generated = !0
    }
},views.persona.PersonaSelector.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__currentPersonaTitle = null, this._selectedPersona.destroy(), this.__helpText = null, this.__changePersonaTitle = null, this.__personaList = null
},views.persona.PersonaSelector.prototype.getRoot = function getRoot() {
    return $(this.__root)
},views.persona.PersonaSelector.prototype.getRootElement = function getRootElement() {
    return this.__root
},views.persona.PersonaSelector.prototype.init = function init() {
    this.superclass(), this.__currentPersonaTitle.textContent = services.Localization.localize("title.selectedpersona"), this.__changePersonaTitle.textContent = services.Localization.localize("title.personaselector"), this.__helpText.textContent = services.Localization.localize("persona.helptext")
},views.persona.PersonaSelector.prototype.dealloc = function dealloc() {
    this._clearPersonaRows(), this.superclass()
},views.persona.PersonaSelector.prototype._clearPersonaRows = function _clearPersonaRows() {
    this._personaRows.forEach(function (t) {
        t.destroy()
    }), this._personaRows = []
},views.persona.PersonaSelector.prototype.setSelectedPersona = function setSelectedPersona(t) {
    this._selectedPersona.setData({persona: t, club: t.getCurrentClub()}), this._selectedPersona.render()
},views.persona.PersonaSelector.prototype.setSelectablePersonas = function setSelectablePersonas(t) {
    this._clearPersonaRows(), DOMKit.empty(this.__personaList), t.forEach(function (t) {
        t.getValidClubs().forEach(function (i) {
            var s = new components.ListRowPersona;
            s.setData({
                persona: t,
                club: i
            }), s.render(), s.setTapCallback(this._onPersonaSelect.bind(this)), s.setInteractionState(!0), this._personaRows.push(s), this.__personaList.appendChild(s.getRootElement())
        }, this)
    }, this)
},views.persona.PersonaSelector.prototype._onPersonaSelect = function _onPersonaSelect(data) {
    TelemetryManager.trackEvent(TelemetryManager.Sections.MISC, TelemetryManager.Categories.BUTTON_PRESS, "Change Persona"), this._triggerActions(enums.Event.TAP, data)
},
utils.JS.inherits(UTPersonaSelectorViewController, FUIViewController),UTPersonaSelectorViewController.prototype.init = function init() {
    this.superclass(), this.getView().addTarget(this, this._ePersonaSelected, enums.Event.TAP)
},UTPersonaSelectorViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.persona.PersonaSelector
},UTPersonaSelectorViewController.prototype._getTelemetryId = function _getTelemetryId() {
    return "Settings - Persona Selector"
},UTPersonaSelectorViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(), TelemetryManager.trackPage(TelemetryManager.Sections.HOME, "Persona Selector");
    var view = this.getView(), t = services.User.getUser();
    view.setSelectedPersona(t.getSelectedPersona()), view.setSelectablePersonas(t.getPersonas(!0))
},UTPersonaSelectorViewController.prototype._changePersona = function _changePersona(t, i) {
    hasConnection() ? (t.sku = i, gAuthenticationModel.switchPersona(t)) : (utils.PopupManager.showNoInternetConnectionPopup(), this.getView().setInteractionState(!0))
},UTPersonaSelectorViewController.prototype._ePersonaSelected = function _ePersonaSelected(sender, event, data) {
    var view = this.getView();
    view.setInteractionState(!1), utils.PopupManager.ShowConfirmation(utils.PopupManager.Confirmations.CHANGE_PERSONA, null, this._changePersona.bind(this, data.persona, data.club.sku), function () {
        view.setInteractionState(!0)
    }.bind(this))
},NamespaceManager.Register("views"),views.Persona = function PersonaView() {
    FUIView.call(this), this._currentPlatform = enums.UIPlatform.NONE, this._generate()
},utils.JS.inherits(views.Persona, FUIView),views.Persona.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("persona"), this.__userInfo = document.createElement("div"), this.__userInfo.classList.add("user-info"), this._imgBadge = new components.ImageLoader, this.__userInfo.appendChild(this._imgBadge.getRootElement());
        var i = document.createElement("div");
        i.classList.add("user-data-container"), this.__userName = document.createElement("h1"), i.appendChild(this.__userName), this.__established = document.createElement("h2"), i.appendChild(this.__established), this.__userInfo.appendChild(i), t.appendChild(this.__userInfo), this.__platform = document.createElement("div"), this.__platform.classList.add("platform"), this._actionBtn = new views.buttons.FlatButton, this._actionBtn.getRootElement().classList.add("alt"), this.__platform.appendChild(this._actionBtn.getRootElement()), t.appendChild(this.__platform), this.__root = t, this._generated = !0
    }
},views.Persona.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__userInfo = null, this._imgBadge.destroy(), this.__userName = null, this.__established = null, this.__platform = null, this._actionBtn.destroy()
},views.Persona.prototype.getRoot = function getRoot() {
    return $(this.__root)
},views.Persona.prototype.getRootElement = function getRootElement() {
    return this.__root
},views.Persona.prototype.init = function init() {
    this.superclass(), this._actionBtn.setText(services.Localization.localize("more.persona")), this._actionBtn.init(), this._actionBtn.getRoot().hide()
},views.Persona.prototype.setClubBadge = function setClubBadge(t) {
    this._imgBadge.setResource(utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_BADGE_DARK, enums.Year.ASSET, t)), this._imgBadge.addClass("iconActive")
},views.Persona.prototype.setUsername = function setUsername(name) {
    this.__userName.textContent = name
},views.Persona.prototype.setEstablishedDate = function setEstablishedDate(time) {
    this.__established.textContent = services.Localization.localizeEstablishedDate(new Date(1e3 * time))
},views.Persona.prototype.setPlatform = function setPlatform(platform) {
    if (this._currentPlatform !== platform) {
        switch (this._currentPlatform !== enums.UIPlatform.NONE && this.__platform.classList.remove(this._currentPlatform), platform) {
            case enums.Platform.XBO:
                this._currentPlatform = enums.UIPlatform.XBO;
                break;
            case enums.Platform.XBX:
                this._currentPlatform = enums.UIPlatform.XBX;
                break;
            case enums.Platform.PS4:
                this._currentPlatform = enums.UIPlatform.PS4;
                break;
            case enums.Platform.PS3:
                this._currentPlatform = enums.UIPlatform.PS3;
                break;
            case enums.Platform.PC:
                this._currentPlatform = enums.UIPlatform.PC;
                break;
            case enums.Platform.SWI:
                this._currentPlatform = enums.UIPlatform.SWI;
                break;
            default:
                utils.Debug.Assert(!1, "Encountered an unsupported SKU")
        }
        this.__platform.classList.add(this._currentPlatform)
    }
},views.Persona.prototype.getActionButton = function getActionButton() {
    return this._actionBtn
},views.Persona.prototype.setBtnText = function setBtnText(text) {
    this._actionBtn.setText(text)
},views.Persona.prototype.setBtnVisibility = function setBtnVisibility(t) {
    this._actionBtn.setDisplay(t)
},NamespaceManager.Register("viewmodels"),viewmodels.ItemList = function ItemList(t) {
    UTIterator.call(this, t), this.dataUpdated = new UTObservable, Object.defineProperty(this, "dataUpdated", {writable: !1}), this._auctionUpdateArray = [], this._auctionUpdateTimer = null, this._auctionObservable = null, this._updateIntervals = [{
        expires: 30,
        interval: 1
    }, {expires: 60, interval: 5}, {expires: 600, interval: 120}, {expires: 3600, interval: 600}, {
        expires: 432e3,
        interval: 43200
    }], this._pendingExpiryUpdateInterval = 5e3, this.sortByRecency = !1, this.sort = enums.SearchSort.DESCENDING
},utils.JS.inherits(viewmodels.ItemList, UTIterator),viewmodels.ItemList.prototype.add = function add(t, index) {
    viewmodels.ItemList.superClass_.add.call(this, t, index), utils.JS.isNumber(index) || this._organizeItems()
},viewmodels.ItemList.prototype.addArray = function addArray(t) {
    var lastIndex = this.length;
    t.forEach(function (item) {
        this.add(item, lastIndex), lastIndex++
    }, this), this._organizeItems()
},viewmodels.ItemList.prototype.removeArray = function removeArray(t) {
    function isInArray(item) {
        return !!utils.JS.find(t, function (t) {
            return item.id === t.id
        })
    }

    var i = [];
    this._collection.forEach(function (item) {
        isInArray(item) || i.push(item)
    }), this._collection = i, this._organizeItems()
},viewmodels.ItemList.prototype.getItemList = function getItemList() {
    return this.values()
},viewmodels.ItemList.prototype._organizeItems = function _organizeItems() {
    if (0 !== this.length) {
        var t = this.values().sort(this.sortByType.bind(this));
        this.resetCollection(t)
    }
},viewmodels.ItemList.prototype._startAuctionUpdateTimer = function _startAuctionUpdateTimer() {
    this._auctionUpdateTimer ? (this._auctionUpdateTimer.reset(), this._auctionUpdateTimer.setInterval(1e3), this._auctionUpdateTimer.setWorkFunc(this.startAuctionUpdates.bind(this))) : this._auctionUpdateTimer = new utils.UTTimer(1e3, this.startAuctionUpdates.bind(this)), this._auctionUpdateTimer.start()
},viewmodels.ItemList.prototype.startAuctionUpdates = function startAuctionUpdates() {
    this.stopAuctionUpdates();
    var t = this._auctionUpdateArray.slice();
    this._auctionUpdateArray = this.values().filter(function (item) {
        var t = item.getAuctionData();
        if (!t.isUpdating && t.isActiveTrade()) {
            if ((t.expires <= 0 || t.getSecondsRemaining() <= 0) && t.getAge() < this._pendingExpiryUpdateInterval) return !1;
            for (var i = this._updateIntervals.length; i-- > 0;) {
                var s = this._updateIntervals[i];
                if (t.isStale() || t.getSecondsRemaining() <= s.expires && t.getAgeInSeconds() >= s.interval) return !0
            }
        }
        return !1
    }, this), this._auctionUpdateArray.length > 0 ? (this._auctionObservable = services.Item.refreshAuctions(this._auctionUpdateArray), this._auctionObservable.observe(this, function (t, response) {
        t.unobserve(this), this.dataUpdated.notify(), this._auctionObservable = null, this._startAuctionUpdateTimer()
    })) : (t.length > 0 && this.dataUpdated.notify(), this._startAuctionUpdateTimer())
},viewmodels.ItemList.prototype.stopAuctionUpdates = function stopAuctionUpdates() {
    this._auctionUpdateTimer && this._auctionUpdateTimer.reset(), this._auctionObservable && (this._auctionObservable.unobserve(this), this._auctionObservable = null)
},viewmodels.ItemList.prototype.sortByType = function sortByType(a, b) {
    var t, i = {
            RECENCY: 0,
            EXPIRY: 1,
            CONCEPT: 2,
            LOAN: 3,
            UNTRADEABLE: 4,
            DISCARD: 5,
            TYPE: 6,
            LEGEND: 7,
            SPECIAL: 8,
            TIER: 9,
            RARE: 10,
            RATING: 11,
            RESOURCE: 12
        },
        s = [enums.ItemType.PLAYER, enums.ItemType.MANAGER, enums.ItemType.HEAD_COACH, enums.ItemType.FITNESS_COACH, enums.ItemType.PHYSIO, enums.ItemType.GK_COACH, enums.ItemType.CONTRACT, enums.ItemType.HEALTH, enums.ItemType.TRAINING, enums.ItemType.BADGE, enums.ItemType.KIT, enums.ItemType.BALL, enums.ItemType.STADIUM, enums.ItemType.MISC];
    t = a.getAuctionData().isActiveTrade() && b.getAuctionData().isActiveTrade() ? [i.RECENCY, i.EXPIRY, i.DISCARD, i.TYPE, i.LEGEND, i.SPECIAL, i.TIER, i.RARE, i.RATING, i.RESOURCE] : this.sort === enums.SearchSort.ASCENDING ? [i.RECENCY, i.CONCEPT, i.DISCARD, i.LOAN, i.RATING, i.RESOURCE] : [i.RECENCY, i.CONCEPT, i.LOAN, i.UNTRADEABLE, i.DISCARD, i.TYPE, i.LEGEND, i.SPECIAL, i.TIER, i.RARE, i.RATING, i.RESOURCE];
    for (var o = this.sortByRecency ? 0 : 1, l = 0; 0 === l && o !== t.length;) l = function getCompareVal(step, a, b) {
        switch (step) {
            case i.RECENCY:
                return utils.JS.sortCompare(a.timestamp, b.timestamp, this.sort === enums.SearchSort.DESCENDING);
            case i.EXPIRY:
                return utils.JS.sortCompare(a.getAuctionData().getSecondsRemaining(), b.getAuctionData().getSecondsRemaining(), !1);
            case i.CONCEPT:
                return utils.JS.sortCompare(a.concept, b.concept, !0);
            case i.LOAN:
                return utils.JS.sortCompare(a.isLoaned(), b.isLoaned(), this.sort === enums.SearchSort.DESCENDING);
            case i.UNTRADEABLE:
                return utils.JS.sortCompare(a.untradeable, b.untradeable, !1);
            case i.DISCARD:
                return utils.JS.sortCompare(a.discardValue, b.discardValue, this.sort === enums.SearchSort.DESCENDING);
            case i.TYPE:
                return utils.JS.sortCompare(s.indexOf(a.type), s.indexOf(b.type), !1);
            case i.LEGEND:
                return utils.JS.sortCompare(a.isLegend(), b.isLegend(), !0);
            case i.SPECIAL:
                return utils.JS.sortCompare(a.isSpecial(), b.isSpecial(), !0);
            case i.TIER:
                return utils.JS.sortCompare(a.getTier(), b.getTier(), !0);
            case i.RARE:
                return utils.JS.sortCompare(a.rareflag, b.rareflag, !0);
            case i.RATING:
                return utils.JS.sortCompare(a.rating, b.rating, this.sort === enums.SearchSort.DESCENDING);
            case i.RESOURCE:
                return utils.JS.sortCompare(a.resourceId, b.resourceId, !1)
        }
        return 0
    }.call(this, t[o], a, b), o++;
    return l
},NamespaceManager.Register("viewmodels"),viewmodels.PaginatedItemList = function (t, i) {
    viewmodels.ItemList.call(this, t), this.numItemsPerPage = utils.JS.isNumber(i) && i > 0 ? i : 15, this.isFull = !1
},utils.JS.inherits(viewmodels.PaginatedItemList, viewmodels.ItemList),viewmodels.PaginatedItemList.prototype.resetCollection = function resetCollection(t) {
    this.superclass(t), this.isFull = !1
},viewmodels.PaginatedItemList.prototype.getCurrentPage = function getCurrentPage() {
    return Math.max(Math.ceil((this.getIndex() + 1) / this.numItemsPerPage), 1)
};
viewmodels.PaginatedItemList.prototype.getNumPages = function getNumPages() {
    return Math.max(Math.ceil(this.length / this.numItemsPerPage), 1)
}, viewmodels.PaginatedItemList.prototype._getPageStartIndex = function _getPageStartIndex(page) {
    return page >= 1 ? (page - 1) * this.numItemsPerPage : 0
}, viewmodels.PaginatedItemList.prototype.getPageItems = function getPageItems() {
    var t = this._getPageStartIndex(this.getCurrentPage());
    return this.values().slice(t, t + this.numItemsPerPage)
}, viewmodels.PaginatedItemList.prototype.hasPreviousPage = function hasPreviousPage() {
    return this.getCurrentPage() > 1
}, viewmodels.PaginatedItemList.prototype.hasNextPage = function hasNextPage() {
    return this.getCurrentPage() < this.getNumPages()
}, viewmodels.PaginatedItemList.prototype.canShowPage = function canShowPage(page) {
    if (page = utils.JS.isNumber(page) ? page : this.getCurrentPage(), utils.Debug.Assert(page > 0 && page <= this.getNumPages(), "viewmodels.PaginatedItemList::canShowPage. Page number out of bounds."), this.isFull) return !0;
    var index = this._getPageStartIndex(page);
    return this.values().slice(index, index + this.numItemsPerPage).length === this.numItemsPerPage
}, viewmodels.PaginatedItemList.prototype.previousPage = function previousPage() {
    return this.hasPreviousPage() && this.setIndex(this._getPageStartIndex(this.getCurrentPage() - 1)), this.getPageItems()
}, viewmodels.PaginatedItemList.prototype.nextPage = function nextPage() {
    return this.hasNextPage() && this.setIndex(this._getPageStartIndex(this.getCurrentPage() + 1)), this.getPageItems()
},
    NamespaceManager.Register("viewmodels"), viewmodels.Club = function ClubViewModel(t) {
    var i = gConfigurationModel.getConfigObject(models.ConfigurationModel.KEY_ITEMS_PER_PAGE),
        s = utils.JS.isValid(i) ? i[models.ConfigurationModel.ITEMS_PER_PAGE.CLUB] : 15;
    viewmodels.PaginatedItemList.call(this, t, s)
}, utils.JS.inherits(viewmodels.Club, viewmodels.PaginatedItemList), viewmodels.Club.prototype.shouldRequestItems = function shouldRequestItems() {
    return !this.isFull && this.length <= this.numItemsPerPage * this.getCurrentPage()
}, viewmodels.Club.prototype.removeEmptyConsumables = function removeEmptyConsumables() {
    var index = this.getIndex(), t = this.values(), i = this.isFull;
    t = t.filter(function (c) {
        return c.stackCount > 0
    }), this.resetCollection(t), this.isFull = i, this.setIndex(t.length > 0 ? Math.min(index, t.length - 1) : 0)
}, viewmodels.Club.prototype.getActiveItemsURLs = function getActiveItemsURLs() {
    return this._getItemsURLs()
}, viewmodels.Club.prototype.getActiveItemURL = function getActiveItemURL(t) {
    return this._getItemsURLs(t)
}, viewmodels.Club.prototype.getActiveItemsImgs = function getActiveItemsImgs() {
    var t, i = {}, s = this._getItemsURLs();
    for (t in s) if (s.hasOwnProperty(t)) {
        var o = parseInt(t, 10), l = this._getImageLoadListener(o), u = new components.ImageLoader;
        u.setResource(s[o], !0).observe(this, l), i[o] = u
    }
    return i
}, viewmodels.Club.prototype.getActiveItemImg = function getActiveItemImg(t) {
    var i = new components.ImageLoader, s = this._getImageLoadListener(t);
    return i.setResource(this.getActiveItemURL(t), !0).observe(this, s), i
}, viewmodels.Club.prototype._getImageLoadListener = function _getImageLoadListener(t) {
    var i;
    switch (t) {
        case enums.UIActiveItemImgType.HOME_KIT:
        case enums.UIActiveItemImgType.AWAY_KIT:
            i = this._onKitLoad;
            break;
        case enums.UIActiveItemImgType.BADGE_NORMAL:
        case enums.UIActiveItemImgType.BADGE_DARK:
            i = this._onBadgeLoad;
            break;
        case enums.UIActiveItemImgType.BALL:
            i = this._onBallLoad;
            break;
        case enums.UIActiveItemImgType.STADIUM:
            i = this._onStadiumLoad;
            break;
        default:
            i = this._onKitLoad
    }
    return i
}, viewmodels.Club.prototype._onKitLoad = function _onKitLoad(t, i, s, path) {
    t.unobserve(this), i || s.replaceAndShowResource(path.replace(/j(\d+)_\d+_\d+\.png/, "j$1_" + enums.PlaceholderAssetId.TEAM + "_" + enums.PlaceholderAssetId.KIT + ".png"))
}, viewmodels.Club.prototype._onBadgeLoad = function _onBadgeLoad(t, i, s, path) {
    t.unobserve(this), i || s.replaceAndShowResource(path.replace(/\d+\.png/, enums.PlaceholderAssetId.TEAM + ".png"))
}, viewmodels.Club.prototype._onBallLoad = function _onBallLoad(t, i, s, path) {
    t.unobserve(this), i || s.replaceAndShowResource(path.replace(/\d+\.png/, enums.PlaceholderAssetId.BALL + ".png"))
}, viewmodels.Club.prototype._onStadiumLoad = function _onStadiumLoad(t, i, s, path) {
    t.unobserve(this), i || s.replaceAndShowResource(path.replace(/\d+\.png/, enums.PlaceholderAssetId.STADIUM + ".png"))
}, viewmodels.Club.prototype._getItemsURLs = function _getItemsURLs(t) {
    var state, i = {}, s = utils.JS.isValid(t);
    if (s) switch (t) {
        case enums.UIActiveItemImgType.BADGE_NORMAL:
        case enums.UIActiveItemImgType.BADGE_DARK:
            state = enums.ItemState.ACTIVE_BADGE;
            break;
        case enums.UIActiveItemImgType.BALL:
            state = enums.ItemState.ACTIVE_BALL;
            break;
        case enums.UIActiveItemImgType.STADIUM:
            state = enums.ItemState.ACTIVE_STADIUM;
            break;
        case enums.UIActiveItemImgType.HOME_KIT:
            state = enums.ItemState.ACTIVE_HOME_KIT;
            break;
        case enums.UIActiveItemImgType.AWAY_KIT:
            state = enums.ItemState.ACTIVE_AWAY_KIT;
            break;
        default:
            utils.Debug.Assert(!1, "viewmodels.Club:_getItemsURLs. Expected an enums.UIActiveItemImgType.<number>")
    }
    return utils.JS.valToArray(repositories.Item.getActiveItems(state)).forEach(function (o) {
        if (utils.JS.isValid(o)) {
            var l, u = o.getStaticData(), h = o.getYear(), url = "";
            switch (o.state) {
                case enums.ItemState.ACTIVE_BADGE:
                    if (s && t !== enums.UIActiveItemImgType.BADGE_NORMAL || (url = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_BADGE_LIGHT, h, o.teamId), utils.AssetLocator.hasPlaceholder(enums.PlaceholderAssetKey.CREST, o.teamId.toString(), h, enums.PlaceholderAssetKey.CREST_LIGHT) && (url = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_BADGE_LIGHT, h)),
                            l = enums.UIActiveItemImgType.BADGE_NORMAL), !s || t === enums.UIActiveItemImgType.BADGE_DARK) {
                        var p = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_BADGE_DARK, h, o.teamId);
                        utils.AssetLocator.hasPlaceholder(enums.PlaceholderAssetKey.CREST, o.teamId.toString(), h, enums.PlaceholderAssetKey.CREST_DARK) && (p = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_BADGE_DARK, h)), i[enums.UIActiveItemImgType.BADGE_DARK] = p
                    }
                    break;
                case enums.ItemState.ACTIVE_BALL:
                    url = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_BALL, h, u.assetId), utils.AssetLocator.hasPlaceholder(enums.PlaceholderAssetKey.BALLS, u.assetId, h) && (url = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_BALL, h)), l = enums.UIActiveItemImgType.BALL;
                    break;
                case enums.ItemState.ACTIVE_STADIUM:
                    url = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_STADIUM_FULL, h, u.assetId), l = enums.UIActiveItemImgType.STADIUM;
                    break;
                case enums.ItemState.ACTIVE_HOME_KIT:
                    url = utils.AssetLocator.getImage(u.assetType, h, o.teamId, u.assetYear), utils.AssetLocator.hasPlaceholderKit(url, h) && (url = utils.AssetLocator.getImage(u.assetType, h)), l = enums.UIActiveItemImgType.HOME_KIT;
                    break;
                case enums.ItemState.ACTIVE_AWAY_KIT:
                    url = utils.AssetLocator.getImage(u.assetType, h, o.teamId, u.assetYear), utils.AssetLocator.hasPlaceholderKit(url, h) && (url = utils.AssetLocator.getImage(u.assetType, h)), l = enums.UIActiveItemImgType.AWAY_KIT
            }
            utils.JS.isEmpty(url) || (i[l] = url)
        }
    }), s ? i[t] : i
}, NamespaceManager.Register("controllers.views"), controllers.views.Persona = function PersonaViewController() {
    FUIViewController.call(this), this.showPersonaChanger = !0
}, utils.JS.inherits(controllers.views.Persona, FUIViewController), controllers.views.Persona.prototype.init = function init() {
    this.initialized || (this.superclass(), this.getView().getActionButton().addTarget(this, this._ePersonaSelectorSelected, enums.Event.TAP))
}, controllers.views.Persona.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.Persona
}, controllers.views.Persona.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var view = this.getView(), t = services.User.getUser(), state = services.Authentication.getFUTAuthState(),
        i = state !== enums.FUTAuthState.NO_DATA && t;
    if (view.setDisplay(i), i) {
        var s = t.getSelectedPersona(), o = s ? s.getCurrentClub() : null;
        s && (view.setBtnVisibility(this.showPersonaChanger && t.getPersonas(!0).length > 0), view.setPlatform(s.platform)), o && (view.setClubBadge(o.assetId), view.setEstablishedDate(o.established), view.setUsername(s.hasFUT && state === enums.FUTAuthState.COMPLETE ? s.name : o.name))
    }
}, controllers.views.Persona.prototype._ePersonaSelectorSelected = function _ePersonaSelectorSelected(sender, t) {
    var i = this.getNavigationController();
    if (i) {
        var s = new UTPersonaSelectorViewController;
        s.init(), i.pushViewController(s)
    }
}, NamespaceManager.Register("views"), views.TextInput = function FUITextInput() {
    FUIView.call(this), this._generate(), Object.defineProperty(this, "type", {
        get: function () {
            return this.getRoot().attr("type")
        }, set: function (t) {
            var key;
            for (key in enums.UIInputType) if (enums.UIInputType.hasOwnProperty(key) && enums.UIInputType[key] === t) return void this.getRoot().attr("type", t);
            utils.Debug.Assert(!1, "Invalid assignment to component: TextInput.type")
        }, enumerable: !0
    }), Object.defineProperty(this, "value", {
        get: function () {
            return this.getRoot().val().toString()
        }, set: function (t) {
            this.getRoot().val(t)
        }, enumerable: !0
    }), this.type = enums.UIInputType.TEXT, this.value = "", this.onChange = new UTObservable, Object.defineProperty(this, "onChange", {
        writable: !1,
        enumerable: !0
    }), this.onInput = new UTObservable, Object.defineProperty(this, "onInput", {
        writable: !1,
        enumerable: !0
    }), this._selectionTimeout = 0, Object.defineProperty(this, "_selectionTimeout", {
        writable: !0,
        enumerable: !1
    }), this._blurTimeout = 0, Object.defineProperty(this, "_blurTimeout", {writable: !0, enumerable: !1})
}, utils.JS.inherits(views.TextInput, FUIView), views.TextInput.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("input");
        t.setAttribute("type", "text"),
            t.classList.add("textInput"), this.__root = t, this._generated = !0
    }
}, views.TextInput.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
}, views.TextInput.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, views.TextInput.prototype.getRootElement = function getRootElement() {
    return this.__root
}, views.TextInput.prototype.init = function init() {
    this.superclass(), this.setInteractionState(!0)
}, views.TextInput.prototype.dealloc = function dealloc() {
    this._selectionTimeout = clearTimeout(this._selectionTimeout), this._blurTimeout = clearTimeout(this._blurTimeout), this.onChange.dealloc(), this.onInput.dealloc(), this.onChange = null, this.onInput = null, this.superclass()
}, views.TextInput.prototype.setInteractionState = function setInteractionState(t) {
    this._setInteractionStateFlag(t);
    var root = this.getRoot(), i = "textEvent";
    if (!this._interactionState && root.is(":focus") && root.blur(), root.prop("disabled", !this._interactionState), root.toggleClass(enums.UIState.DISABLED, !this._interactionState), this._interactionState) {
        var s = root.get(0);
        this._addListener(enums.Event.FOCUS, s, this._handleFocusEvent.bind(this), i), this._addListener(enums.Event.BLUR, s, this._handleBlurEvent.bind(this), i), this._addListener(enums.Event.CHANGE, s, this._handleChangeEvent.bind(this), i), this._addListener(enums.Event.INPUT, s, this._handleInputEvent.bind(this), i), this._addListener(enums.Event.CUT, s, this._handleInputEvent.bind(this), i), this._addListener(enums.Event.PASTE, s, this._handleInputEvent.bind(this), i)
    } else this._removeListenersByNS(i)
}, views.TextInput.prototype.setPlaceholder = function (value) {
    this.getRoot().attr("placeholder", value)
}, views.TextInput.prototype.setMaxLength = function (value) {
    this.getRoot().attr("maxlength", value)
}, views.TextInput.prototype.clear = function () {
    this.value = ""
}, views.TextInput.prototype._handleChangeEvent = function _handleChangeEvent(e) {
    this.onChange.notify(this.value, e)
}, views.TextInput.prototype._handleInputEvent = function _handleInputEvent(e) {
    this.onInput.notify(this.value, e), this.onChange.notify(this.value, e)
}, views.TextInput.prototype._handleFocusEvent = function _handleFocusEvent(e) {
    this._selectionTimeout = setTimeout(function _setSelectionRange() {
        var t = this.getRoot().get(0);
        t.setSelectionRange(0, t.value.length)
    }.bind(this), 50)
}, views.TextInput.prototype._handleBlurEvent = function _handleBlurEvent(e) {
    this._selectionTimeout = clearTimeout(this._selectionTimeout)
}, NamespaceManager.Register("views.buttons"), views.buttons.DefaultButton = function FUIDefaultButton() {
    FUIButton.call(this), this._generate()
}, utils.JS.inherits(views.buttons.DefaultButton, FUIButton), views.buttons.DefaultButton.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("button");
        t.classList.add("btn-standard"), this.__root = t, this._generated = !0
    }
}, views.buttons.DefaultButton.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
}, views.buttons.DefaultButton.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, views.buttons.DefaultButton.prototype.getRootElement = function getRootElement() {
    return this.__root
}, views.buttons.DefaultButton.prototype._touchStarted = function _touchStarted(e) {
    this.superclass(), this._triggerActions(enums.Event.TOUCHSTART)
}, views.buttons.DefaultButton.prototype._touchEnded = function _touchEnded(e) {
    this.superclass(), this._triggerActions(enums.Event.TOUCHEND)
}, views.buttons.DefaultButton.prototype._touchCancelled = function _touchCancelled(e) {
    this.superclass(), this._triggerActions(enums.Event.TOUCHCANCEL)
}, NamespaceManager.Register("views.bootFlow"), views.bootFlow.CaptchaRequired = function UTCaptchaRequiredView() {
    FUIView.call(this), this.onContinue = new UTObservable, Object.defineProperty(this, "onContinue", {writable: !1}), this.onRefresh = new UTObservable, Object.defineProperty(this, "onRefresh", {writable: !1}), this.onTextChange = new UTObservable, Object.defineProperty(this, "onTextChange", {writable: !1}), this._generate()
},
    utils.JS.inherits(views.bootFlow.CaptchaRequired, FUIView), views.bootFlow.CaptchaRequired.prototype.appendPersonaSelector = function appendPersonaSelector(view) {
    this.getRoot().addClass("has-persona-selector"), this.addSubview(view, this.__personaSelectorContainer)
}, views.bootFlow.CaptchaRequired.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.setAttribute("id", "CaptchaRequired"), t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content"), this.__personaSelectorContainer = document.createElement("div"), this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"), i.appendChild(this.__personaSelectorContainer);
        var s = document.createElement("div");
        s.classList.add("ut-captcha-required"), s.classList.add("ut-login-generic");
        var o = document.createElement("div");
        o.classList.add("ut-login-generic-content");
        var l = document.createElement("div");
        this.__infoTitle = document.createElement("h2"), this.__infoTitle.classList.add("title"), l.appendChild(this.__infoTitle), this.__infoText = document.createElement("p"), l.appendChild(this.__infoText), this.__icon = document.createElement("div"), this.__icon.setAttribute("id", "securityIcon"), this.__captchaImageContainer = document.createElement("div"), this.__captchaImageContainer.classList.add("captchaImageContainer"), this.__captchaImage = document.createElement("div"), this.__captchaImage.classList.add("captchaImage"), this.__captchaImageContainer.appendChild(this.__captchaImage), this.__icon.appendChild(this.__captchaImageContainer), this._refreshLink = new views.buttons.FlatButton, this._refreshLink.getRootElement().classList.add("camel-case"), this._refreshLink.getRootElement().classList.add("refreshBtn"), this.__icon.appendChild(this._refreshLink.getRootElement()), l.appendChild(this.__icon), this.__captchaAnswerContainer = document.createElement("div"), this._textInput = new views.TextInput, this.__captchaAnswerContainer.appendChild(this._textInput.getRootElement()), this.__errorText = document.createElement("p"), this.__errorText.classList.add("errorText"), this.__captchaAnswerContainer.appendChild(this.__errorText), this._validateCaptcha = new views.buttons.DefaultButton, this._validateCaptcha.getRootElement().classList.add("call-to-action"), this.__captchaAnswerContainer.appendChild(this._validateCaptcha.getRootElement()), l.appendChild(this.__captchaAnswerContainer), this.__captchaWaitContainer = document.createElement("div"), this.__captchaWaitContainer.classList.add("captchaWaitContainer"), this.__captchaWaitText = document.createElement("p"), this.__captchaWaitText.classList.add("captchaWaitText"), this.__captchaWaitText.classList.add("textCenter"), this.__captchaWaitContainer.appendChild(this.__captchaWaitText);
        var u = document.createElement("div");
        u.classList.add("captchaWaitBox"), this.__captchaWaitTime = document.createElement("p"), this.__captchaWaitTime.classList.add("timeRemaining"), this.__captchaWaitTime.classList.add("textCenter"), this.__captchaWaitTime.classList.add("globalMargin"), u.appendChild(this.__captchaWaitTime), this.__captchaWaitContainer.appendChild(u), l.appendChild(this.__captchaWaitContainer), o.appendChild(l), s.appendChild(o), i.appendChild(s), t.appendChild(i), this.__root = t, this._generated = !0
    }
}, views.bootFlow.CaptchaRequired.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__personaSelectorContainer = null, this.__infoTitle = null, this.__infoText = null, this.__icon = null, this.__captchaImageContainer = null, this.__captchaImage = null, this._refreshLink.destroy(), this.__captchaAnswerContainer = null, this._textInput.destroy(), this.__errorText = null, this._validateCaptcha.destroy(), this.__captchaWaitContainer = null, this.__captchaWaitText = null, this.__captchaWaitTime = null
}, views.bootFlow.CaptchaRequired.prototype.getRoot = function getRoot() {
    return $(this.__root)
},
    views.bootFlow.CaptchaRequired.prototype.getRootElement = function getRootElement() {
        return this.__root
    }, views.bootFlow.CaptchaRequired.prototype.init = function init() {
    this._validateCaptcha.init(), this._validateCaptcha.setText(services.Localization.localize("common.dialog.continue")), this._validateCaptcha.setInteractionState(!1), this._validateCaptcha.addTarget(this.onContinue, this.onContinue.notify, enums.Event.TAP), this._textInput.init(), this._textInput.setPlaceholder(services.Localization.localize("phishing.input.placeholder")), this._textInput.setMaxLength(8), this._textInput.onChange.observe(this, function (t, e) {
        this.onTextChange.notify(e)
    }), this._refreshLink.init(), this._refreshLink.addTarget(this.onRefresh, this.onRefresh.notify, enums.Event.TAP), this._refreshLink.setText(services.Localization.localize("captcha.refresh")), this.__infoTitle.textContent = services.Localization.localize("title.securityquestion"), this.__infoText.textContent = services.Localization.localize("captcha.info.body"), DOMKit.toggleDisplayStyle(this.__captchaWaitContainer, !1), this.__captchaWaitText.textContent = services.Localization.localize("captcha.info.wait"), this.__errorText.textContent = services.Localization.localize("captcha.error.incorrectanswer"), this.superclass()
}, views.bootFlow.CaptchaRequired.prototype.dealloc = function dealloc() {
    this.onContinue.dealloc(), this.onTextChange.dealloc(), this.onContinue = null, this.onTextChange = null, this.superclass()
}, views.bootFlow.CaptchaRequired.prototype.toggleCaptchaImageDisplay = function toggleCaptchaImageDisplay(show) {
    DOMKit.toggleClass(this.__icon, "iconHidden", show), DOMKit.toggleDisplayStyle(this.__captchaImageContainer, show)
}, views.bootFlow.CaptchaRequired.prototype.showCaptchaImageLoading = function showCaptchaImageLoading() {
    DOMKit.toggleDisplayStyle(this.__captchaAnswerContainer, !0), DOMKit.toggleDisplayStyle(this.__captchaWaitContainer, !1), this.clearAnswerInput(), this.toggleCaptchaImageDisplay(!1), this._textInput.setInteractionState(!1)
}, views.bootFlow.CaptchaRequired.prototype.showCaptchaWait = function showCaptchaWait(t) {
    this._refreshLink.hide(), DOMKit.toggleDisplayStyle(this.__captchaImageContainer, !1), DOMKit.toggleDisplayStyle(this.__captchaAnswerContainer, !1), DOMKit.toggleDisplayStyle(this.__captchaWaitContainer, !0)
}, views.bootFlow.CaptchaRequired.prototype.updateRemainingCaptchaTime = function updateRemainingCaptchaTime(t) {
    this.__captchaWaitTime.textContent = services.Localization.localizeTimeRemaining(t)
}, views.bootFlow.CaptchaRequired.prototype.toggleInputs = function toggleInputs(t) {
    this._validateCaptcha.setInteractionState(t), this._textInput.setInteractionState(t)
}, views.bootFlow.CaptchaRequired.prototype.toggleContinueButton = function toggleContinueButton(value) {
    this._validateCaptcha.setInteractionState(value)
}, views.bootFlow.CaptchaRequired.prototype.setCaptchaImage = function setCaptchaImage(t) {
    var i = document.createElement("img");
    i.src = "data:image/jpg;base64," + t, this._refreshLink.show(), DOMKit.empty(this.__captchaImage), this.__captchaImage.appendChild(i), this.toggleCaptchaImageDisplay(!0), this._textInput.setInteractionState(!0), TelemetryManager.trackEvent(TelemetryManager.Sections.MISC, TelemetryManager.Categories.CAPTCHA, "Image Loaded")
}, views.bootFlow.CaptchaRequired.prototype.clearAnswerInput = function clearAnswerInput() {
    this._textInput.clear()
}, views.bootFlow.CaptchaRequired.prototype.getInputValue = function getInputValue() {
    return this._textInput.value
}, views.bootFlow.CaptchaRequired.prototype.errorVisibility = function errorVisibility(t) {
    DOMKit.toggleDisplayStyle(this.__errorText, t)
}, communication.CaptchaImageDelegate = function () {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "captcha/img", enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT, enums.HTTPContentType.TEXT_PLAIN), this.addHeader("X-HTTP-Accept-Content-Encoding", "base64")
}, utils.JS.inherits(communication.CaptchaImageDelegate, communication.BaseFUTDelegate),
    communication.CaptchaImageDelegate.prototype.onFail = function (errorCode) {
        var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
        switch (errorCode) {
            case enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR:
                this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.title.genericError", "popup.body.genericError");
                break;
            default:
                this._networkError = this.generateDefaultNetworkError(errorCode)
        }
        this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
    }, communication.CaptchaValidateDelegate = function (t) {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "captcha/validate", enums.HTTPRequestMethod.POST, models.CommunicationModel.RESPONSE.EMPTY, enums.HTTPContentType.JSON), this.setData({answer: t})
}, utils.JS.inherits(communication.CaptchaValidateDelegate, communication.BaseFUTDelegate), communication.CaptchaValidateDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.CONFLICT:
        case enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.title.genericError", "popup.body.genericError");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
}, communication.CaptchaTokenExchangeDelegate = function () {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "captcha/exchange", enums.HTTPRequestMethod.POST, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON), this.setData({})
}, utils.JS.inherits(communication.CaptchaTokenExchangeDelegate, communication.BaseFUTDelegate), communication.CaptchaTokenExchangeDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, "popup.title.genericError", "popup.body.genericError");
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
}, utils.JS.inherits(UTCaptchaViewController, FUIViewController), UTCaptchaViewController.prototype.init = function init() {
    this.superclass();
    var view = this.getView();
    this._personaController = new controllers.views.Persona, this._personaController.init(), this.addChildViewController(this._personaController), view.appendPersonaSelector(this._personaController.getView()), view.layoutSubviews(), view.onContinue.observe(this, function () {
        this._requestCaptchaValidation(view.getInputValue())
    }), view.onRefresh.observe(this, this._requestCaptchaExchange), view.onTextChange.observe(this, this._onTextChange), view.errorVisibility(!1), this._requestCaptchaExchange(), TelemetryManager.trackPage(TelemetryManager.Sections.LOGIN, "Captcha")
}, UTCaptchaViewController.prototype.dealloc = function dealloc() {
    this._timeoutId = clearTimeout(this._timeoutId), this.superclass(), this._personaController && (this._personaController.dealloc(), this._personaController = null)
}, UTCaptchaViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.bootFlow.CaptchaRequired
}, UTCaptchaViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.captcha")
}, UTCaptchaViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var t = this.getNavigationController();
    t && t.setNavigationVisibility(isPhone(), !0), this._personaController && this._personaController.viewDidAppear()
}, UTCaptchaViewController.prototype.onCaptchaCooldown = function onCaptchaCooldown() {
    this._cooldownSeconds = services.Authentication.getSession(enums.AuthEnvironment.UTAS).captchaCooldown, this.getView().showCaptchaWait(),
        this.getView().updateRemainingCaptchaTime(this._cooldownSeconds), this._cooldownTimer.stop(), this._cooldownTimer.setInterval(1e3), this._cooldownTimer.setWorkFunc(this.updateRemainingCaptchaTime.bind(this)), this._cooldownTimer.start(), this._timeoutId = setTimeout(function _onTimeoutCaptchaTokenExchange() {
        clearTimeout(this._timeoutId), this._requestCaptchaExchange()
    }.bind(this), 1e3 * this._cooldownSeconds), TelemetryManager.trackEvent(TelemetryManager.Sections.MISC, TelemetryManager.Categories.CAPTCHA, "User Throttled")
}, UTCaptchaViewController.prototype._requestCaptchaImage = function _requestCaptchaImage() {
    var view = this.getView();
    view.showCaptchaImageLoading(), view.toggleInputs(!1);
    var t = new communication.CaptchaImageDelegate;
    t.addListener(communication.BaseDelegate.SUCCESS, this, function _onRequestCaptchaImageSuccess(sender, response) {
        sender.clearListenersByScope(this), view.setCaptchaImage(response), view.toggleInputs(!0), this.updateContinueButtonEnabledState()
    }), t.addListener(communication.BaseDelegate.FAIL, this, function _onRequestCaptchaImageFail(sender, error) {
        sender.clearListenersByScope(this), enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR === error.getCode() ? (view.clearAnswerInput(), this.onCaptchaCooldown()) : NetworkErrorManager.handle(error, !1, function () {
            view.clearAnswerInput(), view.toggleCaptchaImageDisplay(!0), view.toggleInputs(!0), this.updateContinueButtonEnabledState(), view.errorVisibility(!1)
        }.bind(this))
    }), t.useClickShield(!0), t.setImportant(!0), t.send()
}, UTCaptchaViewController.prototype._requestCaptchaValidation = function _requestCaptchaValidation(t) {
    var view = this.getView();
    if (!this._captchaAttempt) if (hideKeyboard(), hasConnection()) {
        this._captchaAttempt = !0, view.errorVisibility(!1), view.toggleInputs(!1);
        var i = new communication.CaptchaValidateDelegate(t);
        i.addListener(communication.BaseDelegate.SUCCESS, this, function _onCaptchaValidateSuccess(sender) {
            sender.clearListenersByScope(this), gAuthenticationModel.login(!0)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function _onCaptchaValidateFail(sender, error) {
            sender.clearListenersByScope(this), this._captchaAttempt = !1, enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR === error.getCode() ? (view.clearAnswerInput(), this.onCaptchaCooldown()) : enums.HTTPStatusCode.NO_INTERNET_CONNECTION === error.getCode() ? (utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.NO_INTERNET_CONNECTION), view.toggleInputs(!0)) : NetworkErrorManager.handle(error, !0, function () {
                view.clearAnswerInput(), view.toggleInputs(!0), view.errorVisibility(!0), this.updateContinueButtonEnabledState(), enums.HTTPStatusCode.CONFLICT === error.getCode() && this._requestCaptchaImage()
            }.bind(this))
        }), i.send()
    } else utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.NO_INTERNET_CONNECTION)
}, UTCaptchaViewController.prototype._requestCaptchaExchange = function _requestCaptchaExchange() {
    var view = this.getView();
    view.showCaptchaImageLoading();
    var t = new communication.CaptchaTokenExchangeDelegate;
    t.addListener(communication.BaseDelegate.SUCCESS, this, function _onCaptchaTokenExchangeSuccess(sender) {
        sender.clearListenersByScope(this), this._requestCaptchaImage(), view.errorVisibility(!1)
    }), t.addListener(communication.BaseDelegate.FAIL, this, function _onCaptchaTokenExchangeFail(sender, error) {
        sender.clearListenersByScope(this), enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR === error.getCode() ? this.onCaptchaCooldown() : NetworkErrorManager.handle(error, !1, function () {
            view.toggleCaptchaImageDisplay(!0), view.toggleInputs(!0), view.errorVisibility(!1), this.updateContinueButtonEnabledState()
        }.bind(this))
    }), t.setImportant(!0), t.send()
}, UTCaptchaViewController.prototype.updateRemainingCaptchaTime = function updateRemainingCaptchaTime() {
    var t = --this._cooldownSeconds;
    t <= 0 && (this._cooldownTimer.reset(), t = 0), this.getView().updateRemainingCaptchaTime(t)
}, UTCaptchaViewController.prototype._onTextChange = function _onTextChange(t, event) {
    this.updateContinueButtonEnabledState(),
    !this._captchaAttempt && utils.JS.isValid(event.keyCode) && event.keyCode === enums.KeyCode.RETURN && this._requestCaptchaValidation(this.getView().getInputValue())
}, UTCaptchaViewController.prototype.updateContinueButtonEnabledState = function updateContinueButtonEnabledState() {
    this.getView().toggleContinueButton(this.getView().getInputValue().length > 0)
}, communication.FunCaptchaBlobDelegate = function () {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "captcha/fun/data", enums.HTTPRequestMethod.GET, models.CommunicationModel.RESPONSE.TEXT_JSON, enums.HTTPContentType.JSON)
}, utils.JS.inherits(communication.FunCaptchaBlobDelegate, communication.BaseFUTDelegate),communication.FunCaptchaBlobDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.CONFLICT:
        case enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, services.Localization.localize("popup.title.genericError"), services.Localization.localize("popup.body.genericError"));
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
},utils.JS.inherits(UTFunCaptchaView, FUIView),UTFunCaptchaView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.setAttribute("id", "FunCaptchaRequired"), t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content"), this.__personaSelectorContainer = document.createElement("div"), this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"), i.appendChild(this.__personaSelectorContainer);
        var s = document.createElement("div");
        s.classList.add("ut-fun-captcha-required"), s.classList.add("ut-login-generic");
        var o = document.createElement("div");
        o.classList.add("ut-login-generic-content");
        var l = document.createElement("div");
        this.__infoTitle = document.createElement("h2"), this.__infoTitle.classList.add("title"), l.appendChild(this.__infoTitle), this.__infoText = document.createElement("p"), l.appendChild(this.__infoText);
        var u = document.createElement("div");
        u.setAttribute("id", "funCaptchaDiv"), l.appendChild(u), o.appendChild(l), s.appendChild(o), i.appendChild(s), t.appendChild(i), this.__root = t, this._generated = !0
    }
},UTFunCaptchaView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__personaSelectorContainer = null, this.__infoTitle = null, this.__infoText = null
},UTFunCaptchaView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTFunCaptchaView.prototype.getRootElement = function getRootElement() {
    return this.__root
},UTFunCaptchaView.prototype.init = function init() {
    this.superclass(), this.__infoTitle.textContent = services.Localization.localize("navbar.label.captcha"), this.__infoText.textContent = services.Localization.localize("captcha.info.body")
},UTFunCaptchaView.prototype.appendPersonaSelector = function appendPersonaSelector(view) {
    this.addClass("has-persona-selector"), this.addSubview(view, this.__personaSelectorContainer)
},communication.FunCaptchaValidateDelegate = function (t) {
    communication.BaseFUTDelegate.call(this), this.setRequest(communication.BaseFUTDelegate.REQUEST_ROOT + "captcha/fun/validate", enums.HTTPRequestMethod.POST, models.CommunicationModel.RESPONSE.EMPTY, enums.HTTPContentType.JSON), this.setData({funCaptchaToken: t})
},utils.JS.inherits(communication.FunCaptchaValidateDelegate, communication.BaseFUTDelegate),communication.FunCaptchaValidateDelegate.prototype.onFail = function (errorCode) {
    var t = this.isImportant() ? enums.NetworkErrorLevel.IMPORTANT : enums.NetworkErrorLevel.UNIMPORTANT;
    switch (errorCode) {
        case enums.HTTPStatusCode.CONFLICT:
        case enums.HTTPStatusCode.SERVICE_UNAVAILABLE_ERROR:
            this._networkError = new valueobjects.NetworkErrorVO(errorCode, t, services.Localization.localize("popup.title.genericError"), services.Localization.localize("popup.body.genericError"));
            break;
        default:
            this._networkError = this.generateDefaultNetworkError(errorCode)
    }
    this.dispatch(communication.BaseDelegate.FAIL, this._networkError)
},utils.JS.inherits(UTFunCaptchaViewController, FUIViewController),UTFunCaptchaViewController.prototype.init = function init() {
    this.superclass();
    var view = this.getView();
    this._personaController = new controllers.views.Persona, this._personaController.init(), this.addChildViewController(this._personaController), view.appendPersonaSelector(this._personaController.getView()), view.layoutSubviews();
    var t = document.createElement("script");
    t.id = "funCaptchaHeaderScript", t.type = "text/javascript", t.async = !0, t.defer = !0, t.src = "https://funcaptcha.com/fc/api/?onload=loadFunCaptcha", document.head.appendChild(t), TelemetryManager.trackPage(TelemetryManager.Sections.LOGIN, "CaptchaV2")
},UTFunCaptchaViewController.prototype.dealloc = function dealloc() {
    this.superclass(), this._personaController && (this._personaController.dealloc(), this._personaController = null);
    var t = document.getElementById("funCaptchaHeaderScript");
    utils.JS.isValid(t) && t.parentNode.removeChild(t)
},UTFunCaptchaViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new UTFunCaptchaView
},UTFunCaptchaViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.captcha")
},UTFunCaptchaViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var t = this.getNavigationController();
    t && t.setNavigationVisibility(isPhone(), !0), this._personaController && this._personaController.viewDidAppear(), this._loadFunCaptcha()
},UTFunCaptchaViewController.prototype._loadFunCaptcha = function _loadFunCaptcha() {
    function _initCaptcha(key, blob) {
        if (!utils.JS.isValid(t)) {
            var language = services.Localization.getLocale().language;
            (t = document.createElement("script")).id = "loadFunCaptchaScript";
            var i = "";
            null !== blob && (i = "'data': {'blob':'" + blob + "'},");
            var s = "{'public_key': '" + key + "', " + i + "'target_html': 'funCaptchaDiv',\t'callback': UTFunCaptchaViewController.captchaCompletedCallback, 'language': '" + language + "'}";
            t.innerHTML = "var funCaptcha;function loadFunCaptcha() {\tif(!utils.JS.isValid(funCaptcha)){\t\tfunCaptcha = new FunCaptcha(" + s + ");\t}else{\t\tfunCaptcha.refresh_session();\t}};", document.body.appendChild(t), this._captchaLoaded = !0
        }
    }

    if (!this._captchaLoaded) {
        var t = document.getElementById("loadFunCaptchaScript"), i = new communication.FunCaptchaBlobDelegate;
        i.addListener(communication.BaseDelegate.SUCCESS, this, function _onCaptchaDataSuccess(sender, data) {
            sender.clearListenersByScope(this), _initCaptcha(data.pk || gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_FUNCAPTCHA_PK), data.blob || null)
        }), i.addListener(communication.BaseDelegate.FAIL, this, function _onCaptchaDataFail(sender, error) {
            sender.clearListenersByScope(this), error._code === enums.HTTPStatusCode.CAPTCHA_REQUIRED ? getAppMain().getRootViewController().showCaptchaView() : _initCaptcha(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_FUNCAPTCHA_PK), null)
        }), i.send()
    }
},UTFunCaptchaViewController.captchaCompletedCallback = function captchaCompletedCallback() {
    var t = document.getElementById("FunCaptcha-Token").value, i = new communication.FunCaptchaValidateDelegate(t);
    i.addListener(communication.BaseDelegate.SUCCESS, this, function _onCaptchaValidateSuccess(sender) {
        sender.clearListenersByScope(this), gAuthenticationModel.login(!0)
    }), i.addListener(communication.BaseDelegate.FAIL, this, function _onCaptchaValidateFail(sender, t) {
        t._code === enums.HTTPStatusCode.CAPTCHA_REQUIRED ? getAppMain().getRootViewController().showCaptchaView() : gAuthenticationModel.logout()
    }), i.send()
},NamespaceManager.Register("views.bootFlow"),views.bootFlow.FUTLogo = function FUTLogoView() {
    FUIView.call(this), this._generate()
},
utils.JS.inherits(views.bootFlow.FUTLogo, FUIView),views.bootFlow.FUTLogo.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("header");
        t.classList.add("ut-fut-logo"), this._eaSportsLogo = new components.ImageLoader, this._eaSportsLogo.getRootElement().classList.add("ea-logo"), t.appendChild(this._eaSportsLogo.getRootElement()), this._futProductLogo = new components.ImageLoader, this._futProductLogo.getRootElement().classList.add("fifa-logo"), t.appendChild(this._futProductLogo.getRootElement()), this._licenseLogo = new components.ImageLoader, this._licenseLogo.getRootElement().classList.add("license-logo"), t.appendChild(this._licenseLogo.getRootElement()), this.__root = t, this._generated = !0
    }
},views.bootFlow.FUTLogo.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this._eaSportsLogo.destroy(), this._futProductLogo.destroy(), this._licenseLogo.destroy()
},views.bootFlow.FUTLogo.prototype.getRoot = function getRoot() {
    return $(this.__root)
},views.bootFlow.FUTLogo.prototype.getRootElement = function getRootElement() {
    return this.__root
},views.bootFlow.FUTLogo.prototype.init = function init() {
    this.superclass();
    var product = enums.Product.COMPANION;
    product = enums.Product.WEB;
    var t = services.Localization.getLocale().language;
    this._eaSportsLogo.setLocalResource("images/logo/ea_sports_logo.png"), this._futProductLogo.setLocalResource(utils.AssetLocator.getFUTProductLogoURI(t, product)), this._licenseLogo.setLocalResource(utils.AssetLocator.getLicenseLogoURI(t))
},NamespaceManager.Register("views.bootFlow"),views.bootFlow.GettingStarted = function UTGettingStartedView() {
    FUIView.call(this), this._generate()
},utils.JS.inherits(views.bootFlow.GettingStarted, FUIView),views.bootFlow.GettingStarted.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content"), this.__personaSelectorContainer = document.createElement("div"), this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"), i.appendChild(this.__personaSelectorContainer), this.__bootBox = document.createElement("div"), this.__bootBox.classList.add("ut-getting-started");
        var s = document.createElement("div");
        s.classList.add("ut-getting-started-logo"), this._futLogo = new views.bootFlow.FUTLogo, s.appendChild(this._futLogo.getRootElement()), this.__bootBox.appendChild(s);
        var o = document.createElement("div");
        o.classList.add("ut-getting-started-content"), this.__infoTitle = document.createElement("h2"), o.appendChild(this.__infoTitle), this.__description = document.createElement("p"), this.__description.classList.add("description"), o.appendChild(this.__description), this.__steps = document.createElement("ul"), this.__steps.classList.add("isolated-section"), this.__steps.classList.add("steps");
        var l = document.createElement("li");
        this.__step1 = document.createElement("span"), l.appendChild(this.__step1), this.__steps.appendChild(l);
        var u = document.createElement("li");
        this.__step2 = document.createElement("span"), u.appendChild(this.__step2), this.__steps.appendChild(u), o.appendChild(this.__steps), this.__joinTheClub = document.createElement("p"), o.appendChild(this.__joinTheClub), this._learnMore = new views.buttons.DefaultButton, this._learnMore.getRootElement().classList.add("call-to-action"), o.appendChild(this._learnMore.getRootElement()), this.__bootBox.appendChild(o), i.appendChild(this.__bootBox), t.appendChild(i), this.__root = t, this._generated = !0
    }
},views.bootFlow.GettingStarted.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__personaSelectorContainer = null, this.__bootBox = null, this._futLogo.destroy(), this.__infoTitle = null, this.__description = null, this.__steps = null, this.__step1 = null, this.__step2 = null, this.__joinTheClub = null, this._learnMore.destroy()
},
views.bootFlow.GettingStarted.prototype.getRoot = function getRoot() {
    return $(this.__root)
},views.bootFlow.GettingStarted.prototype.getRootElement = function getRootElement() {
    return this.__root
},views.bootFlow.GettingStarted.prototype.init = function init() {
    this.superclass(), this._learnMore.init(), this._learnMore.setText(services.Localization.localize("gettingstarted.learnmore")), this._futLogo.init()
},views.bootFlow.GettingStarted.prototype.appendPersonaSelector = function appendPersonaSelector(view) {
    this.addClass("has-persona-selector"), this.addSubview(view, this.__personaSelectorContainer)
},views.bootFlow.GettingStarted.prototype.render = function render(type) {
    var description = "";
    switch (type) {
        case enums.GettingStartedTypes.ACCESS_TRIAL:
            description = "gettingStartedFifa.contentTrial";
            break;
        case enums.GettingStartedTypes.FREE_TRIAL:
            description = "gettingStartedFifa.freeTrial";
            break;
        case enums.GettingStartedTypes.FUT:
            description = "gettingstarted.futcontent1";
            break;
        case enums.GettingStartedTypes.PLATFORM_SWITCH:
            description = "gettingstarted.switchcontent1";
            break;
        case enums.GettingStartedTypes.PLATFORM_GEN3:
            description = "gettingstarted.gen3content1";
            break;
        case enums.GettingStartedTypes.WEBSTART_OVER:
            description = "webstartaccessover.text";
            break;
        default:
            description = "gettingStartedFifa.content1"
    }
    this.__description.textContent = services.Localization.localize(description), type === enums.GettingStartedTypes.WEBSTART_OVER ? (this.__steps.parentNode.removeChild(this.__steps), this.__infoTitle.textContent = services.Localization.localize("gettingstarted.fifa"), this.__joinTheClub.textContent = services.Localization.localize("gettingstarted.jointheclub")) : (DOMKit.toggleDisplayStyle(this.__joinTheClub, !1), this.__infoTitle.textContent = services.Localization.localize("navbar.label.gettingstarted"), type === enums.GettingStartedTypes.PLATFORM_SWITCH || type === enums.GettingStartedTypes.PLATFORM_GEN3 ? this.__steps.parentNode.removeChild(this.__steps) : type === enums.GettingStartedTypes.FUT ? (this.__step1.textContent = services.Localization.localize("gettingstarted.futstep1"), this.__step2.textContent = services.Localization.localize("gettingstarted.futstep3")) : (this.__step1.textContent = services.Localization.localize("gettingStartedFifa.content2"), this.__step2.textContent = services.Localization.localize("gettingStartedFifa.content4")))
},views.bootFlow.GettingStarted.prototype.getLearnMoreButton = function getLearnMoreButton() {
    return this._learnMore
},utils.JS.inherits(UTGettingStartedViewController, FUIViewController),UTGettingStartedViewController.prototype.init = function init() {
    this.initialized || (this.superclass(), this.getView().getLearnMoreButton().addTarget(this, this._eLearnMoreSelected, enums.Event.TAP), TelemetryManager.trackPage(TelemetryManager.Sections.LOGIN, "No FUT Data"))
},UTGettingStartedViewController.prototype.dealloc = function dealloc() {
    this.superclass(), utils.JS.isValid(this._personaController) && (this._personaController.dealloc(), this._personaController = null)
},UTGettingStartedViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.bootFlow.GettingStarted
},UTGettingStartedViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.gettingstarted")
},UTGettingStartedViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var t = this.getNavigationController();
    t && t.setNavigationVisibility(isPhone(), !0), this._personaController && this._personaController.viewDidAppear()
},UTGettingStartedViewController.prototype.setType = function setType(type) {
    var t, i = !1;
    for (t in enums.GettingStartedTypes) if (enums.GettingStartedTypes.hasOwnProperty(t) && enums.GettingStartedTypes[t] === type) {
        i = !0;
        break
    }
    if (utils.Debug.Assert(i, "Invalid getting started page type: " + type), i) {
        this._type = type;
        var s = services.Authentication.getFUTAuthState() === enums.FUTAuthState.NO_DATA || !services.User.getUser().getSelectedPersona().hasClubForCurrentYear,
            o = this._type !== enums.GettingStartedTypes.FIFA && !s
        ;this.getView().render(this._type), o && this._generatePersonaController()
    }
},UTGettingStartedViewController.prototype._generatePersonaController = function _generatePersonaController() {
    if (!this._personaController) {
        var view = this.getView();
        this._personaController = new controllers.views.Persona, this._personaController.init(), this.addChildViewController(this._personaController), view.appendPersonaSelector(this._personaController.getView()), view.layoutSubviews()
    }
},UTGettingStartedViewController.prototype._eLearnMoreSelected = function _eLearnMoreSelected(sender, t) {
    var url;
    if (this._type !== enums.GettingStartedTypes.FIFA) switch (services.Localization.getLocale().region) {
        case enums.Region.USA:
            url = services.Localization.localize("link.gettingstartedfut.en_us");
            break;
        case enums.Region.CANADA:
            url = services.Localization.localize("link.gettingstartedfut.en_ca");
            break;
        case enums.Region.AUSTRALIA:
            url = services.Localization.localize("link.gettingstartedfut.en_au");
            break;
        default:
            url = services.Localization.localize("link.gettingstartedfut")
    } else url = services.Localization.localize("link.gettingstartedfifa");
    services.URL.process(url)
},NamespaceManager.Register("components"),components.ImageListButton = function UTImageListButton() {
    FUIButton.call(this), this._generate()
},utils.JS.inherits(components.ImageListButton, FUIButton),components.ImageListButton.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("button");
        t.classList.add("img-list-btn"), this._imageLoader = new components.ImageLoader, t.appendChild(this._imageLoader.getRootElement()), this.__text = document.createElement("span"), t.appendChild(this.__text), this.__root = t, this._generated = !0
    }
},components.ImageListButton.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this._imageLoader.destroy(), this.__text = null
},components.ImageListButton.prototype.getRoot = function getRoot() {
    return $(this.__root)
},components.ImageListButton.prototype.getRootElement = function getRootElement() {
    return this.__root
},components.ImageListButton.prototype.setText = function setText(text) {
    this.__text.textContent = text
},components.ImageListButton.prototype.setLocalImageUrl = function setLocalImageUrl(url) {
    this._imageLoader.setLocalResource(url)
},components.ImageListButton.prototype.setExternalImageUrl = function setExternalImageUrl(url) {
    this._imageLoader.setResource(url)
},NamespaceManager.Register("views.bootFlow"),views.bootFlow.LanguageSelect = function () {
    FUITargetActionView.call(this), this._buttons = [], this._generate()
},utils.JS.inherits(views.bootFlow.LanguageSelect, FUITargetActionView),views.bootFlow.LanguageSelect.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("ut-language-select"), t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content");
        var s = document.createElement("div");
        s.classList.add("ut-language-select-content"), this._futLogo = new views.bootFlow.FUTLogo, s.appendChild(this._futLogo.getRootElement()), i.appendChild(s), this.__buttonList = document.createElement("ul"), i.appendChild(this.__buttonList), t.appendChild(i), this.__root = t, this._generated = !0
    }
},views.bootFlow.LanguageSelect.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this._futLogo.destroy(), this.__buttonList = null
},views.bootFlow.LanguageSelect.prototype.getRoot = function getRoot() {
    return $(this.__root)
},views.bootFlow.LanguageSelect.prototype.getRootElement = function getRootElement() {
    return this.__root
},views.bootFlow.LanguageSelect.prototype.init = function init() {
    this.superclass(), this._futLogo.init()
},views.bootFlow.LanguageSelect.prototype.dealloc = function dealloc() {
    this._clearLanguageButtons(), this.superclass()
},views.bootFlow.LanguageSelect.prototype._clearLanguageButtons = function _clearLanguageButtons() {
    this._buttons.forEach(function (button) {
        button.dealloc()
    }), this._buttons = []
},views.bootFlow.LanguageSelect.prototype.setLocales = function setLocales(t) {
    this._clearLanguageButtons(), t.forEach(function _generateLanguageButton(locale) {
        var button = new components.ImageListButton;
        button.init(), button.setText(locale.name), button.setLocalImageUrl("images/flags/" + locale.language.toUpperCase() + ".jpg"), button.addTarget(this, this._eLanguageSelected, enums.Event.TAP), this._buttons.push(button), this.__buttonList.appendChild(button.getRootElement())
    }, this)
},views.bootFlow.LanguageSelect.prototype._eLanguageSelected = function _eLanguageSelected(sender, event, data) {
    this._triggerActions(enums.Event.TAP, {index: this._buttons.indexOf(sender)})
},utils.JS.inherits(UTLanguageSelectViewController, FUIViewController),UTLanguageSelectViewController.prototype.init = function init() {
    this.superclass(), this._locales = services.Localization.getSupportedLocales(), this.getView().addTarget(this, this._eLanguageSelected, enums.Event.TAP), TelemetryManager.trackPage(TelemetryManager.Sections.LOGIN, "Language Select")
},UTLanguageSelectViewController.prototype.dealloc = function dealloc() {
    this._callback = null, this._locales = [], this.superclass()
},UTLanguageSelectViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.bootFlow.LanguageSelect
},UTLanguageSelectViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("title.languageselect")
},UTLanguageSelectViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass(), this.getView().setLocales(this._locales)
},UTLanguageSelectViewController.prototype.setLanguageSelectCallback = function setLanguageSelectCallback(t) {
    this._callback = t
},UTLanguageSelectViewController.prototype._selectLocale = function _selectLocale(locale) {
    gClickShield.showShield(components.ClickShield.SHIELD.LOADING), getStorage().setItem(STORAGE_LOCALE_KEY, locale.toString()), services.Localization.setLocale(locale), services.Localization.requestLocalization().observe(this, function _onRequestLocalizationComplete(t, data) {
        t.unobserve(this), utils.JS.isFunction(this._callback) && this._callback(), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
    })
},UTLanguageSelectViewController.prototype._eLanguageSelected = function _eLanguageSelected(sender, event, data) {
    var t = this._locales[data.index];
    utils.Debug.Assert(utils.JS.isValid(t), "Missing data for selected language."), t && this._selectLocale(t)
},NamespaceManager.Register("views.bootFlow"),views.bootFlow.License = function LicenseView() {
    FUITargetActionView.call(this), this._cbLicenseImageLoad = null, this._generate()
},utils.JS.inherits(views.bootFlow.License, FUITargetActionView),views.bootFlow.License.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("ut-license"), t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content-center"), i.classList.add("ut-content");
        var s = document.createElement("div");
        s.classList.add("ut-license-content"), this.__licenseLogo = document.createElement("img"), this.__licenseLogo.classList.add("licenseLogo"), s.appendChild(this.__licenseLogo), this.__licenseTitle = document.createElement("h1"), this.__licenseTitle.classList.add("licenseTitle"), s.appendChild(this.__licenseTitle), this.__licenseText1 = document.createElement("p"), this.__licenseText1.classList.add("licenseBody"), s.appendChild(this.__licenseText1), this.__licenseText2 = document.createElement("p"), this.__licenseText2.classList.add("licenseBody"), s.appendChild(this.__licenseText2), i.appendChild(s), t.appendChild(i), this.__root = t, this._generated = !0
    }
},views.bootFlow.License.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__licenseLogo = null, this.__licenseTitle = null, this.__licenseText1 = null, this.__licenseText2 = null
},
views.bootFlow.License.prototype.getRoot = function getRoot() {
    return $(this.__root)
},views.bootFlow.License.prototype.getRootElement = function getRootElement() {
    return this.__root
},views.bootFlow.License.prototype.init = function init() {
    this._cbLicenseImageLoad = this._eLicenseImageLoad.bind(this), this.__licenseLogo.addEventListener(enums.Event.LOAD, this._cbLicenseImageLoad, !1), this.__licenseTitle.textContent = services.Localization.localize("license.text.header").toUpperCase(), this.__licenseText1.textContent = services.Localization.localize("license.text.body1"), this.__licenseText2.textContent = services.Localization.localize("license.text.body2"), DOMKit.toggleDisplayStyle(this.__licenseLogo, !1), this.__licenseLogo.src = utils.AssetLocator.getLicenseLogoURI(services.Localization.getLocale().language), this.superclass()
},views.bootFlow.License.prototype.dealloc = function dealloc() {
    this._clearLoadEventListener(), this.superclass()
},views.bootFlow.License.prototype._clearLoadEventListener = function _clearLoadEventListener() {
    this._cbLicenseImageLoad && (this.__licenseLogo.removeEventListener(enums.Event.LOAD, this._cbLicenseImageLoad, !1), this._cbLicenseImageLoad = null)
},views.bootFlow.License.prototype._eLicenseImageLoad = function _eLicenseImageLoad(e) {
    this._clearLoadEventListener(), DOMKit.addClass(this.__licenseLogo, "fade-in-screen"), DOMKit.toggleDisplayStyle(this.__licenseLogo, !0), this._triggerActions(enums.Event.LOAD)
},utils.JS.inherits(UTLicenseViewController, FUIViewController),UTLicenseViewController.FLAGS = {
    TIMER: 1,
    MEMORY: 2
},UTLicenseViewController.LOW_MEMORY_LIMIT = 25600,UTLicenseViewController.prototype.init = function init() {
    this.superclass(), this.getView().addTarget(this, this._eLicenseImageLoad, enums.Event.LOAD);
    var t = getDefaultDispatcher();
    t.addObserver(enums.Notification.APP_PAUSE, this, this._nAppPaused), t.addObserver(enums.Notification.APP_RESUME, this, this._nAppResumed), TelemetryManager.trackPage(TelemetryManager.Sections.LOGIN, "Legal")
},UTLicenseViewController.prototype.dealloc = function dealloc() {
    clearTimeout(this._setTimerFlagTimeout);
    var t = getDefaultDispatcher();
    t.removeObserver(enums.Notification.APP_PAUSE, this), t.removeObserver(enums.Notification.APP_RESUME, this), this.superclass()
},UTLicenseViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.bootFlow.License
},UTLicenseViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("gettingstarted.welcome")
},UTLicenseViewController.prototype._eLicenseImageLoad = function _eLicenseImageLoad(sender, event, data) {
    this.checkFreeDiskSpace(), this._startDisplayTimer()
},UTLicenseViewController.prototype._startDisplayTimer = function _startDisplayTimer() {
    clearTimeout(this._setTimerFlagTimeout), this._setTimerFlagTimeout = setTimeout(this._setContinueFlag.bind(this, UTLicenseViewController.FLAGS.TIMER), 3e3)
},UTLicenseViewController.prototype._checkFlagState = function _checkFlagState() {
    this._completedFlags === (UTLicenseViewController.FLAGS.TIMER | UTLicenseViewController.FLAGS.MEMORY) && (this._hasLowMemory ? utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.LOW_MEMORY, this._transitionToLogin.bind(this)) : this._transitionToLogin())
},UTLicenseViewController.prototype._setContinueFlag = function _setContinueFlag(t) {
    utils.Debug.Assert(!(this._completedFlags & t), "Flag has already been set."), this._completedFlags = this._completedFlags | t, this._checkFlagState()
},UTLicenseViewController.prototype.checkFreeDiskSpace = function checkFreeDiskSpace() {
    function _onRetrieveFreeSpaceFail() {
        this._setContinueFlag(UTLicenseViewController.FLAGS.MEMORY)
    }

    isChrome() ? _onRetrieveFreeSpaceFail.call(this) : window.plugins.utilities.getFreeDiskSpace(function _onRetrieveFreeSpaceSuccess(memory) {
        this._hasLowMemory = memory < UTLicenseViewController.LOW_MEMORY_LIMIT, this._setContinueFlag(UTLicenseViewController.FLAGS.MEMORY)
    }.bind(this), _onRetrieveFreeSpaceFail.bind(this))
},UTLicenseViewController.prototype._transitionToLogin = function _transitionToLogin() {
    getAppMain().getRootViewController().showLoginView()
},UTLicenseViewController.prototype._nAppPaused = function _nAppPaused(t, sender, data) {
    clearTimeout(this._setTimerFlagTimeout)
},UTLicenseViewController.prototype._nAppResumed = function _nAppResumed(t, sender, data) {
    this._completedFlags & UTLicenseViewController.FLAGS.TIMER || this._startDisplayTimer()
},NamespaceManager.Register("views.bootFlow"),views.bootFlow.Login = function () {
    FUIView.call(this), this._generate()
},utils.JS.inherits(views.bootFlow.Login, FUIView),views.bootFlow.Login.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.setAttribute("id", "Login"), t.classList.add("ut-login"), t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content");
        var s = document.createElement("div");
        s.classList.add("ut-login-content"), this._futLogo = new views.bootFlow.FUTLogo, s.appendChild(this._futLogo.getRootElement()), this._btnLogin = new views.buttons.DefaultButton, this._btnLogin.getRootElement().classList.add("call-to-action"), s.appendChild(this._btnLogin.getRootElement()), this._linkGettingStarted = new views.buttons.FlatButton, this._linkGettingStarted.getRootElement().classList.add("alt"), this._linkGettingStarted.getRootElement().classList.add("camel-case"), s.appendChild(this._linkGettingStarted.getRootElement()), i.appendChild(s), t.appendChild(i), this.__root = t, this._generated = !0
    }
},views.bootFlow.Login.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this._futLogo.destroy(), this._btnLogin.destroy(), this._linkGettingStarted.destroy()
},views.bootFlow.Login.prototype.getRoot = function getRoot() {
    return $(this.__root)
},views.bootFlow.Login.prototype.getRootElement = function getRootElement() {
    return this.__root
},views.bootFlow.Login.prototype.init = function init() {
    this.superclass(), this._btnLogin.init(), this._btnLogin.setText(services.Localization.localize("login.loginButtonText")), this._linkGettingStarted.init(), this._linkGettingStarted.setText(services.Localization.localize("login.gettingstarted")), this._linkGettingStarted.addTarget(this, this._eGettingStarted, enums.Event.TAP), this._futLogo.init()
},views.bootFlow.Login.prototype.getLoginButton = function getLoginButton() {
    return this._btnLogin
},views.bootFlow.Login.prototype.enableLoginButton = function enableLoginButton(t) {
    this._btnLogin.setInteractionState(t)
},views.bootFlow.Login.prototype._eGettingStarted = function _eGettingStarted(sender, e) {
    services.URL.process(services.Localization.localize("link.gettingstarted"))
},models.ShowOffLoginModel = function UTShowOffLoginModel() {
    models.LoginModel.call(this), this._showOffDTO = null
},utils.JS.inherits(models.ShowOffLoginModel, models.LoginModel),models.ShowOffLoginModel.LOGIN_STEP = {
    EXTENDED_LOC: 0,
    PRE_LOAD_SQUAD: 1,
    LOAD_SQUAD: 2,
    SQUAD_SCREEN: 3
},models.ShowOffLoginModel.prototype._runCurrentStep = function _runCurrentStep() {
    switch (this._currentLoginStep) {
        case models.ShowOffLoginModel.LOGIN_STEP.EXTENDED_LOC:
            this._getExtendedLocFile();
            break;
        case models.ShowOffLoginModel.LOGIN_STEP.PRE_LOAD_SQUAD:
            this._onPreLoadSquad();
            break;
        case models.ShowOffLoginModel.LOGIN_STEP.LOAD_SQUAD:
            this._getShowOffSquad();
            break;
        case models.ShowOffLoginModel.LOGIN_STEP.SQUAD_SCREEN:
            this._goToSquadScreen();
            break;
        default:
            utils.Debug.Assert(!1, "[models.ShowOffLoginModel] Invalid or unsupported bootflow step requested."), this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
    }
},models.ShowOffLoginModel.prototype._onPreLoadSquad = function _onPreLoadSquad() {
    var t = new communication.SquadDataDelegate;
    t.setImportant(!0);
    var i = new communication.TeamsConfigDelegate;
    i.setImportant(!0);
    var s = new communication.PlayerMetaDataDelegate;
    s.addListener(communication.BaseDelegate.SUCCESS, this, this._onPlayerMetaDataSuccess),
        s.addListener(communication.BaseDelegate.FAIL, this, this._onPlayerMetaDataFail), s.setImportant(!0);
    var o = new communication.StaticPlayerDataDelegate;
    o.addListener(communication.BaseDelegate.SUCCESS, this, this._onStaticDataSuccess), o.addListener(communication.BaseDelegate.FAIL, this, this._onStaticDataFail), o.setImportant(!0);
    var l = new communication.PlayerIconDataDelegate;
    l.addListener(communication.BaseDelegate.SUCCESS, this, this._onPlayerIconDataSuccess), l.addListener(communication.BaseDelegate.FAIL, this, this._onPlayerIconDataFail), l.setImportant(!0);
    var u = new communication.PlaceholderAssetsDelegate;
    u.setImportant(!0);
    var h = [t, i, s, o, l, u], p = new utils.DelegateChain(h, !1);
    p.addListener(utils.DelegateChain.SUCCESS, this, this._onPreLoadSquadSuccess), p.addListener(utils.DelegateChain.FAIL, this, this._onPreLoadSquadFail), p.execute()
},models.ShowOffLoginModel.prototype._onStaticDataSuccess = function _onStaticDataSuccess(sender, response) {
    sender.clearListenersByScope(this), repositories.Item.setStaticData([].concat(response.Players, response.LegendsPlayers))
},models.ShowOffLoginModel.prototype._onPreLoadSquadSuccess = function _onPreLoadSquadSuccess(sender) {
    sender.clearListenersByScope(this), services.Configuration.loadRarityData().observe(this, function _onGetRarityComplete(t, data) {
        t.unobserve(this), data.success ? this._runNextStep() : (this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING))
    })
},models.ShowOffLoginModel.prototype._onPreLoadSquadFail = function _onPreLoadSquadFail(sender) {
    sender.clearListenersByScope(this), this._isRunning = !1, utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.logout.bind(this)), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
},models.ShowOffLoginModel.prototype._getShowOffSquad = function _getShowOffSquad() {
    services.Squad.loadShowOffSquad().observe(this, function (t, i) {
        t.unobserve(this), i.success ? (this._showOffDTO = i.showOffDTO, this._runNextStep()) : (window.location.search.substring(1).length && void 0 !== window.history && void 0 !== window.history.pushState && window.history.pushState({}, document.title, window.location.pathname), this._isRunning = !1, gClickShield.hideShield(components.ClickShield.SHIELD.LOADING))
    })
},models.ShowOffLoginModel.prototype._goToSquadScreen = function _goToSquadScreen() {
    this._isRunning = !1, getAppMain().getRootViewController().showSharedSquadView(this._showOffDTO), gClickShield.hideShield(components.ClickShield.SHIELD.LOADING)
},models.ShowOffLoginModel.prototype.logout = function logout() {
    utils.Debug.Assert(!this._isRunning, "[LOGIN] Attempted to logout when a login/logout request is already running."), this._isRunning || this._resetApp()
},NamespaceManager.Register("interfaces"),interfaces.EADPIdentityManager = function () {
},interfaces.EADPIdentityManager.prototype.isAuthenticated = function (t) {
},interfaces.EADPIdentityManager.prototype.getToken2CodeRedirectUri = function () {
},interfaces.EADPIdentityManager.prototype.clearStorage = function () {
},interfaces.EADPIdentityManager.prototype.checkEADPAuth = function checkEADPAuth(t, i) {
},interfaces.EADPIdentityManager.prototype.getUserInfo = function getUserInfo(t, i) {
},interfaces.EADPIdentityManager.prototype.initiateLoginFlow = function (t, i, s) {
},interfaces.EADPIdentityManager.prototype.getLoginUrl = function getLoginUrl() {
},utils.JS.inherits(EADPIdentityManager, UTObject),EADPIdentityManager.prototype.setLocale = function setLocale(locale) {
    this.locale = locale
},EADPIdentityManager.prototype.setRedirectUri = function setRedirectUri(uri) {
    this.redirect_uri = uri
},EADPIdentityManager.prototype.setDeviceId = function setDeviceId(t) {
    this.device_id = t
},EADPIdentityManager.prototype.setConnectHost = function setConnectHost(t) {
    this.connectHost = t
},EADPIdentityManager.prototype.setPortalHost = function setPortalHost(t) {
    this.portalHost = t
},EADPIdentityManager.prototype.setProxyHost = function setProxyHost(t) {
    this.proxyHost = t
},
EADPIdentityManager.prototype.setClientScope = function setClientScope(scope) {
    this.mobile_client_scope = scope
},EADPIdentityManager.prototype.setClientId = function setClientId(id) {
    this.mobile_client_id = id
},EADPIdentityManager.prototype.setClientSecret = function setClientSecret(t) {
    this.mobile_client_secret = t
},EADPIdentityManager.prototype.setReleaseType = function setReleaseType(t) {
    this.release_type = t
},EADPIdentityManager.prototype.getAccessToken = function getAccessToken() {
    var t = getStorage();
    return t ? t.getItem(enums.EADPIdentity.ACCESS_TOKEN) : null
},EADPIdentityManager.prototype.getRefreshToken = function () {
    var t = getStorage();
    return t ? t.getItem(enums.EADPIdentity.REFRESH_TOKEN) : null
},EADPIdentityManager.prototype.isAuthenticated = function isAuthenticated(t) {
    eadp.identity.getAccessToken() && eadp.identity.getRefreshToken() && t()
},EADPIdentityManager.prototype.isExternalLink = function isExternalLink(url) {
    return null !== url && "" !== url && (-1 === url.lastIndexOf(this.connectHost) && -1 === url.lastIndexOf(this.portalHost) && -1 === url.lastIndexOf("127.0.0.1") && -1 === url.lastIndexOf("/fifa/fltOnlineAssets/"))
},EADPIdentityManager.prototype.isErrorPattern = function isErrorPattern(url, pattern, t) {
    var i = this.portalHost + pattern;
    return null !== url && "" !== url && (0 === url.lastIndexOf(i) && -1 === url.lastIndexOf(t + "="))
},EADPIdentityManager.prototype.getToken2CodeRedirectUri = function getToken2CodeRedirectUri() {
    return "nucleus:rest"
},EADPIdentityManager.prototype.clearStorage = function clearStorage() {
    var t = getStorage();
    t && (t.setItem(enums.EADPIdentity.ACCESS_TOKEN, ""), t.setItem(enums.EADPIdentity.EXPIRE, ""), t.setItem(enums.EADPIdentity.TIMESTAMP, ""), t.setItem(enums.EADPIdentity.REFRESH_TOKEN, ""), t.setItem(enums.EADPIdentity.PID, ""))
},EADPIdentityManager.prototype.getResponseType = function getResponseType() {
    return "code"
},EADPIdentityManager.prototype.checkEADPAuth = function checkEADPAuth(t, i) {
    var s = {
        client_id: this.mobile_client_id,
        response_type: this.getResponseType(),
        display: "web2/login",
        locale: this.locale,
        redirect_uri: "nucleus:rest",
        prompt: "none",
        release_type: this.release_type
    };
    this.mobile_client_scope && (s.scope = this.mobile_client_scope);
    var o = new UTHttpRequest;
    o.setUrl(this.connectHost + "/connect/auth"), o.setUrlVariables(s), o.observe(this, function _onAuthCheckComplete(s, data) {
        s.unobserve(this), data.success && utils.JS.isObject(data.response) && data.response.code ? t() : i()
    }), o.send()
},EADPIdentityManager.prototype.getUserInfo = function getUserInfo(t, i) {
    function _cbUserInfoTokenRefresh(code) {
        code ? i(code) : this.getUserInfo(t, i)
    }

    var s = new UTHttpRequest;
    s.setUrl(this.proxyHost + "/proxy/identity/pids/me"), s.setRequestHeader("Authorization", "Bearer " + this.getAccessToken()), s.setRequestHeader("Accept", "application/json; charset=utf-8; */*; q=0.01"), s.observe(this, function _onGetUserInfoComplete(s, data) {
        if (s.unobserve(this), data.success) {
            var o = getStorage();
            o ? (o.setItem(enums.EADPIdentity.PID, data.response.pid.pidId), t(data.response.pid)) : i(this.error.LOCAL_STORAGE)
        } else data.status === enums.HTTPStatusCode.FORBIDDEN ? this.tokenRefresh(_cbUserInfoTokenRefresh.bind(this)) : i(this.error.SERVER)
    }), s.send()
},EADPIdentityManager.prototype.tokenRefresh = function tokenRefresh(t) {
    var i = this.getRefreshToken();
    if (!i) return utils.Debug.Assert(!1, "[EADPlib] Token refresh flow attempted when refresh token is null."), void t(this.error.REFRESH_TOKEN);
    var s = new UTHttpRequest;
    s.setContentType(enums.HTTPContentType.FORM_DATA), s.setRequestType(enums.HTTPRequestMethod.POST), s.setUrl(this.connectHost + "/connect/token"), s.observe(this, function _onTokenRefreshComplete(i, data) {
        if (i.unobserve(this), data.success) {
            var s = getStorage();
            s ? (s.setItem(enums.EADPIdentity.ACCESS_TOKEN, data.response.access_token), s.setItem(enums.EADPIdentity.EXPIRE, data.response.expires_id), s.setItem(enums.EADPIdentity.TIMESTAMP, Date.now()), s.setItem(enums.EADPIdentity.REFRESH_TOKEN, data.response.refresh_token), t()) : t(this.error.LOCAL_STORAGE)
        } else t(this.error.REFRESH_TOKEN)
    }), s.setUrlVariables({
        client_id: this.mobile_client_id, refresh_token: i,
        client_secret: this.mobile_client_secret, grant_type: "refresh_token", release_type: this.release_type
    }), s.send()
},EADPIdentityManager.prototype.closeLoginFlow = function () {
    var t = document.getElementById("eadp_chrome_iframe");
    t.outerHTML = "", t = null
},EADPIdentityManager.prototype.initiateLoginFlow = function initiateLoginFlow(t, i, s) {
    var o = document.getElementById(t);
    if (o) {
        this.exchangeAccessTokenSuccessCallback = i, this.exchangeAccessTokenFailCallback = s;
        var l = document.createElement("iframe");
        l.src = this.getLoginUrl(), l.id = "eadp_chrome_iframe", l.frameBorder = 0, l.onload = function () {
            var url = document.getElementById(l.id).src;
            if (-1 !== url.indexOf("code=")) {
                var code = url.split("code=")[1].split("&")[0];
                this.exchangeAccessToken(code, i, s)
            }
        }.bind(this), o.appendChild(l)
    }
},EADPIdentityManager.prototype.exchangeAccessToken = function exchangeAccessToken(code, t, i) {
    var s = new UTHttpRequest;
    s.setRequestType(enums.HTTPRequestMethod.POST), s.setUrl(this.connectHost + "/connect/token"), s.setContentType(enums.HTTPContentType.FORM_DATA), s.setUrlVariables({
        grant_type: "authorization_code",
        code: code,
        client_id: this.mobile_client_id,
        client_secret: this.mobile_client_secret,
        release_type: this.release_type
    }), s.observe(this, function _onExchangeAccessTokenComplete(s, data) {
        if (s.unobserve(this), data.success) {
            var o = getStorage();
            o ? (o.setItem(enums.EADPIdentity.ACCESS_TOKEN, data.response.access_token), o.setItem(enums.EADPIdentity.EXPIRE, data.response.expires_in), o.setItem(enums.EADPIdentity.TIMESTAMP, Date.now()), o.setItem(enums.EADPIdentity.REFRESH_TOKEN, data.response.refresh_token), t(data.response.access_token)) : i(this.error.LOCAL_STORAGE)
        } else i(this.error.SERVER)
    }), s.send()
},EADPIdentityManager.prototype.getLoginUrl = function getLoginUrl() {
    var t = {
        prompt: "login",
        accessToken: this.getAccessToken(),
        client_id: this.mobile_client_id,
        response_type: this.getResponseType(),
        display: "web2/login",
        locale: this.locale,
        machineProfileKey: this.device_id,
        release_type: this.release_type
    };
    return null !== t.accessToken && "" !== t.accessToken && delete t.prompt, utils.JS.isEmpty(this.mobile_client_scope) || (t.scope = this.mobile_client_scope), this.connectHost + "/connect/auth" + utils.HTTP.generateUrlParams(t)
},EADPIdentityManager.prototype.token2code = function token2code(t, i, s) {
    function _cbToken2CodeTokenRefresh(code) {
        code ? (code === this.error.REFRESH_TOKEN && (o.status = enums.HTTPStatusCode.INVALID_CREDENTIALS), s(o)) : this.token2code(t, i, s)
    }

    var o, l = new UTHttpRequest;
    l.setUrl(this.connectHost + "/connect/auth"), l.setUrlVariables({
        client_id: t,
        redirect_uri: this.getToken2CodeRedirectUri(),
        response_type: "code",
        access_token: this.getAccessToken(),
        release_type: this.release_type
    }), l.observe(this, function _onToken2CodeComplete(t, data) {
        t.unobserve(this), data.success ? i(data) : data.status === enums.HTTPStatusCode.BAD_REQUEST ? (o = data, this.tokenRefresh(_cbToken2CodeTokenRefresh.bind(this))) : s(data)
    }), l.send()
},EADPIdentityManager.prototype.logout = function (t) {
    var i = new UTHttpRequest;
    i.setRequestType(enums.HTTPRequestMethod.GET), i.setUrl(this.connectHost + "/connect/logout"), i.setTimeout(5e3), i.observe(this, function _onLogoutComplete(i, data) {
        i.unobserve(this), this.clearStorage(), t()
    }), i.setUrlVariables({
        client_id: this.mobile_client_id,
        redirect_uri: "nucleus:rest",
        release_type: this.release_type
    }), i.send()
},utils.JS.inherits(EADPIdentityManager_Web, EADPIdentityManager),EADPIdentityManager_Web.prototype.isAuthenticated = function isAuthenticated(t) {
    eadp.identity.getAccessToken() && t()
},EADPIdentityManager_Web.prototype.getResponseType = function getResponseType() {
    return "token"
},EADPIdentityManager_Web.prototype.parseCheckEADPResponse = function parseCheckEADPResponse(responseText, t, i) {
    try {
        var json = JSON.parse(responseText);
        if (json.access_token) return this.setAccessToken(json.access_token), t()
    } catch (t) {
    }
    i()
},EADPIdentityManager_Web.prototype.setAccessToken = function setAccessToken(t) {
    getStorage().setItem(enums.EADPIdentity.ACCESS_TOKEN, t)
},EADPIdentityManager_Web.prototype.tokenRefresh = function tokenRefresh(t) {
    this.checkEADPAuth(t.bind(this), t.bind(this, this.error.REFRESH_TOKEN))
},EADPIdentityManager_Web.prototype.initiateLoginFlow = function initiateLoginFlow(t, i, s) {
    window.top.location = this.getLoginUrl()
},EADPIdentityManager_Web.prototype.getLoginUrl = function getLoginUrl() {
    var t = {
        prompt: "login",
        accessToken: this.getAccessToken(),
        client_id: this.mobile_client_id,
        response_type: this.getResponseType(),
        display: "web2/login",
        locale: this.locale,
        redirect_uri: this.redirect_uri,
        release_type: this.release_type
    };
    return null !== t.accessToken && "" !== t.accessToken && delete t.prompt, utils.JS.isEmpty(this.mobile_client_scope) || (t.scope = this.mobile_client_scope), this.connectHost + "/connect/auth" + utils.HTTP.generateUrlParams(t)
},EADPIdentityManager_Web.prototype.logout = function (context, t) {
    var i = {client_id: this.mobile_client_id, redirect_uri: this.redirect_uri, release_type: this.release_type},
        url = this.connectHost + "/connect/logout" + utils.HTTP.generateUrlParams(i);
    this.clearStorage(), window.top.location = url
};
var eadp = {};
eadp.identity = new EADPIdentityManager_Web, utils.JS.inherits(UTLoginViewController, FUIViewController), UTLoginViewController.IOS_STATUS_BAR_STYLE = {
    DEFAULT: 0,
    BLACK: 1
}, UTLoginViewController.prototype.init = function init() {
    this.superclass(), eadp.identity.setConnectHost(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_EADP_CONNECT_HOST)), eadp.identity.setPortalHost(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_EADP_PORTAL_HOST)), eadp.identity.setProxyHost(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_EADP_PROXY_HOST)), eadp.identity.setClientId(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_EADP_CLIENT_ID)), eadp.identity.setClientSecret(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_EADP_CLIENT_SECRET)), eadp.identity.setLocale(services.Localization.getLocale().toString()), eadp.identity.setDeviceId(getUUID()), eadp.identity.setReleaseType(gConfigurationModel.getConfigString(models.ConfigurationModel.KEY_RELEASE_TYPE));
    var url = window.location.href, t = utils.HTTP.getParamsFromUrl(url), uri = utils.HTTP.getUriRoot(url),
        i = services.URL.findValidDeepLinkID(t.keys());
    i !== enums.DeepLinkSections.NONE && (services.URL.setDeepLinkURL(i, t.get(i)), getStorage().setItem(STORAGE_DEEP_LINK_KEY, services.URL.getDeepLinkURL())), uri = uri.replace(/\/$/, "") + "/auth.html", eadp.identity.setRedirectUri(uri), this.getView().getLoginButton().addTarget(this, this._eLoginSelected, enums.Event.TAP), TelemetryManager.trackPage(TelemetryManager.Sections.LOGIN, "Login")
}, UTLoginViewController.prototype.dealloc = function dealloc() {
    this.superclass()
}, UTLoginViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.bootFlow.Login
}, UTLoginViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("navbar.label.loginfut")
}, UTLoginViewController.prototype.viewDidAppear = function viewDidAppear() {
    var t = function () {
        this.getView().enableLoginButton(!0)
    }.bind(this), i = function () {
        eadp.identity.getUserInfo(this._onEadpUserInfoSuccess.bind(this), this._onEadpUserInfoFail.bind(this))
    }.bind(this);
    repositories.Squad.hasExternalShowOffSquad() ? this._startUnauthenticatedLoginFlow() : isWeb() ? (this.getView().enableLoginButton(!1), eadp.identity.getAccessToken() ? i() : eadp.identity.checkEADPAuth(i, t)) : eadp.identity.isAuthenticated(function () {
        this.getView().enableLoginButton(!1), eadp.identity.checkEADPAuth(i, t)
    }.bind(this)), getDefaultDispatcher().addObserver(enums.Notification.APP_RESUME, this, this._nAppResumed)
}, UTLoginViewController.prototype.viewWillDisappear = function viewWillDisappear() {
    this.superclass(), getDefaultDispatcher().removeObserver(enums.Notification.APP_RESUME, this)
}, UTLoginViewController.prototype._startUnauthenticatedLoginFlow = function _startUnauthenticatedLoginFlow() {
    gAuthenticationModel.setLoginModel(new models.ShowOffLoginModel), gAuthenticationModel.login()
},
    UTLoginViewController.prototype._onEadpLoginComplete = function _onEadpLoginComplete() {
        eadp.identity.getUserInfo(this._onEadpUserInfoSuccess.bind(this), this._onEadpUserInfoFail.bind(this))
    }, UTLoginViewController.prototype._onEadpUserInfoFail = function _onEadpUserInfoFail(error) {
    if (error === eadp.identity.error.LOCAL_STORAGE) return utils.Debug.Assert(!1, "[controllers.LoginController] Unable to save EADP Identity data in local storage."), void this.getView().enableLoginButton(!0);
    error !== eadp.identity.error.REFRESH_TOKEN ? error !== eadp.identity.error.SERVER || this.getView().enableLoginButton(!0) : this.getView().enableLoginButton(!0)
}, UTLoginViewController.prototype._onEadpUserInfoSuccess = function _onEadpUserInfoSuccess(t) {
    gAuthenticationModel.setLoginModel(new models.LoginModel), services.User.setCurrent(new entities.User(t)), gUserSettingsModel.setUserKey(t.pidId.toString()), isChrome() || window.plugins.utilities.registerNimble(t.pidId, getStorage().getItem(STORAGE_PN_STATUS_KEY), function () {
    }, function () {
    }), gAuthenticationModel.login()
}, UTLoginViewController.prototype._eLoginSelected = function _eLoginSelected(sender, event) {
    gClientUpdate.disablePolling(), TelemetryManager.trackEvent(TelemetryManager.Sections.LOGIN, TelemetryManager.Categories.BUTTON_PRESS, "Login"), this.getView().enableLoginButton(!1), this.createLoginView()
}, UTLoginViewController.prototype.createLoginView = function createLoginView() {
    if (hasConnection()) if (isChrome()) eadp.identity.initiateLoginFlow("Login", this.onAccessTokenSuccess.bind(this), this.onAccessTokenFail.bind(this)); else {
        var t = eadp.identity.getLoginUrl();
        this._inAppBrowser = window.open(t, "_blank", "location=no"), this._successCallbackDelegate = this.iabLoadStart.bind(this), this._errorCallbackDelegate = this.iabLoadError.bind(this), this._browserDismissedCallbackDelegate = this.iabExit.bind(this), this._linkCallbackDelegate = this.iabLoadStop.bind(this), this._inAppBrowser.addEventListener("loadstart", this._successCallbackDelegate, !1), this._inAppBrowser.addEventListener("loadstart", this._linkCallbackDelegate, !1), this._inAppBrowser.addEventListener("loadstop", this._linkCallbackDelegate, !1), this._inAppBrowser.addEventListener("loaderror", this._errorCallbackDelegate, !1), this._inAppBrowser.addEventListener("exit", this._browserDismissedCallbackDelegate, !1)
    } else utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, function () {
        this.getView().enableLoginButton(!0)
    }.bind(this))
}, UTLoginViewController.prototype.closeLoginView = function closeLoginView() {
    this.isLoginViewOpen() && (this._inAppBrowser.removeEventListener("loadstart", this._successCallbackDelegate, !1), this._inAppBrowser.removeEventListener("loadstart", this._linkCallbackDelegate, !1), this._inAppBrowser.removeEventListener("loadstop", this._linkCallbackDelegate, !1), this._inAppBrowser.removeEventListener("loaderror", this._errorCallbackDelegate, !1), this._inAppBrowser.removeEventListener("exit", this._browserDismissedCallbackDelegate, !1), this._successCallbackDelegate = null, this._errorCallbackDelegate = null, this._browserDismissedCallbackDelegate = null, this._inAppBrowser.close(), this._inAppBrowser = null, gClientUpdate.pollForUpdates(function () {
        getAppMain().getRootViewController().showClientUpdateView()
    }))
}, UTLoginViewController.prototype.iabLoadStart = function iabLoadStart(event) {
    if (eadp.identity.isErrorPattern(event.url, "/p/mobile/fifa/companion/code", "code")) gAuthenticationModel.logout(), this.closeLoginView(), this.getView().enableLoginButton(!0); else if (event.url && -1 !== event.url.indexOf("code=")) {
        this.closeLoginView();
        var code = event.url.split("code=")[1].split("&")[0];
        eadp.identity.exchangeAccessToken(code, this.onAccessTokenSuccess.bind(this), this.onAccessTokenFail.bind(this))
    }
}, UTLoginViewController.prototype.iabLoadStop = function iabLoadStop(event) {
    eadp.identity.isExternalLink(event.url) && (this.closeLoginView(), this.getView().enableLoginButton(!0), this._recreateOnResume = !0, services.URL.process(event.url))
}, UTLoginViewController.prototype.iabLoadError = function iabLoadError(event) {
    utils.PopupManager.ShowAlert(utils.PopupManager.Alerts.ORIGIN_UNAVAILABLE, this.iabExit.bind(this))
}, UTLoginViewController.prototype.iabExit = function iabExit(event) {
    this.closeLoginView(), this.getView().enableLoginButton(!0)
}, UTLoginViewController.prototype.onAccessTokenSuccess = function onAccessTokenSuccess(t) {
    isChrome() && eadp.identity.closeLoginFlow(), this._onEadpLoginComplete()
}, UTLoginViewController.prototype.onAccessTokenFail = function onAccessTokenFail(t) {
    this._onEadpLoginComplete()
}, UTLoginViewController.prototype.isLoginViewOpen = function isLoginViewOpen() {
    return utils.JS.isValid(this._inAppBrowser)
}, UTLoginViewController.prototype._nAppResumed = function _nAppResumed(t, sender, data) {
    repositories.Squad.hasExternalShowOffSquad() ? (this.isLoginViewOpen() && (this.closeLoginView(), this.getView().enableLoginButton(!0)), this._startUnauthenticatedLoginFlow()) : this._recreateOnResume && (this._recreateOnResume = !1, this.getView().enableLoginButton(!1), this.createLoginView())
}, NamespaceManager.Register("views.bootFlow"), views.bootFlow.LoggedOnConsole = function UTLoggedOnConsoleView() {
    FUIView.call(this), this.onRetryTap = new UTObservable, Object.defineProperty(this, "onImageLoaded", {writable: !1}), this._generate()
}, utils.JS.inherits(views.bootFlow.LoggedOnConsole, FUIView), views.bootFlow.LoggedOnConsole.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("sm-ut-content-container"), t.classList.add("ut-content-container");
        var i = document.createElement("div");
        i.classList.add("ut-content"), this.__personaSelectorContainer = document.createElement("div"), this.__personaSelectorContainer.classList.add("ut-app-settings-persona-selector"), i.appendChild(this.__personaSelectorContainer);
        var s = document.createElement("div");
        s.classList.add("ut-logged-on-console"), s.classList.add("ut-login-generic");
        var o = document.createElement("div");
        o.classList.add("ut-login-generic-content");
        var l = document.createElement("div");
        this.__longOnTitle = document.createElement("h2"), l.appendChild(this.__longOnTitle), this.__message1 = document.createElement("p"), l.appendChild(this.__message1), this.__message2 = document.createElement("p"), l.appendChild(this.__message2), this._btnRetry = new views.buttons.DefaultButton, this._btnRetry.getRootElement().classList.add("call-to-action"), l.appendChild(this._btnRetry.getRootElement()), o.appendChild(l), s.appendChild(o), i.appendChild(s), t.appendChild(i), this.__root = t, this._generated = !0
    }
}, views.bootFlow.LoggedOnConsole.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__personaSelectorContainer = null, this.__longOnTitle = null, this.__message1 = null, this.__message2 = null, this._btnRetry.destroy()
}, views.bootFlow.LoggedOnConsole.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, views.bootFlow.LoggedOnConsole.prototype.getRootElement = function getRootElement() {
    return this.__root
}, views.bootFlow.LoggedOnConsole.prototype.init = function init() {
    this.superclass(), this.__longOnTitle.textContent = services.Localization.localize("signedontoanotherdevice.title"), this.__message1.textContent = services.Localization.localize("signedontoanotherdevice.message1"), this.__message2.textContent = services.Localization.localize("signedontoanotherdevice.message2"), this._btnRetry.init(), this._btnRetry.setText(services.Localization.localize("common.dialog.retry")), this._btnRetry.addTarget(this.onRetryTap, this.onRetryTap.notify, enums.Event.TAP)
}, views.bootFlow.LoggedOnConsole.prototype.appendPersonaSelector = function appendPersonaSelector(view) {
    this.addClass("has-persona-selector"), this.addSubview(view, this.__personaSelectorContainer)
}, utils.JS.inherits(UTLoggedOnConsoleViewController, FUIViewController), UTLoggedOnConsoleViewController.prototype.init = function init() {
    this.superclass();
    var view = this.getView();
    view.onRetryTap.observe(this, this._onRetryAuth), this._personaController = new controllers.views.Persona, this._personaController.init(),
        this.addChildViewController(this._personaController), view.appendPersonaSelector(this._personaController.getView()), view.layoutSubviews(), TelemetryManager.trackPage(TelemetryManager.Sections.LOGIN, "Logged in on Console")
}, UTLoggedOnConsoleViewController.prototype.dealloc = function dealloc() {
    this.superclass(), this._personaController && (this._personaController.dealloc(), this._personaController = null)
}, UTLoggedOnConsoleViewController.prototype._getViewInstanceFromData = function _getViewInstanceFromData() {
    return new views.bootFlow.LoggedOnConsole
}, UTLoggedOnConsoleViewController.prototype.getNavigationTitle = function getNavigationTitle() {
    return services.Localization.localize("signedontoanotherdevice.title")
}, UTLoggedOnConsoleViewController.prototype.viewDidAppear = function viewDidAppear() {
    this.superclass();
    var t = this.getNavigationController();
    t && t.setNavigationVisibility(isPhone(), !0), this._personaController && this._personaController.viewDidAppear()
}, UTLoggedOnConsoleViewController.prototype._onRetryAuth = function _onRetryAuth() {
    this.getView().setInteractionState(!1), gAuthenticationModel.login(!0)
}, NamespaceManager.Register("views.controls"), utils.JS.inherits(UTDropDownControl, FUIControl), UTDropDownControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("inline-list-select"), t.classList.add("ut-drop-down-control"), this.__animatedContainer = document.createElement("div"), this.__animatedContainer.classList.add("inline-container"), this.__label = document.createElement("span"), this.__label.classList.add("label"), this.__animatedContainer.appendChild(this.__label), t.appendChild(this.__animatedContainer), this.__root = t, this._generated = !0
    }
}, UTDropDownControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__animatedContainer = null, this.__label = null
}, UTDropDownControl.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, UTDropDownControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}, UTDropDownControl.prototype.init = function init() {
    this.superclass();
    var t = this.getDropDownElement();
    this._addListener(enums.Event.CHANGE, t, this._handleChange.bind(this)), isPhone() ? this.__animatedContainer.appendChild(t) : (this._windowListener = this._windowClick.bind(this), this.__list = document.createElement("ul"), DOMKit.addClass(this.__list, "inline-list"), this._startHandlingEvents(this.__animatedContainer))
}, UTDropDownControl.prototype.dealloc = function dealloc() {
    this._removeListenersByName(enums.Event.CHANGE), this._removeWindowListener(), getKeyboardEventController().unregisterDelegate(this, UTKeyboardEventController.PRIORITY.ACTIVE_ELEMENT), this._options = [], this._windowListener = null, this.__list = null, this.__picker = null, this.superclass()
}, UTDropDownControl.prototype.setInteractionState = function setInteractionState(t) {
    if (this._setInteractionStateFlag(t)) if (this.toggleClass(enums.UIState.DISABLED, !t), this.__list) this._interactionState ? this._startHandlingEvents(this.__animatedContainer) : this._stopHandlingEvents(); else {
        var i = this.getDropDownElement();
        t || i !== document.activeElement || i.dispatchEvent(utils.JS.createEvent("blur")), i.disabled = !t
    }
}, UTDropDownControl.prototype._requiresFlip = function _requiresFlip() {
    return !!this.__list && window.innerHeight < this.getRootElement().getBoundingClientRect().bottom + this.__list.clientHeight
}, UTDropDownControl.prototype._open = function _open() {
    !this._isOpen && this.__list && (this._isOpen = !0, this.__animatedContainer.appendChild(this.__list), this._requiresFlip() && (this.__animatedContainer.insertBefore(this.__list, this.__animatedContainer.children.item(0)), this.__animatedContainer.style.top = "-" + this.__list.clientHeight.toString() + "px", this.addClass(enums.UIDirection.FLIP_VERTICAL)), DOMKit.addClass(this.__list.children[this.getDropDownElement().selectedIndex], enums.UIState.SELECTED), this._scrollToSelected(), this.addClass("is-open"), this._addWindowListener(),
        getKeyboardEventController().registerDelegate(this, UTKeyboardEventController.PRIORITY.ACTIVE_ELEMENT))
}, UTDropDownControl.prototype._close = function _close() {
    this._isOpen && this.__list && (this._isOpen = !1, this._removeWindowListener(), getKeyboardEventController().unregisterDelegate(this, UTKeyboardEventController.PRIORITY.ACTIVE_ELEMENT), this.__animatedContainer.style.top = "0px", DOMKit.remove(this.__list), this.removeClass(["is-open", enums.UIDirection.FLIP_VERTICAL].join(" ")))
}, UTDropDownControl.prototype._addWindowListener = function _addWindowListener() {
    this._removeWindowListener(), requestAnimationFrame(function () {
        window.addEventListener(enums.Event.CLICK, this._windowListener, !1), window.addEventListener(enums.Event.TOUCHEND, this._windowListener, !1)
    }.bind(this))
}, UTDropDownControl.prototype._removeWindowListener = function _removeWindowListener() {
    window.removeEventListener(enums.Event.CLICK, this._windowListener, !1), window.removeEventListener(enums.Event.TOUCHEND, this._windowListener, !1)
}, UTDropDownControl.prototype._scrollToSelected = function _scrollToSelected() {
    var t = this.__list.children.item(this.getDropDownElement().selectedIndex);
    t && (this.__list.scrollTop = t.offsetTop)
}, UTDropDownControl.prototype._windowClick = function _windowClick(e) {
    "li" === e.target.nodeName.toLowerCase() && e.target.parentNode === this.__list || this._close()
}, UTDropDownControl.prototype.getDropDownElement = function getDropDownElement() {
    return this.__picker || (this.__picker = document.createElement("select")), this.__picker
}, UTDropDownControl.prototype.getEnabled = function getEnabled() {
    return this.isInteractionEnabled()
}, UTDropDownControl.prototype.setEnabled = function setEnabled(t) {
    t = !!t, this.setInteractionState(t)
}, UTDropDownControl.prototype._generateWebOptionElement = function _generateWebOptionElement(t) {
    var i = document.createElement("li");
    return i.textContent = t.label, i
}, UTDropDownControl.prototype.setOptions = function setOptions(options) {
    Array.isArray(options) && (this._options = options, this._generateNativeOptions(), this.__label.textContent = this.getLabel(), this.__list && (DOMKit.empty(this.__list), options.forEach(function (t) {
        this.__list.appendChild(this._generateWebOptionElement(t))
    }, this))), this.removeClass(["is-open", enums.UIDirection.FLIP_VERTICAL].join(" "))
}, UTDropDownControl.prototype.getOptions = function getOptions() {
    return this._options.slice()
}, UTDropDownControl.prototype.setIndex = function setIndex(index) {
    var t = this.getDropDownElement();
    if (utils.JS.isNumber(index) && t.selectedIndex !== index) {
        if (this.__list) {
            var i = this.__list.children.item(t.selectedIndex), s = this.__list.children.item(index);
            i && DOMKit.removeClass(i, enums.UIState.SELECTED), s && DOMKit.addClass(s, enums.UIState.SELECTED)
        }
        t.selectedIndex = index, t.dispatchEvent(utils.JS.createEvent("change"))
    }
}, UTDropDownControl.prototype.getIndex = function getIndex() {
    return this.getDropDownElement().selectedIndex
}, UTDropDownControl.prototype.setIndexById = function setIndexById(id) {
    for (var t = this._options.length; t-- > 0;) if (this._options[t].id === id) {
        this.setIndex(t);
        break
    }
}, UTDropDownControl.prototype.setIndexByValue = function setIndexByValue(value) {
    for (var t = this._options.length; t-- > 0;) if (this._options[t].value === value) return this.setIndex(t), !0;
    return !1
}, UTDropDownControl.prototype.setDefaultIndexById = function setDefaultIndexById(id, t) {
    for (var i = this._options.length; i-- > 0;) if (this._options[i].id === id) return this._defaultIndex = i, t && this.setIndex(i), !0;
    return !1
}, UTDropDownControl.prototype.setDefaultIndexByValue = function setDefaultIndexByValue(value, t) {
    for (var i = this._options.length; i-- > 0;) if (this._options[i].value === value) {
        this._defaultIndex = i, t && this.setIndex(i);
        break
    }
}, UTDropDownControl.prototype.getDefaultIndex = function getDefaultIndex() {
    return this._defaultIndex
}, UTDropDownControl.prototype.getLabel = function getLabel() {
    var t = this._options[this.getIndex()];
    return t ? t.label : ""
}, UTDropDownControl.prototype.getId = function getId() {
    var t = this._options[this.getIndex()];
    return t ? t.id : -1
},
    UTDropDownControl.prototype.getValue = function getValue() {
        var t = this._options[this.getIndex()];
        return t ? t.value : ""
    }, UTDropDownControl.prototype.blur = function blur() {
    var t = this.getDropDownElement();
    t === document.activeElement && t.blur()
}, UTDropDownControl.prototype.focus = function focus() {
    var t = this.getDropDownElement();
    t !== document.activeElement && t.focus()
}, UTDropDownControl.prototype._handleDropdownSearch = function _handleDropdownSearch(c) {
    this._searchTimeout > 0 && clearTimeout(this._searchTimeout), this._searchTimeout = setTimeout(function _resetSearch() {
        this._searchTimeout = 0, this._searchString = ""
    }.bind(this), 1e3);
    var t = this._searchString += c, i = DOMKit.HTMLCollectionToArray(this.__list.childNodes),
        s = utils.JS.find(i, function (i) {
            var style = getComputedStyle(i);
            return "none" !== style.display && "visible" === style.visibility && 0 === i.textContent.trim().toLowerCase().indexOf(t.trim().toLowerCase())
        });
    s && (this.__list.scrollTop = s.offsetTop)
}, UTDropDownControl.prototype.handleKeyUpEvent = function handleKeyUpEvent(e) {
    /^[a-zA-Z0-9 ]$/.test(e.key) && this._handleDropdownSearch(e.key.toString())
}, UTDropDownControl.prototype._handleChange = function _handleChange(e) {
    this.isInteractionEnabled() && (this.__label.textContent = this.getLabel(), this._triggerActions(enums.Event.CHANGE, {
        index: this.getIndex(),
        value: this.getValue()
    }))
}, UTDropDownControl.prototype._handleFocus = function _handleFocus(e) {
    this.enabled && !this._shieldShowing && (this._shieldShowing = !0, gClickShield.showShield(components.ClickShield.SHIELD.FULL))
}, UTDropDownControl.prototype._handleBlur = function _handleBlur(e) {
    this._shieldShowing && (gClickShield.hideShield(components.ClickShield.SHIELD.FULL), this._shieldShowing = !1)
}, UTDropDownControl.prototype._touchStarted = function _touchStarted(e) {
    this.enabled && requestAnimationFrame(function () {
        this.addClass(enums.UIState.ACTIVE)
    }.bind(this))
}, UTDropDownControl.prototype._touchMoved = function _touchMoved(e) {
    requestAnimationFrame(function () {
        this.removeClass(enums.UIState.ACTIVE)
    }.bind(this))
}, UTDropDownControl.prototype._touchEnded = function _touchEnded(e) {
    requestAnimationFrame(function () {
        this.removeClass(enums.UIState.ACTIVE)
    }.bind(this))
}, UTDropDownControl.prototype._tapDetected = function _tapDetected(e) {
    if (this.isInteractionEnabled() && this.__list) {
        var nodeName = e.target.nodeName.toLowerCase();
        if ("ul" !== nodeName) if ("li" === nodeName) {
            var t = DOMKit.HTMLCollectionToArray(this.__list.children);
            this.setIndex(t.indexOf(e.target)), this._close()
        } else this._isOpen ? this._close() : this._open()
    }
}, UTDropDownControl.prototype._mouseLeave = function _mouseLeave(e) {
    this.removeClass(enums.UIState.HOVER)
}, UTDropDownControl.prototype._mouseEnter = function _mouseEnter(e) {
    this.addClass(enums.UIState.HOVER)
}, UTDropDownControl.prototype._generateNativeOptions = function _generateNativeOptions() {
    var t = this.getDropDownElement();
    DOMKit.empty(t), this._options.forEach(function _generateOptionElement(i) {
        var s = document.createElement("option");
        s.value = i.value, s.textContent = i.label, t.appendChild(s)
    }, this), this.setIndex(this._defaultIndex)
}, utils.JS.inherits(UTSearchFilterControl, UTDropDownControl), UTSearchFilterControl.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("inline-list-select"), t.classList.add("ut-search-filter-control"), this.__animatedContainer = document.createElement("div"), this.__animatedContainer.classList.add("inline-container");
        var i = document.createElement("div");
        i.classList.add("ut-search-filter-control--row"), this.__filterImage = document.createElement("img"), this.__filterImage.classList.add("ut-search-filter-control--row-image"), i.appendChild(this.__filterImage), this.__label = document.createElement("span"), this.__label.classList.add("label"), i.appendChild(this.__label), this._clearBtn = new views.buttons.FlatButton, this._clearBtn.getRootElement().classList.add("ut-search-filter-control--row-button"), i.appendChild(this._clearBtn.getRootElement()), this.__animatedContainer.appendChild(i), t.appendChild(this.__animatedContainer),
            this.__root = t, this._generated = !0
    }
}, UTSearchFilterControl.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this.__animatedContainer = null, this.__filterImage = null, this.__label = null, this._clearBtn.destroy()
}, UTSearchFilterControl.prototype.getRoot = function getRoot() {
    return $(this.__root)
}, UTSearchFilterControl.prototype.getRootElement = function getRootElement() {
    return this.__root
}, UTSearchFilterControl.prototype.init = function init() {
    this.superclass(), this._clearBtn.init(), this._clearBtn.addTarget(this, this._onClear, enums.Event.TAP)
}, UTSearchFilterControl.prototype.dealloc = function dealloc() {
    this._iconTable = null, this.superclass()
}, UTSearchFilterControl.prototype._generateWebOptionElement = function _generateWebOptionElement(t) {
    var i = utils.JS.isValid(this._iconTable), s = document.createElement("li");
    if (s.textContent = t.label, i) {
        var src = this._iconTable.get(t.value);
        utils.JS.isEmpty(src) || (DOMKit.addClass(s, "with-icon"), s.style.backgroundImage = "url('" + src + "')")
    }
    return s
}, UTSearchFilterControl.prototype.setOptions = function setOptions(options) {
    this.superclass(options), this.removeClass("has-selection"), 0 === this.getIndex() && this._hasDefault && (this.__label.textContent = this._defaultLabel)
}, UTSearchFilterControl.prototype.getImage = function getImage() {
    return this.__filterImage.getAttribute("src")
}, UTSearchFilterControl.prototype.setImage = function setImage(src) {
    var t = utils.JS.isEmpty(src);
    this.toggleClass("has-image", !t), t || this.__filterImage.setAttribute("src", src)
}, UTSearchFilterControl.prototype.setDefaultLabel = function setDefaultLabel(label) {
    this._defaultLabel = label, 0 === this.getIndex() && this._hasDefault && (this.__label.textContent = this._defaultLabel)
}, UTSearchFilterControl.prototype.setIndex = function setIndex(index) {
    this.superclass(index), this.toggleClass("has-selection", 0 !== this.getIndex() || !this._hasDefault)
}, UTSearchFilterControl.prototype.setHasDefault = function setHasDefault(value) {
    this._hasDefault = value, this.toggleClass("has-default", value)
}, UTSearchFilterControl.prototype.setIconTable = function setIconTable(table) {
    this._iconTable = table
},UTSearchFilterControl.prototype._handleChange = function _handleChange(e) {
    this.superclass(e), 0 === this.getIndex() && this._hasDefault && (this.__label.textContent = this._defaultLabel)
},UTSearchFilterControl.prototype._onClear = function _onClear(e) {
    if (this.enabled) {
        var parentNode = this.getDropDownElement().parentNode;
        isPhone() && utils.JS.isValid(parentNode) && (parentNode.removeChild(this.getDropDownElement()), setTimeout(function () {
            this.__animatedContainer.appendChild(this.getDropDownElement())
        }.bind(this), 500)), this.setIndex(this.getDefaultIndex())
    }
},utils.JS.inherits(UTItemInfoStateViewModel, UTObject),UTItemInfoStateViewModel.prototype.setState = function setState(state) {
    this._configDelegate && (this._configDelegate.setItem("UTItemInfoState", state), getDefaultDispatcher().notify(enums.Notification.UI_ITEM_STATE_CHANGE, this, {state: state})), this._state = state
},UTItemInfoStateViewModel.prototype.getState = function getState() {
    return this._configDelegate ? parseInt(this._configDelegate.getItem("UTItemInfoState", this._state), 10) : this._state
},UTItemInfoStateViewModel.prototype.nextState = function nextState() {
    switch (this.getState()) {
        case enums.UIItemInfoState.MAIN:
            this.setState(enums.UIItemInfoState.BIO);
            break;
        case enums.UIItemInfoState.BIO:
            this.setState(enums.UIItemInfoState.STATS);
            break;
        case enums.UIItemInfoState.STATS:
            this.setState(enums.UIItemInfoState.STYLE);
            break;
        case enums.UIItemInfoState.STYLE:
        default:
            this.setState(enums.UIItemInfoState.MAIN)
    }
    return this._state
},utils.JS.inherits(UTItemCanvasDTO, UTObject),components.ItemFUTBase = function ItemFUTBaseView() {
    FUIView.call(this), this._renderConcept = !0, Object.defineProperty(this, "_renderConcept", {
        writable: !0,
        enumerable: !1
    }), this._rendered = !1, Object.defineProperty(this, "_rendered", {
        writable: !0,
        enumerable: !1
    }), this._canShowSecondaryViews = !0, Object.defineProperty(this, "_canShowSecondaryViews", {
        writable: !0,
        enumerable: !1
    }),
        this._infoStateViewModel = new UTItemInfoStateViewModel(gUserSettingsModel), Object.defineProperty(this, "_infoStateViewModel", {
        writable: !1,
        enumerable: !1
    }), this.assets = {}, this._assetsLoaded = 0
},utils.JS.inherits(components.ItemFUTBase, FUIView),components.ItemFUTBase.CLASS = {
    ACTIVE_CLUB_ITEM: "activeItem",
    CONTRACT_EXPIRED: "restricted-contract",
    INJURED: "restricted-injured",
    SUSPENDED: "restricted-suspended",
    DYNAMIC_PORTRAIT: "dynamic-portrait",
    CONCEPT: "concept",
    EMPTY: "empty",
    LOAN: "loan",
    CHEM_BONUS: "hasBonus",
    INVALID_STAT: "invalidStat",
    PLAYSTYLE: "playStyle",
    PLAYEROUT: "playerOut",
    AUCTION_WINNING: "winning",
    AUCTION_WON: "won",
    AUCTION_EXPIRED: "expired",
    AUCTION_OUTBID: "outbid",
    LOADING: "ut-item-loading",
    LOADED: "ut-item-loaded",
    CHAMPIONS: "champions"
},components.ItemFUTBase.QUALITY = {
    BRONZE: "bronze",
    SILVER: "silver",
    GOLD: "gold"
},components.ItemFUTBase.STATUS_OVERLAY_TYPE = ["common", "rare", "specials"],components.ItemFUTBase.prototype.init = function init() {
    this.superclass(), getDefaultDispatcher().addObserver(enums.Notification.UI_ITEM_STATE_CHANGE, this, this._nInfoStateChanged)
},components.ItemFUTBase.prototype.dealloc = function dealloc() {
    getDefaultDispatcher().removeObserver(enums.Notification.UI_ITEM_STATE_CHANGE, this), this.superclass()
},components.ItemFUTBase.prototype.renderConcept = function renderConcept(t) {
    this._renderConcept = t
},components.ItemFUTBase.prototype.showSecondaryViews = function showSecondaryViews(t) {
    this._canShowSecondaryViews = !!t
},components.ItemFUTBase.onFlagImageLoad = function onFlagImageLoad(t, i, s, path) {
    t.unobserve(this), i || s.replaceAndShowResource(path.replace(/\d+\.png/, enums.PlaceholderAssetId.FLAG + ".png"))
},components.ItemFUTBase.prototype.setItemInfoState = function setItemInfoState(state) {
},components.ItemFUTBase.prototype.render = function render(item) {
    var t = services.Configuration.getItemRarity(item, item.getYear());
    this._rendered && this._resetRender(), this._canvas && (this._canvas.clearCanvas(), this.toggleClass(components.ItemFUTBase.CLASS.LOADED, !1), this.toggleClass(components.ItemFUTBase.CLASS.LOADING, !0)), this.assets = {}, this._assetsLoaded = 0, this._renderShell(item, t), this._render(item, t), this.renderAuctionState(item.getAuctionData()), this._rendered = !0, this.getRootElement().setAttribute("data-asset-year", item.resourceGameYear);
    var i = this._infoStateViewModel && this._canShowSecondaryViews ? this._infoStateViewModel.getState() : enums.UIItemInfoState.MAIN;
    this.setItemInfoState(i)
},components.ItemFUTBase.prototype._renderComplete = function _renderComplete() {
    this.toggleClass(components.ItemFUTBase.CLASS.LOADING, !1), this.toggleClass(components.ItemFUTBase.CLASS.LOADED, !0)
},components.ItemFUTBase.prototype._resetRender = function _resetRender() {
},components.ItemFUTBase.prototype.canRender = function canRender(item) {
    return utils.Debug.Assert(!1, "[components.ItemFUTBase] Abstract method canRender not implemented."), !1
},components.ItemFUTBase.prototype._render = function _render(item, t) {
    utils.Debug.Assert(!1, "[components.ItemFUTBase] Abstract method _render not implemented.")
},components.ItemFUTBase.prototype._renderShell = function _renderShell(item, t) {
    this._rendered && this.removeClass(components.ItemFUTBase.CLASS.CONCEPT + " " + components.ItemFUTBase.CLASS.EMPTY), item.isValid() ? this._renderConcept && item.concept ? this.addClass(components.ItemFUTBase.CLASS.CONCEPT) : (this.toggleClass(components.ItemFUTBase.CLASS.ACTIVE_CLUB_ITEM, item.isActiveClubItem()), this.removeClass(components.ItemFUTBase.STATUS_OVERLAY_TYPE.join(" ")), this.addClass(components.ItemFUTBase.STATUS_OVERLAY_TYPE[t.shell])) : this.addClass(components.ItemFUTBase.CLASS.EMPTY)
},components.ItemFUTBase.prototype._setShell = function _setShell(item, t) {
    var i, root = this.getRootElement(), s = item.isPlayer() || item.isManager();
    i = item.isStaff() && !s ? 2 : s ? 1 : 0;
    var o = utils.AssetLocator.getShellURL(t, i, item.rareflag, item.getTier());
    s ? (this.assets[enums.ItemAssetType.SHELL] = this._getAssetDimensions(enums.ItemAssetType.SHELL, !1), this._loadAsset(o, enums.ItemAssetType.SHELL)) : root.style.backgroundImage = "url(" + o + ")"
},
components.ItemFUTBase.prototype._setLocalShell = function _setLocalShell(item, t) {
    var root = this.getRootElement(),
        i = item.concept && this._renderConcept ? utils.AssetLocator.getLocalShellURL("d", 0, item.resourceGameYear, t) : utils.AssetLocator.getLocalShellURL(item.rareflag, item.getTier(), item.resourceGameYear, t);
    this._canvas ? (this.assets[enums.ItemAssetType.SHELL] = this._getAssetDimensions(enums.ItemAssetType.SHELL, !1), this._loadAsset(i, enums.ItemAssetType.SHELL)) : root.style.backgroundImage = "url(" + i + ")"
},components.ItemFUTBase.prototype.renderAuctionState = function renderAuctionState(t) {
    if (this._rendered) {
        var i = [components.ItemFUTBase.CLASS.AUCTION_WON, components.ItemFUTBase.CLASS.AUCTION_WINNING, components.ItemFUTBase.CLASS.AUCTION_EXPIRED, components.ItemFUTBase.CLASS.AUCTION_OUTBID].join(" ");
        this.removeClass(i)
    }
    t.isValid() && (t.isWon() ? this.addClass(components.ItemFUTBase.CLASS.AUCTION_WON) : t.isHighestBid() || t.isBought() || t.isSold() ? this.addClass(components.ItemFUTBase.CLASS.AUCTION_WINNING) : t.isActiveTrade() && t.isOutbid() ? this.addClass(components.ItemFUTBase.CLASS.AUCTION_OUTBID) : (t.isClosedTrade() || t.isExpired()) && this.addClass(components.ItemFUTBase.CLASS.AUCTION_EXPIRED))
},components.ItemFUTBase.prototype.renderChemistry = function renderChemistry(item, t, i) {
},components.ItemFUTBase.prototype._applyColors = function _applyColors(selector, color) {
    var root = this.getRootElement();
    DOMKit.findElements(root, selector).forEach(function (t) {
        t.style.color = "rgba(" + color.r + ", " + color.g + ", " + color.b + ", 1)"
    })
},components.ItemFUTBase.prototype._getAssetDimensions = function _getAssetDimensions(type, t) {
},components.ItemFUTBase.prototype._requestResource = function _requestResource(t, type, item, i) {
    utils.ResourceManager.RequestResource(t, function (value) {
        this._loadAsset(value.path, type, item, i)
    }.bind(this), function (value) {
        i ? i.apply(this, [type, item]) : this._onLoadAssetError(type, item)
    }.bind(this))
},components.ItemFUTBase.prototype._loadAsset = function _loadAsset(path, type, item, t) {
    var i, s, o;
    if (this.assets[type]) {
        var l = new Image;
        if (!this.assets[type]) return;
        i = function _onLoadError() {
            l.removeEventListener("load", s, !1), l.removeEventListener("error", o, !1), t ? t.apply(this, [type, item]) : this._onLoadAssetError(type, item)
        }, s = function _onLoadSuccess() {
            l.removeEventListener("load", s, !1), l.removeEventListener("error", o, !1), this._onLoadAssetSuccess(type, l)
        }.bind(this), o = i.bind(this), path && (l.src = path, l.addEventListener("load", s, !1), l.addEventListener("error", o, !1))
    }
},components.ItemFUTBase.prototype._onLoadAssetSuccess = function _onLoadAssetSuccess(type, t) {
    if (this._canvas && (this.assets[type].element = t, ++this._assetsLoaded >= Object.keys(this.assets).length)) {
        var i = this._infoStateViewModel && this._canShowSecondaryViews ? this._infoStateViewModel.getState() : enums.UIItemInfoState.MAIN;
        this._canvas.setAssets(this.assets), this._canvas.setState(i), this._renderComplete()
    }
},components.ItemFUTBase.prototype._onLoadAssetError = function _onLoadAssetError(type, item) {
    if (this._canvas && (this.assets[type].element = null, ++this._assetsLoaded >= Object.keys(this.assets).length)) {
        var t = this._infoStateViewModel && this._canShowSecondaryViews ? this._infoStateViewModel.getState() : enums.UIItemInfoState.MAIN;
        this._canvas.setAssets(this.assets), this._canvas.setState(t), this._renderComplete()
    }
},components.ItemFUTBase.prototype._nInfoStateChanged = function _nInfoStateChanged(t, sender, data) {
    this.setItemInfoState(data.state)
},components.ItemPlayerBase = function ItemPlayerBaseView() {
    components.ItemFUTBase.call(this)
},utils.JS.inherits(components.ItemPlayerBase, components.ItemFUTBase),components.ItemPlayerBase.onImageLoad = function onImageLoad(t, i, s, path) {
    t.unobserve(this), i || s.replaceAndShowResource(path.replace(/\d+\.png/, enums.PlaceholderAssetId.PLAYER + ".png"))
},components.ItemPlayerBase.prototype.renderChemistry = function renderChemistry(item, t, i) {
    var s = repositories.PlayStyle.getPlayStyleBonusById(item.playStyle, item.isGK()).slice(0, 6),
        o = Math.max(t - 4, 0), l = [2, 3, 4, 5, 0, 1], u = l.filter(function (t) {
            return s[t] > 0
        })
    ;l.forEach(function _applyChevronChemistry(t) {
        var i = this["_chevronSet" + (t + 1)];
        if (i) {
            var l = s[t], h = o - u.indexOf(t), p = 0;
            if (l > 0 && h > 0) for (; p < l && h > 0;) h -= u.length, p++;
            i.setChemistryBoost(p)
        }
    }, this)
},components.ItemPlayerBase.prototype._render = function _render(item, t) {
    if (item.isValid()) {
        var i = item.getYear(), s = t.getExpColorMap(item.getTier()),
            o = item.isContractExpired() && !item.getAuctionData().isSold() && !item.isLoaned();
        if (item.concept || (item.isInjured() ? this.addClass(components.ItemFUTBase.CLASS.INJURED) : o ? this.addClass(components.ItemFUTBase.CLASS.CONTRACT_EXPIRED) : item.isSuspended() && this.addClass(components.ItemFUTBase.CLASS.SUSPENDED)), item.hasTraining()) {
            var l;
            l = item.getBoostLevel() === enums.ItemRatingTier.GOLD ? components.ItemFUTBase.QUALITY.GOLD : item.getBoostLevel() === enums.ItemRatingTier.SILVER ? components.ItemFUTBase.QUALITY.SILVER : components.ItemFUTBase.QUALITY.BRONZE, DOMKit.addClass(this.__trainingBoost, l)
        }
        this.toggleClass(components.ItemFUTBase.CLASS.CHAMPIONS, item.isChampionsLeagueItem() && !services.Localization.isRTL()), this.toggleClass(components.ItemFUTBase.CLASS.LOAN, item.isLoaned()), item.isLoaned() && this.__loanInfoTab && (this.__loanInfoTab.textContent = item.contract.toString()), this.__playerRating.innerHTML = item.rating.toString();
        var position = utils.FUTLocalization.getLocalizedPositionStringById(item.preferredPosition);
        if (this.__playerPosition.innerHTML = position, this._setPortrait(item), this._setFlag(i, item.nationId), this._setBadge(s.useLightCrest, i, item.teamId), this._setLeague(s.useLightCrest, i, item.leagueId), this.__bioNation && (this.__bioNation.textContent = utils.FUTLocalization.getNationAbb3ById(item.nationId)), this.__bioClub && (this.__bioClub.textContent = utils.FUTLocalization.getTeamAbb3ByID(item.teamId, i)), this.__bioLeague && (this.__bioLeague.textContent = utils.FUTLocalization.getLeagueAbbr5ByID(item.leagueId, i)), this.__playerManagerBonus && (this.__playerManagerBonus.textContent = "M"), this.__playerLoyaltyIcon) {
            var u = item.loyaltyBonus > 0 && !item.getAuctionData().isValid();
            DOMKit.toggleClass(this.__playerLoyaltyIcon, components.ItemFUTBase.CLASS.CHEM_BONUS, u)
        }
        var h = item.getMetaData();
        h && (this._setSkillMoves(h.skillMoves), this._setWeakFoot(h.isLeftFoot, h.weakFoot))
    }
},components.ItemPlayerBase.prototype.canRender = function canRender(item) {
    return item && item.isPlayer() && !item.isCustomBrick() && item.getYear() >= enums.Year.ASSET
},components.ItemPlayerBase.prototype._resetRender = function _resetRender() {
    DOMKit.removeClass(this.__trainingBoost, [components.ItemFUTBase.QUALITY.GOLD, components.ItemFUTBase.QUALITY.SILVER, components.ItemFUTBase.QUALITY.BRONZE].join(" ")), this.removeClass([components.ItemFUTBase.CLASS.CONTRACT_EXPIRED, components.ItemFUTBase.CLASS.SUSPENDED, components.ItemFUTBase.CLASS.INJURED].join(" ")), this.removeClass(components.ItemFUTBase.CLASS.LOAN), this.removeClass(components.ItemFUTBase.CLASS.CHAMPIONS), this.__loanInfoTab && (this.__loanInfoTab.textContent = ""), this._mainImage && this._mainImage.removeClass(components.ItemFUTBase.CLASS.DYNAMIC_PORTRAIT), this.getRootElement().removeAttribute("style"), this.assets = {}, this._canvas && this._canvas.clearCanvas()
},components.ItemPlayerBase.prototype._createConceptRarity = function _createConceptRarity() {
    return new UTItemRarityDTO({
        colorArray: ["d2e2f6", "a8b7c9", "4b5e78", "7a899d"],
        expColorIndices: [1, 1, 1, 1, 2, 2, 3, 4, 4],
        smallColorIndices: [1, 1, 1, 1, 2, 2, 3, 4, 4],
        colorsPerLevel: 4
    })
},components.ItemPlayerBase.prototype._applyChevrons = function _applyChevrons(t) {
    utils.Debug.Assert(6 === t.length, "Expected 6 entries in chevronList array."), t.slice(0, 6).forEach(function applyChevrons(t, i) {
        var s = this["_chevronSet" + (i + 1)];
        s && s.setChevronCount(t)
    }, this)
},components.ItemPlayerBase.prototype._onLoadDynamicPortraitError = function _onLoadDynamicPortraitError(type, item) {
    type === enums.ItemAssetType.MAIN && (this.assets[enums.ItemAssetType.MAIN] = this._getAssetDimensions(enums.ItemAssetType.MAIN, !1),
        this._requestResource(utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_PORTRAIT, item.getYear(), this._getItemAssetId(item.getMaskedResourceId(), item.getYear())), enums.ItemAssetType.MAIN, item))
},components.ItemPlayerBase.prototype._onLoadAssetError = function _onLoadAssetError(type, item) {
    if (type !== enums.ItemAssetType.MAIN) {
        if (++this._assetsLoaded >= Object.keys(this.assets).length) {
            var t = this._infoStateViewModel && this._canShowSecondaryViews ? this._infoStateViewModel.getState() : enums.UIItemInfoState.MAIN;
            this._canvas.setAssets(this.assets), this._canvas.setState(t), this._renderComplete()
        }
    } else this._requestResource(utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_PORTRAIT, item.getYear(), this._getItemAssetId(enums.PlaceholderAssetId.PLAYER, item.getYear())), enums.ItemAssetType.MAIN, item)
},components.ItemPlayerBase.prototype._getItemAssetId = function _getItemAssetId(t, i) {
    return entities.Item.isAlex(t) ? t = ALEX_HUNTER_PLACEHOLDER_ASSET_ID : entities.Item.isJim(t) ? t = JIM_HUNTER_PLACEHOLDER_ASSET_ID : entities.Item.isDanny(t) ? t = DANNY_WILLIAMS_PLACEHOLDER_ASSET_ID : utils.AssetLocator.hasPlaceholder(enums.PlaceholderAssetKey.PLAYERS, t, i) && (t = enums.PlaceholderAssetId.PLAYER), t
},components.ItemPlayerBase.prototype._setPortrait = function _setPortrait(item) {
    if (this._canvas) {
        var t = item.isSpecial() && !item.isLegend() && !entities.Item.isStoryMode(item.getMaskedResourceId()),
            i = this._getItemAssetId(item.getMaskedResourceId(), item.getYear()),
            s = t ? utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_DYNAMIC_PORTRAIT, item.getYear(), item.getDefId()) : utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_PORTRAIT, item.getYear(), i),
            o = t ? this._onLoadDynamicPortraitError : this._onLoadAssetError;
        this.assets[enums.ItemAssetType.MAIN] = this._getAssetDimensions(enums.ItemAssetType.MAIN, t), this._requestResource(s, enums.ItemAssetType.MAIN, item, o)
    } else this._mainImage ? this._setImageElementPortrait(item) : utils.Debug.Assert(!1, "MissingElement: Canvas or Image Element Missing to render asset id:" + item.assetId)
},components.ItemPlayerBase.prototype._setImageElementPortrait = function _setImageElementPortrait(item) {
    var t = this._getItemAssetId(item.getMaskedResourceId(), item.getYear()),
        i = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_PORTRAIT, item.getYear(), t);
    if (item.isSpecial()) {
        var s = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_DYNAMIC_PORTRAIT, item.getYear(), item.getDefId());
        this._mainImage.setResource(s, !0).observe(this, function onDynamicPortraitLoad(t, s, o, path) {
            t.unobserve(this), s ? this._mainImage.addClass(components.ItemFUTBase.CLASS.DYNAMIC_PORTRAIT) : this._mainImage.setResource(i, !0).observe(this._mainImage, components.ItemPlayerBase.onImageLoad)
        })
    } else this._mainImage.setResource(i, !0).observe(this._mainImage, components.ItemPlayerBase.onImageLoad)
},components.ItemPlayerBase.prototype._setFlag = function _setFlag(t, i) {
    var s = utils.AssetLocator.getImage(utils.AssetLocator.IMAGE_TYPE_FLAG, t, i);
    this._canvas ? (this.assets[enums.ItemAssetType.FLAG] = this._getAssetDimensions(enums.ItemAssetType.FLAG, !1), this._requestResource(s, enums.ItemAssetType.FLAG), this._bioFlagImage.setResource(s)) : this._flagImage.setResource(s)
},components.ItemPlayerBase.prototype._setBadge = function _setBadge(t, i, s) {
    var o = t ? utils.AssetLocator.IMAGE_TYPE_BADGE_LIGHT : utils.AssetLocator.IMAGE_TYPE_BADGE_DARK, l = s;
    (utils.AssetLocator.hasPlaceholder(enums.PlaceholderAssetKey.CREST, s.toString(), i, enums.PlaceholderAssetKey.CREST_LIGHT) || utils.AssetLocator.hasPlaceholder(enums.PlaceholderAssetKey.CREST, s.toString(), i, enums.PlaceholderAssetKey.CREST_DARK)) && (l = enums.PlaceholderAssetId.TEAM);
    var u = utils.AssetLocator.getImage(o, i, l);
    this._canvas ? (this.assets[enums.ItemAssetType.BADGE] = this._getAssetDimensions(enums.ItemAssetType.BADGE, !1), this._requestResource(u, enums.ItemAssetType.BADGE), this._bioBadgeImage.setResource(u)) : this._badgeImage.setResource(u)
},components.ItemPlayerBase.prototype._setLeague = function _setLeague(t, i, s) {
    if (this._canvas) {
        var o = t ? utils.AssetLocator.IMAGE_TYPE_LEAGUE_LIGHT : utils.AssetLocator.IMAGE_TYPE_LEAGUE_DARK;
        this._bioLeagueImage.setResource(utils.AssetLocator.getImage(o, i, s))
    }
},components.ItemPlayerBase.prototype._setSkillMoves = function _setSkillMoves(value) {
},components.ItemPlayerBase.prototype._setWeakFoot = function _setWeakFoot(t, value) {
},utils.JS.inherits(UTItemStatChevronsView, FUIView),UTItemStatChevronsView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("chevrons");
        var i = document.createElement("div");
        i.classList.add("chevron1"), i.classList.add("chevron"), t.appendChild(i);
        var s = document.createElement("div");
        s.classList.add("chevron2"), s.classList.add("chevron"), t.appendChild(s);
        var o = document.createElement("div");
        o.classList.add("chevron3"), o.classList.add("chevron"), t.appendChild(o), this.__root = t, this._generated = !0
    }
},UTItemStatChevronsView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
},UTItemStatChevronsView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTItemStatChevronsView.prototype.getRootElement = function getRootElement() {
    return this.__root
},UTItemStatChevronsView.prototype.setChevronCount = function setChevronCount(t) {
    DOMKit.HTMLCollectionToArray(this.getRootElement().children).reverse().forEach(function (i, s) {
        DOMKit.toggleClass(i, "invisible", s + 1 > t)
    })
},UTItemStatChevronsView.prototype.setChemistryBoost = function setChemistryBoost(t) {
    DOMKit.HTMLCollectionToArray(this.getRootElement().children).reverse().forEach(function (i, s) {
        DOMKit.toggleClass(i, "chemBoost", s < t)
    })
},utils.JS.inherits(UTItemCanvasView, FUIView),UTItemCanvasView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("canvas");
        this.__root = t, this._generated = !0
    }
},UTItemCanvasView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null
},UTItemCanvasView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTItemCanvasView.prototype.getRootElement = function getRootElement() {
    return this.__root
},UTItemCanvasView.prototype.render = function render(size, item, t) {
    this._setContext(), this.size = size, this.item = item, this.rarity = t, this.canvas.width = this.size === enums.ItemViewType.LARGE ? 316 : 180, this.canvas.height = this.size === enums.ItemViewType.LARGE ? 474 : 228, this.canvas.style.width = this.size === enums.ItemViewType.LARGE ? "158px" : "90px", this.canvas.style.height = this.size === enums.ItemViewType.LARGE ? "237px" : "114px", this.context.scale(2, 2), this.context.mozImageSmoothingEnabled = !0, this.context.webkitImageSmoothingEnabled = !0, this.context.imageSmoothingEnabled = !0, this.context.globalCompositeOperation = "source-over"
},UTItemCanvasView.prototype.setAssets = function setAssets(t) {
    this.assets = t
},UTItemCanvasView.prototype.setState = function setState(state) {
},UTItemCanvasView.prototype.clearCanvas = function clearCanvas() {
    this._setContext(), this.canvas && (this.context.globalCompositeOperation = "source-over", this.context.clearRect(0, 0, this.canvas.width, this.canvas.height)), this.rendered = !1
},UTItemCanvasView.prototype._setContext = function _setContext() {
    this.canvas = this.getRootElement(), this.canvas && (this.context = this.canvas.getContext("2d"))
},UTItemCanvasView.prototype._getColorMap = function _getColorMap() {
    return this.rarity ? this.size === enums.ItemViewType.LARGE ? this.rarity.getExpColorMap(this.item.getTier()) : this.rarity.getSmallColorMap(this.item.getTier()) : null
},UTItemCanvasView.prototype._drawAsset = function _drawAsset(t) {
    var a = this.assets[t];
    if (a && a.element && a.element.complete) {
        var i = a.element.width || a.width, s = a.element.height || a.height;
        this.context.drawImage(a.element, 0, 0, i, s, a.xPos, a.yPos, a.width, a.height)
    }
},UTItemCanvasView.prototype._drawBgColor = function _drawBgColor() {
    this.context.fillStyle = "#000000";
    var t = this._getColorMap().background, bgColor = "rgba(" + t.r + ", " + t.g + ", " + t.b + ", 1)";
    this.context.globalAlpha = 0, this._drawAsset(enums.ItemAssetType.SHELL),
        this.context.globalCompositeOperation = "source-atop", this.context.globalAlpha = 1, this.context.fillStyle = bgColor, this.context.fillRect(0, 0, this.canvas.width, this.canvas.height), this.context.globalCompositeOperation = "source-over"
},UTItemCanvasView.prototype._drawDivider = function _drawDivider(t, i, s, o) {
    var l = this._getColorMap().dividers, stroke = "rgba(" + l.r + ", " + l.g + ", " + l.b + ", 1)";
    this.context.beginPath(), this.context.moveTo(t, i), this.context.lineTo(s, o), this.context.strokeStyle = stroke, this.context.stroke()
},UTItemCanvasView.prototype._maskItem = function _maskItem() {
    this.context.globalAlpha = 0, this._drawAsset(enums.ItemAssetType.SHELL), this.context.globalCompositeOperation = "source-atop", this.context.globalAlpha = 1
},UTItemCanvasView.prototype._resetMask = function _maskItem() {
    this.context.globalCompositeOperation = "source-over"
},UTItemCanvasView.prototype._getTrueWidth = function _getTrueWidth() {
    return this.canvas.width / 2
},UTItemCanvasView.prototype._getTrueHeight = function _getTrueHeight() {
    return this.canvas.height / 2
},utils.JS.inherits(UTItemPlayerCanvasView, UTItemCanvasView),UTItemPlayerCanvasView.prototype.render = function render(size, item, t) {
    this.superclass(size, item, t)
},UTItemPlayerCanvasView.prototype.setState = function setState(state) {
    switch (this.clearCanvas(), state) {
        case enums.UIItemInfoState.STYLE:
            this._drawAsset(enums.ItemAssetType.SHELL), this._drawBgColor(), this.size === enums.ItemViewType.SMALL ? this._smallViewAlternateViewLines() : this._styleViewDividers();
            break;
        case enums.UIItemInfoState.BIO:
            this._drawAsset(enums.ItemAssetType.SHELL), this._drawBgColor(), this.size === enums.ItemViewType.SMALL ? this._smallViewAlternateViewLines() : this._bioViewDividers();
            break;
        case enums.UIItemInfoState.STATS:
            this._drawAsset(enums.ItemAssetType.SHELL), this._drawBgColor(), this.size === enums.ItemViewType.SMALL ? this._smallViewAlternateViewLines() : this._statViewDividers();
            break;
        case enums.UIItemInfoState.MAIN:
            this._drawAsset(enums.ItemAssetType.SHELL), this._maskItem(), this._drawAsset(enums.ItemAssetType.MAIN), this._resetMask(), this._renderAsDynamic() && (this._drawArc(), this._drawTransparentBar()), this._drawAsset(enums.ItemAssetType.BADGE), this._drawAsset(enums.ItemAssetType.FLAG), this._mainViewDividers()
    }
    this.rendered = !0
},UTItemPlayerCanvasView.prototype._renderAsDynamic = function _renderAsDynamic() {
    var t = this.assets[enums.ItemAssetType.MAIN];
    return !!(t && t.element && t.element.complete) && (this.item.isSpecial() && this.assets[enums.ItemAssetType.MAIN].dynamic)
},UTItemPlayerCanvasView.prototype._mainViewDividers = function _mainViewDividers() {
    this.size !== enums.ItemViewType.SMALL && (this._drawDivider(30, 151.5, 131, 151.5), this._drawDivider((this._getTrueWidth() - 1) / 2, 157.5, (this._getTrueWidth() - 1) / 2, 202.5), this._drawDivider(68, 208.5, 90, 208.5), this._drawDivider(31, 71.55, 47, 71.55), this._drawDivider(31, 93.5, 47, 93.5))
},UTItemPlayerCanvasView.prototype._styleViewDividers = function _styleViewDividers() {
    this.size !== enums.ItemViewType.SMALL && (this._drawDivider(30, 125.5, 131, 125.5), this._drawDivider(30, 151.5, 131, 151.5), this._drawDivider((this._getTrueWidth() - 1) / 2, 157.5, (this._getTrueWidth() - 1) / 2, 202.5), this.item.concept || this._drawDivider(68, 208.5, 90, 208.5))
},UTItemPlayerCanvasView.prototype._bioViewDividers = function _bioViewDividers() {
    if (this.size !== enums.ItemViewType.SMALL) {
        var t = this._getTrueWidth() - 15;
        this._drawDivider(15, 60.5, t, 60.5), this._drawDivider(15, 95.5, t, 95.5), this._drawDivider(15, 130.5, t, 130.5), this._drawDivider(15, 165.5, t, 165.5), this._drawDivider((this._getTrueWidth() - 1) / 2, 195.5, (this._getTrueWidth() - 1) / 2, 207.5)
    }
},UTItemPlayerCanvasView.prototype._statViewDividers = function _statViewDividers() {
    if (this.size !== enums.ItemViewType.SMALL) {
        var t = this._getTrueWidth() - 15;
        this._drawDivider(15, 60.5, t, 60.5), this._drawDivider(15, 86.5, t, 86.5), this._drawDivider(15, 113.5, t, 113.5), this._drawDivider(15, 138.5, t, 138.5), this._drawDivider(15, 165.5, t, 165.5), this.item.concept || this._drawDivider(68, 208.5, 90, 208.5)
    }
},UTItemPlayerCanvasView.prototype._drawArc = function _drawArc() {
    if (this.item.isSpecial() && this.size !== enums.ItemViewType.SMALL) {
        this._maskItem(), this.context.beginPath(), this.context.moveTo(0, this._getTrueHeight() / 1.1), this.context.quadraticCurveTo(this._getTrueWidth() / 1.1, this._getTrueHeight() / 1.75, this._getTrueWidth() - 29, 0), this.context.quadraticCurveTo(this._getTrueWidth(), 0, this._getTrueWidth(), 0), this.context.quadraticCurveTo(this._getTrueWidth(), this._getTrueHeight(), this._getTrueWidth(), this._getTrueHeight() + 20), this.context.fillStyle = "rgba(0, 0, 0, 0.10)", this.context.fill(), this._resetMask()
    }
},UTItemPlayerCanvasView.prototype._drawTransparentBar = function _drawTransparentBar() {
    if (this.item.isSpecial()) {
        var t, width, i = this.context.createLinearGradient(0, 0, 24, this._getTrueHeight()),
            s = this._getColorMap().playStyleText, color = "rgba(" + s.r + ", " + s.g + ", " + s.b + ", 0.675)",
            o = "rgba(" + s.r + ", " + s.g + ", " + s.b + ", 0)";
        this._maskItem(), i.addColorStop(0, o), i.addColorStop(.1, o), i.addColorStop(.333, color), i.addColorStop(.666, color), i.addColorStop(.9, o), i.addColorStop(1, o), this.size === enums.ItemViewType.LARGE ? (t = 22, width = 34) : (t = 10, width = 22), this.context.beginPath(), this.context.fillStyle = i, this.context.fillRect(t, 0, width, this._getTrueHeight()), this._resetMask()
    }
},UTItemPlayerCanvasView.prototype._smallViewAlternateViewLines = function _smallViewAlternateViewLines() {
    if (this.size !== enums.ItemViewType.LARGE) {
        var t = this._getTrueWidth() - 10;
        this._drawDivider(10, 27.5, t, 27.5), this._drawDivider(10, 44.5, t, 44.5), this._drawDivider(10, 63.5, t, 63.5), this._drawDivider(10, 81.5, t, 81.5)
    }
},utils.JS.inherits(UTItemPlayerLargeView, components.ItemPlayerBase),UTItemPlayerLargeView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("large"), t.classList.add("player"), t.classList.add("item"), this._canvas = new UTItemPlayerCanvasView, this._canvas.width = "158", this._canvas.height = "237", t.appendChild(this._canvas.getRootElement());
        var i = document.createElement("div");
        i.classList.add("ut-item-loader"), t.appendChild(i);
        var s = document.createElement("div");
        s.classList.add("statusOverlay"), t.appendChild(s), this.__trainingBoost = document.createElement("div"), this.__trainingBoost.classList.add("ut-item-player-status--training"), this.__trainingBoost.classList.add("ut-item-player-status"), t.appendChild(this.__trainingBoost);
        var o = document.createElement("div");
        o.classList.add("ut-item-player-status--restricted"), o.classList.add("ut-item-player-status"), t.appendChild(o), this.__playerName = document.createElement("div"), this.__playerName.classList.add("name"), t.appendChild(this.__playerName), this.__playStyle = document.createElement("div"), this.__playStyle.classList.add("playStyle"), t.appendChild(this.__playStyle), this.__mainViewDiv = document.createElement("div"), this.__mainViewDiv.classList.add("ut-item-view--main"), this.__mainViewDiv.classList.add("ut-item-view"), this.__loanInfoTab = document.createElement("div"), this.__loanInfoTab.classList.add("ut-item-player-status--loan"), this.__mainViewDiv.appendChild(this.__loanInfoTab);
        var l = document.createElement("div");
        l.classList.add("playerOverview"), this.__playerRating = document.createElement("div"), this.__playerRating.classList.add("rating"), l.appendChild(this.__playerRating), this.__playerPosition = document.createElement("div"), this.__playerPosition.classList.add("position"), l.appendChild(this.__playerPosition), this.__mainViewDiv.appendChild(l);
        var u = document.createElement("div");
        u.classList.add("statCellRow");
        var h = document.createElement("div");
        h.classList.add("statCell");
        var p = document.createElement("span");
        p.classList.add("Pace"), p.classList.add("statValue"), h.appendChild(p), this.__attribute0 = document.createElement("span"), this.__attribute0.classList.add("Pace"), this.__attribute0.classList.add("statLabel"), h.appendChild(this.__attribute0), u.appendChild(h);
        var m = document.createElement("div");
        m.classList.add("statCell");
        var _ = document.createElement("span");
        _.classList.add("Dribbling"), _.classList.add("statValue"), m.appendChild(_),
            this.__attribute3 = document.createElement("span"), this.__attribute3.classList.add("Dribbling"), this.__attribute3.classList.add("statLabel"), m.appendChild(this.__attribute3), u.appendChild(m), this.__mainViewDiv.appendChild(u);
        var g = document.createElement("div");
        g.classList.add("statCellRow");
        var S = document.createElement("div");
        S.classList.add("statCell");
        var T = document.createElement("span");
        T.classList.add("Shooting"), T.classList.add("statValue"), S.appendChild(T), this.__attribute1 = document.createElement("span"), this.__attribute1.classList.add("Shooting"), this.__attribute1.classList.add("statLabel"), S.appendChild(this.__attribute1), g.appendChild(S);
        var v = document.createElement("div");
        v.classList.add("statCell");
        var C = document.createElement("span");
        C.classList.add("Defending"), C.classList.add("statValue"), v.appendChild(C), this.__attribute4 = document.createElement("span"), this.__attribute4.classList.add("Defending"), this.__attribute4.classList.add("statLabel"), v.appendChild(this.__attribute4), g.appendChild(v), this.__mainViewDiv.appendChild(g);
        var I = document.createElement("div");
        I.classList.add("statCellRow");
        var L = document.createElement("div");
        L.classList.add("statCell");
        var A = document.createElement("span");
        A.classList.add("Passing"), A.classList.add("statValue"), L.appendChild(A), this.__attribute2 = document.createElement("span"), this.__attribute2.classList.add("Passing"), this.__attribute2.classList.add("statLabel"), L.appendChild(this.__attribute2), I.appendChild(L);
        var R = document.createElement("div");
        R.classList.add("statCell");
        var D = document.createElement("span");
        D.classList.add("Header"), D.classList.add("statValue"), R.appendChild(D), this.__attribute5 = document.createElement("span"), this.__attribute5.classList.add("Header"), this.__attribute5.classList.add("statLabel"), R.appendChild(this.__attribute5), I.appendChild(R), this.__mainViewDiv.appendChild(I), t.appendChild(this.__mainViewDiv), this.__statsViewDiv = document.createElement("div"), this.__statsViewDiv.classList.add("ut-item-view--stats"), this.__statsViewDiv.classList.add("ut-item-view"), this.__skillMoves = document.createElement("div"), this.__skillMoves.classList.add("ut-item-row"), this.__skillMovesLabel = document.createElement("span"), this.__skillMovesLabel.classList.add("ut-item-row-label--left"), this.__skillMovesLabel.classList.add("ut-item-row-label"), this.__skillMoves.appendChild(this.__skillMovesLabel);
        var P = document.createElement("div");
        P.classList.add("ut-star-rating"), this.__skillMoves.appendChild(P), this.__skillMovesRating = document.createElement("span"), this.__skillMoves.appendChild(this.__skillMovesRating), this.__statsViewDiv.appendChild(this.__skillMoves), this.__weakFoot = document.createElement("div"), this.__weakFoot.classList.add("ut-item-row"), this.__weakFootLabel = document.createElement("span"), this.__weakFootLabel.classList.add("ut-item-row-label--left"), this.__weakFootLabel.classList.add("ut-item-row-label"), this.__weakFoot.appendChild(this.__weakFootLabel);
        var U = document.createElement("div");
        U.classList.add("ut-star-rating"), this.__weakFoot.appendChild(U), this.__weakFootRating = document.createElement("span"), this.__weakFoot.appendChild(this.__weakFootRating), this.__statsViewDiv.appendChild(this.__weakFoot), this.__statsRowFitness = document.createElement("div"), this.__statsRowFitness.classList.add("ut-item-row"), this.__playerFitnessLabel = document.createElement("span"), this.__playerFitnessLabel.classList.add("ut-item-row-label--left"), this.__playerFitnessLabel.classList.add("ut-item-row-label"), this.__statsRowFitness.appendChild(this.__playerFitnessLabel);
        var N = document.createElement("div");
        N.classList.add("ut-progress-bar"), this.__playerFitnessBar = document.createElement("span"), N.appendChild(this.__playerFitnessBar), this.__statsRowFitness.appendChild(N), this.__playerFitness = document.createElement("span"), this.__playerFitness.classList.add("ut-item-row-label--right"), this.__playerFitness.classList.add("ut-item-row-label"),
            this.__statsRowFitness.appendChild(this.__playerFitness), this.__statsViewDiv.appendChild(this.__statsRowFitness), this.__statsRowContract = document.createElement("div"), this.__statsRowContract.classList.add("ut-item-row"), this.__playerContractLabel = document.createElement("span"), this.__playerContractLabel.classList.add("ut-item-row-label--left"), this.__playerContractLabel.classList.add("ut-item-row-label"), this.__statsRowContract.appendChild(this.__playerContractLabel), this.__playerContract = document.createElement("span"), this.__playerContract.classList.add("ut-item-row-label--right"), this.__playerContract.classList.add("ut-item-row-label"), this.__statsRowContract.appendChild(this.__playerContract), this.__statsViewDiv.appendChild(this.__statsRowContract), this.__statsRowInjury = document.createElement("div"), this.__statsRowInjury.classList.add("ut-item-row--multiline"), this.__statsRowInjury.classList.add("ut-item-row--center"), this.__statsRowInjury.classList.add("ut-item-row"), this.__injuryLabel = document.createElement("span"), this.__injuryLabel.classList.add("ut-item-row-label"), this.__statsRowInjury.appendChild(this.__injuryLabel), this.__injury = document.createElement("span"), this.__injury.classList.add("ut-item-row-label"), this.__statsRowInjury.appendChild(this.__injury), this.__statsViewDiv.appendChild(this.__statsRowInjury), t.appendChild(this.__statsViewDiv), this.__styleViewDiv = document.createElement("div"), this.__styleViewDiv.classList.add("ut-item-view--style"), this.__styleViewDiv.classList.add("ut-item-view"), this.__playStyleName = document.createElement("div"), this.__playStyleName.classList.add("name"), this.__styleViewDiv.appendChild(this.__playStyleName), this.__playStyleLarge = document.createElement("div"), this.__playStyleLarge.classList.add("playStyle"), this.__playStyleLarge.classList.add("ut-play-style--large"), this.__styleViewDiv.appendChild(this.__playStyleLarge);
        var O = document.createElement("div");
        O.classList.add("statCellRow");
        var B = document.createElement("div");
        B.classList.add("statCell"), this._chevronSet1 = new UTItemStatChevronsView, B.appendChild(this._chevronSet1.getRootElement());
        var V = document.createElement("span");
        V.classList.add("Pace"), V.classList.add("statLabel"), B.appendChild(V), O.appendChild(B);
        var M = document.createElement("div");
        M.classList.add("statCell"), this._chevronSet4 = new UTItemStatChevronsView, M.appendChild(this._chevronSet4.getRootElement());
        var F = document.createElement("span");
        F.classList.add("Dribbling"), F.classList.add("statLabel"), M.appendChild(F), O.appendChild(M), this.__styleViewDiv.appendChild(O);
        var k = document.createElement("div");
        k.classList.add("statCellRow");
        var q = document.createElement("div");
        q.classList.add("statCell"), this._chevronSet2 = new UTItemStatChevronsView, q.appendChild(this._chevronSet2.getRootElement());
        var G = document.createElement("span");
        G.classList.add("Shooting"), G.classList.add("statLabel"), q.appendChild(G), k.appendChild(q);
        var H = document.createElement("div");
        H.classList.add("statCell"), this._chevronSet5 = new UTItemStatChevronsView, H.appendChild(this._chevronSet5.getRootElement());
        var j = document.createElement("span");
        j.classList.add("Defending"), j.classList.add("statLabel"), H.appendChild(j), k.appendChild(H), this.__styleViewDiv.appendChild(k);
        var Y = document.createElement("div");
        Y.classList.add("statCellRow");
        var K = document.createElement("div");
        K.classList.add("statCell"), this._chevronSet3 = new UTItemStatChevronsView, K.appendChild(this._chevronSet3.getRootElement());
        var J = document.createElement("span");
        J.classList.add("Passing"), J.classList.add("statLabel"), K.appendChild(J), Y.appendChild(K);
        var W = document.createElement("div");
        W.classList.add("statCell"), this._chevronSet6 = new UTItemStatChevronsView, W.appendChild(this._chevronSet6.getRootElement());
        var $ = document.createElement("span");
        $.classList.add("Header"), $.classList.add("statLabel"), W.appendChild($), Y.appendChild(W), this.__styleViewDiv.appendChild(Y), t.appendChild(this.__styleViewDiv),
            this.__bioViewDiv = document.createElement("div"), this.__bioViewDiv.classList.add("ut-item-view--bio"), this.__bioViewDiv.classList.add("ut-item-view");
        var X = document.createElement("div");
        X.classList.add("ut-item-row");
        var Z = document.createElement("span");
        Z.classList.add("ut-item-row-label--left"), Z.classList.add("ut-item-row-label"), this._bioFlagImage = new components.ImageLoader, Z.appendChild(this._bioFlagImage.getRootElement()), X.appendChild(Z), this.__bioNation = document.createElement("span"), this.__bioNation.classList.add("ut-item-row-label--right"), this.__bioNation.classList.add("ut-item-row-label"), X.appendChild(this.__bioNation), this.__bioViewDiv.appendChild(X);
        var ee = document.createElement("div");
        ee.classList.add("ut-item-row");
        var te = document.createElement("span");
        te.classList.add("ut-item-row-label--left"), te.classList.add("ut-item-row-label"), this._bioLeagueImage = new components.ImageLoader, te.appendChild(this._bioLeagueImage.getRootElement()), ee.appendChild(te), this.__bioLeague = document.createElement("span"), this.__bioLeague.classList.add("ut-item-row-label--right"), this.__bioLeague.classList.add("ut-item-row-label"), ee.appendChild(this.__bioLeague), this.__bioViewDiv.appendChild(ee);
        var ie = document.createElement("div");
        ie.classList.add("ut-item-row");
        var se = document.createElement("span");
        se.classList.add("ut-item-row-label--left"), se.classList.add("ut-item-row-label"), this._bioBadgeImage = new components.ImageLoader, se.appendChild(this._bioBadgeImage.getRootElement()), ie.appendChild(se), this.__bioClub = document.createElement("span"), this.__bioClub.classList.add("ut-item-row-label--right"), this.__bioClub.classList.add("ut-item-row-label"), ie.appendChild(this.__bioClub), this.__bioViewDiv.appendChild(ie);
        var ne = document.createElement("div");
        ne.classList.add("ut-item-player-bonuses"), this.__playerLoyaltyIcon = document.createElement("span"), this.__playerLoyaltyIcon.classList.add("ut-item-player-bonus"), this.__playerLoyaltyIcon.classList.add("loyalty"), ne.appendChild(this.__playerLoyaltyIcon), this.__playerManagerBonus = document.createElement("span"), this.__playerManagerBonus.classList.add("ut-item-player-bonus"), this.__playerManagerBonus.classList.add("manager"), ne.appendChild(this.__playerManagerBonus), this.__bioViewDiv.appendChild(ne), t.appendChild(this.__bioViewDiv), this.__root = t, this._generated = !0
    }
},UTItemPlayerLargeView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this._canvas.destroy(), this.__trainingBoost = null, this.__playerName = null, this.__playStyle = null, this.__mainViewDiv = null, this.__loanInfoTab = null, this.__playerRating = null, this.__playerPosition = null, this.__attribute0 = null, this.__attribute3 = null, this.__attribute1 = null, this.__attribute4 = null, this.__attribute2 = null, this.__attribute5 = null, this.__statsViewDiv = null, this.__skillMoves = null, this.__skillMovesLabel = null, this.__skillMovesRating = null, this.__weakFoot = null, this.__weakFootLabel = null, this.__weakFootRating = null, this.__statsRowFitness = null, this.__playerFitnessLabel = null, this.__playerFitnessBar = null, this.__playerFitness = null, this.__statsRowContract = null, this.__playerContractLabel = null, this.__playerContract = null, this.__statsRowInjury = null, this.__injuryLabel = null, this.__injury = null, this.__styleViewDiv = null, this.__playStyleName = null, this.__playStyleLarge = null, this._chevronSet1.destroy(), this._chevronSet4.destroy(), this._chevronSet2.destroy(), this._chevronSet5.destroy(), this._chevronSet3.destroy(), this._chevronSet6.destroy(), this.__bioViewDiv = null, this._bioFlagImage.destroy(), this.__bioNation = null, this._bioLeagueImage.destroy(), this.__bioLeague = null, this._bioBadgeImage.destroy(), this.__bioClub = null, this.__playerLoyaltyIcon = null, this.__playerManagerBonus = null
},UTItemPlayerLargeView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTItemPlayerLargeView.prototype.getRootElement = function getRootElement() {
    return this.__root
},
UTItemPlayerLargeView.prototype.setItemInfoState = function setItemInfoState(state) {
    DOMKit.toggleDisplayStyle(this.__playStyle, state !== enums.UIItemInfoState.BIO), DOMKit.toggleDisplayStyle(this.__mainViewDiv, state === enums.UIItemInfoState.MAIN), DOMKit.toggleDisplayStyle(this.__bioViewDiv, state === enums.UIItemInfoState.BIO), DOMKit.toggleDisplayStyle(this.__statsViewDiv, state === enums.UIItemInfoState.STATS), DOMKit.toggleDisplayStyle(this.__styleViewDiv, state === enums.UIItemInfoState.STYLE), DOMKit.toggleClass(this.__playerName, "main-view", state === enums.UIItemInfoState.MAIN || state === enums.UIItemInfoState.STYLE), this._canvas.rendered && this._canvas.setState(state)
},UTItemPlayerLargeView.prototype.renderChemistry = function renderChemistry(item, t, i) {
    this.superclass(item, t, i), DOMKit.toggleClass(this.__playerManagerBonus, components.ItemFUTBase.CLASS.CHEM_BONUS, i > 0)
},UTItemPlayerLargeView.prototype._render = function _render(item, t) {
    function setStatLabel(selector, text) {
        DOMKit.findElements(root, selector).forEach(function (t) {
            t.innerHTML = text
        })
    }

    var i = item.getStaticData(), root = this.getRootElement();
    if (item.isValid()) {
        item.concept ? (t = this._createConceptRarity(), this._setLocalShell(item, enums.ItemViewType.LARGE)) : this._setShell(item, enums.ItemViewType.LARGE), this.superclass(item, t), this._canvas && this._canvas.render(enums.ItemViewType.LARGE, item, t);
        var s = t.getExpColorMap(item.getTier());
        this.__playerName.textContent = i.name;
        var o = item.isGK();
        if (DOMKit.findElements(root, ".statValue.Pace")[0].innerHTML = item.getAttribute(o ? enums.GKStats.DIVING : enums.PlayerStats.PACE, !1).toString(), DOMKit.findElements(root, ".statValue.Header")[0].innerHTML = item.getAttribute(o ? enums.GKStats.POSITION : enums.PlayerStats.HEADING, !1).toString(), DOMKit.findElements(root, ".statValue.Dribbling")[0].innerHTML = item.getAttribute(o ? enums.GKStats.REFLEX : enums.PlayerStats.DRIBBLING, !1).toString(), DOMKit.findElements(root, ".statValue.Shooting")[0].innerHTML = item.getAttribute(o ? enums.GKStats.HANDLING : enums.PlayerStats.SHOOTING, !1).toString(), DOMKit.findElements(root, ".statValue.Defending")[0].innerHTML = item.getAttribute(o ? enums.GKStats.SPEED : enums.PlayerStats.DEFEND, !1).toString(), DOMKit.findElements(root, ".statValue.Passing")[0].innerHTML = item.getAttribute(o ? enums.GKStats.KICKING : enums.PlayerStats.PASSING, !1).toString(), setStatLabel(".statLabel.Pace", o ? services.Localization.localize("cards.cardfront.divingAbbr") : services.Localization.localize("cards.cardfront.paceAbbr")), setStatLabel(".statLabel.Header", o ? services.Localization.localize("cards.cardfront.positionAbbr") : services.Localization.localize("cards.cardfront.headingAbbr")), setStatLabel(".statLabel.Dribbling", o ? services.Localization.localize("cards.cardfront.reflexAbbr") : services.Localization.localize("cards.cardfront.dribblingAbbr")), setStatLabel(".statLabel.Shooting", o ? services.Localization.localize("cards.cardfront.handlingAbbr") : services.Localization.localize("cards.cardfront.shootingAbbr")), setStatLabel(".statLabel.Defending", o ? services.Localization.localize("cards.cardfront.speedAbbr") : services.Localization.localize("cards.cardfront.defendingAbbr")), setStatLabel(".statLabel.Passing", o ? services.Localization.localize("cards.cardfront.kickAbbr") : services.Localization.localize("cards.cardfront.passingAbbr")), item.hasTraining()) {
            var l;
            l = item.getBoostLevel() === enums.ItemRatingTier.GOLD ? components.ItemFUTBase.QUALITY.GOLD : item.getBoostLevel() === enums.ItemRatingTier.SILVER ? components.ItemFUTBase.QUALITY.SILVER : components.ItemFUTBase.QUALITY.BRONZE;
            var u;
            for (u = 0; u < 6; ++u) utils.JS.isValid(this["__attribute" + u]) && item.isAttributeBoosted(u) && DOMKit.addClass(this["__attribute" + u], l)
        }
        s && (this._applyColors(".playerOverview", s.header), this._applyColors(".name", s.name), this._applyColors(".ut-item-view--main .statValue", s.attributeValues), this._applyColors(".ut-item-view--main .statLabel", s.footer), this._applyColors(".playStyle span", s.playStyleText), this._applyColors(".playStyle", s.playStyleIcon)), s && this._applyColors(".ut-item-view--bio", s.name),
            DOMKit.removeClass(this.__statsRowContract, components.ItemFUTBase.CLASS.INVALID_STAT), DOMKit.toggleClass(this.__statsRowFitness, components.ItemFUTBase.CLASS.INVALID_STAT, item.isInjured()), item.isSuspended() ? (DOMKit.addClass(this.__statsRowContract, components.ItemFUTBase.CLASS.INVALID_STAT), this.__playerContractLabel.textContent = services.Localization.localize("item.status.suspended"), this.__playerContract.textContent = item.suspensionGames) : (this.__playerContractLabel.textContent = services.Localization.localize("cards.cardfront.contractAbbr"), this.__playerFitnessLabel.textContent = services.Localization.localize("cards.cardfront.fitnessAbbr"), this.__playerContract.textContent = " " + item.contract.toString(), this.__playerFitness.textContent = item.fitness.toString(), this.__playerFitnessBar.style.width = item.fitness + "%", item.fitness <= 20 ? this.__playerFitnessBar.style.backgroundColor = "rgba(224, 0, 0, 1)" : item.fitness <= 60 && (this.__playerFitnessBar.style.backgroundColor = "rgba(224, 144, 0, 1)")), item.isInjured() ? (DOMKit.toggleDisplayStyle(this.__statsRowInjury, !0), this.__injuryLabel.textContent = services.Localization.localize("item.status.injured") + " " + item.injuryType, this.__injury.textContent = services.Localization.localize("item.status.outnummatches", [item.injuryGames])) : DOMKit.toggleDisplayStyle(this.__statsRowInjury, !1), s && this._applyColors(".ut-item-view--stats", s.name);
        var h = item.playStyle,
            p = h > 0 ? services.Localization.localize("playstyles.2019.playstyle" + h) : services.Localization.localize("playstyles.invalid.playstyle0");
        if (item.getYear() >= enums.Year.YEAR_2014 && (DOMKit.addClass(this.__playStyle, "chemstyle" + h), item.isValid())) {
            var m = repositories.PlayStyle.getPlayStyleBonusById(h, item.isGK());
            this._applyChevrons(m)
        }
        item.getYear() >= enums.Year.ASSET && (this.__playStyleName.textContent = p, DOMKit.addClass(this.__playStyleLarge, "chemstyle" + h)), s && this._applyColors(".ut-item-view--style", s.name)
    }
},UTItemPlayerLargeView.prototype._resetRender = function _resetRender() {
    function _getIconClasses(t) {
        return (t.className.match(/(^|\s)chemstyle\S+/g) || []).join(" ")
    }

    var root = this.getRootElement();
    this.superclass();
    var t = [components.ItemFUTBase.QUALITY.GOLD, components.ItemFUTBase.QUALITY.SILVER, components.ItemFUTBase.QUALITY.BRONZE].join(" ");
    DOMKit.findElements(root, ".statLabel").forEach(function (i) {
        DOMKit.removeClass(i, t)
    }), DOMKit.removeClass(this.__playStyle, _getIconClasses(this.__playStyle)), DOMKit.removeClass(this.__playStyleLarge, _getIconClasses(this.__playStyleLarge))
},UTItemPlayerLargeView.prototype._getAssetDimensions = function _getAssetDimensions(type, t) {
    t = t || !1;
    var width = 0, height = 0, i = 0, s = 0;
    return type === enums.ItemAssetType.MAIN ? (width = t ? 140 : 90, height = t ? 163 : 90, i = t ? 8 : 55, s = t ? 21 : 37) : type === enums.ItemAssetType.BADGE ? (width = 25, height = 25, i = 26, s = 97) : type === enums.ItemAssetType.FLAG ? (width = 21, height = 15, i = 28, s = 75) : type === enums.ItemAssetType.SHELL && (width = 158, height = 237), new UTItemCanvasDTO(null, t, width, height, i, s)
},UTItemPlayerLargeView.prototype._setSkillMoves = function _setSkillMoves(value) {
    this.__skillMovesLabel.textContent = services.Localization.localize("cards.cardfront.skillMoves"), this.__skillMovesRating.textContent = value
},UTItemPlayerLargeView.prototype._setWeakFoot = function _setWeakFoot(t, value) {
    var i = t ? services.Localization.localize("cards.cardfront.weakFootLeftAbbr") : services.Localization.localize("cards.cardfront.weakFootRightAbbr");
    services.Localization.localize("cards.cardfront.weakFootAbbr"), this.__weakFootLabel.textContent = services.Localization.localize("cards.cardfront.weakFoot") + " (" + i + ")", this.__weakFootRating.textContent = value
},utils.JS.inherits(UTItemPlayerSmallView, components.ItemPlayerBase),UTItemPlayerSmallView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("small"), t.classList.add("player"), t.classList.add("item"), this._canvas = new UTItemPlayerCanvasView, this._canvas.width = "90", this._canvas.height = "114", t.appendChild(this._canvas.getRootElement())
        ;var i = document.createElement("div");
        i.classList.add("ut-item-loader"), t.appendChild(i);
        var s = document.createElement("div");
        s.classList.add("statusOverlay"), t.appendChild(s), this.__trainingBoost = document.createElement("div"), this.__trainingBoost.classList.add("ut-item-player-status--training"), this.__trainingBoost.classList.add("ut-item-player-status"), t.appendChild(this.__trainingBoost);
        var o = document.createElement("div");
        o.classList.add("ut-item-player-status--restricted"), o.classList.add("ut-item-player-status"), t.appendChild(o), this.__mainViewDiv = document.createElement("div"), this.__mainViewDiv.classList.add("ut-item-view--main"), this.__mainViewDiv.classList.add("ut-item-view"), this.__loanInfoTab = document.createElement("div"), this.__loanInfoTab.classList.add("ut-item-player-status--loan"), this.__mainViewDiv.appendChild(this.__loanInfoTab);
        var l = document.createElement("div");
        l.classList.add("playerOverview"), this.__playerRating = document.createElement("div"), this.__playerRating.classList.add("rating"), l.appendChild(this.__playerRating), this.__playerPosition = document.createElement("div"), this.__playerPosition.classList.add("position"), l.appendChild(this.__playerPosition), this.__mainViewDiv.appendChild(l), t.appendChild(this.__mainViewDiv), this.__statsViewDiv = document.createElement("div"), this.__statsViewDiv.classList.add("ut-item-view--stats"), this.__statsViewDiv.classList.add("ut-item-view"), this.__skillMoves = document.createElement("div"), this.__skillMoves.classList.add("ut-item-row"), this.__skillMovesLabel = document.createElement("span"), this.__skillMovesLabel.classList.add("ut-item-row-label--left"), this.__skillMovesLabel.classList.add("ut-item-row-label"), this.__skillMoves.appendChild(this.__skillMovesLabel);
        var u = document.createElement("div");
        u.classList.add("ut-star-rating"), this.__skillMoves.appendChild(u), this.__skillMovesRating = document.createElement("span"), this.__skillMoves.appendChild(this.__skillMovesRating), this.__statsViewDiv.appendChild(this.__skillMoves), this.__weakFoot = document.createElement("div"), this.__weakFoot.classList.add("ut-item-row"), this.__weakFootLabel = document.createElement("span"), this.__weakFootLabel.classList.add("ut-item-row-label--left"), this.__weakFootLabel.classList.add("ut-item-row-label"), this.__weakFoot.appendChild(this.__weakFootLabel);
        var h = document.createElement("div");
        h.classList.add("ut-star-rating"), this.__weakFoot.appendChild(h), this.__weakFootRating = document.createElement("span"), this.__weakFoot.appendChild(this.__weakFootRating), this.__statsViewDiv.appendChild(this.__weakFoot), this.__statsRowFitness = document.createElement("div"), this.__statsRowFitness.classList.add("ut-item-row"), this.__playerFitnessLabel = document.createElement("span"), this.__statsRowFitness.appendChild(this.__playerFitnessLabel);
        var p = document.createElement("div");
        p.classList.add("ut-progress-bar"), this.__playerFitnessBar = document.createElement("span"), p.appendChild(this.__playerFitnessBar), this.__statsRowFitness.appendChild(p), this.__playerFitness = document.createElement("span"), this.__statsRowFitness.appendChild(this.__playerFitness), this.__statsViewDiv.appendChild(this.__statsRowFitness), this.__statsRowContract = document.createElement("div"), this.__statsRowContract.classList.add("ut-item-row--center"), this.__statsRowContract.classList.add("ut-item-row"), this.__playerContractLabel = document.createElement("span"), this.__playerContractLabel.classList.add("ut-item-row-label"), this.__statsRowContract.appendChild(this.__playerContractLabel), this.__playerContract = document.createElement("span"), this.__playerContract.classList.add("ut-item-row-label"), this.__statsRowContract.appendChild(this.__playerContract), this.__statsViewDiv.appendChild(this.__statsRowContract), t.appendChild(this.__statsViewDiv), this.__styleViewDiv = document.createElement("div"), this.__styleViewDiv.classList.add("ut-item-view--style"), this.__styleViewDiv.classList.add("ut-item-view");
        var m = document.createElement("div");
        m.classList.add("ut-item-row"),
            m.classList.add("statCellRow");
        var _ = document.createElement("div");
        _.classList.add("statCell"), this._chevronSet1 = new UTItemStatChevronsView, _.appendChild(this._chevronSet1.getRootElement()), this.__statLabel1 = document.createElement("span"), this.__statLabel1.classList.add("statLabel"), _.appendChild(this.__statLabel1), m.appendChild(_);
        var g = document.createElement("div");
        g.classList.add("statCell"), this._chevronSet4 = new UTItemStatChevronsView, g.appendChild(this._chevronSet4.getRootElement()), this.__statLabel4 = document.createElement("span"), this.__statLabel4.classList.add("Dribbling"), this.__statLabel4.classList.add("statLabel"), g.appendChild(this.__statLabel4), m.appendChild(g), this.__styleViewDiv.appendChild(m);
        var S = document.createElement("div");
        S.classList.add("ut-item-row"), S.classList.add("statCellRow");
        var T = document.createElement("div");
        T.classList.add("statCell"), this._chevronSet2 = new UTItemStatChevronsView, T.appendChild(this._chevronSet2.getRootElement()), this.__statLabel2 = document.createElement("span"), this.__statLabel2.classList.add("Shooting"), this.__statLabel2.classList.add("statLabel"), T.appendChild(this.__statLabel2), S.appendChild(T);
        var v = document.createElement("div");
        v.classList.add("statCell"), this._chevronSet5 = new UTItemStatChevronsView, v.appendChild(this._chevronSet5.getRootElement()), this.__statLabel5 = document.createElement("span"), this.__statLabel5.classList.add("Defending"), this.__statLabel5.classList.add("statLabel"), v.appendChild(this.__statLabel5), S.appendChild(v), this.__styleViewDiv.appendChild(S);
        var C = document.createElement("div");
        C.classList.add("ut-item-row"), C.classList.add("statCellRow");
        var I = document.createElement("div");
        I.classList.add("statCell"), this._chevronSet3 = new UTItemStatChevronsView, I.appendChild(this._chevronSet3.getRootElement()), this.__statLabel3 = document.createElement("span"), this.__statLabel3.classList.add("Passing"), this.__statLabel3.classList.add("statLabel"), I.appendChild(this.__statLabel3), C.appendChild(I);
        var L = document.createElement("div");
        L.classList.add("statCell"), this._chevronSet6 = new UTItemStatChevronsView, L.appendChild(this._chevronSet6.getRootElement()), this.__statLabel6 = document.createElement("span"), this.__statLabel6.classList.add("Header"), this.__statLabel6.classList.add("statLabel"), L.appendChild(this.__statLabel6), C.appendChild(L), this.__styleViewDiv.appendChild(C), t.appendChild(this.__styleViewDiv), this.__bioViewDiv = document.createElement("div"), this.__bioViewDiv.classList.add("ut-item-view--bio"), this.__bioViewDiv.classList.add("ut-item-view");
        var A = document.createElement("div");
        A.classList.add("ut-item-row");
        var R = document.createElement("span");
        R.classList.add("ut-item-row-label--left"), R.classList.add("ut-item-row-label"), this._bioFlagImage = new components.ImageLoader, R.appendChild(this._bioFlagImage.getRootElement()), A.appendChild(R), this.__bioNation = document.createElement("span"), this.__bioNation.classList.add("ut-item-row-label--right"), this.__bioNation.classList.add("ut-item-row-label"), A.appendChild(this.__bioNation), this.__bioViewDiv.appendChild(A);
        var D = document.createElement("div");
        D.classList.add("ut-item-row");
        var P = document.createElement("span");
        P.classList.add("ut-item-row-label--left"), P.classList.add("ut-item-row-label"), this._bioLeagueImage = new components.ImageLoader, P.appendChild(this._bioLeagueImage.getRootElement()), D.appendChild(P), this.__bioLeague = document.createElement("span"), this.__bioLeague.classList.add("ut-item-row-label--right"), this.__bioLeague.classList.add("ut-item-row-label"), D.appendChild(this.__bioLeague), this.__bioViewDiv.appendChild(D);
        var U = document.createElement("div");
        U.classList.add("ut-item-row");
        var N = document.createElement("span");
        N.classList.add("ut-item-row-label--left"), N.classList.add("ut-item-row-label"), this._bioBadgeImage = new components.ImageLoader, N.appendChild(this._bioBadgeImage.getRootElement()), U.appendChild(N), this.__bioClub = document.createElement("span"),
            this.__bioClub.classList.add("ut-item-row-label--right"), this.__bioClub.classList.add("ut-item-row-label"), U.appendChild(this.__bioClub), this.__bioViewDiv.appendChild(U);
        var O = document.createElement("div");
        O.classList.add("ut-item-player-bonuses"), O.classList.add("ut-item-row"), this.__playerLoyaltyIcon = document.createElement("span"), this.__playerLoyaltyIcon.classList.add("ut-item-player-bonus"), this.__playerLoyaltyIcon.classList.add("loyalty"), O.appendChild(this.__playerLoyaltyIcon), this.__playerManagerBonus = document.createElement("span"), this.__playerManagerBonus.classList.add("ut-item-player-bonus"), this.__playerManagerBonus.classList.add("manager"), O.appendChild(this.__playerManagerBonus), this.__bioViewDiv.appendChild(O), t.appendChild(this.__bioViewDiv), this.__playStyle = document.createElement("div"), this.__playStyle.classList.add("playStyle"), t.appendChild(this.__playStyle), this.__root = t, this._generated = !0
    }
},UTItemPlayerSmallView.prototype.destroyGeneratedElements = function destroyGeneratedElements() {
    $(this.__root).off().remove(), this.__root = null, this._canvas.destroy(), this.__trainingBoost = null, this.__mainViewDiv = null, this.__loanInfoTab = null, this.__playerRating = null, this.__playerPosition = null, this.__statsViewDiv = null, this.__skillMoves = null, this.__skillMovesLabel = null, this.__skillMovesRating = null, this.__weakFoot = null, this.__weakFootLabel = null, this.__weakFootRating = null, this.__statsRowFitness = null, this.__playerFitnessLabel = null, this.__playerFitnessBar = null, this.__playerFitness = null, this.__statsRowContract = null, this.__playerContractLabel = null, this.__playerContract = null, this.__styleViewDiv = null, this._chevronSet1.destroy(), this.__statLabel1 = null, this._chevronSet4.destroy(), this.__statLabel4 = null, this._chevronSet2.destroy(), this.__statLabel2 = null, this._chevronSet5.destroy(), this.__statLabel5 = null, this._chevronSet3.destroy(), this.__statLabel3 = null, this._chevronSet6.destroy(), this.__statLabel6 = null, this.__bioViewDiv = null, this._bioFlagImage.destroy(), this.__bioNation = null, this._bioLeagueImage.destroy(), this.__bioLeague = null, this._bioBadgeImage.destroy(), this.__bioClub = null, this.__playerLoyaltyIcon = null, this.__playerManagerBonus = null, this.__playStyle = null
},UTItemPlayerSmallView.prototype.getRoot = function getRoot() {
    return $(this.__root)
},UTItemPlayerSmallView.prototype.getRootElement = function getRootElement() {
    return this.__root
},UTItemPlayerSmallView.prototype.setItemInfoState = function setItemInfoState(state) {
    DOMKit.toggleDisplayStyle(this.__statsViewDiv, state === enums.UIItemInfoState.STATS), DOMKit.toggleDisplayStyle(this.__bioViewDiv, state === enums.UIItemInfoState.BIO), DOMKit.toggleDisplayStyle(this.__mainViewDiv, state === enums.UIItemInfoState.MAIN), DOMKit.toggleDisplayStyle(this.__styleViewDiv, state === enums.UIItemInfoState.STYLE), DOMKit.toggleDisplayStyle(this.__playStyle, state === enums.UIItemInfoState.STYLE || state === enums.UIItemInfoState.MAIN), this._canvas.rendered && this._canvas.setState(state)
},UTItemPlayerSmallView.prototype.renderChemistry = function renderChemistry(item, t, i) {
    this.superclass(item, t, i), DOMKit.toggleClass(this.__playerManagerBonus, components.ItemFUTBase.CLASS.CHEM_BONUS, i > 0)
},UTItemPlayerSmallView.prototype._render = function _render(item, t) {
    this.getRoot().data("info", item);
    var i = item.playStyle;
    if (item.isValid()) {
        item.concept ? (t = this._createConceptRarity(), this._setLocalShell(item, enums.ItemViewType.SMALL)) : this._setShell(item, enums.ItemViewType.SMALL), this.superclass(item, t), this._canvas && this._canvas.render(enums.ItemViewType.SMALL, item, t);
        var s = t.getSmallColorMap(item.getTier());
        s && (this._applyColors(".playerOverview", s.header), this._applyColors(".playStyle", s.playStyleIcon)), DOMKit.addClass(this.__playStyle, "chemstyle" + i), s && this._applyColors(".ut-item-view--bio", s.footer), DOMKit.removeClass(this.__statsRowContract, components.ItemFUTBase.CLASS.INVALID_STAT), DOMKit.toggleClass(this.__statsRowFitness, components.ItemFUTBase.CLASS.INVALID_STAT, item.isInjured()),
            item.isSuspended() ? (DOMKit.addClass(this.__statsRowContract, components.ItemFUTBase.CLASS.INVALID_STAT), this.__playerContractLabel.textContent = services.Localization.localize("item.status.suspended")) : (this.__playerContractLabel.textContent = services.Localization.localize("cards.cardfront.contractAbbr"), this.__playerFitnessLabel.textContent = services.Localization.localize("cards.cardfront.fitnessAbbr"), this.__playerContract.textContent = item.contract.toString(), this.__playerFitness.textContent = item.fitness.toString(), this.__playerFitnessBar.style.width = item.fitness + "%", item.fitness <= 20 ? this.__playerFitnessBar.style.backgroundColor = "rgba(224,0,0,1)" : item.fitness < 60 && (this.__playerFitnessBar.style.backgroundColor = "rgba(224,142,0,1)")), s && this._applyColors(".ut-item-view--stats", s.footer);
        var o = item.isGK();
        if (this.__statLabel1.textContent = services.Localization.localize(o ? "cards.cardfront.divingAbbr" : "cards.cardfront.paceAbbr"), this.__statLabel2.textContent = services.Localization.localize(o ? "cards.cardfront.handlingAbbr" : "cards.cardfront.shootingAbbr"), this.__statLabel3.textContent = services.Localization.localize(o ? "cards.cardfront.kickAbbr" : "cards.cardfront.passingAbbr"), this.__statLabel4.textContent = services.Localization.localize(o ? "cards.cardfront.reflexAbbr" : "cards.cardfront.dribblingAbbr"), this.__statLabel5.textContent = services.Localization.localize(o ? "cards.cardfront.speedAbbr" : "cards.cardfront.defendingAbbr"), this.__statLabel6.textContent = services.Localization.localize(o ? "cards.cardfront.positionAbbr" : "cards.cardfront.headingAbbr"), item.isValid()) {
            var l = repositories.PlayStyle.getPlayStyleBonusById(i, item.isGK());
            this._applyChevrons(l)
        }
        s && this._applyColors(".ut-item-view--style", s.footer)
    }
},UTItemPlayerSmallView.prototype._resetRender = function _resetRender() {
    this.superclass(), DOMKit.removeClass(this.__playStyle, function _getIconClasses(t) {
        return (t.className.match(/(^|\s)chemstyle\S+/g) || []).join(" ")
    }(this.__playStyle))
},UTItemPlayerSmallView.prototype._getAssetDimensions = function _getAssetDimensions(type, t) {
    t = t || !1;
    var width = 0, height = 0, i = 0, s = 0;
    return type === enums.ItemAssetType.MAIN ? (width = t ? 78 : 58, height = t ? 91 : 58, i = t ? 6 : 25, s = 25) : type === enums.ItemAssetType.BADGE ? (width = 15, height = 15, i = 13, s = 64) : type === enums.ItemAssetType.FLAG ? (width = 15, height = 10, i = 13, s = 50) : type === enums.ItemAssetType.SHELL && (width = 90, height = 114), new UTItemCanvasDTO(null, t, width, height, i, s)
},UTItemPlayerSmallView.prototype._setSkillMoves = function _setSkillMoves(value) {
    this.__skillMovesLabel.textContent = services.Localization.localize("cards.cardfront.skillMovesAbbr"), this.__skillMovesRating.textContent = value
},UTItemPlayerSmallView.prototype._setWeakFoot = function _setWeakFoot(t, value) {
    var i = t ? services.Localization.localize("cards.cardfront.weakFootRightAbbr") : services.Localization.localize("cards.cardfront.weakFootLeftAbbr");
    this.__weakFootLabel.textContent = services.Localization.localize("cards.cardfront.weakFootAbbr") + " (" + i + ")", this.__weakFootRating.textContent = value
},components.ItemGenLarge = function ItemGenLargeView() {
    components.ItemPlayerBase.call(this)
},utils.JS.inherits(components.ItemGenLarge, components.ItemPlayerBase),components.ItemGenLarge.prototype._render = function _render(item, t) {
    var i = item.getStaticData(), root = this.getRoot();
    this.superclass(item, t), this.__playerName.textContent = i.name, item.isGK() ? ($(".statValue.Pace", root).html(item.getAttribute(enums.GKStats.DIVING, !1).toString()), $(".statValue.Header", root).html(item.getAttribute(enums.GKStats.POSITION, !1).toString()), $(".statValue.Dribbling", root).html(item.getAttribute(enums.GKStats.REFLEX, !1).toString()), $(".statValue.Shooting", root).html(item.getAttribute(enums.GKStats.HANDLING, !1).toString()), $(".statValue.Defending", root).html(item.getAttribute(enums.GKStats.SPEED, !1).toString()), $(".statValue.Passing", root).html(item.getAttribute(enums.GKStats.KICKING, !1).toString()), $(".statLabel.Pace", root).html(services.Localization.localize("cards.cardfront.divingAbbr")),
        $(".statLabel.Header", root).html(services.Localization.localize("cards.cardfront.positionAbbr")), $(".statLabel.Dribbling", root).html(services.Localization.localize("cards.cardfront.reflexAbbr")), $(".statLabel.Shooting", root).html(services.Localization.localize("cards.cardfront.handlingAbbr")), $(".statLabel.Defending", root).html(services.Localization.localize("cards.cardfront.speedAbbr")), $(".statLabel.Passing", root).html(services.Localization.localize("cards.cardfront.kickAbbr"))) : ($(".statValue.Pace", root).html(item.getAttribute(enums.PlayerStats.PACE, !1).toString()), $(".statValue.Header", root).html(item.getAttribute(enums.PlayerStats.HEADING, !1).toString()), $(".statValue.Dribbling", root).html(item.getAttribute(enums.PlayerStats.DRIBBLING, !1).toString()), $(".statValue.Shooting", root).html(item.getAttribute(enums.PlayerStats.SHOOTING, !1).toString()), $(".statValue.Defending", root).html(item.getAttribute(enums.PlayerStats.DEFEND, !1).toString()), $(".statValue.Passing", root).html(item.getAttribute(enums.PlayerStats.PASSING, !1).toString()), $(".statLabel.Pace", root).html(services.Localization.localize("cards.cardfront.paceAbbr")), $(".statLabel.Header", root).html(services.Localization.localize("cards.cardfront.headingAbbr")), $(".statLabel.Dribbling", root).html(services.Localization.localize("cards.cardfront.dribblingAbbr")), $(".statLabel.Shooting", root).html(services.Localization.localize("cards.cardfront.shootingAbbr")), $(".statLabel.Defending", root).html(services.Localization.localize("cards.cardfront.defendingAbbr")), $(".statLabel.Passing", root).html(services.Localization.localize("cards.cardfront.passingAbbr"))), this._setLocalShell(item, enums.ItemViewType.LARGE)
},utils.JS.inherits(UTItemPlayerGen1LargeView, components.ItemGenLarge),UTItemPlayerGen1LargeView.prototype._generate = function _generate() {
    if (!this._generated) {
        var t = document.createElement("div");
        t.classList.add("large"), t.classList.add("player"), t.classList.add("item");
        var i = document.createElement("div");
        i.classList.add("statusOverlay"), t.appendChild(i), this.__infoTab = document.createElement("div"), this.__infoTab.classList.add("infoTab"), t.appendChild(this.__infoTab), this.__trainingBoost = document.createElement("div"), this.__trainingBoost.classList.add("trainingBoost"), t.appendChild(this.__trainingBoost);
        var s = document.createElement("div");
        s.classList.add("playerOverview"), this.__playerRating = document.createElement("div"), this.__playerRating.classList.add("rating"), s.appendChild(this.__playerRating), this.__playerPosition = document.createElement("div"), this.__playerPosition.classList.add("position"), s.appendChild(this.__playerP